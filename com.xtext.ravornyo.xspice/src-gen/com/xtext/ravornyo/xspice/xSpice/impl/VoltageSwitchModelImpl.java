/**
 * generated by Xtext 2.18.0.M3
 */
package com.xtext.ravornyo.xspice.xSpice.impl;

import com.xtext.ravornyo.xspice.xSpice.VoltageSwitchModel;
import com.xtext.ravornyo.xspice.xSpice.XSpicePackage;

import java.math.BigDecimal;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Voltage Switch Model</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.xtext.ravornyo.xspice.xSpice.impl.VoltageSwitchModelImpl#getThreshold <em>Threshold</em>}</li>
 *   <li>{@link com.xtext.ravornyo.xspice.xSpice.impl.VoltageSwitchModelImpl#getHysteresis <em>Hysteresis</em>}</li>
 *   <li>{@link com.xtext.ravornyo.xspice.xSpice.impl.VoltageSwitchModelImpl#getOnResistance <em>On Resistance</em>}</li>
 *   <li>{@link com.xtext.ravornyo.xspice.xSpice.impl.VoltageSwitchModelImpl#getOffResistance <em>Off Resistance</em>}</li>
 * </ul>
 *
 * @generated
 */
public class VoltageSwitchModelImpl extends EntityImpl implements VoltageSwitchModel
{
  /**
   * The default value of the '{@link #getThreshold() <em>Threshold</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getThreshold()
   * @generated
   * @ordered
   */
  protected static final BigDecimal THRESHOLD_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getThreshold() <em>Threshold</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getThreshold()
   * @generated
   * @ordered
   */
  protected BigDecimal threshold = THRESHOLD_EDEFAULT;

  /**
   * The default value of the '{@link #getHysteresis() <em>Hysteresis</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getHysteresis()
   * @generated
   * @ordered
   */
  protected static final BigDecimal HYSTERESIS_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getHysteresis() <em>Hysteresis</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getHysteresis()
   * @generated
   * @ordered
   */
  protected BigDecimal hysteresis = HYSTERESIS_EDEFAULT;

  /**
   * The default value of the '{@link #getOnResistance() <em>On Resistance</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOnResistance()
   * @generated
   * @ordered
   */
  protected static final BigDecimal ON_RESISTANCE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getOnResistance() <em>On Resistance</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOnResistance()
   * @generated
   * @ordered
   */
  protected BigDecimal onResistance = ON_RESISTANCE_EDEFAULT;

  /**
   * The default value of the '{@link #getOffResistance() <em>Off Resistance</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOffResistance()
   * @generated
   * @ordered
   */
  protected static final BigDecimal OFF_RESISTANCE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getOffResistance() <em>Off Resistance</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOffResistance()
   * @generated
   * @ordered
   */
  protected BigDecimal offResistance = OFF_RESISTANCE_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected VoltageSwitchModelImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return XSpicePackage.Literals.VOLTAGE_SWITCH_MODEL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BigDecimal getThreshold()
  {
    return threshold;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setThreshold(BigDecimal newThreshold)
  {
    BigDecimal oldThreshold = threshold;
    threshold = newThreshold;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, XSpicePackage.VOLTAGE_SWITCH_MODEL__THRESHOLD, oldThreshold, threshold));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BigDecimal getHysteresis()
  {
    return hysteresis;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setHysteresis(BigDecimal newHysteresis)
  {
    BigDecimal oldHysteresis = hysteresis;
    hysteresis = newHysteresis;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, XSpicePackage.VOLTAGE_SWITCH_MODEL__HYSTERESIS, oldHysteresis, hysteresis));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BigDecimal getOnResistance()
  {
    return onResistance;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setOnResistance(BigDecimal newOnResistance)
  {
    BigDecimal oldOnResistance = onResistance;
    onResistance = newOnResistance;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, XSpicePackage.VOLTAGE_SWITCH_MODEL__ON_RESISTANCE, oldOnResistance, onResistance));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BigDecimal getOffResistance()
  {
    return offResistance;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setOffResistance(BigDecimal newOffResistance)
  {
    BigDecimal oldOffResistance = offResistance;
    offResistance = newOffResistance;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, XSpicePackage.VOLTAGE_SWITCH_MODEL__OFF_RESISTANCE, oldOffResistance, offResistance));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case XSpicePackage.VOLTAGE_SWITCH_MODEL__THRESHOLD:
        return getThreshold();
      case XSpicePackage.VOLTAGE_SWITCH_MODEL__HYSTERESIS:
        return getHysteresis();
      case XSpicePackage.VOLTAGE_SWITCH_MODEL__ON_RESISTANCE:
        return getOnResistance();
      case XSpicePackage.VOLTAGE_SWITCH_MODEL__OFF_RESISTANCE:
        return getOffResistance();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case XSpicePackage.VOLTAGE_SWITCH_MODEL__THRESHOLD:
        setThreshold((BigDecimal)newValue);
        return;
      case XSpicePackage.VOLTAGE_SWITCH_MODEL__HYSTERESIS:
        setHysteresis((BigDecimal)newValue);
        return;
      case XSpicePackage.VOLTAGE_SWITCH_MODEL__ON_RESISTANCE:
        setOnResistance((BigDecimal)newValue);
        return;
      case XSpicePackage.VOLTAGE_SWITCH_MODEL__OFF_RESISTANCE:
        setOffResistance((BigDecimal)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case XSpicePackage.VOLTAGE_SWITCH_MODEL__THRESHOLD:
        setThreshold(THRESHOLD_EDEFAULT);
        return;
      case XSpicePackage.VOLTAGE_SWITCH_MODEL__HYSTERESIS:
        setHysteresis(HYSTERESIS_EDEFAULT);
        return;
      case XSpicePackage.VOLTAGE_SWITCH_MODEL__ON_RESISTANCE:
        setOnResistance(ON_RESISTANCE_EDEFAULT);
        return;
      case XSpicePackage.VOLTAGE_SWITCH_MODEL__OFF_RESISTANCE:
        setOffResistance(OFF_RESISTANCE_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case XSpicePackage.VOLTAGE_SWITCH_MODEL__THRESHOLD:
        return THRESHOLD_EDEFAULT == null ? threshold != null : !THRESHOLD_EDEFAULT.equals(threshold);
      case XSpicePackage.VOLTAGE_SWITCH_MODEL__HYSTERESIS:
        return HYSTERESIS_EDEFAULT == null ? hysteresis != null : !HYSTERESIS_EDEFAULT.equals(hysteresis);
      case XSpicePackage.VOLTAGE_SWITCH_MODEL__ON_RESISTANCE:
        return ON_RESISTANCE_EDEFAULT == null ? onResistance != null : !ON_RESISTANCE_EDEFAULT.equals(onResistance);
      case XSpicePackage.VOLTAGE_SWITCH_MODEL__OFF_RESISTANCE:
        return OFF_RESISTANCE_EDEFAULT == null ? offResistance != null : !OFF_RESISTANCE_EDEFAULT.equals(offResistance);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (threshold: ");
    result.append(threshold);
    result.append(", hysteresis: ");
    result.append(hysteresis);
    result.append(", onResistance: ");
    result.append(onResistance);
    result.append(", offResistance: ");
    result.append(offResistance);
    result.append(')');
    return result.toString();
  }

} //VoltageSwitchModelImpl
