/**
 * generated by Xtext 2.18.0.M3
 */
package com.xtext.ravornyo.xspice.xSpice.impl;

import com.xtext.ravornyo.xspice.xSpice.IntegrationMethod;
import com.xtext.ravornyo.xspice.xSpice.Options;
import com.xtext.ravornyo.xspice.xSpice.XSpicePackage;

import java.math.BigDecimal;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Options</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.xtext.ravornyo.xspice.xSpice.impl.OptionsImpl#getAbstol <em>Abstol</em>}</li>
 *   <li>{@link com.xtext.ravornyo.xspice.xSpice.impl.OptionsImpl#getBadmos3 <em>Badmos3</em>}</li>
 *   <li>{@link com.xtext.ravornyo.xspice.xSpice.impl.OptionsImpl#getChgtol <em>Chgtol</em>}</li>
 *   <li>{@link com.xtext.ravornyo.xspice.xSpice.impl.OptionsImpl#getDefad <em>Defad</em>}</li>
 *   <li>{@link com.xtext.ravornyo.xspice.xSpice.impl.OptionsImpl#getDefas <em>Defas</em>}</li>
 *   <li>{@link com.xtext.ravornyo.xspice.xSpice.impl.OptionsImpl#getDefl <em>Defl</em>}</li>
 *   <li>{@link com.xtext.ravornyo.xspice.xSpice.impl.OptionsImpl#getDefaultWidth <em>Default Width</em>}</li>
 *   <li>{@link com.xtext.ravornyo.xspice.xSpice.impl.OptionsImpl#getGmin <em>Gmin</em>}</li>
 *   <li>{@link com.xtext.ravornyo.xspice.xSpice.impl.OptionsImpl#getItl1 <em>Itl1</em>}</li>
 *   <li>{@link com.xtext.ravornyo.xspice.xSpice.impl.OptionsImpl#getItl2 <em>Itl2</em>}</li>
 *   <li>{@link com.xtext.ravornyo.xspice.xSpice.impl.OptionsImpl#getItl3 <em>Itl3</em>}</li>
 *   <li>{@link com.xtext.ravornyo.xspice.xSpice.impl.OptionsImpl#getItl4 <em>Itl4</em>}</li>
 *   <li>{@link com.xtext.ravornyo.xspice.xSpice.impl.OptionsImpl#getItl5 <em>Itl5</em>}</li>
 *   <li>{@link com.xtext.ravornyo.xspice.xSpice.impl.OptionsImpl#getKeepopinfo <em>Keepopinfo</em>}</li>
 *   <li>{@link com.xtext.ravornyo.xspice.xSpice.impl.OptionsImpl#getMethod <em>Method</em>}</li>
 *   <li>{@link com.xtext.ravornyo.xspice.xSpice.impl.OptionsImpl#getPivrel <em>Pivrel</em>}</li>
 *   <li>{@link com.xtext.ravornyo.xspice.xSpice.impl.OptionsImpl#getReltol <em>Reltol</em>}</li>
 *   <li>{@link com.xtext.ravornyo.xspice.xSpice.impl.OptionsImpl#getTemp <em>Temp</em>}</li>
 *   <li>{@link com.xtext.ravornyo.xspice.xSpice.impl.OptionsImpl#getNominalTemperature <em>Nominal Temperature</em>}</li>
 *   <li>{@link com.xtext.ravornyo.xspice.xSpice.impl.OptionsImpl#getTrtol <em>Trtol</em>}</li>
 *   <li>{@link com.xtext.ravornyo.xspice.xSpice.impl.OptionsImpl#getVntol <em>Vntol</em>}</li>
 * </ul>
 *
 * @generated
 */
public class OptionsImpl extends MinimalEObjectImpl.Container implements Options
{
  /**
   * The default value of the '{@link #getAbstol() <em>Abstol</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAbstol()
   * @generated
   * @ordered
   */
  protected static final BigDecimal ABSTOL_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getAbstol() <em>Abstol</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAbstol()
   * @generated
   * @ordered
   */
  protected BigDecimal abstol = ABSTOL_EDEFAULT;

  /**
   * The default value of the '{@link #getBadmos3() <em>Badmos3</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBadmos3()
   * @generated
   * @ordered
   */
  protected static final BigDecimal BADMOS3_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getBadmos3() <em>Badmos3</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBadmos3()
   * @generated
   * @ordered
   */
  protected BigDecimal badmos3 = BADMOS3_EDEFAULT;

  /**
   * The default value of the '{@link #getChgtol() <em>Chgtol</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getChgtol()
   * @generated
   * @ordered
   */
  protected static final BigDecimal CHGTOL_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getChgtol() <em>Chgtol</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getChgtol()
   * @generated
   * @ordered
   */
  protected BigDecimal chgtol = CHGTOL_EDEFAULT;

  /**
   * The default value of the '{@link #getDefad() <em>Defad</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDefad()
   * @generated
   * @ordered
   */
  protected static final BigDecimal DEFAD_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDefad() <em>Defad</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDefad()
   * @generated
   * @ordered
   */
  protected BigDecimal defad = DEFAD_EDEFAULT;

  /**
   * The default value of the '{@link #getDefas() <em>Defas</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDefas()
   * @generated
   * @ordered
   */
  protected static final BigDecimal DEFAS_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDefas() <em>Defas</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDefas()
   * @generated
   * @ordered
   */
  protected BigDecimal defas = DEFAS_EDEFAULT;

  /**
   * The default value of the '{@link #getDefl() <em>Defl</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDefl()
   * @generated
   * @ordered
   */
  protected static final BigDecimal DEFL_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDefl() <em>Defl</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDefl()
   * @generated
   * @ordered
   */
  protected BigDecimal defl = DEFL_EDEFAULT;

  /**
   * The default value of the '{@link #getDefaultWidth() <em>Default Width</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDefaultWidth()
   * @generated
   * @ordered
   */
  protected static final BigDecimal DEFAULT_WIDTH_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDefaultWidth() <em>Default Width</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDefaultWidth()
   * @generated
   * @ordered
   */
  protected BigDecimal defaultWidth = DEFAULT_WIDTH_EDEFAULT;

  /**
   * The default value of the '{@link #getGmin() <em>Gmin</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getGmin()
   * @generated
   * @ordered
   */
  protected static final BigDecimal GMIN_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getGmin() <em>Gmin</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getGmin()
   * @generated
   * @ordered
   */
  protected BigDecimal gmin = GMIN_EDEFAULT;

  /**
   * The default value of the '{@link #getItl1() <em>Itl1</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getItl1()
   * @generated
   * @ordered
   */
  protected static final BigDecimal ITL1_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getItl1() <em>Itl1</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getItl1()
   * @generated
   * @ordered
   */
  protected BigDecimal itl1 = ITL1_EDEFAULT;

  /**
   * The default value of the '{@link #getItl2() <em>Itl2</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getItl2()
   * @generated
   * @ordered
   */
  protected static final BigDecimal ITL2_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getItl2() <em>Itl2</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getItl2()
   * @generated
   * @ordered
   */
  protected BigDecimal itl2 = ITL2_EDEFAULT;

  /**
   * The default value of the '{@link #getItl3() <em>Itl3</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getItl3()
   * @generated
   * @ordered
   */
  protected static final BigDecimal ITL3_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getItl3() <em>Itl3</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getItl3()
   * @generated
   * @ordered
   */
  protected BigDecimal itl3 = ITL3_EDEFAULT;

  /**
   * The default value of the '{@link #getItl4() <em>Itl4</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getItl4()
   * @generated
   * @ordered
   */
  protected static final BigDecimal ITL4_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getItl4() <em>Itl4</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getItl4()
   * @generated
   * @ordered
   */
  protected BigDecimal itl4 = ITL4_EDEFAULT;

  /**
   * The default value of the '{@link #getItl5() <em>Itl5</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getItl5()
   * @generated
   * @ordered
   */
  protected static final BigDecimal ITL5_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getItl5() <em>Itl5</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getItl5()
   * @generated
   * @ordered
   */
  protected BigDecimal itl5 = ITL5_EDEFAULT;

  /**
   * The default value of the '{@link #getKeepopinfo() <em>Keepopinfo</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getKeepopinfo()
   * @generated
   * @ordered
   */
  protected static final BigDecimal KEEPOPINFO_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getKeepopinfo() <em>Keepopinfo</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getKeepopinfo()
   * @generated
   * @ordered
   */
  protected BigDecimal keepopinfo = KEEPOPINFO_EDEFAULT;

  /**
   * The default value of the '{@link #getMethod() <em>Method</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMethod()
   * @generated
   * @ordered
   */
  protected static final IntegrationMethod METHOD_EDEFAULT = IntegrationMethod.GEAR;

  /**
   * The cached value of the '{@link #getMethod() <em>Method</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMethod()
   * @generated
   * @ordered
   */
  protected IntegrationMethod method = METHOD_EDEFAULT;

  /**
   * The default value of the '{@link #getPivrel() <em>Pivrel</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPivrel()
   * @generated
   * @ordered
   */
  protected static final BigDecimal PIVREL_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getPivrel() <em>Pivrel</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPivrel()
   * @generated
   * @ordered
   */
  protected BigDecimal pivrel = PIVREL_EDEFAULT;

  /**
   * The default value of the '{@link #getReltol() <em>Reltol</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReltol()
   * @generated
   * @ordered
   */
  protected static final BigDecimal RELTOL_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getReltol() <em>Reltol</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReltol()
   * @generated
   * @ordered
   */
  protected BigDecimal reltol = RELTOL_EDEFAULT;

  /**
   * The default value of the '{@link #getTemp() <em>Temp</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTemp()
   * @generated
   * @ordered
   */
  protected static final BigDecimal TEMP_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getTemp() <em>Temp</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTemp()
   * @generated
   * @ordered
   */
  protected BigDecimal temp = TEMP_EDEFAULT;

  /**
   * The default value of the '{@link #getNominalTemperature() <em>Nominal Temperature</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNominalTemperature()
   * @generated
   * @ordered
   */
  protected static final BigDecimal NOMINAL_TEMPERATURE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getNominalTemperature() <em>Nominal Temperature</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNominalTemperature()
   * @generated
   * @ordered
   */
  protected BigDecimal nominalTemperature = NOMINAL_TEMPERATURE_EDEFAULT;

  /**
   * The default value of the '{@link #getTrtol() <em>Trtol</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTrtol()
   * @generated
   * @ordered
   */
  protected static final BigDecimal TRTOL_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getTrtol() <em>Trtol</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTrtol()
   * @generated
   * @ordered
   */
  protected BigDecimal trtol = TRTOL_EDEFAULT;

  /**
   * The default value of the '{@link #getVntol() <em>Vntol</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVntol()
   * @generated
   * @ordered
   */
  protected static final BigDecimal VNTOL_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getVntol() <em>Vntol</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVntol()
   * @generated
   * @ordered
   */
  protected BigDecimal vntol = VNTOL_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected OptionsImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return XSpicePackage.Literals.OPTIONS;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BigDecimal getAbstol()
  {
    return abstol;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAbstol(BigDecimal newAbstol)
  {
    BigDecimal oldAbstol = abstol;
    abstol = newAbstol;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, XSpicePackage.OPTIONS__ABSTOL, oldAbstol, abstol));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BigDecimal getBadmos3()
  {
    return badmos3;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setBadmos3(BigDecimal newBadmos3)
  {
    BigDecimal oldBadmos3 = badmos3;
    badmos3 = newBadmos3;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, XSpicePackage.OPTIONS__BADMOS3, oldBadmos3, badmos3));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BigDecimal getChgtol()
  {
    return chgtol;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setChgtol(BigDecimal newChgtol)
  {
    BigDecimal oldChgtol = chgtol;
    chgtol = newChgtol;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, XSpicePackage.OPTIONS__CHGTOL, oldChgtol, chgtol));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BigDecimal getDefad()
  {
    return defad;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDefad(BigDecimal newDefad)
  {
    BigDecimal oldDefad = defad;
    defad = newDefad;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, XSpicePackage.OPTIONS__DEFAD, oldDefad, defad));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BigDecimal getDefas()
  {
    return defas;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDefas(BigDecimal newDefas)
  {
    BigDecimal oldDefas = defas;
    defas = newDefas;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, XSpicePackage.OPTIONS__DEFAS, oldDefas, defas));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BigDecimal getDefl()
  {
    return defl;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDefl(BigDecimal newDefl)
  {
    BigDecimal oldDefl = defl;
    defl = newDefl;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, XSpicePackage.OPTIONS__DEFL, oldDefl, defl));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BigDecimal getDefaultWidth()
  {
    return defaultWidth;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDefaultWidth(BigDecimal newDefaultWidth)
  {
    BigDecimal oldDefaultWidth = defaultWidth;
    defaultWidth = newDefaultWidth;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, XSpicePackage.OPTIONS__DEFAULT_WIDTH, oldDefaultWidth, defaultWidth));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BigDecimal getGmin()
  {
    return gmin;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setGmin(BigDecimal newGmin)
  {
    BigDecimal oldGmin = gmin;
    gmin = newGmin;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, XSpicePackage.OPTIONS__GMIN, oldGmin, gmin));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BigDecimal getItl1()
  {
    return itl1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setItl1(BigDecimal newItl1)
  {
    BigDecimal oldItl1 = itl1;
    itl1 = newItl1;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, XSpicePackage.OPTIONS__ITL1, oldItl1, itl1));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BigDecimal getItl2()
  {
    return itl2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setItl2(BigDecimal newItl2)
  {
    BigDecimal oldItl2 = itl2;
    itl2 = newItl2;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, XSpicePackage.OPTIONS__ITL2, oldItl2, itl2));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BigDecimal getItl3()
  {
    return itl3;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setItl3(BigDecimal newItl3)
  {
    BigDecimal oldItl3 = itl3;
    itl3 = newItl3;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, XSpicePackage.OPTIONS__ITL3, oldItl3, itl3));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BigDecimal getItl4()
  {
    return itl4;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setItl4(BigDecimal newItl4)
  {
    BigDecimal oldItl4 = itl4;
    itl4 = newItl4;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, XSpicePackage.OPTIONS__ITL4, oldItl4, itl4));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BigDecimal getItl5()
  {
    return itl5;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setItl5(BigDecimal newItl5)
  {
    BigDecimal oldItl5 = itl5;
    itl5 = newItl5;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, XSpicePackage.OPTIONS__ITL5, oldItl5, itl5));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BigDecimal getKeepopinfo()
  {
    return keepopinfo;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setKeepopinfo(BigDecimal newKeepopinfo)
  {
    BigDecimal oldKeepopinfo = keepopinfo;
    keepopinfo = newKeepopinfo;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, XSpicePackage.OPTIONS__KEEPOPINFO, oldKeepopinfo, keepopinfo));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public IntegrationMethod getMethod()
  {
    return method;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMethod(IntegrationMethod newMethod)
  {
    IntegrationMethod oldMethod = method;
    method = newMethod == null ? METHOD_EDEFAULT : newMethod;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, XSpicePackage.OPTIONS__METHOD, oldMethod, method));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BigDecimal getPivrel()
  {
    return pivrel;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPivrel(BigDecimal newPivrel)
  {
    BigDecimal oldPivrel = pivrel;
    pivrel = newPivrel;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, XSpicePackage.OPTIONS__PIVREL, oldPivrel, pivrel));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BigDecimal getReltol()
  {
    return reltol;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setReltol(BigDecimal newReltol)
  {
    BigDecimal oldReltol = reltol;
    reltol = newReltol;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, XSpicePackage.OPTIONS__RELTOL, oldReltol, reltol));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BigDecimal getTemp()
  {
    return temp;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setTemp(BigDecimal newTemp)
  {
    BigDecimal oldTemp = temp;
    temp = newTemp;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, XSpicePackage.OPTIONS__TEMP, oldTemp, temp));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BigDecimal getNominalTemperature()
  {
    return nominalTemperature;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setNominalTemperature(BigDecimal newNominalTemperature)
  {
    BigDecimal oldNominalTemperature = nominalTemperature;
    nominalTemperature = newNominalTemperature;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, XSpicePackage.OPTIONS__NOMINAL_TEMPERATURE, oldNominalTemperature, nominalTemperature));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BigDecimal getTrtol()
  {
    return trtol;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setTrtol(BigDecimal newTrtol)
  {
    BigDecimal oldTrtol = trtol;
    trtol = newTrtol;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, XSpicePackage.OPTIONS__TRTOL, oldTrtol, trtol));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BigDecimal getVntol()
  {
    return vntol;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setVntol(BigDecimal newVntol)
  {
    BigDecimal oldVntol = vntol;
    vntol = newVntol;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, XSpicePackage.OPTIONS__VNTOL, oldVntol, vntol));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case XSpicePackage.OPTIONS__ABSTOL:
        return getAbstol();
      case XSpicePackage.OPTIONS__BADMOS3:
        return getBadmos3();
      case XSpicePackage.OPTIONS__CHGTOL:
        return getChgtol();
      case XSpicePackage.OPTIONS__DEFAD:
        return getDefad();
      case XSpicePackage.OPTIONS__DEFAS:
        return getDefas();
      case XSpicePackage.OPTIONS__DEFL:
        return getDefl();
      case XSpicePackage.OPTIONS__DEFAULT_WIDTH:
        return getDefaultWidth();
      case XSpicePackage.OPTIONS__GMIN:
        return getGmin();
      case XSpicePackage.OPTIONS__ITL1:
        return getItl1();
      case XSpicePackage.OPTIONS__ITL2:
        return getItl2();
      case XSpicePackage.OPTIONS__ITL3:
        return getItl3();
      case XSpicePackage.OPTIONS__ITL4:
        return getItl4();
      case XSpicePackage.OPTIONS__ITL5:
        return getItl5();
      case XSpicePackage.OPTIONS__KEEPOPINFO:
        return getKeepopinfo();
      case XSpicePackage.OPTIONS__METHOD:
        return getMethod();
      case XSpicePackage.OPTIONS__PIVREL:
        return getPivrel();
      case XSpicePackage.OPTIONS__RELTOL:
        return getReltol();
      case XSpicePackage.OPTIONS__TEMP:
        return getTemp();
      case XSpicePackage.OPTIONS__NOMINAL_TEMPERATURE:
        return getNominalTemperature();
      case XSpicePackage.OPTIONS__TRTOL:
        return getTrtol();
      case XSpicePackage.OPTIONS__VNTOL:
        return getVntol();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case XSpicePackage.OPTIONS__ABSTOL:
        setAbstol((BigDecimal)newValue);
        return;
      case XSpicePackage.OPTIONS__BADMOS3:
        setBadmos3((BigDecimal)newValue);
        return;
      case XSpicePackage.OPTIONS__CHGTOL:
        setChgtol((BigDecimal)newValue);
        return;
      case XSpicePackage.OPTIONS__DEFAD:
        setDefad((BigDecimal)newValue);
        return;
      case XSpicePackage.OPTIONS__DEFAS:
        setDefas((BigDecimal)newValue);
        return;
      case XSpicePackage.OPTIONS__DEFL:
        setDefl((BigDecimal)newValue);
        return;
      case XSpicePackage.OPTIONS__DEFAULT_WIDTH:
        setDefaultWidth((BigDecimal)newValue);
        return;
      case XSpicePackage.OPTIONS__GMIN:
        setGmin((BigDecimal)newValue);
        return;
      case XSpicePackage.OPTIONS__ITL1:
        setItl1((BigDecimal)newValue);
        return;
      case XSpicePackage.OPTIONS__ITL2:
        setItl2((BigDecimal)newValue);
        return;
      case XSpicePackage.OPTIONS__ITL3:
        setItl3((BigDecimal)newValue);
        return;
      case XSpicePackage.OPTIONS__ITL4:
        setItl4((BigDecimal)newValue);
        return;
      case XSpicePackage.OPTIONS__ITL5:
        setItl5((BigDecimal)newValue);
        return;
      case XSpicePackage.OPTIONS__KEEPOPINFO:
        setKeepopinfo((BigDecimal)newValue);
        return;
      case XSpicePackage.OPTIONS__METHOD:
        setMethod((IntegrationMethod)newValue);
        return;
      case XSpicePackage.OPTIONS__PIVREL:
        setPivrel((BigDecimal)newValue);
        return;
      case XSpicePackage.OPTIONS__RELTOL:
        setReltol((BigDecimal)newValue);
        return;
      case XSpicePackage.OPTIONS__TEMP:
        setTemp((BigDecimal)newValue);
        return;
      case XSpicePackage.OPTIONS__NOMINAL_TEMPERATURE:
        setNominalTemperature((BigDecimal)newValue);
        return;
      case XSpicePackage.OPTIONS__TRTOL:
        setTrtol((BigDecimal)newValue);
        return;
      case XSpicePackage.OPTIONS__VNTOL:
        setVntol((BigDecimal)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case XSpicePackage.OPTIONS__ABSTOL:
        setAbstol(ABSTOL_EDEFAULT);
        return;
      case XSpicePackage.OPTIONS__BADMOS3:
        setBadmos3(BADMOS3_EDEFAULT);
        return;
      case XSpicePackage.OPTIONS__CHGTOL:
        setChgtol(CHGTOL_EDEFAULT);
        return;
      case XSpicePackage.OPTIONS__DEFAD:
        setDefad(DEFAD_EDEFAULT);
        return;
      case XSpicePackage.OPTIONS__DEFAS:
        setDefas(DEFAS_EDEFAULT);
        return;
      case XSpicePackage.OPTIONS__DEFL:
        setDefl(DEFL_EDEFAULT);
        return;
      case XSpicePackage.OPTIONS__DEFAULT_WIDTH:
        setDefaultWidth(DEFAULT_WIDTH_EDEFAULT);
        return;
      case XSpicePackage.OPTIONS__GMIN:
        setGmin(GMIN_EDEFAULT);
        return;
      case XSpicePackage.OPTIONS__ITL1:
        setItl1(ITL1_EDEFAULT);
        return;
      case XSpicePackage.OPTIONS__ITL2:
        setItl2(ITL2_EDEFAULT);
        return;
      case XSpicePackage.OPTIONS__ITL3:
        setItl3(ITL3_EDEFAULT);
        return;
      case XSpicePackage.OPTIONS__ITL4:
        setItl4(ITL4_EDEFAULT);
        return;
      case XSpicePackage.OPTIONS__ITL5:
        setItl5(ITL5_EDEFAULT);
        return;
      case XSpicePackage.OPTIONS__KEEPOPINFO:
        setKeepopinfo(KEEPOPINFO_EDEFAULT);
        return;
      case XSpicePackage.OPTIONS__METHOD:
        setMethod(METHOD_EDEFAULT);
        return;
      case XSpicePackage.OPTIONS__PIVREL:
        setPivrel(PIVREL_EDEFAULT);
        return;
      case XSpicePackage.OPTIONS__RELTOL:
        setReltol(RELTOL_EDEFAULT);
        return;
      case XSpicePackage.OPTIONS__TEMP:
        setTemp(TEMP_EDEFAULT);
        return;
      case XSpicePackage.OPTIONS__NOMINAL_TEMPERATURE:
        setNominalTemperature(NOMINAL_TEMPERATURE_EDEFAULT);
        return;
      case XSpicePackage.OPTIONS__TRTOL:
        setTrtol(TRTOL_EDEFAULT);
        return;
      case XSpicePackage.OPTIONS__VNTOL:
        setVntol(VNTOL_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case XSpicePackage.OPTIONS__ABSTOL:
        return ABSTOL_EDEFAULT == null ? abstol != null : !ABSTOL_EDEFAULT.equals(abstol);
      case XSpicePackage.OPTIONS__BADMOS3:
        return BADMOS3_EDEFAULT == null ? badmos3 != null : !BADMOS3_EDEFAULT.equals(badmos3);
      case XSpicePackage.OPTIONS__CHGTOL:
        return CHGTOL_EDEFAULT == null ? chgtol != null : !CHGTOL_EDEFAULT.equals(chgtol);
      case XSpicePackage.OPTIONS__DEFAD:
        return DEFAD_EDEFAULT == null ? defad != null : !DEFAD_EDEFAULT.equals(defad);
      case XSpicePackage.OPTIONS__DEFAS:
        return DEFAS_EDEFAULT == null ? defas != null : !DEFAS_EDEFAULT.equals(defas);
      case XSpicePackage.OPTIONS__DEFL:
        return DEFL_EDEFAULT == null ? defl != null : !DEFL_EDEFAULT.equals(defl);
      case XSpicePackage.OPTIONS__DEFAULT_WIDTH:
        return DEFAULT_WIDTH_EDEFAULT == null ? defaultWidth != null : !DEFAULT_WIDTH_EDEFAULT.equals(defaultWidth);
      case XSpicePackage.OPTIONS__GMIN:
        return GMIN_EDEFAULT == null ? gmin != null : !GMIN_EDEFAULT.equals(gmin);
      case XSpicePackage.OPTIONS__ITL1:
        return ITL1_EDEFAULT == null ? itl1 != null : !ITL1_EDEFAULT.equals(itl1);
      case XSpicePackage.OPTIONS__ITL2:
        return ITL2_EDEFAULT == null ? itl2 != null : !ITL2_EDEFAULT.equals(itl2);
      case XSpicePackage.OPTIONS__ITL3:
        return ITL3_EDEFAULT == null ? itl3 != null : !ITL3_EDEFAULT.equals(itl3);
      case XSpicePackage.OPTIONS__ITL4:
        return ITL4_EDEFAULT == null ? itl4 != null : !ITL4_EDEFAULT.equals(itl4);
      case XSpicePackage.OPTIONS__ITL5:
        return ITL5_EDEFAULT == null ? itl5 != null : !ITL5_EDEFAULT.equals(itl5);
      case XSpicePackage.OPTIONS__KEEPOPINFO:
        return KEEPOPINFO_EDEFAULT == null ? keepopinfo != null : !KEEPOPINFO_EDEFAULT.equals(keepopinfo);
      case XSpicePackage.OPTIONS__METHOD:
        return method != METHOD_EDEFAULT;
      case XSpicePackage.OPTIONS__PIVREL:
        return PIVREL_EDEFAULT == null ? pivrel != null : !PIVREL_EDEFAULT.equals(pivrel);
      case XSpicePackage.OPTIONS__RELTOL:
        return RELTOL_EDEFAULT == null ? reltol != null : !RELTOL_EDEFAULT.equals(reltol);
      case XSpicePackage.OPTIONS__TEMP:
        return TEMP_EDEFAULT == null ? temp != null : !TEMP_EDEFAULT.equals(temp);
      case XSpicePackage.OPTIONS__NOMINAL_TEMPERATURE:
        return NOMINAL_TEMPERATURE_EDEFAULT == null ? nominalTemperature != null : !NOMINAL_TEMPERATURE_EDEFAULT.equals(nominalTemperature);
      case XSpicePackage.OPTIONS__TRTOL:
        return TRTOL_EDEFAULT == null ? trtol != null : !TRTOL_EDEFAULT.equals(trtol);
      case XSpicePackage.OPTIONS__VNTOL:
        return VNTOL_EDEFAULT == null ? vntol != null : !VNTOL_EDEFAULT.equals(vntol);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (abstol: ");
    result.append(abstol);
    result.append(", badmos3: ");
    result.append(badmos3);
    result.append(", chgtol: ");
    result.append(chgtol);
    result.append(", defad: ");
    result.append(defad);
    result.append(", defas: ");
    result.append(defas);
    result.append(", defl: ");
    result.append(defl);
    result.append(", defaultWidth: ");
    result.append(defaultWidth);
    result.append(", gmin: ");
    result.append(gmin);
    result.append(", itl1: ");
    result.append(itl1);
    result.append(", itl2: ");
    result.append(itl2);
    result.append(", itl3: ");
    result.append(itl3);
    result.append(", itl4: ");
    result.append(itl4);
    result.append(", itl5: ");
    result.append(itl5);
    result.append(", keepopinfo: ");
    result.append(keepopinfo);
    result.append(", method: ");
    result.append(method);
    result.append(", pivrel: ");
    result.append(pivrel);
    result.append(", reltol: ");
    result.append(reltol);
    result.append(", temp: ");
    result.append(temp);
    result.append(", nominalTemperature: ");
    result.append(nominalTemperature);
    result.append(", trtol: ");
    result.append(trtol);
    result.append(", vntol: ");
    result.append(vntol);
    result.append(')');
    return result.toString();
  }

} //OptionsImpl
