/*
 * generated by Xtext 2.18.0.M3
 */
package com.xtext.ravornyo.xspice.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.UnorderedGroup;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractEnumRuleElementFinder;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class XSpiceGrammarAccess extends AbstractGrammarElementFinder {
	
	public class CompilationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.Compilation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCompilationAction_0 = (Action)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final RuleCall cSL_COMMENTTerminalRuleCall_1_0 = (RuleCall)cAlternatives_1.eContents().get(0);
		private final Assignment cDefinitionsAssignment_1_1 = (Assignment)cAlternatives_1.eContents().get(1);
		private final RuleCall cDefinitionsSubCircuitDefinitionParserRuleCall_1_1_0 = (RuleCall)cDefinitionsAssignment_1_1.eContents().get(0);
		private final Assignment cEntitiesAssignment_1_2 = (Assignment)cAlternatives_1.eContents().get(2);
		private final RuleCall cEntitiesEntityParserRuleCall_1_2_0 = (RuleCall)cEntitiesAssignment_1_2.eContents().get(0);
		private final Assignment cSimulationsAssignment_1_3 = (Assignment)cAlternatives_1.eContents().get(3);
		private final RuleCall cSimulationsSimulationParserRuleCall_1_3_0 = (RuleCall)cSimulationsAssignment_1_3.eContents().get(0);
		private final Assignment cOutputsAssignment_1_4 = (Assignment)cAlternatives_1.eContents().get(4);
		private final RuleCall cOutputsOutputParserRuleCall_1_4_0 = (RuleCall)cOutputsAssignment_1_4.eContents().get(0);
		private final Assignment cOptionsAssignment_1_5 = (Assignment)cAlternatives_1.eContents().get(5);
		private final RuleCall cOptionsOptionsParserRuleCall_1_5_0 = (RuleCall)cOptionsAssignment_1_5.eContents().get(0);
		private final Assignment cIcAssignment_1_6 = (Assignment)cAlternatives_1.eContents().get(6);
		private final RuleCall cIcInitialConditionParserRuleCall_1_6_0 = (RuleCall)cIcAssignment_1_6.eContents().get(0);
		private final Assignment cNodesetAssignment_1_7 = (Assignment)cAlternatives_1.eContents().get(7);
		private final RuleCall cNodesetNodeSetParserRuleCall_1_7_0 = (RuleCall)cNodesetAssignment_1_7.eContents().get(0);
		private final Keyword cENDKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//Compilation:
		//	{Compilation} (SL_COMMENT | definitions+=SubCircuitDefinition | entities+=Entity | simulations+=Simulation |
		//	outputs+=Output | options+=Options | ic+=InitialCondition | nodeset+=NodeSet)*
		//	'.END'?;
		@Override public ParserRule getRule() { return rule; }
		
		//{Compilation} (SL_COMMENT | definitions+=SubCircuitDefinition | entities+=Entity | simulations+=Simulation |
		//outputs+=Output | options+=Options | ic+=InitialCondition | nodeset+=NodeSet)* '.END'?
		public Group getGroup() { return cGroup; }
		
		//{Compilation}
		public Action getCompilationAction_0() { return cCompilationAction_0; }
		
		//(SL_COMMENT | definitions+=SubCircuitDefinition | entities+=Entity | simulations+=Simulation | outputs+=Output |
		//options+=Options | ic+=InitialCondition | nodeset+=NodeSet)*
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//SL_COMMENT
		public RuleCall getSL_COMMENTTerminalRuleCall_1_0() { return cSL_COMMENTTerminalRuleCall_1_0; }
		
		//definitions+=SubCircuitDefinition
		public Assignment getDefinitionsAssignment_1_1() { return cDefinitionsAssignment_1_1; }
		
		//SubCircuitDefinition
		public RuleCall getDefinitionsSubCircuitDefinitionParserRuleCall_1_1_0() { return cDefinitionsSubCircuitDefinitionParserRuleCall_1_1_0; }
		
		//entities+=Entity
		public Assignment getEntitiesAssignment_1_2() { return cEntitiesAssignment_1_2; }
		
		//Entity
		public RuleCall getEntitiesEntityParserRuleCall_1_2_0() { return cEntitiesEntityParserRuleCall_1_2_0; }
		
		//simulations+=Simulation
		public Assignment getSimulationsAssignment_1_3() { return cSimulationsAssignment_1_3; }
		
		//Simulation
		public RuleCall getSimulationsSimulationParserRuleCall_1_3_0() { return cSimulationsSimulationParserRuleCall_1_3_0; }
		
		//outputs+=Output
		public Assignment getOutputsAssignment_1_4() { return cOutputsAssignment_1_4; }
		
		//Output
		public RuleCall getOutputsOutputParserRuleCall_1_4_0() { return cOutputsOutputParserRuleCall_1_4_0; }
		
		//options+=Options
		public Assignment getOptionsAssignment_1_5() { return cOptionsAssignment_1_5; }
		
		//Options
		public RuleCall getOptionsOptionsParserRuleCall_1_5_0() { return cOptionsOptionsParserRuleCall_1_5_0; }
		
		//ic+=InitialCondition
		public Assignment getIcAssignment_1_6() { return cIcAssignment_1_6; }
		
		//InitialCondition
		public RuleCall getIcInitialConditionParserRuleCall_1_6_0() { return cIcInitialConditionParserRuleCall_1_6_0; }
		
		//nodeset+=NodeSet
		public Assignment getNodesetAssignment_1_7() { return cNodesetAssignment_1_7; }
		
		//NodeSet
		public RuleCall getNodesetNodeSetParserRuleCall_1_7_0() { return cNodesetNodeSetParserRuleCall_1_7_0; }
		
		//'.END'?
		public Keyword getENDKeyword_2() { return cENDKeyword_2; }
	}
	public class EntityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.Entity");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cComponentParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cSubCircuitParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cResistorModelParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cCapacitorModelParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cMutualInductanceParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cVoltageSwitchModelParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cCurrentSwitchModelParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cDiodeModelParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cMOSFETModelParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cBJTModelParserRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		private final RuleCall cJFETModelParserRuleCall_10 = (RuleCall)cAlternatives.eContents().get(10);
		
		//Entity:
		//	Component | SubCircuit | ResistorModel | CapacitorModel | MutualInductance | VoltageSwitchModel | CurrentSwitchModel |
		//	DiodeModel | MOSFETModel | BJTModel | JFETModel;
		@Override public ParserRule getRule() { return rule; }
		
		//Component | SubCircuit | ResistorModel | CapacitorModel | MutualInductance | VoltageSwitchModel | CurrentSwitchModel |
		//DiodeModel | MOSFETModel | BJTModel | JFETModel
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Component
		public RuleCall getComponentParserRuleCall_0() { return cComponentParserRuleCall_0; }
		
		//SubCircuit
		public RuleCall getSubCircuitParserRuleCall_1() { return cSubCircuitParserRuleCall_1; }
		
		//ResistorModel
		public RuleCall getResistorModelParserRuleCall_2() { return cResistorModelParserRuleCall_2; }
		
		//CapacitorModel
		public RuleCall getCapacitorModelParserRuleCall_3() { return cCapacitorModelParserRuleCall_3; }
		
		//MutualInductance
		public RuleCall getMutualInductanceParserRuleCall_4() { return cMutualInductanceParserRuleCall_4; }
		
		//VoltageSwitchModel
		public RuleCall getVoltageSwitchModelParserRuleCall_5() { return cVoltageSwitchModelParserRuleCall_5; }
		
		//CurrentSwitchModel
		public RuleCall getCurrentSwitchModelParserRuleCall_6() { return cCurrentSwitchModelParserRuleCall_6; }
		
		//DiodeModel
		public RuleCall getDiodeModelParserRuleCall_7() { return cDiodeModelParserRuleCall_7; }
		
		//MOSFETModel
		public RuleCall getMOSFETModelParserRuleCall_8() { return cMOSFETModelParserRuleCall_8; }
		
		//BJTModel
		public RuleCall getBJTModelParserRuleCall_9() { return cBJTModelParserRuleCall_9; }
		
		//JFETModel
		public RuleCall getJFETModelParserRuleCall_10() { return cJFETModelParserRuleCall_10; }
	}
	public class ComponentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.Component");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cResistorParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cCapacitorParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cInductorParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cVoltageSwitchParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cCurrentSwitchParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cDiodeParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cMOSFETParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cBJTParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cJFETParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cVSourceParserRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		private final RuleCall cCurrentSourceParserRuleCall_10 = (RuleCall)cAlternatives.eContents().get(10);
		private final RuleCall cVCVSParserRuleCall_11 = (RuleCall)cAlternatives.eContents().get(11);
		private final RuleCall cVCCSParserRuleCall_12 = (RuleCall)cAlternatives.eContents().get(12);
		private final RuleCall cCCCSParserRuleCall_13 = (RuleCall)cAlternatives.eContents().get(13);
		private final RuleCall cCCVSParserRuleCall_14 = (RuleCall)cAlternatives.eContents().get(14);
		
		//Component:
		//	Resistor | Capacitor | Inductor | VoltageSwitch | CurrentSwitch | Diode | MOSFET | BJT | JFET | VSource |
		//	CurrentSource | VCVS | VCCS | CCCS | CCVS;
		@Override public ParserRule getRule() { return rule; }
		
		//Resistor | Capacitor | Inductor | VoltageSwitch | CurrentSwitch | Diode | MOSFET | BJT | JFET | VSource | CurrentSource
		//| VCVS | VCCS | CCCS | CCVS
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Resistor
		public RuleCall getResistorParserRuleCall_0() { return cResistorParserRuleCall_0; }
		
		//Capacitor
		public RuleCall getCapacitorParserRuleCall_1() { return cCapacitorParserRuleCall_1; }
		
		//Inductor
		public RuleCall getInductorParserRuleCall_2() { return cInductorParserRuleCall_2; }
		
		//VoltageSwitch
		public RuleCall getVoltageSwitchParserRuleCall_3() { return cVoltageSwitchParserRuleCall_3; }
		
		//CurrentSwitch
		public RuleCall getCurrentSwitchParserRuleCall_4() { return cCurrentSwitchParserRuleCall_4; }
		
		//Diode
		public RuleCall getDiodeParserRuleCall_5() { return cDiodeParserRuleCall_5; }
		
		//MOSFET
		public RuleCall getMOSFETParserRuleCall_6() { return cMOSFETParserRuleCall_6; }
		
		//BJT
		public RuleCall getBJTParserRuleCall_7() { return cBJTParserRuleCall_7; }
		
		//JFET
		public RuleCall getJFETParserRuleCall_8() { return cJFETParserRuleCall_8; }
		
		//VSource
		public RuleCall getVSourceParserRuleCall_9() { return cVSourceParserRuleCall_9; }
		
		//CurrentSource
		public RuleCall getCurrentSourceParserRuleCall_10() { return cCurrentSourceParserRuleCall_10; }
		
		//VCVS
		public RuleCall getVCVSParserRuleCall_11() { return cVCVSParserRuleCall_11; }
		
		//VCCS
		public RuleCall getVCCSParserRuleCall_12() { return cVCCSParserRuleCall_12; }
		
		//CCCS
		public RuleCall getCCCSParserRuleCall_13() { return cCCCSParserRuleCall_13; }
		
		//CCVS
		public RuleCall getCCVSParserRuleCall_14() { return cCCVSParserRuleCall_14; }
	}
	public class SubCircuitDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.SubCircuitDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSUBCKTKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameLabelParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cPinsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cPinsNODETerminalRuleCall_2_0 = (RuleCall)cPinsAssignment_2.eContents().get(0);
		private final Assignment cPinsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cPinsNODETerminalRuleCall_3_0 = (RuleCall)cPinsAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final Assignment cDefinitionsAssignment_4_1 = (Assignment)cAlternatives_4.eContents().get(1);
		private final RuleCall cDefinitionsSubCircuitDefinitionParserRuleCall_4_1_0 = (RuleCall)cDefinitionsAssignment_4_1.eContents().get(0);
		private final Assignment cEntitiesAssignment_4_2 = (Assignment)cAlternatives_4.eContents().get(2);
		private final RuleCall cEntitiesEntityParserRuleCall_4_2_0 = (RuleCall)cEntitiesAssignment_4_2.eContents().get(0);
		private final Keyword cENDKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//SubCircuitDefinition:
		//	'.SUBCKT' name=Label pins+=NODE pins+=NODE* (SL_COMMENT | definitions+=SubCircuitDefinition | entities+=Entity)*
		//	'.END';
		@Override public ParserRule getRule() { return rule; }
		
		//'.SUBCKT' name=Label pins+=NODE pins+=NODE* (SL_COMMENT | definitions+=SubCircuitDefinition | entities+=Entity)* '.END'
		public Group getGroup() { return cGroup; }
		
		//'.SUBCKT'
		public Keyword getSUBCKTKeyword_0() { return cSUBCKTKeyword_0; }
		
		//name=Label
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//Label
		public RuleCall getNameLabelParserRuleCall_1_0() { return cNameLabelParserRuleCall_1_0; }
		
		//pins+=NODE
		public Assignment getPinsAssignment_2() { return cPinsAssignment_2; }
		
		//NODE
		public RuleCall getPinsNODETerminalRuleCall_2_0() { return cPinsNODETerminalRuleCall_2_0; }
		
		//pins+=NODE*
		public Assignment getPinsAssignment_3() { return cPinsAssignment_3; }
		
		//NODE
		public RuleCall getPinsNODETerminalRuleCall_3_0() { return cPinsNODETerminalRuleCall_3_0; }
		
		//(SL_COMMENT | definitions+=SubCircuitDefinition | entities+=Entity)*
		public Alternatives getAlternatives_4() { return cAlternatives_4; }
		
		//SL_COMMENT
		public RuleCall getSL_COMMENTTerminalRuleCall_4_0() { return cSL_COMMENTTerminalRuleCall_4_0; }
		
		//definitions+=SubCircuitDefinition
		public Assignment getDefinitionsAssignment_4_1() { return cDefinitionsAssignment_4_1; }
		
		//SubCircuitDefinition
		public RuleCall getDefinitionsSubCircuitDefinitionParserRuleCall_4_1_0() { return cDefinitionsSubCircuitDefinitionParserRuleCall_4_1_0; }
		
		//entities+=Entity
		public Assignment getEntitiesAssignment_4_2() { return cEntitiesAssignment_4_2; }
		
		//Entity
		public RuleCall getEntitiesEntityParserRuleCall_4_2_0() { return cEntitiesEntityParserRuleCall_4_2_0; }
		
		//'.END'
		public Keyword getENDKeyword_5() { return cENDKeyword_5; }
	}
	public class SubCircuitElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.SubCircuit");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameXIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Assignment cNodesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNodesNODETerminalRuleCall_1_0 = (RuleCall)cNodesAssignment_1.eContents().get(0);
		private final Assignment cNodesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNodesNODETerminalRuleCall_2_0 = (RuleCall)cNodesAssignment_2.eContents().get(0);
		private final Assignment cDefinitionAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cDefinitionSubCircuitDefinitionCrossReference_3_0 = (CrossReference)cDefinitionAssignment_3.eContents().get(0);
		private final RuleCall cDefinitionSubCircuitDefinitionLabelParserRuleCall_3_0_1 = (RuleCall)cDefinitionSubCircuitDefinitionCrossReference_3_0.eContents().get(1);
		
		//SubCircuit:
		//	name=XID nodes+=NODE nodes+=NODE* definition=[SubCircuitDefinition|Label];
		@Override public ParserRule getRule() { return rule; }
		
		//name=XID nodes+=NODE nodes+=NODE* definition=[SubCircuitDefinition|Label]
		public Group getGroup() { return cGroup; }
		
		//name=XID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//XID
		public RuleCall getNameXIDTerminalRuleCall_0_0() { return cNameXIDTerminalRuleCall_0_0; }
		
		//nodes+=NODE
		public Assignment getNodesAssignment_1() { return cNodesAssignment_1; }
		
		//NODE
		public RuleCall getNodesNODETerminalRuleCall_1_0() { return cNodesNODETerminalRuleCall_1_0; }
		
		//nodes+=NODE*
		public Assignment getNodesAssignment_2() { return cNodesAssignment_2; }
		
		//NODE
		public RuleCall getNodesNODETerminalRuleCall_2_0() { return cNodesNODETerminalRuleCall_2_0; }
		
		//definition=[SubCircuitDefinition|Label]
		public Assignment getDefinitionAssignment_3() { return cDefinitionAssignment_3; }
		
		//[SubCircuitDefinition|Label]
		public CrossReference getDefinitionSubCircuitDefinitionCrossReference_3_0() { return cDefinitionSubCircuitDefinitionCrossReference_3_0; }
		
		//Label
		public RuleCall getDefinitionSubCircuitDefinitionLabelParserRuleCall_3_0_1() { return cDefinitionSubCircuitDefinitionLabelParserRuleCall_3_0_1; }
	}
	public class ResistorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.Resistor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameRIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Assignment cNodesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNodesNODETerminalRuleCall_1_0 = (RuleCall)cNodesAssignment_1.eContents().get(0);
		private final Assignment cNodesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNodesNODETerminalRuleCall_2_0 = (RuleCall)cNodesAssignment_2.eContents().get(0);
		private final Assignment cResistanceAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cResistanceNUMBERTerminalRuleCall_3_0 = (RuleCall)cResistanceAssignment_3.eContents().get(0);
		private final Assignment cModelAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cModelLabelParserRuleCall_4_0 = (RuleCall)cModelAssignment_4.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_5 = (UnorderedGroup)cGroup.eContents().get(5);
		private final Group cGroup_5_0 = (Group)cUnorderedGroup_5.eContents().get(0);
		private final Keyword cLKeyword_5_0_0 = (Keyword)cGroup_5_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_5_0_1 = (Keyword)cGroup_5_0.eContents().get(1);
		private final Assignment cLengthAssignment_5_0_2 = (Assignment)cGroup_5_0.eContents().get(2);
		private final RuleCall cLengthNUMBERTerminalRuleCall_5_0_2_0 = (RuleCall)cLengthAssignment_5_0_2.eContents().get(0);
		private final Group cGroup_5_1 = (Group)cUnorderedGroup_5.eContents().get(1);
		private final Keyword cWKeyword_5_1_0 = (Keyword)cGroup_5_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_5_1_1 = (Keyword)cGroup_5_1.eContents().get(1);
		private final Assignment cWidthAssignment_5_1_2 = (Assignment)cGroup_5_1.eContents().get(2);
		private final RuleCall cWidthNUMBERTerminalRuleCall_5_1_2_0 = (RuleCall)cWidthAssignment_5_1_2.eContents().get(0);
		private final Group cGroup_5_2 = (Group)cUnorderedGroup_5.eContents().get(2);
		private final Keyword cTEMPKeyword_5_2_0 = (Keyword)cGroup_5_2.eContents().get(0);
		private final Keyword cEqualsSignKeyword_5_2_1 = (Keyword)cGroup_5_2.eContents().get(1);
		private final Assignment cTempAssignment_5_2_2 = (Assignment)cGroup_5_2.eContents().get(2);
		private final RuleCall cTempNUMBERTerminalRuleCall_5_2_2_0 = (RuleCall)cTempAssignment_5_2_2.eContents().get(0);
		
		//Resistor:
		//	name=RID nodes+=NODE nodes+=NODE resistance=NUMBER? model=Label? ('L' '=' length=NUMBER & ('W' '=' width=NUMBER)? &
		//	('TEMP' '=' temp=NUMBER)?)?;
		@Override public ParserRule getRule() { return rule; }
		
		//name=RID nodes+=NODE nodes+=NODE resistance=NUMBER? model=Label? ('L' '=' length=NUMBER & ('W' '=' width=NUMBER)? &
		//('TEMP' '=' temp=NUMBER)?)?
		public Group getGroup() { return cGroup; }
		
		//name=RID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//RID
		public RuleCall getNameRIDTerminalRuleCall_0_0() { return cNameRIDTerminalRuleCall_0_0; }
		
		//nodes+=NODE
		public Assignment getNodesAssignment_1() { return cNodesAssignment_1; }
		
		//NODE
		public RuleCall getNodesNODETerminalRuleCall_1_0() { return cNodesNODETerminalRuleCall_1_0; }
		
		//nodes+=NODE
		public Assignment getNodesAssignment_2() { return cNodesAssignment_2; }
		
		//NODE
		public RuleCall getNodesNODETerminalRuleCall_2_0() { return cNodesNODETerminalRuleCall_2_0; }
		
		//resistance=NUMBER?
		public Assignment getResistanceAssignment_3() { return cResistanceAssignment_3; }
		
		//NUMBER
		public RuleCall getResistanceNUMBERTerminalRuleCall_3_0() { return cResistanceNUMBERTerminalRuleCall_3_0; }
		
		//model=Label?
		public Assignment getModelAssignment_4() { return cModelAssignment_4; }
		
		//Label
		public RuleCall getModelLabelParserRuleCall_4_0() { return cModelLabelParserRuleCall_4_0; }
		
		//('L' '=' length=NUMBER & ('W' '=' width=NUMBER)? & ('TEMP' '=' temp=NUMBER)?)?
		public UnorderedGroup getUnorderedGroup_5() { return cUnorderedGroup_5; }
		
		//'L' '=' length=NUMBER
		public Group getGroup_5_0() { return cGroup_5_0; }
		
		//'L'
		public Keyword getLKeyword_5_0_0() { return cLKeyword_5_0_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_5_0_1() { return cEqualsSignKeyword_5_0_1; }
		
		//length=NUMBER
		public Assignment getLengthAssignment_5_0_2() { return cLengthAssignment_5_0_2; }
		
		//NUMBER
		public RuleCall getLengthNUMBERTerminalRuleCall_5_0_2_0() { return cLengthNUMBERTerminalRuleCall_5_0_2_0; }
		
		//('W' '=' width=NUMBER)?
		public Group getGroup_5_1() { return cGroup_5_1; }
		
		//'W'
		public Keyword getWKeyword_5_1_0() { return cWKeyword_5_1_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_5_1_1() { return cEqualsSignKeyword_5_1_1; }
		
		//width=NUMBER
		public Assignment getWidthAssignment_5_1_2() { return cWidthAssignment_5_1_2; }
		
		//NUMBER
		public RuleCall getWidthNUMBERTerminalRuleCall_5_1_2_0() { return cWidthNUMBERTerminalRuleCall_5_1_2_0; }
		
		//('TEMP' '=' temp=NUMBER)?
		public Group getGroup_5_2() { return cGroup_5_2; }
		
		//'TEMP'
		public Keyword getTEMPKeyword_5_2_0() { return cTEMPKeyword_5_2_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_5_2_1() { return cEqualsSignKeyword_5_2_1; }
		
		//temp=NUMBER
		public Assignment getTempAssignment_5_2_2() { return cTempAssignment_5_2_2; }
		
		//NUMBER
		public RuleCall getTempNUMBERTerminalRuleCall_5_2_2_0() { return cTempNUMBERTerminalRuleCall_5_2_2_0; }
	}
	public class ResistorModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.ResistorModel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMODELKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameLabelParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cRKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final UnorderedGroup cUnorderedGroup_4 = (UnorderedGroup)cGroup.eContents().get(4);
		private final Group cGroup_4_0 = (Group)cUnorderedGroup_4.eContents().get(0);
		private final Keyword cRSHKeyword_4_0_0 = (Keyword)cGroup_4_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_0_1 = (Keyword)cGroup_4_0.eContents().get(1);
		private final Assignment cSheetResistanceAssignment_4_0_2 = (Assignment)cGroup_4_0.eContents().get(2);
		private final RuleCall cSheetResistanceNUMBERTerminalRuleCall_4_0_2_0 = (RuleCall)cSheetResistanceAssignment_4_0_2.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cUnorderedGroup_4.eContents().get(1);
		private final Keyword cDEFWKeyword_4_1_0 = (Keyword)cGroup_4_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_1_1 = (Keyword)cGroup_4_1.eContents().get(1);
		private final Assignment cDefaultWidthAssignment_4_1_2 = (Assignment)cGroup_4_1.eContents().get(2);
		private final RuleCall cDefaultWidthNUMBERTerminalRuleCall_4_1_2_0 = (RuleCall)cDefaultWidthAssignment_4_1_2.eContents().get(0);
		private final Group cGroup_4_2 = (Group)cUnorderedGroup_4.eContents().get(2);
		private final Keyword cNARROWKeyword_4_2_0 = (Keyword)cGroup_4_2.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_2_1 = (Keyword)cGroup_4_2.eContents().get(1);
		private final Assignment cNarrowAssignment_4_2_2 = (Assignment)cGroup_4_2.eContents().get(2);
		private final RuleCall cNarrowNUMBERTerminalRuleCall_4_2_2_0 = (RuleCall)cNarrowAssignment_4_2_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cUnorderedGroup_4.eContents().get(3);
		private final Keyword cTC1Keyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_3_1 = (Keyword)cGroup_4_3.eContents().get(1);
		private final Assignment cTemperatureCoefficient1Assignment_4_3_2 = (Assignment)cGroup_4_3.eContents().get(2);
		private final RuleCall cTemperatureCoefficient1NUMBERTerminalRuleCall_4_3_2_0 = (RuleCall)cTemperatureCoefficient1Assignment_4_3_2.eContents().get(0);
		private final Group cGroup_4_4 = (Group)cUnorderedGroup_4.eContents().get(4);
		private final Keyword cTC2Keyword_4_4_0 = (Keyword)cGroup_4_4.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_4_1 = (Keyword)cGroup_4_4.eContents().get(1);
		private final Assignment cTemperatureCoefficient2Assignment_4_4_2 = (Assignment)cGroup_4_4.eContents().get(2);
		private final RuleCall cTemperatureCoefficient2NUMBERTerminalRuleCall_4_4_2_0 = (RuleCall)cTemperatureCoefficient2Assignment_4_4_2.eContents().get(0);
		private final Group cGroup_4_5 = (Group)cUnorderedGroup_4.eContents().get(5);
		private final Keyword cTNOMKeyword_4_5_0 = (Keyword)cGroup_4_5.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_5_1 = (Keyword)cGroup_4_5.eContents().get(1);
		private final Assignment cNominalTemperatureAssignment_4_5_2 = (Assignment)cGroup_4_5.eContents().get(2);
		private final RuleCall cNominalTemperatureNUMBERTerminalRuleCall_4_5_2_0 = (RuleCall)cNominalTemperatureAssignment_4_5_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//ResistorModel:
		//	'.MODEL' name=Label 'R' '(' ('RSH' '=' sheetResistance=NUMBER & ('DEFW' '=' defaultWidth=NUMBER)? & ('NARROW' '='
		//	narrow=NUMBER)? & ('TC1' '=' temperatureCoefficient1=NUMBER)? & ('TC2' '=' temperatureCoefficient2=NUMBER)? & ('TNOM'
		//	'=' nominalTemperature=NUMBER)?) ')';
		@Override public ParserRule getRule() { return rule; }
		
		//'.MODEL' name=Label 'R' '(' ('RSH' '=' sheetResistance=NUMBER & ('DEFW' '=' defaultWidth=NUMBER)? & ('NARROW' '='
		//narrow=NUMBER)? & ('TC1' '=' temperatureCoefficient1=NUMBER)? & ('TC2' '=' temperatureCoefficient2=NUMBER)? & ('TNOM'
		//'=' nominalTemperature=NUMBER)?) ')'
		public Group getGroup() { return cGroup; }
		
		//'.MODEL'
		public Keyword getMODELKeyword_0() { return cMODELKeyword_0; }
		
		//name=Label
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//Label
		public RuleCall getNameLabelParserRuleCall_1_0() { return cNameLabelParserRuleCall_1_0; }
		
		//'R'
		public Keyword getRKeyword_2() { return cRKeyword_2; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_3() { return cLeftParenthesisKeyword_3; }
		
		//'RSH' '=' sheetResistance=NUMBER & ('DEFW' '=' defaultWidth=NUMBER)? & ('NARROW' '=' narrow=NUMBER)? & ('TC1' '='
		//temperatureCoefficient1=NUMBER)? & ('TC2' '=' temperatureCoefficient2=NUMBER)? & ('TNOM' '='
		//nominalTemperature=NUMBER)?
		public UnorderedGroup getUnorderedGroup_4() { return cUnorderedGroup_4; }
		
		//'RSH' '=' sheetResistance=NUMBER
		public Group getGroup_4_0() { return cGroup_4_0; }
		
		//'RSH'
		public Keyword getRSHKeyword_4_0_0() { return cRSHKeyword_4_0_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_0_1() { return cEqualsSignKeyword_4_0_1; }
		
		//sheetResistance=NUMBER
		public Assignment getSheetResistanceAssignment_4_0_2() { return cSheetResistanceAssignment_4_0_2; }
		
		//NUMBER
		public RuleCall getSheetResistanceNUMBERTerminalRuleCall_4_0_2_0() { return cSheetResistanceNUMBERTerminalRuleCall_4_0_2_0; }
		
		//('DEFW' '=' defaultWidth=NUMBER)?
		public Group getGroup_4_1() { return cGroup_4_1; }
		
		//'DEFW'
		public Keyword getDEFWKeyword_4_1_0() { return cDEFWKeyword_4_1_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_1_1() { return cEqualsSignKeyword_4_1_1; }
		
		//defaultWidth=NUMBER
		public Assignment getDefaultWidthAssignment_4_1_2() { return cDefaultWidthAssignment_4_1_2; }
		
		//NUMBER
		public RuleCall getDefaultWidthNUMBERTerminalRuleCall_4_1_2_0() { return cDefaultWidthNUMBERTerminalRuleCall_4_1_2_0; }
		
		//('NARROW' '=' narrow=NUMBER)?
		public Group getGroup_4_2() { return cGroup_4_2; }
		
		//'NARROW'
		public Keyword getNARROWKeyword_4_2_0() { return cNARROWKeyword_4_2_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_2_1() { return cEqualsSignKeyword_4_2_1; }
		
		//narrow=NUMBER
		public Assignment getNarrowAssignment_4_2_2() { return cNarrowAssignment_4_2_2; }
		
		//NUMBER
		public RuleCall getNarrowNUMBERTerminalRuleCall_4_2_2_0() { return cNarrowNUMBERTerminalRuleCall_4_2_2_0; }
		
		//('TC1' '=' temperatureCoefficient1=NUMBER)?
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//'TC1'
		public Keyword getTC1Keyword_4_3_0() { return cTC1Keyword_4_3_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_3_1() { return cEqualsSignKeyword_4_3_1; }
		
		//temperatureCoefficient1=NUMBER
		public Assignment getTemperatureCoefficient1Assignment_4_3_2() { return cTemperatureCoefficient1Assignment_4_3_2; }
		
		//NUMBER
		public RuleCall getTemperatureCoefficient1NUMBERTerminalRuleCall_4_3_2_0() { return cTemperatureCoefficient1NUMBERTerminalRuleCall_4_3_2_0; }
		
		//('TC2' '=' temperatureCoefficient2=NUMBER)?
		public Group getGroup_4_4() { return cGroup_4_4; }
		
		//'TC2'
		public Keyword getTC2Keyword_4_4_0() { return cTC2Keyword_4_4_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_4_1() { return cEqualsSignKeyword_4_4_1; }
		
		//temperatureCoefficient2=NUMBER
		public Assignment getTemperatureCoefficient2Assignment_4_4_2() { return cTemperatureCoefficient2Assignment_4_4_2; }
		
		//NUMBER
		public RuleCall getTemperatureCoefficient2NUMBERTerminalRuleCall_4_4_2_0() { return cTemperatureCoefficient2NUMBERTerminalRuleCall_4_4_2_0; }
		
		//('TNOM' '=' nominalTemperature=NUMBER)?
		public Group getGroup_4_5() { return cGroup_4_5; }
		
		//'TNOM'
		public Keyword getTNOMKeyword_4_5_0() { return cTNOMKeyword_4_5_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_5_1() { return cEqualsSignKeyword_4_5_1; }
		
		//nominalTemperature=NUMBER
		public Assignment getNominalTemperatureAssignment_4_5_2() { return cNominalTemperatureAssignment_4_5_2; }
		
		//NUMBER
		public RuleCall getNominalTemperatureNUMBERTerminalRuleCall_4_5_2_0() { return cNominalTemperatureNUMBERTerminalRuleCall_4_5_2_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }
	}
	public class CapacitorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.Capacitor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameCIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Assignment cNodesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNodesNODETerminalRuleCall_1_0 = (RuleCall)cNodesAssignment_1.eContents().get(0);
		private final Assignment cNodesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNodesNODETerminalRuleCall_2_0 = (RuleCall)cNodesAssignment_2.eContents().get(0);
		private final Assignment cCapacitanceAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cCapacitanceNUMBERTerminalRuleCall_3_0 = (RuleCall)cCapacitanceAssignment_3.eContents().get(0);
		private final Assignment cModelAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cModelLabelParserRuleCall_4_0 = (RuleCall)cModelAssignment_4.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_5 = (UnorderedGroup)cGroup.eContents().get(5);
		private final Group cGroup_5_0 = (Group)cUnorderedGroup_5.eContents().get(0);
		private final Keyword cLKeyword_5_0_0 = (Keyword)cGroup_5_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_5_0_1 = (Keyword)cGroup_5_0.eContents().get(1);
		private final Assignment cLengthAssignment_5_0_2 = (Assignment)cGroup_5_0.eContents().get(2);
		private final RuleCall cLengthNUMBERTerminalRuleCall_5_0_2_0 = (RuleCall)cLengthAssignment_5_0_2.eContents().get(0);
		private final Group cGroup_5_1 = (Group)cUnorderedGroup_5.eContents().get(1);
		private final Keyword cWKeyword_5_1_0 = (Keyword)cGroup_5_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_5_1_1 = (Keyword)cGroup_5_1.eContents().get(1);
		private final Assignment cWidthAssignment_5_1_2 = (Assignment)cGroup_5_1.eContents().get(2);
		private final RuleCall cWidthNUMBERTerminalRuleCall_5_1_2_0 = (RuleCall)cWidthAssignment_5_1_2.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cICKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cEqualsSignKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cInitialConditionAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cInitialConditionNUMBERTerminalRuleCall_6_2_0 = (RuleCall)cInitialConditionAssignment_6_2.eContents().get(0);
		
		//Capacitor:
		//	name=CID nodes+=NODE nodes+=NODE capacitance=NUMBER? model=Label? (('L' '=' length=NUMBER)? & ('W' '=' width=NUMBER)?)
		//	('IC' '=' initialCondition=NUMBER)?;
		@Override public ParserRule getRule() { return rule; }
		
		//name=CID nodes+=NODE nodes+=NODE capacitance=NUMBER? model=Label? (('L' '=' length=NUMBER)? & ('W' '=' width=NUMBER)?)
		//('IC' '=' initialCondition=NUMBER)?
		public Group getGroup() { return cGroup; }
		
		//name=CID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//CID
		public RuleCall getNameCIDTerminalRuleCall_0_0() { return cNameCIDTerminalRuleCall_0_0; }
		
		//nodes+=NODE
		public Assignment getNodesAssignment_1() { return cNodesAssignment_1; }
		
		//NODE
		public RuleCall getNodesNODETerminalRuleCall_1_0() { return cNodesNODETerminalRuleCall_1_0; }
		
		//nodes+=NODE
		public Assignment getNodesAssignment_2() { return cNodesAssignment_2; }
		
		//NODE
		public RuleCall getNodesNODETerminalRuleCall_2_0() { return cNodesNODETerminalRuleCall_2_0; }
		
		//capacitance=NUMBER?
		public Assignment getCapacitanceAssignment_3() { return cCapacitanceAssignment_3; }
		
		//NUMBER
		public RuleCall getCapacitanceNUMBERTerminalRuleCall_3_0() { return cCapacitanceNUMBERTerminalRuleCall_3_0; }
		
		//model=Label?
		public Assignment getModelAssignment_4() { return cModelAssignment_4; }
		
		//Label
		public RuleCall getModelLabelParserRuleCall_4_0() { return cModelLabelParserRuleCall_4_0; }
		
		//('L' '=' length=NUMBER)? & ('W' '=' width=NUMBER)?
		public UnorderedGroup getUnorderedGroup_5() { return cUnorderedGroup_5; }
		
		//('L' '=' length=NUMBER)?
		public Group getGroup_5_0() { return cGroup_5_0; }
		
		//'L'
		public Keyword getLKeyword_5_0_0() { return cLKeyword_5_0_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_5_0_1() { return cEqualsSignKeyword_5_0_1; }
		
		//length=NUMBER
		public Assignment getLengthAssignment_5_0_2() { return cLengthAssignment_5_0_2; }
		
		//NUMBER
		public RuleCall getLengthNUMBERTerminalRuleCall_5_0_2_0() { return cLengthNUMBERTerminalRuleCall_5_0_2_0; }
		
		//('W' '=' width=NUMBER)?
		public Group getGroup_5_1() { return cGroup_5_1; }
		
		//'W'
		public Keyword getWKeyword_5_1_0() { return cWKeyword_5_1_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_5_1_1() { return cEqualsSignKeyword_5_1_1; }
		
		//width=NUMBER
		public Assignment getWidthAssignment_5_1_2() { return cWidthAssignment_5_1_2; }
		
		//NUMBER
		public RuleCall getWidthNUMBERTerminalRuleCall_5_1_2_0() { return cWidthNUMBERTerminalRuleCall_5_1_2_0; }
		
		//('IC' '=' initialCondition=NUMBER)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'IC'
		public Keyword getICKeyword_6_0() { return cICKeyword_6_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_6_1() { return cEqualsSignKeyword_6_1; }
		
		//initialCondition=NUMBER
		public Assignment getInitialConditionAssignment_6_2() { return cInitialConditionAssignment_6_2; }
		
		//NUMBER
		public RuleCall getInitialConditionNUMBERTerminalRuleCall_6_2_0() { return cInitialConditionNUMBERTerminalRuleCall_6_2_0; }
	}
	public class CapacitorModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.CapacitorModel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMODELKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameLabelParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cCKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final UnorderedGroup cUnorderedGroup_4 = (UnorderedGroup)cGroup.eContents().get(4);
		private final Group cGroup_4_0 = (Group)cUnorderedGroup_4.eContents().get(0);
		private final Keyword cCJKeyword_4_0_0 = (Keyword)cGroup_4_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_0_1 = (Keyword)cGroup_4_0.eContents().get(1);
		private final Assignment cJunctionCapAssignment_4_0_2 = (Assignment)cGroup_4_0.eContents().get(2);
		private final RuleCall cJunctionCapNUMBERTerminalRuleCall_4_0_2_0 = (RuleCall)cJunctionCapAssignment_4_0_2.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cUnorderedGroup_4.eContents().get(1);
		private final Keyword cCJSWKeyword_4_1_0 = (Keyword)cGroup_4_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_1_1 = (Keyword)cGroup_4_1.eContents().get(1);
		private final Assignment cJunctionCapSidewallAssignment_4_1_2 = (Assignment)cGroup_4_1.eContents().get(2);
		private final RuleCall cJunctionCapSidewallNUMBERTerminalRuleCall_4_1_2_0 = (RuleCall)cJunctionCapSidewallAssignment_4_1_2.eContents().get(0);
		private final Group cGroup_4_2 = (Group)cUnorderedGroup_4.eContents().get(2);
		private final Keyword cDEFWKeyword_4_2_0 = (Keyword)cGroup_4_2.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_2_1 = (Keyword)cGroup_4_2.eContents().get(1);
		private final Assignment cDefaultWidthAssignment_4_2_2 = (Assignment)cGroup_4_2.eContents().get(2);
		private final RuleCall cDefaultWidthNUMBERTerminalRuleCall_4_2_2_0 = (RuleCall)cDefaultWidthAssignment_4_2_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cUnorderedGroup_4.eContents().get(3);
		private final Keyword cNARROWKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_3_1 = (Keyword)cGroup_4_3.eContents().get(1);
		private final Assignment cNarrowAssignment_4_3_2 = (Assignment)cGroup_4_3.eContents().get(2);
		private final RuleCall cNarrowNUMBERTerminalRuleCall_4_3_2_0 = (RuleCall)cNarrowAssignment_4_3_2.eContents().get(0);
		private final Group cGroup_4_4 = (Group)cUnorderedGroup_4.eContents().get(4);
		private final Keyword cTC1Keyword_4_4_0 = (Keyword)cGroup_4_4.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_4_1 = (Keyword)cGroup_4_4.eContents().get(1);
		private final Assignment cTemperatureCoefficient1Assignment_4_4_2 = (Assignment)cGroup_4_4.eContents().get(2);
		private final RuleCall cTemperatureCoefficient1NUMBERTerminalRuleCall_4_4_2_0 = (RuleCall)cTemperatureCoefficient1Assignment_4_4_2.eContents().get(0);
		private final Group cGroup_4_5 = (Group)cUnorderedGroup_4.eContents().get(5);
		private final Keyword cTC2Keyword_4_5_0 = (Keyword)cGroup_4_5.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_5_1 = (Keyword)cGroup_4_5.eContents().get(1);
		private final Assignment cTemperatureCoefficient2Assignment_4_5_2 = (Assignment)cGroup_4_5.eContents().get(2);
		private final RuleCall cTemperatureCoefficient2NUMBERTerminalRuleCall_4_5_2_0 = (RuleCall)cTemperatureCoefficient2Assignment_4_5_2.eContents().get(0);
		private final Group cGroup_4_6 = (Group)cUnorderedGroup_4.eContents().get(6);
		private final Keyword cTNOMKeyword_4_6_0 = (Keyword)cGroup_4_6.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_6_1 = (Keyword)cGroup_4_6.eContents().get(1);
		private final Assignment cNominalTemperatureAssignment_4_6_2 = (Assignment)cGroup_4_6.eContents().get(2);
		private final RuleCall cNominalTemperatureNUMBERTerminalRuleCall_4_6_2_0 = (RuleCall)cNominalTemperatureAssignment_4_6_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//CapacitorModel:
		//	'.MODEL' name=Label 'C' '(' ('CJ' '=' junctionCap=NUMBER & 'CJSW' '=' junctionCapSidewall=NUMBER & ('DEFW' '='
		//	defaultWidth=NUMBER)? & ('NARROW' '=' narrow=NUMBER)? & ('TC1' '=' temperatureCoefficient1=NUMBER)? & ('TC2' '='
		//	temperatureCoefficient2=NUMBER)? & ('TNOM' '=' nominalTemperature=NUMBER)?) ')';
		@Override public ParserRule getRule() { return rule; }
		
		//'.MODEL' name=Label 'C' '(' ('CJ' '=' junctionCap=NUMBER & 'CJSW' '=' junctionCapSidewall=NUMBER & ('DEFW' '='
		//defaultWidth=NUMBER)? & ('NARROW' '=' narrow=NUMBER)? & ('TC1' '=' temperatureCoefficient1=NUMBER)? & ('TC2' '='
		//temperatureCoefficient2=NUMBER)? & ('TNOM' '=' nominalTemperature=NUMBER)?) ')'
		public Group getGroup() { return cGroup; }
		
		//'.MODEL'
		public Keyword getMODELKeyword_0() { return cMODELKeyword_0; }
		
		//name=Label
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//Label
		public RuleCall getNameLabelParserRuleCall_1_0() { return cNameLabelParserRuleCall_1_0; }
		
		//'C'
		public Keyword getCKeyword_2() { return cCKeyword_2; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_3() { return cLeftParenthesisKeyword_3; }
		
		//'CJ' '=' junctionCap=NUMBER & 'CJSW' '=' junctionCapSidewall=NUMBER & ('DEFW' '=' defaultWidth=NUMBER)? & ('NARROW' '='
		//narrow=NUMBER)? & ('TC1' '=' temperatureCoefficient1=NUMBER)? & ('TC2' '=' temperatureCoefficient2=NUMBER)? & ('TNOM'
		//'=' nominalTemperature=NUMBER)?
		public UnorderedGroup getUnorderedGroup_4() { return cUnorderedGroup_4; }
		
		//'CJ' '=' junctionCap=NUMBER
		public Group getGroup_4_0() { return cGroup_4_0; }
		
		//'CJ'
		public Keyword getCJKeyword_4_0_0() { return cCJKeyword_4_0_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_0_1() { return cEqualsSignKeyword_4_0_1; }
		
		//junctionCap=NUMBER
		public Assignment getJunctionCapAssignment_4_0_2() { return cJunctionCapAssignment_4_0_2; }
		
		//NUMBER
		public RuleCall getJunctionCapNUMBERTerminalRuleCall_4_0_2_0() { return cJunctionCapNUMBERTerminalRuleCall_4_0_2_0; }
		
		//'CJSW' '=' junctionCapSidewall=NUMBER
		public Group getGroup_4_1() { return cGroup_4_1; }
		
		//'CJSW'
		public Keyword getCJSWKeyword_4_1_0() { return cCJSWKeyword_4_1_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_1_1() { return cEqualsSignKeyword_4_1_1; }
		
		//junctionCapSidewall=NUMBER
		public Assignment getJunctionCapSidewallAssignment_4_1_2() { return cJunctionCapSidewallAssignment_4_1_2; }
		
		//NUMBER
		public RuleCall getJunctionCapSidewallNUMBERTerminalRuleCall_4_1_2_0() { return cJunctionCapSidewallNUMBERTerminalRuleCall_4_1_2_0; }
		
		//('DEFW' '=' defaultWidth=NUMBER)?
		public Group getGroup_4_2() { return cGroup_4_2; }
		
		//'DEFW'
		public Keyword getDEFWKeyword_4_2_0() { return cDEFWKeyword_4_2_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_2_1() { return cEqualsSignKeyword_4_2_1; }
		
		//defaultWidth=NUMBER
		public Assignment getDefaultWidthAssignment_4_2_2() { return cDefaultWidthAssignment_4_2_2; }
		
		//NUMBER
		public RuleCall getDefaultWidthNUMBERTerminalRuleCall_4_2_2_0() { return cDefaultWidthNUMBERTerminalRuleCall_4_2_2_0; }
		
		//('NARROW' '=' narrow=NUMBER)?
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//'NARROW'
		public Keyword getNARROWKeyword_4_3_0() { return cNARROWKeyword_4_3_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_3_1() { return cEqualsSignKeyword_4_3_1; }
		
		//narrow=NUMBER
		public Assignment getNarrowAssignment_4_3_2() { return cNarrowAssignment_4_3_2; }
		
		//NUMBER
		public RuleCall getNarrowNUMBERTerminalRuleCall_4_3_2_0() { return cNarrowNUMBERTerminalRuleCall_4_3_2_0; }
		
		//('TC1' '=' temperatureCoefficient1=NUMBER)?
		public Group getGroup_4_4() { return cGroup_4_4; }
		
		//'TC1'
		public Keyword getTC1Keyword_4_4_0() { return cTC1Keyword_4_4_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_4_1() { return cEqualsSignKeyword_4_4_1; }
		
		//temperatureCoefficient1=NUMBER
		public Assignment getTemperatureCoefficient1Assignment_4_4_2() { return cTemperatureCoefficient1Assignment_4_4_2; }
		
		//NUMBER
		public RuleCall getTemperatureCoefficient1NUMBERTerminalRuleCall_4_4_2_0() { return cTemperatureCoefficient1NUMBERTerminalRuleCall_4_4_2_0; }
		
		//('TC2' '=' temperatureCoefficient2=NUMBER)?
		public Group getGroup_4_5() { return cGroup_4_5; }
		
		//'TC2'
		public Keyword getTC2Keyword_4_5_0() { return cTC2Keyword_4_5_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_5_1() { return cEqualsSignKeyword_4_5_1; }
		
		//temperatureCoefficient2=NUMBER
		public Assignment getTemperatureCoefficient2Assignment_4_5_2() { return cTemperatureCoefficient2Assignment_4_5_2; }
		
		//NUMBER
		public RuleCall getTemperatureCoefficient2NUMBERTerminalRuleCall_4_5_2_0() { return cTemperatureCoefficient2NUMBERTerminalRuleCall_4_5_2_0; }
		
		//('TNOM' '=' nominalTemperature=NUMBER)?
		public Group getGroup_4_6() { return cGroup_4_6; }
		
		//'TNOM'
		public Keyword getTNOMKeyword_4_6_0() { return cTNOMKeyword_4_6_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_6_1() { return cEqualsSignKeyword_4_6_1; }
		
		//nominalTemperature=NUMBER
		public Assignment getNominalTemperatureAssignment_4_6_2() { return cNominalTemperatureAssignment_4_6_2; }
		
		//NUMBER
		public RuleCall getNominalTemperatureNUMBERTerminalRuleCall_4_6_2_0() { return cNominalTemperatureNUMBERTerminalRuleCall_4_6_2_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }
	}
	public class InductorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.Inductor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameLIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Assignment cNodesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNodesNODETerminalRuleCall_1_0 = (RuleCall)cNodesAssignment_1.eContents().get(0);
		private final Assignment cNodesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNodesNODETerminalRuleCall_2_0 = (RuleCall)cNodesAssignment_2.eContents().get(0);
		private final Assignment cInductanceAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cInductanceNUMBERTerminalRuleCall_3_0 = (RuleCall)cInductanceAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cICKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cInitialConditionAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cInitialConditionNUMBERTerminalRuleCall_4_2_0 = (RuleCall)cInitialConditionAssignment_4_2.eContents().get(0);
		
		//Inductor:
		//	name=LID nodes+=NODE nodes+=NODE inductance=NUMBER ('IC' '=' initialCondition=NUMBER)?;
		@Override public ParserRule getRule() { return rule; }
		
		//name=LID nodes+=NODE nodes+=NODE inductance=NUMBER ('IC' '=' initialCondition=NUMBER)?
		public Group getGroup() { return cGroup; }
		
		//name=LID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//LID
		public RuleCall getNameLIDTerminalRuleCall_0_0() { return cNameLIDTerminalRuleCall_0_0; }
		
		//nodes+=NODE
		public Assignment getNodesAssignment_1() { return cNodesAssignment_1; }
		
		//NODE
		public RuleCall getNodesNODETerminalRuleCall_1_0() { return cNodesNODETerminalRuleCall_1_0; }
		
		//nodes+=NODE
		public Assignment getNodesAssignment_2() { return cNodesAssignment_2; }
		
		//NODE
		public RuleCall getNodesNODETerminalRuleCall_2_0() { return cNodesNODETerminalRuleCall_2_0; }
		
		//inductance=NUMBER
		public Assignment getInductanceAssignment_3() { return cInductanceAssignment_3; }
		
		//NUMBER
		public RuleCall getInductanceNUMBERTerminalRuleCall_3_0() { return cInductanceNUMBERTerminalRuleCall_3_0; }
		
		//('IC' '=' initialCondition=NUMBER)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'IC'
		public Keyword getICKeyword_4_0() { return cICKeyword_4_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_1() { return cEqualsSignKeyword_4_1; }
		
		//initialCondition=NUMBER
		public Assignment getInitialConditionAssignment_4_2() { return cInitialConditionAssignment_4_2; }
		
		//NUMBER
		public RuleCall getInitialConditionNUMBERTerminalRuleCall_4_2_0() { return cInitialConditionNUMBERTerminalRuleCall_4_2_0; }
	}
	public class MutualInductanceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.MutualInductance");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameKIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Assignment cInductor1Assignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cInductor1LIDTerminalRuleCall_1_0 = (RuleCall)cInductor1Assignment_1.eContents().get(0);
		private final Assignment cInductor2Assignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cInductor2LIDTerminalRuleCall_2_0 = (RuleCall)cInductor2Assignment_2.eContents().get(0);
		private final Assignment cCouplingAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cCouplingNUMBERTerminalRuleCall_3_0 = (RuleCall)cCouplingAssignment_3.eContents().get(0);
		
		//MutualInductance:
		//	name=KID inductor1=LID inductor2=LID coupling=NUMBER;
		@Override public ParserRule getRule() { return rule; }
		
		//name=KID inductor1=LID inductor2=LID coupling=NUMBER
		public Group getGroup() { return cGroup; }
		
		//name=KID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//KID
		public RuleCall getNameKIDTerminalRuleCall_0_0() { return cNameKIDTerminalRuleCall_0_0; }
		
		//inductor1=LID
		public Assignment getInductor1Assignment_1() { return cInductor1Assignment_1; }
		
		//LID
		public RuleCall getInductor1LIDTerminalRuleCall_1_0() { return cInductor1LIDTerminalRuleCall_1_0; }
		
		//inductor2=LID
		public Assignment getInductor2Assignment_2() { return cInductor2Assignment_2; }
		
		//LID
		public RuleCall getInductor2LIDTerminalRuleCall_2_0() { return cInductor2LIDTerminalRuleCall_2_0; }
		
		//coupling=NUMBER
		public Assignment getCouplingAssignment_3() { return cCouplingAssignment_3; }
		
		//NUMBER
		public RuleCall getCouplingNUMBERTerminalRuleCall_3_0() { return cCouplingNUMBERTerminalRuleCall_3_0; }
	}
	public class VoltageSwitchElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.VoltageSwitch");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameSIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Assignment cNodesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNodesNODETerminalRuleCall_1_0 = (RuleCall)cNodesAssignment_1.eContents().get(0);
		private final Assignment cNodesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNodesNODETerminalRuleCall_2_0 = (RuleCall)cNodesAssignment_2.eContents().get(0);
		private final Assignment cNodesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNodesNODETerminalRuleCall_3_0 = (RuleCall)cNodesAssignment_3.eContents().get(0);
		private final Assignment cNodesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNodesNODETerminalRuleCall_4_0 = (RuleCall)cNodesAssignment_4.eContents().get(0);
		private final Assignment cModelAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cModelLabelParserRuleCall_5_0 = (RuleCall)cModelAssignment_5.eContents().get(0);
		private final Alternatives cAlternatives_6 = (Alternatives)cGroup.eContents().get(6);
		private final Assignment cZeroStateAssignment_6_0 = (Assignment)cAlternatives_6.eContents().get(0);
		private final Keyword cZeroStateONKeyword_6_0_0 = (Keyword)cZeroStateAssignment_6_0.eContents().get(0);
		private final Keyword cOFFKeyword_6_1 = (Keyword)cAlternatives_6.eContents().get(1);
		
		//VoltageSwitch:
		//	name=SID nodes+=NODE nodes+=NODE nodes+=NODE nodes+=NODE model=Label (zeroState?='ON' | 'OFF')?;
		@Override public ParserRule getRule() { return rule; }
		
		//name=SID nodes+=NODE nodes+=NODE nodes+=NODE nodes+=NODE model=Label (zeroState?='ON' | 'OFF')?
		public Group getGroup() { return cGroup; }
		
		//name=SID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//SID
		public RuleCall getNameSIDTerminalRuleCall_0_0() { return cNameSIDTerminalRuleCall_0_0; }
		
		//nodes+=NODE
		public Assignment getNodesAssignment_1() { return cNodesAssignment_1; }
		
		//NODE
		public RuleCall getNodesNODETerminalRuleCall_1_0() { return cNodesNODETerminalRuleCall_1_0; }
		
		//nodes+=NODE
		public Assignment getNodesAssignment_2() { return cNodesAssignment_2; }
		
		//NODE
		public RuleCall getNodesNODETerminalRuleCall_2_0() { return cNodesNODETerminalRuleCall_2_0; }
		
		//nodes+=NODE
		public Assignment getNodesAssignment_3() { return cNodesAssignment_3; }
		
		//NODE
		public RuleCall getNodesNODETerminalRuleCall_3_0() { return cNodesNODETerminalRuleCall_3_0; }
		
		//nodes+=NODE
		public Assignment getNodesAssignment_4() { return cNodesAssignment_4; }
		
		//NODE
		public RuleCall getNodesNODETerminalRuleCall_4_0() { return cNodesNODETerminalRuleCall_4_0; }
		
		//model=Label
		public Assignment getModelAssignment_5() { return cModelAssignment_5; }
		
		//Label
		public RuleCall getModelLabelParserRuleCall_5_0() { return cModelLabelParserRuleCall_5_0; }
		
		//(zeroState?='ON' | 'OFF')?
		public Alternatives getAlternatives_6() { return cAlternatives_6; }
		
		//zeroState?='ON'
		public Assignment getZeroStateAssignment_6_0() { return cZeroStateAssignment_6_0; }
		
		//'ON'
		public Keyword getZeroStateONKeyword_6_0_0() { return cZeroStateONKeyword_6_0_0; }
		
		//'OFF'
		public Keyword getOFFKeyword_6_1() { return cOFFKeyword_6_1; }
	}
	public class VoltageSwitchModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.VoltageSwitchModel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMODELKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameLabelParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cSWKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final UnorderedGroup cUnorderedGroup_4 = (UnorderedGroup)cGroup.eContents().get(4);
		private final Group cGroup_4_0 = (Group)cUnorderedGroup_4.eContents().get(0);
		private final Keyword cVTKeyword_4_0_0 = (Keyword)cGroup_4_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_0_1 = (Keyword)cGroup_4_0.eContents().get(1);
		private final Assignment cThresholdAssignment_4_0_2 = (Assignment)cGroup_4_0.eContents().get(2);
		private final RuleCall cThresholdNUMBERTerminalRuleCall_4_0_2_0 = (RuleCall)cThresholdAssignment_4_0_2.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cUnorderedGroup_4.eContents().get(1);
		private final Keyword cVHKeyword_4_1_0 = (Keyword)cGroup_4_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_1_1 = (Keyword)cGroup_4_1.eContents().get(1);
		private final Assignment cHysteresisAssignment_4_1_2 = (Assignment)cGroup_4_1.eContents().get(2);
		private final RuleCall cHysteresisNUMBERTerminalRuleCall_4_1_2_0 = (RuleCall)cHysteresisAssignment_4_1_2.eContents().get(0);
		private final Group cGroup_4_2 = (Group)cUnorderedGroup_4.eContents().get(2);
		private final Keyword cRONKeyword_4_2_0 = (Keyword)cGroup_4_2.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_2_1 = (Keyword)cGroup_4_2.eContents().get(1);
		private final Assignment cOnResistanceAssignment_4_2_2 = (Assignment)cGroup_4_2.eContents().get(2);
		private final RuleCall cOnResistanceNUMBERTerminalRuleCall_4_2_2_0 = (RuleCall)cOnResistanceAssignment_4_2_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cUnorderedGroup_4.eContents().get(3);
		private final Keyword cROFFKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_3_1 = (Keyword)cGroup_4_3.eContents().get(1);
		private final Assignment cOffResistanceAssignment_4_3_2 = (Assignment)cGroup_4_3.eContents().get(2);
		private final RuleCall cOffResistanceNUMBERTerminalRuleCall_4_3_2_0 = (RuleCall)cOffResistanceAssignment_4_3_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//VoltageSwitchModel:
		//	'.MODEL' name=Label 'SW' '(' ('VT' '=' threshold=NUMBER & 'VH' '=' hysteresis=NUMBER & 'RON' '=' onResistance=NUMBER &
		//	'ROFF' '=' offResistance=NUMBER) ')';
		@Override public ParserRule getRule() { return rule; }
		
		//'.MODEL' name=Label 'SW' '(' ('VT' '=' threshold=NUMBER & 'VH' '=' hysteresis=NUMBER & 'RON' '=' onResistance=NUMBER &
		//'ROFF' '=' offResistance=NUMBER) ')'
		public Group getGroup() { return cGroup; }
		
		//'.MODEL'
		public Keyword getMODELKeyword_0() { return cMODELKeyword_0; }
		
		//name=Label
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//Label
		public RuleCall getNameLabelParserRuleCall_1_0() { return cNameLabelParserRuleCall_1_0; }
		
		//'SW'
		public Keyword getSWKeyword_2() { return cSWKeyword_2; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_3() { return cLeftParenthesisKeyword_3; }
		
		//'VT' '=' threshold=NUMBER & 'VH' '=' hysteresis=NUMBER & 'RON' '=' onResistance=NUMBER & 'ROFF' '=' offResistance=NUMBER
		public UnorderedGroup getUnorderedGroup_4() { return cUnorderedGroup_4; }
		
		//'VT' '=' threshold=NUMBER
		public Group getGroup_4_0() { return cGroup_4_0; }
		
		//'VT'
		public Keyword getVTKeyword_4_0_0() { return cVTKeyword_4_0_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_0_1() { return cEqualsSignKeyword_4_0_1; }
		
		//threshold=NUMBER
		public Assignment getThresholdAssignment_4_0_2() { return cThresholdAssignment_4_0_2; }
		
		//NUMBER
		public RuleCall getThresholdNUMBERTerminalRuleCall_4_0_2_0() { return cThresholdNUMBERTerminalRuleCall_4_0_2_0; }
		
		//'VH' '=' hysteresis=NUMBER
		public Group getGroup_4_1() { return cGroup_4_1; }
		
		//'VH'
		public Keyword getVHKeyword_4_1_0() { return cVHKeyword_4_1_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_1_1() { return cEqualsSignKeyword_4_1_1; }
		
		//hysteresis=NUMBER
		public Assignment getHysteresisAssignment_4_1_2() { return cHysteresisAssignment_4_1_2; }
		
		//NUMBER
		public RuleCall getHysteresisNUMBERTerminalRuleCall_4_1_2_0() { return cHysteresisNUMBERTerminalRuleCall_4_1_2_0; }
		
		//'RON' '=' onResistance=NUMBER
		public Group getGroup_4_2() { return cGroup_4_2; }
		
		//'RON'
		public Keyword getRONKeyword_4_2_0() { return cRONKeyword_4_2_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_2_1() { return cEqualsSignKeyword_4_2_1; }
		
		//onResistance=NUMBER
		public Assignment getOnResistanceAssignment_4_2_2() { return cOnResistanceAssignment_4_2_2; }
		
		//NUMBER
		public RuleCall getOnResistanceNUMBERTerminalRuleCall_4_2_2_0() { return cOnResistanceNUMBERTerminalRuleCall_4_2_2_0; }
		
		//'ROFF' '=' offResistance=NUMBER
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//'ROFF'
		public Keyword getROFFKeyword_4_3_0() { return cROFFKeyword_4_3_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_3_1() { return cEqualsSignKeyword_4_3_1; }
		
		//offResistance=NUMBER
		public Assignment getOffResistanceAssignment_4_3_2() { return cOffResistanceAssignment_4_3_2; }
		
		//NUMBER
		public RuleCall getOffResistanceNUMBERTerminalRuleCall_4_3_2_0() { return cOffResistanceNUMBERTerminalRuleCall_4_3_2_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }
	}
	public class CurrentSwitchElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.CurrentSwitch");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameWIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Assignment cNodesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNodesNODETerminalRuleCall_1_0 = (RuleCall)cNodesAssignment_1.eContents().get(0);
		private final Assignment cNodesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNodesNODETerminalRuleCall_2_0 = (RuleCall)cNodesAssignment_2.eContents().get(0);
		private final Assignment cControllingSourceAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cControllingSourceIIDTerminalRuleCall_3_0 = (RuleCall)cControllingSourceAssignment_3.eContents().get(0);
		private final Assignment cModelAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cModelLabelParserRuleCall_4_0 = (RuleCall)cModelAssignment_4.eContents().get(0);
		private final Alternatives cAlternatives_5 = (Alternatives)cGroup.eContents().get(5);
		private final Assignment cZeroStateAssignment_5_0 = (Assignment)cAlternatives_5.eContents().get(0);
		private final Keyword cZeroStateONKeyword_5_0_0 = (Keyword)cZeroStateAssignment_5_0.eContents().get(0);
		private final Keyword cOFFKeyword_5_1 = (Keyword)cAlternatives_5.eContents().get(1);
		
		//CurrentSwitch:
		//	name=WID nodes+=NODE nodes+=NODE controllingSource=IID model=Label (zeroState?='ON' | 'OFF')?;
		@Override public ParserRule getRule() { return rule; }
		
		//name=WID nodes+=NODE nodes+=NODE controllingSource=IID model=Label (zeroState?='ON' | 'OFF')?
		public Group getGroup() { return cGroup; }
		
		//name=WID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//WID
		public RuleCall getNameWIDTerminalRuleCall_0_0() { return cNameWIDTerminalRuleCall_0_0; }
		
		//nodes+=NODE
		public Assignment getNodesAssignment_1() { return cNodesAssignment_1; }
		
		//NODE
		public RuleCall getNodesNODETerminalRuleCall_1_0() { return cNodesNODETerminalRuleCall_1_0; }
		
		//nodes+=NODE
		public Assignment getNodesAssignment_2() { return cNodesAssignment_2; }
		
		//NODE
		public RuleCall getNodesNODETerminalRuleCall_2_0() { return cNodesNODETerminalRuleCall_2_0; }
		
		//controllingSource=IID
		public Assignment getControllingSourceAssignment_3() { return cControllingSourceAssignment_3; }
		
		//IID
		public RuleCall getControllingSourceIIDTerminalRuleCall_3_0() { return cControllingSourceIIDTerminalRuleCall_3_0; }
		
		//model=Label
		public Assignment getModelAssignment_4() { return cModelAssignment_4; }
		
		//Label
		public RuleCall getModelLabelParserRuleCall_4_0() { return cModelLabelParserRuleCall_4_0; }
		
		//(zeroState?='ON' | 'OFF')?
		public Alternatives getAlternatives_5() { return cAlternatives_5; }
		
		//zeroState?='ON'
		public Assignment getZeroStateAssignment_5_0() { return cZeroStateAssignment_5_0; }
		
		//'ON'
		public Keyword getZeroStateONKeyword_5_0_0() { return cZeroStateONKeyword_5_0_0; }
		
		//'OFF'
		public Keyword getOFFKeyword_5_1() { return cOFFKeyword_5_1; }
	}
	public class CurrentSwitchModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.CurrentSwitchModel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMODELKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameLabelParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cCSWKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final UnorderedGroup cUnorderedGroup_4 = (UnorderedGroup)cGroup.eContents().get(4);
		private final Group cGroup_4_0 = (Group)cUnorderedGroup_4.eContents().get(0);
		private final Keyword cITKeyword_4_0_0 = (Keyword)cGroup_4_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_0_1 = (Keyword)cGroup_4_0.eContents().get(1);
		private final Assignment cThresholdAssignment_4_0_2 = (Assignment)cGroup_4_0.eContents().get(2);
		private final RuleCall cThresholdNUMBERTerminalRuleCall_4_0_2_0 = (RuleCall)cThresholdAssignment_4_0_2.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cUnorderedGroup_4.eContents().get(1);
		private final Keyword cIHKeyword_4_1_0 = (Keyword)cGroup_4_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_1_1 = (Keyword)cGroup_4_1.eContents().get(1);
		private final Assignment cHysteresisAssignment_4_1_2 = (Assignment)cGroup_4_1.eContents().get(2);
		private final RuleCall cHysteresisNUMBERTerminalRuleCall_4_1_2_0 = (RuleCall)cHysteresisAssignment_4_1_2.eContents().get(0);
		private final Group cGroup_4_2 = (Group)cUnorderedGroup_4.eContents().get(2);
		private final Keyword cRONKeyword_4_2_0 = (Keyword)cGroup_4_2.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_2_1 = (Keyword)cGroup_4_2.eContents().get(1);
		private final Assignment cOnResistanceAssignment_4_2_2 = (Assignment)cGroup_4_2.eContents().get(2);
		private final RuleCall cOnResistanceNUMBERTerminalRuleCall_4_2_2_0 = (RuleCall)cOnResistanceAssignment_4_2_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cUnorderedGroup_4.eContents().get(3);
		private final Keyword cROFFKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_3_1 = (Keyword)cGroup_4_3.eContents().get(1);
		private final Assignment cOffResistanceAssignment_4_3_2 = (Assignment)cGroup_4_3.eContents().get(2);
		private final RuleCall cOffResistanceNUMBERTerminalRuleCall_4_3_2_0 = (RuleCall)cOffResistanceAssignment_4_3_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//CurrentSwitchModel:
		//	'.MODEL' name=Label 'CSW' '(' ('IT' '=' threshold=NUMBER & 'IH' '=' hysteresis=NUMBER & 'RON' '=' onResistance=NUMBER
		//	& 'ROFF' '=' offResistance=NUMBER) ')';
		@Override public ParserRule getRule() { return rule; }
		
		//'.MODEL' name=Label 'CSW' '(' ('IT' '=' threshold=NUMBER & 'IH' '=' hysteresis=NUMBER & 'RON' '=' onResistance=NUMBER &
		//'ROFF' '=' offResistance=NUMBER) ')'
		public Group getGroup() { return cGroup; }
		
		//'.MODEL'
		public Keyword getMODELKeyword_0() { return cMODELKeyword_0; }
		
		//name=Label
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//Label
		public RuleCall getNameLabelParserRuleCall_1_0() { return cNameLabelParserRuleCall_1_0; }
		
		//'CSW'
		public Keyword getCSWKeyword_2() { return cCSWKeyword_2; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_3() { return cLeftParenthesisKeyword_3; }
		
		//'IT' '=' threshold=NUMBER & 'IH' '=' hysteresis=NUMBER & 'RON' '=' onResistance=NUMBER & 'ROFF' '=' offResistance=NUMBER
		public UnorderedGroup getUnorderedGroup_4() { return cUnorderedGroup_4; }
		
		//'IT' '=' threshold=NUMBER
		public Group getGroup_4_0() { return cGroup_4_0; }
		
		//'IT'
		public Keyword getITKeyword_4_0_0() { return cITKeyword_4_0_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_0_1() { return cEqualsSignKeyword_4_0_1; }
		
		//threshold=NUMBER
		public Assignment getThresholdAssignment_4_0_2() { return cThresholdAssignment_4_0_2; }
		
		//NUMBER
		public RuleCall getThresholdNUMBERTerminalRuleCall_4_0_2_0() { return cThresholdNUMBERTerminalRuleCall_4_0_2_0; }
		
		//'IH' '=' hysteresis=NUMBER
		public Group getGroup_4_1() { return cGroup_4_1; }
		
		//'IH'
		public Keyword getIHKeyword_4_1_0() { return cIHKeyword_4_1_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_1_1() { return cEqualsSignKeyword_4_1_1; }
		
		//hysteresis=NUMBER
		public Assignment getHysteresisAssignment_4_1_2() { return cHysteresisAssignment_4_1_2; }
		
		//NUMBER
		public RuleCall getHysteresisNUMBERTerminalRuleCall_4_1_2_0() { return cHysteresisNUMBERTerminalRuleCall_4_1_2_0; }
		
		//'RON' '=' onResistance=NUMBER
		public Group getGroup_4_2() { return cGroup_4_2; }
		
		//'RON'
		public Keyword getRONKeyword_4_2_0() { return cRONKeyword_4_2_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_2_1() { return cEqualsSignKeyword_4_2_1; }
		
		//onResistance=NUMBER
		public Assignment getOnResistanceAssignment_4_2_2() { return cOnResistanceAssignment_4_2_2; }
		
		//NUMBER
		public RuleCall getOnResistanceNUMBERTerminalRuleCall_4_2_2_0() { return cOnResistanceNUMBERTerminalRuleCall_4_2_2_0; }
		
		//'ROFF' '=' offResistance=NUMBER
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//'ROFF'
		public Keyword getROFFKeyword_4_3_0() { return cROFFKeyword_4_3_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_3_1() { return cEqualsSignKeyword_4_3_1; }
		
		//offResistance=NUMBER
		public Assignment getOffResistanceAssignment_4_3_2() { return cOffResistanceAssignment_4_3_2; }
		
		//NUMBER
		public RuleCall getOffResistanceNUMBERTerminalRuleCall_4_3_2_0() { return cOffResistanceNUMBERTerminalRuleCall_4_3_2_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }
	}
	public class DiodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.Diode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameDIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Assignment cNodesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNodesNODETerminalRuleCall_1_0 = (RuleCall)cNodesAssignment_1.eContents().get(0);
		private final Assignment cNodesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNodesNODETerminalRuleCall_2_0 = (RuleCall)cNodesAssignment_2.eContents().get(0);
		private final Assignment cModelAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cModelLabelParserRuleCall_3_0 = (RuleCall)cModelAssignment_3.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_4 = (UnorderedGroup)cGroup.eContents().get(4);
		private final Group cGroup_4_0 = (Group)cUnorderedGroup_4.eContents().get(0);
		private final Keyword cAREAKeyword_4_0_0 = (Keyword)cGroup_4_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_0_1 = (Keyword)cGroup_4_0.eContents().get(1);
		private final Assignment cAreaAssignment_4_0_2 = (Assignment)cGroup_4_0.eContents().get(2);
		private final RuleCall cAreaNUMBERTerminalRuleCall_4_0_2_0 = (RuleCall)cAreaAssignment_4_0_2.eContents().get(0);
		private final Assignment cOffAssignment_4_1 = (Assignment)cUnorderedGroup_4.eContents().get(1);
		private final Keyword cOffOFFKeyword_4_1_0 = (Keyword)cOffAssignment_4_1.eContents().get(0);
		private final Group cGroup_4_2 = (Group)cUnorderedGroup_4.eContents().get(2);
		private final Keyword cICKeyword_4_2_0 = (Keyword)cGroup_4_2.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_2_1 = (Keyword)cGroup_4_2.eContents().get(1);
		private final Assignment cIcAssignment_4_2_2 = (Assignment)cGroup_4_2.eContents().get(2);
		private final RuleCall cIcNUMBERTerminalRuleCall_4_2_2_0 = (RuleCall)cIcAssignment_4_2_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cUnorderedGroup_4.eContents().get(3);
		private final Keyword cTEMPKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_3_1 = (Keyword)cGroup_4_3.eContents().get(1);
		private final Assignment cTempAssignment_4_3_2 = (Assignment)cGroup_4_3.eContents().get(2);
		private final RuleCall cTempNUMBERTerminalRuleCall_4_3_2_0 = (RuleCall)cTempAssignment_4_3_2.eContents().get(0);
		
		//Diode:
		//	name=DID nodes+=NODE nodes+=NODE model=Label (('AREA' '=' area=NUMBER)? & off?='OFF'? & ('IC' '=' ic=NUMBER)? &
		//	('TEMP' '=' temp=NUMBER)?);
		@Override public ParserRule getRule() { return rule; }
		
		//name=DID nodes+=NODE nodes+=NODE model=Label (('AREA' '=' area=NUMBER)? & off?='OFF'? & ('IC' '=' ic=NUMBER)? & ('TEMP'
		//'=' temp=NUMBER)?)
		public Group getGroup() { return cGroup; }
		
		//name=DID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//DID
		public RuleCall getNameDIDTerminalRuleCall_0_0() { return cNameDIDTerminalRuleCall_0_0; }
		
		//nodes+=NODE
		public Assignment getNodesAssignment_1() { return cNodesAssignment_1; }
		
		//NODE
		public RuleCall getNodesNODETerminalRuleCall_1_0() { return cNodesNODETerminalRuleCall_1_0; }
		
		//nodes+=NODE
		public Assignment getNodesAssignment_2() { return cNodesAssignment_2; }
		
		//NODE
		public RuleCall getNodesNODETerminalRuleCall_2_0() { return cNodesNODETerminalRuleCall_2_0; }
		
		//model=Label
		public Assignment getModelAssignment_3() { return cModelAssignment_3; }
		
		//Label
		public RuleCall getModelLabelParserRuleCall_3_0() { return cModelLabelParserRuleCall_3_0; }
		
		//('AREA' '=' area=NUMBER)? & off?='OFF'? & ('IC' '=' ic=NUMBER)? & ('TEMP' '=' temp=NUMBER)?
		public UnorderedGroup getUnorderedGroup_4() { return cUnorderedGroup_4; }
		
		//('AREA' '=' area=NUMBER)?
		public Group getGroup_4_0() { return cGroup_4_0; }
		
		//'AREA'
		public Keyword getAREAKeyword_4_0_0() { return cAREAKeyword_4_0_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_0_1() { return cEqualsSignKeyword_4_0_1; }
		
		//area=NUMBER
		public Assignment getAreaAssignment_4_0_2() { return cAreaAssignment_4_0_2; }
		
		//NUMBER
		public RuleCall getAreaNUMBERTerminalRuleCall_4_0_2_0() { return cAreaNUMBERTerminalRuleCall_4_0_2_0; }
		
		//off?='OFF'?
		public Assignment getOffAssignment_4_1() { return cOffAssignment_4_1; }
		
		//'OFF'
		public Keyword getOffOFFKeyword_4_1_0() { return cOffOFFKeyword_4_1_0; }
		
		//('IC' '=' ic=NUMBER)?
		public Group getGroup_4_2() { return cGroup_4_2; }
		
		//'IC'
		public Keyword getICKeyword_4_2_0() { return cICKeyword_4_2_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_2_1() { return cEqualsSignKeyword_4_2_1; }
		
		//ic=NUMBER
		public Assignment getIcAssignment_4_2_2() { return cIcAssignment_4_2_2; }
		
		//NUMBER
		public RuleCall getIcNUMBERTerminalRuleCall_4_2_2_0() { return cIcNUMBERTerminalRuleCall_4_2_2_0; }
		
		//('TEMP' '=' temp=NUMBER)?
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//'TEMP'
		public Keyword getTEMPKeyword_4_3_0() { return cTEMPKeyword_4_3_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_3_1() { return cEqualsSignKeyword_4_3_1; }
		
		//temp=NUMBER
		public Assignment getTempAssignment_4_3_2() { return cTempAssignment_4_3_2; }
		
		//NUMBER
		public RuleCall getTempNUMBERTerminalRuleCall_4_3_2_0() { return cTempNUMBERTerminalRuleCall_4_3_2_0; }
	}
	public class DiodeModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.DiodeModel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMODELKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameLabelParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cDKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final UnorderedGroup cUnorderedGroup_4 = (UnorderedGroup)cGroup.eContents().get(4);
		private final Group cGroup_4_0 = (Group)cUnorderedGroup_4.eContents().get(0);
		private final Keyword cISKeyword_4_0_0 = (Keyword)cGroup_4_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_0_1 = (Keyword)cGroup_4_0.eContents().get(1);
		private final Assignment cSaturationCurrentAssignment_4_0_2 = (Assignment)cGroup_4_0.eContents().get(2);
		private final RuleCall cSaturationCurrentNUMBERTerminalRuleCall_4_0_2_0 = (RuleCall)cSaturationCurrentAssignment_4_0_2.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cUnorderedGroup_4.eContents().get(1);
		private final Keyword cRSKeyword_4_1_0 = (Keyword)cGroup_4_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_1_1 = (Keyword)cGroup_4_1.eContents().get(1);
		private final Assignment cResistanceAssignment_4_1_2 = (Assignment)cGroup_4_1.eContents().get(2);
		private final RuleCall cResistanceNUMBERTerminalRuleCall_4_1_2_0 = (RuleCall)cResistanceAssignment_4_1_2.eContents().get(0);
		private final Group cGroup_4_2 = (Group)cUnorderedGroup_4.eContents().get(2);
		private final Keyword cNKeyword_4_2_0 = (Keyword)cGroup_4_2.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_2_1 = (Keyword)cGroup_4_2.eContents().get(1);
		private final Assignment cEmissionCoefficientAssignment_4_2_2 = (Assignment)cGroup_4_2.eContents().get(2);
		private final RuleCall cEmissionCoefficientNUMBERTerminalRuleCall_4_2_2_0 = (RuleCall)cEmissionCoefficientAssignment_4_2_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cUnorderedGroup_4.eContents().get(3);
		private final Keyword cTTKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_3_1 = (Keyword)cGroup_4_3.eContents().get(1);
		private final Assignment cTransitTimeAssignment_4_3_2 = (Assignment)cGroup_4_3.eContents().get(2);
		private final RuleCall cTransitTimeNUMBERTerminalRuleCall_4_3_2_0 = (RuleCall)cTransitTimeAssignment_4_3_2.eContents().get(0);
		private final Group cGroup_4_4 = (Group)cUnorderedGroup_4.eContents().get(4);
		private final Keyword cCJOKeyword_4_4_0 = (Keyword)cGroup_4_4.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_4_1 = (Keyword)cGroup_4_4.eContents().get(1);
		private final Assignment cJunctionCapAssignment_4_4_2 = (Assignment)cGroup_4_4.eContents().get(2);
		private final RuleCall cJunctionCapNUMBERTerminalRuleCall_4_4_2_0 = (RuleCall)cJunctionCapAssignment_4_4_2.eContents().get(0);
		private final Group cGroup_4_5 = (Group)cUnorderedGroup_4.eContents().get(5);
		private final Keyword cVJKeyword_4_5_0 = (Keyword)cGroup_4_5.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_5_1 = (Keyword)cGroup_4_5.eContents().get(1);
		private final Assignment cJunctionPotentialAssignment_4_5_2 = (Assignment)cGroup_4_5.eContents().get(2);
		private final RuleCall cJunctionPotentialNUMBERTerminalRuleCall_4_5_2_0 = (RuleCall)cJunctionPotentialAssignment_4_5_2.eContents().get(0);
		private final Group cGroup_4_6 = (Group)cUnorderedGroup_4.eContents().get(6);
		private final Keyword cMKeyword_4_6_0 = (Keyword)cGroup_4_6.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_6_1 = (Keyword)cGroup_4_6.eContents().get(1);
		private final Assignment cGradingCoefficientAssignment_4_6_2 = (Assignment)cGroup_4_6.eContents().get(2);
		private final RuleCall cGradingCoefficientNUMBERTerminalRuleCall_4_6_2_0 = (RuleCall)cGradingCoefficientAssignment_4_6_2.eContents().get(0);
		private final Group cGroup_4_7 = (Group)cUnorderedGroup_4.eContents().get(7);
		private final Keyword cEGKeyword_4_7_0 = (Keyword)cGroup_4_7.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_7_1 = (Keyword)cGroup_4_7.eContents().get(1);
		private final Assignment cActivationEnergyAssignment_4_7_2 = (Assignment)cGroup_4_7.eContents().get(2);
		private final RuleCall cActivationEnergyNUMBERTerminalRuleCall_4_7_2_0 = (RuleCall)cActivationEnergyAssignment_4_7_2.eContents().get(0);
		private final Group cGroup_4_8 = (Group)cUnorderedGroup_4.eContents().get(8);
		private final Keyword cXTIKeyword_4_8_0 = (Keyword)cGroup_4_8.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_8_1 = (Keyword)cGroup_4_8.eContents().get(1);
		private final Assignment cSaturationCurrentExpAssignment_4_8_2 = (Assignment)cGroup_4_8.eContents().get(2);
		private final RuleCall cSaturationCurrentExpNUMBERTerminalRuleCall_4_8_2_0 = (RuleCall)cSaturationCurrentExpAssignment_4_8_2.eContents().get(0);
		private final Group cGroup_4_9 = (Group)cUnorderedGroup_4.eContents().get(9);
		private final Keyword cKFKeyword_4_9_0 = (Keyword)cGroup_4_9.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_9_1 = (Keyword)cGroup_4_9.eContents().get(1);
		private final Assignment cFlickerNoiseCoefficientAssignment_4_9_2 = (Assignment)cGroup_4_9.eContents().get(2);
		private final RuleCall cFlickerNoiseCoefficientNUMBERTerminalRuleCall_4_9_2_0 = (RuleCall)cFlickerNoiseCoefficientAssignment_4_9_2.eContents().get(0);
		private final Group cGroup_4_10 = (Group)cUnorderedGroup_4.eContents().get(10);
		private final Keyword cAFKeyword_4_10_0 = (Keyword)cGroup_4_10.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_10_1 = (Keyword)cGroup_4_10.eContents().get(1);
		private final Assignment cFlickerNoiseExponentAssignment_4_10_2 = (Assignment)cGroup_4_10.eContents().get(2);
		private final RuleCall cFlickerNoiseExponentNUMBERTerminalRuleCall_4_10_2_0 = (RuleCall)cFlickerNoiseExponentAssignment_4_10_2.eContents().get(0);
		private final Group cGroup_4_11 = (Group)cUnorderedGroup_4.eContents().get(11);
		private final Keyword cFCKeyword_4_11_0 = (Keyword)cGroup_4_11.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_11_1 = (Keyword)cGroup_4_11.eContents().get(1);
		private final Assignment cDepletionCapCoefficientAssignment_4_11_2 = (Assignment)cGroup_4_11.eContents().get(2);
		private final RuleCall cDepletionCapCoefficientNUMBERTerminalRuleCall_4_11_2_0 = (RuleCall)cDepletionCapCoefficientAssignment_4_11_2.eContents().get(0);
		private final Group cGroup_4_12 = (Group)cUnorderedGroup_4.eContents().get(12);
		private final Keyword cBVKeyword_4_12_0 = (Keyword)cGroup_4_12.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_12_1 = (Keyword)cGroup_4_12.eContents().get(1);
		private final Assignment cBreakdownVoltageAssignment_4_12_2 = (Assignment)cGroup_4_12.eContents().get(2);
		private final RuleCall cBreakdownVoltageNUMBERTerminalRuleCall_4_12_2_0 = (RuleCall)cBreakdownVoltageAssignment_4_12_2.eContents().get(0);
		private final Group cGroup_4_13 = (Group)cUnorderedGroup_4.eContents().get(13);
		private final Keyword cIBVKeyword_4_13_0 = (Keyword)cGroup_4_13.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_13_1 = (Keyword)cGroup_4_13.eContents().get(1);
		private final Assignment cBreakdownCurrentAssignment_4_13_2 = (Assignment)cGroup_4_13.eContents().get(2);
		private final RuleCall cBreakdownCurrentNUMBERTerminalRuleCall_4_13_2_0 = (RuleCall)cBreakdownCurrentAssignment_4_13_2.eContents().get(0);
		private final Group cGroup_4_14 = (Group)cUnorderedGroup_4.eContents().get(14);
		private final Keyword cTNOMKeyword_4_14_0 = (Keyword)cGroup_4_14.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_14_1 = (Keyword)cGroup_4_14.eContents().get(1);
		private final Assignment cNominalTemperatureAssignment_4_14_2 = (Assignment)cGroup_4_14.eContents().get(2);
		private final RuleCall cNominalTemperatureNUMBERTerminalRuleCall_4_14_2_0 = (RuleCall)cNominalTemperatureAssignment_4_14_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//DiodeModel:
		//	'.MODEL' name=Label 'D' '(' (('IS' '=' saturationCurrent=NUMBER)? & ('RS' '=' resistance=NUMBER)? & ('N' '='
		//	emissionCoefficient=NUMBER)? & ('TT' '=' transitTime=NUMBER)? & ('CJO' '=' junctionCap=NUMBER)? & ('VJ' '='
		//	junctionPotential=NUMBER)? & ('M' '=' gradingCoefficient=NUMBER)? & ('EG' '=' activationEnergy=NUMBER)? & ('XTI' '='
		//	saturationCurrentExp=NUMBER)? & ('KF' '=' flickerNoiseCoefficient=NUMBER)? & ('AF' '=' flickerNoiseExponent=NUMBER)? &
		//	('FC' '=' depletionCapCoefficient=NUMBER)? & ('BV' '=' breakdownVoltage=NUMBER)? & ('IBV' '='
		//	breakdownCurrent=NUMBER)? & ('TNOM' '=' nominalTemperature=NUMBER)?) ')';
		@Override public ParserRule getRule() { return rule; }
		
		//'.MODEL' name=Label 'D' '(' (('IS' '=' saturationCurrent=NUMBER)? & ('RS' '=' resistance=NUMBER)? & ('N' '='
		//emissionCoefficient=NUMBER)? & ('TT' '=' transitTime=NUMBER)? & ('CJO' '=' junctionCap=NUMBER)? & ('VJ' '='
		//junctionPotential=NUMBER)? & ('M' '=' gradingCoefficient=NUMBER)? & ('EG' '=' activationEnergy=NUMBER)? & ('XTI' '='
		//saturationCurrentExp=NUMBER)? & ('KF' '=' flickerNoiseCoefficient=NUMBER)? & ('AF' '=' flickerNoiseExponent=NUMBER)? &
		//('FC' '=' depletionCapCoefficient=NUMBER)? & ('BV' '=' breakdownVoltage=NUMBER)? & ('IBV' '=' breakdownCurrent=NUMBER)?
		//& ('TNOM' '=' nominalTemperature=NUMBER)?) ')'
		public Group getGroup() { return cGroup; }
		
		//'.MODEL'
		public Keyword getMODELKeyword_0() { return cMODELKeyword_0; }
		
		//name=Label
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//Label
		public RuleCall getNameLabelParserRuleCall_1_0() { return cNameLabelParserRuleCall_1_0; }
		
		//'D'
		public Keyword getDKeyword_2() { return cDKeyword_2; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_3() { return cLeftParenthesisKeyword_3; }
		
		//('IS' '=' saturationCurrent=NUMBER)? & ('RS' '=' resistance=NUMBER)? & ('N' '=' emissionCoefficient=NUMBER)? & ('TT' '='
		//transitTime=NUMBER)? & ('CJO' '=' junctionCap=NUMBER)? & ('VJ' '=' junctionPotential=NUMBER)? & ('M' '='
		//gradingCoefficient=NUMBER)? & ('EG' '=' activationEnergy=NUMBER)? & ('XTI' '=' saturationCurrentExp=NUMBER)? & ('KF'
		//'=' flickerNoiseCoefficient=NUMBER)? & ('AF' '=' flickerNoiseExponent=NUMBER)? & ('FC' '='
		//depletionCapCoefficient=NUMBER)? & ('BV' '=' breakdownVoltage=NUMBER)? & ('IBV' '=' breakdownCurrent=NUMBER)? & ('TNOM'
		//'=' nominalTemperature=NUMBER)?
		public UnorderedGroup getUnorderedGroup_4() { return cUnorderedGroup_4; }
		
		//('IS' '=' saturationCurrent=NUMBER)?
		public Group getGroup_4_0() { return cGroup_4_0; }
		
		//'IS'
		public Keyword getISKeyword_4_0_0() { return cISKeyword_4_0_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_0_1() { return cEqualsSignKeyword_4_0_1; }
		
		//saturationCurrent=NUMBER
		public Assignment getSaturationCurrentAssignment_4_0_2() { return cSaturationCurrentAssignment_4_0_2; }
		
		//NUMBER
		public RuleCall getSaturationCurrentNUMBERTerminalRuleCall_4_0_2_0() { return cSaturationCurrentNUMBERTerminalRuleCall_4_0_2_0; }
		
		//('RS' '=' resistance=NUMBER)?
		public Group getGroup_4_1() { return cGroup_4_1; }
		
		//'RS'
		public Keyword getRSKeyword_4_1_0() { return cRSKeyword_4_1_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_1_1() { return cEqualsSignKeyword_4_1_1; }
		
		//resistance=NUMBER
		public Assignment getResistanceAssignment_4_1_2() { return cResistanceAssignment_4_1_2; }
		
		//NUMBER
		public RuleCall getResistanceNUMBERTerminalRuleCall_4_1_2_0() { return cResistanceNUMBERTerminalRuleCall_4_1_2_0; }
		
		//('N' '=' emissionCoefficient=NUMBER)?
		public Group getGroup_4_2() { return cGroup_4_2; }
		
		//'N'
		public Keyword getNKeyword_4_2_0() { return cNKeyword_4_2_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_2_1() { return cEqualsSignKeyword_4_2_1; }
		
		//emissionCoefficient=NUMBER
		public Assignment getEmissionCoefficientAssignment_4_2_2() { return cEmissionCoefficientAssignment_4_2_2; }
		
		//NUMBER
		public RuleCall getEmissionCoefficientNUMBERTerminalRuleCall_4_2_2_0() { return cEmissionCoefficientNUMBERTerminalRuleCall_4_2_2_0; }
		
		//('TT' '=' transitTime=NUMBER)?
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//'TT'
		public Keyword getTTKeyword_4_3_0() { return cTTKeyword_4_3_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_3_1() { return cEqualsSignKeyword_4_3_1; }
		
		//transitTime=NUMBER
		public Assignment getTransitTimeAssignment_4_3_2() { return cTransitTimeAssignment_4_3_2; }
		
		//NUMBER
		public RuleCall getTransitTimeNUMBERTerminalRuleCall_4_3_2_0() { return cTransitTimeNUMBERTerminalRuleCall_4_3_2_0; }
		
		//('CJO' '=' junctionCap=NUMBER)?
		public Group getGroup_4_4() { return cGroup_4_4; }
		
		//'CJO'
		public Keyword getCJOKeyword_4_4_0() { return cCJOKeyword_4_4_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_4_1() { return cEqualsSignKeyword_4_4_1; }
		
		//junctionCap=NUMBER
		public Assignment getJunctionCapAssignment_4_4_2() { return cJunctionCapAssignment_4_4_2; }
		
		//NUMBER
		public RuleCall getJunctionCapNUMBERTerminalRuleCall_4_4_2_0() { return cJunctionCapNUMBERTerminalRuleCall_4_4_2_0; }
		
		//('VJ' '=' junctionPotential=NUMBER)?
		public Group getGroup_4_5() { return cGroup_4_5; }
		
		//'VJ'
		public Keyword getVJKeyword_4_5_0() { return cVJKeyword_4_5_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_5_1() { return cEqualsSignKeyword_4_5_1; }
		
		//junctionPotential=NUMBER
		public Assignment getJunctionPotentialAssignment_4_5_2() { return cJunctionPotentialAssignment_4_5_2; }
		
		//NUMBER
		public RuleCall getJunctionPotentialNUMBERTerminalRuleCall_4_5_2_0() { return cJunctionPotentialNUMBERTerminalRuleCall_4_5_2_0; }
		
		//('M' '=' gradingCoefficient=NUMBER)?
		public Group getGroup_4_6() { return cGroup_4_6; }
		
		//'M'
		public Keyword getMKeyword_4_6_0() { return cMKeyword_4_6_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_6_1() { return cEqualsSignKeyword_4_6_1; }
		
		//gradingCoefficient=NUMBER
		public Assignment getGradingCoefficientAssignment_4_6_2() { return cGradingCoefficientAssignment_4_6_2; }
		
		//NUMBER
		public RuleCall getGradingCoefficientNUMBERTerminalRuleCall_4_6_2_0() { return cGradingCoefficientNUMBERTerminalRuleCall_4_6_2_0; }
		
		//('EG' '=' activationEnergy=NUMBER)?
		public Group getGroup_4_7() { return cGroup_4_7; }
		
		//'EG'
		public Keyword getEGKeyword_4_7_0() { return cEGKeyword_4_7_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_7_1() { return cEqualsSignKeyword_4_7_1; }
		
		//activationEnergy=NUMBER
		public Assignment getActivationEnergyAssignment_4_7_2() { return cActivationEnergyAssignment_4_7_2; }
		
		//NUMBER
		public RuleCall getActivationEnergyNUMBERTerminalRuleCall_4_7_2_0() { return cActivationEnergyNUMBERTerminalRuleCall_4_7_2_0; }
		
		//('XTI' '=' saturationCurrentExp=NUMBER)?
		public Group getGroup_4_8() { return cGroup_4_8; }
		
		//'XTI'
		public Keyword getXTIKeyword_4_8_0() { return cXTIKeyword_4_8_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_8_1() { return cEqualsSignKeyword_4_8_1; }
		
		//saturationCurrentExp=NUMBER
		public Assignment getSaturationCurrentExpAssignment_4_8_2() { return cSaturationCurrentExpAssignment_4_8_2; }
		
		//NUMBER
		public RuleCall getSaturationCurrentExpNUMBERTerminalRuleCall_4_8_2_0() { return cSaturationCurrentExpNUMBERTerminalRuleCall_4_8_2_0; }
		
		//('KF' '=' flickerNoiseCoefficient=NUMBER)?
		public Group getGroup_4_9() { return cGroup_4_9; }
		
		//'KF'
		public Keyword getKFKeyword_4_9_0() { return cKFKeyword_4_9_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_9_1() { return cEqualsSignKeyword_4_9_1; }
		
		//flickerNoiseCoefficient=NUMBER
		public Assignment getFlickerNoiseCoefficientAssignment_4_9_2() { return cFlickerNoiseCoefficientAssignment_4_9_2; }
		
		//NUMBER
		public RuleCall getFlickerNoiseCoefficientNUMBERTerminalRuleCall_4_9_2_0() { return cFlickerNoiseCoefficientNUMBERTerminalRuleCall_4_9_2_0; }
		
		//('AF' '=' flickerNoiseExponent=NUMBER)?
		public Group getGroup_4_10() { return cGroup_4_10; }
		
		//'AF'
		public Keyword getAFKeyword_4_10_0() { return cAFKeyword_4_10_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_10_1() { return cEqualsSignKeyword_4_10_1; }
		
		//flickerNoiseExponent=NUMBER
		public Assignment getFlickerNoiseExponentAssignment_4_10_2() { return cFlickerNoiseExponentAssignment_4_10_2; }
		
		//NUMBER
		public RuleCall getFlickerNoiseExponentNUMBERTerminalRuleCall_4_10_2_0() { return cFlickerNoiseExponentNUMBERTerminalRuleCall_4_10_2_0; }
		
		//('FC' '=' depletionCapCoefficient=NUMBER)?
		public Group getGroup_4_11() { return cGroup_4_11; }
		
		//'FC'
		public Keyword getFCKeyword_4_11_0() { return cFCKeyword_4_11_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_11_1() { return cEqualsSignKeyword_4_11_1; }
		
		//depletionCapCoefficient=NUMBER
		public Assignment getDepletionCapCoefficientAssignment_4_11_2() { return cDepletionCapCoefficientAssignment_4_11_2; }
		
		//NUMBER
		public RuleCall getDepletionCapCoefficientNUMBERTerminalRuleCall_4_11_2_0() { return cDepletionCapCoefficientNUMBERTerminalRuleCall_4_11_2_0; }
		
		//('BV' '=' breakdownVoltage=NUMBER)?
		public Group getGroup_4_12() { return cGroup_4_12; }
		
		//'BV'
		public Keyword getBVKeyword_4_12_0() { return cBVKeyword_4_12_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_12_1() { return cEqualsSignKeyword_4_12_1; }
		
		//breakdownVoltage=NUMBER
		public Assignment getBreakdownVoltageAssignment_4_12_2() { return cBreakdownVoltageAssignment_4_12_2; }
		
		//NUMBER
		public RuleCall getBreakdownVoltageNUMBERTerminalRuleCall_4_12_2_0() { return cBreakdownVoltageNUMBERTerminalRuleCall_4_12_2_0; }
		
		//('IBV' '=' breakdownCurrent=NUMBER)?
		public Group getGroup_4_13() { return cGroup_4_13; }
		
		//'IBV'
		public Keyword getIBVKeyword_4_13_0() { return cIBVKeyword_4_13_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_13_1() { return cEqualsSignKeyword_4_13_1; }
		
		//breakdownCurrent=NUMBER
		public Assignment getBreakdownCurrentAssignment_4_13_2() { return cBreakdownCurrentAssignment_4_13_2; }
		
		//NUMBER
		public RuleCall getBreakdownCurrentNUMBERTerminalRuleCall_4_13_2_0() { return cBreakdownCurrentNUMBERTerminalRuleCall_4_13_2_0; }
		
		//('TNOM' '=' nominalTemperature=NUMBER)?
		public Group getGroup_4_14() { return cGroup_4_14; }
		
		//'TNOM'
		public Keyword getTNOMKeyword_4_14_0() { return cTNOMKeyword_4_14_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_14_1() { return cEqualsSignKeyword_4_14_1; }
		
		//nominalTemperature=NUMBER
		public Assignment getNominalTemperatureAssignment_4_14_2() { return cNominalTemperatureAssignment_4_14_2; }
		
		//NUMBER
		public RuleCall getNominalTemperatureNUMBERTerminalRuleCall_4_14_2_0() { return cNominalTemperatureNUMBERTerminalRuleCall_4_14_2_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }
	}
	public class MOSFETElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.MOSFET");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Alternatives cNameAlternatives_0_0 = (Alternatives)cNameAssignment_0.eContents().get(0);
		private final RuleCall cNameMNIDTerminalRuleCall_0_0_0 = (RuleCall)cNameAlternatives_0_0.eContents().get(0);
		private final RuleCall cNameMPIDTerminalRuleCall_0_0_1 = (RuleCall)cNameAlternatives_0_0.eContents().get(1);
		private final Assignment cNodesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNodesNODETerminalRuleCall_1_0 = (RuleCall)cNodesAssignment_1.eContents().get(0);
		private final Assignment cNodesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNodesNODETerminalRuleCall_2_0 = (RuleCall)cNodesAssignment_2.eContents().get(0);
		private final Assignment cNodesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNodesNODETerminalRuleCall_3_0 = (RuleCall)cNodesAssignment_3.eContents().get(0);
		private final Assignment cNodesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNodesNODETerminalRuleCall_4_0 = (RuleCall)cNodesAssignment_4.eContents().get(0);
		private final Assignment cModelAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cModelLabelParserRuleCall_5_0 = (RuleCall)cModelAssignment_5.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_6 = (UnorderedGroup)cGroup.eContents().get(6);
		private final Group cGroup_6_0 = (Group)cUnorderedGroup_6.eContents().get(0);
		private final Keyword cLKeyword_6_0_0 = (Keyword)cGroup_6_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_6_0_1 = (Keyword)cGroup_6_0.eContents().get(1);
		private final Assignment cLengthAssignment_6_0_2 = (Assignment)cGroup_6_0.eContents().get(2);
		private final RuleCall cLengthNUMBERTerminalRuleCall_6_0_2_0 = (RuleCall)cLengthAssignment_6_0_2.eContents().get(0);
		private final Group cGroup_6_1 = (Group)cUnorderedGroup_6.eContents().get(1);
		private final Keyword cWKeyword_6_1_0 = (Keyword)cGroup_6_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_6_1_1 = (Keyword)cGroup_6_1.eContents().get(1);
		private final Assignment cWidthAssignment_6_1_2 = (Assignment)cGroup_6_1.eContents().get(2);
		private final RuleCall cWidthNUMBERTerminalRuleCall_6_1_2_0 = (RuleCall)cWidthAssignment_6_1_2.eContents().get(0);
		private final Group cGroup_6_2 = (Group)cUnorderedGroup_6.eContents().get(2);
		private final Keyword cADKeyword_6_2_0 = (Keyword)cGroup_6_2.eContents().get(0);
		private final Keyword cEqualsSignKeyword_6_2_1 = (Keyword)cGroup_6_2.eContents().get(1);
		private final Assignment cDrainAreaAssignment_6_2_2 = (Assignment)cGroup_6_2.eContents().get(2);
		private final RuleCall cDrainAreaNUMBERTerminalRuleCall_6_2_2_0 = (RuleCall)cDrainAreaAssignment_6_2_2.eContents().get(0);
		private final Group cGroup_6_3 = (Group)cUnorderedGroup_6.eContents().get(3);
		private final Keyword cASKeyword_6_3_0 = (Keyword)cGroup_6_3.eContents().get(0);
		private final Keyword cEqualsSignKeyword_6_3_1 = (Keyword)cGroup_6_3.eContents().get(1);
		private final Assignment cSourceAreaAssignment_6_3_2 = (Assignment)cGroup_6_3.eContents().get(2);
		private final RuleCall cSourceAreaNUMBERTerminalRuleCall_6_3_2_0 = (RuleCall)cSourceAreaAssignment_6_3_2.eContents().get(0);
		private final Group cGroup_6_4 = (Group)cUnorderedGroup_6.eContents().get(4);
		private final Keyword cPDKeyword_6_4_0 = (Keyword)cGroup_6_4.eContents().get(0);
		private final Keyword cEqualsSignKeyword_6_4_1 = (Keyword)cGroup_6_4.eContents().get(1);
		private final Assignment cDrainPerimeterAssignment_6_4_2 = (Assignment)cGroup_6_4.eContents().get(2);
		private final RuleCall cDrainPerimeterNUMBERTerminalRuleCall_6_4_2_0 = (RuleCall)cDrainPerimeterAssignment_6_4_2.eContents().get(0);
		private final Group cGroup_6_5 = (Group)cUnorderedGroup_6.eContents().get(5);
		private final Keyword cPSKeyword_6_5_0 = (Keyword)cGroup_6_5.eContents().get(0);
		private final Keyword cEqualsSignKeyword_6_5_1 = (Keyword)cGroup_6_5.eContents().get(1);
		private final Assignment cSourcePerimeterAssignment_6_5_2 = (Assignment)cGroup_6_5.eContents().get(2);
		private final RuleCall cSourcePerimeterNUMBERTerminalRuleCall_6_5_2_0 = (RuleCall)cSourcePerimeterAssignment_6_5_2.eContents().get(0);
		private final Group cGroup_6_6 = (Group)cUnorderedGroup_6.eContents().get(6);
		private final Keyword cNRDKeyword_6_6_0 = (Keyword)cGroup_6_6.eContents().get(0);
		private final Keyword cEqualsSignKeyword_6_6_1 = (Keyword)cGroup_6_6.eContents().get(1);
		private final Assignment cDrainSquaresAssignment_6_6_2 = (Assignment)cGroup_6_6.eContents().get(2);
		private final RuleCall cDrainSquaresNUMBERTerminalRuleCall_6_6_2_0 = (RuleCall)cDrainSquaresAssignment_6_6_2.eContents().get(0);
		private final Group cGroup_6_7 = (Group)cUnorderedGroup_6.eContents().get(7);
		private final Keyword cNRSKeyword_6_7_0 = (Keyword)cGroup_6_7.eContents().get(0);
		private final Keyword cEqualsSignKeyword_6_7_1 = (Keyword)cGroup_6_7.eContents().get(1);
		private final Assignment cSourceSquaresAssignment_6_7_2 = (Assignment)cGroup_6_7.eContents().get(2);
		private final RuleCall cSourceSquaresNUMBERTerminalRuleCall_6_7_2_0 = (RuleCall)cSourceSquaresAssignment_6_7_2.eContents().get(0);
		private final Assignment cOffAssignment_6_8 = (Assignment)cUnorderedGroup_6.eContents().get(8);
		private final Keyword cOffOFFKeyword_6_8_0 = (Keyword)cOffAssignment_6_8.eContents().get(0);
		private final Group cGroup_6_9 = (Group)cUnorderedGroup_6.eContents().get(9);
		private final Keyword cICKeyword_6_9_0 = (Keyword)cGroup_6_9.eContents().get(0);
		private final Keyword cEqualsSignKeyword_6_9_1 = (Keyword)cGroup_6_9.eContents().get(1);
		private final Assignment cIcAssignment_6_9_2 = (Assignment)cGroup_6_9.eContents().get(2);
		private final RuleCall cIcNUMBERTerminalRuleCall_6_9_2_0 = (RuleCall)cIcAssignment_6_9_2.eContents().get(0);
		private final Keyword cCommaKeyword_6_9_3 = (Keyword)cGroup_6_9.eContents().get(3);
		private final Assignment cIcAssignment_6_9_4 = (Assignment)cGroup_6_9.eContents().get(4);
		private final RuleCall cIcNUMBERTerminalRuleCall_6_9_4_0 = (RuleCall)cIcAssignment_6_9_4.eContents().get(0);
		private final Keyword cCommaKeyword_6_9_5 = (Keyword)cGroup_6_9.eContents().get(5);
		private final Assignment cIcAssignment_6_9_6 = (Assignment)cGroup_6_9.eContents().get(6);
		private final RuleCall cIcNUMBERTerminalRuleCall_6_9_6_0 = (RuleCall)cIcAssignment_6_9_6.eContents().get(0);
		private final Group cGroup_6_10 = (Group)cUnorderedGroup_6.eContents().get(10);
		private final Keyword cTEMPKeyword_6_10_0 = (Keyword)cGroup_6_10.eContents().get(0);
		private final Keyword cEqualsSignKeyword_6_10_1 = (Keyword)cGroup_6_10.eContents().get(1);
		private final Assignment cTempAssignment_6_10_2 = (Assignment)cGroup_6_10.eContents().get(2);
		private final RuleCall cTempNUMBERTerminalRuleCall_6_10_2_0 = (RuleCall)cTempAssignment_6_10_2.eContents().get(0);
		
		//MOSFET:
		//	name=(MNID | MPID) nodes+=NODE nodes+=NODE nodes+=NODE nodes+=NODE model=Label (('L' '=' length=NUMBER)? & ('W' '='
		//	width=NUMBER)? & ('AD' '=' drainArea=NUMBER)?
		//	& ('AS' '=' sourceArea=NUMBER)? & ('PD' '=' drainPerimeter=NUMBER)? & ('PS' '=' sourcePerimeter=NUMBER)? & ('NRD' '='
		//	drainSquares=NUMBER)? & ('NRS' '=' sourceSquares=NUMBER)? & off?='OFF'?
		//	& ('IC' '=' ic+=NUMBER ',' ic+=NUMBER ',' ic+=NUMBER)? & ('TEMP' '=' temp=NUMBER)?);
		@Override public ParserRule getRule() { return rule; }
		
		//name=(MNID | MPID) nodes+=NODE nodes+=NODE nodes+=NODE nodes+=NODE model=Label (('L' '=' length=NUMBER)? & ('W' '='
		//width=NUMBER)? & ('AD' '=' drainArea=NUMBER)? & ('AS' '=' sourceArea=NUMBER)? & ('PD' '=' drainPerimeter=NUMBER)? &
		//('PS' '=' sourcePerimeter=NUMBER)? & ('NRD' '=' drainSquares=NUMBER)? & ('NRS' '=' sourceSquares=NUMBER)? & off?='OFF'?
		//& ('IC' '=' ic+=NUMBER ',' ic+=NUMBER ',' ic+=NUMBER)? & ('TEMP' '=' temp=NUMBER)?)
		public Group getGroup() { return cGroup; }
		
		//name=(MNID | MPID)
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//(MNID | MPID)
		public Alternatives getNameAlternatives_0_0() { return cNameAlternatives_0_0; }
		
		//MNID
		public RuleCall getNameMNIDTerminalRuleCall_0_0_0() { return cNameMNIDTerminalRuleCall_0_0_0; }
		
		//MPID
		public RuleCall getNameMPIDTerminalRuleCall_0_0_1() { return cNameMPIDTerminalRuleCall_0_0_1; }
		
		//nodes+=NODE
		public Assignment getNodesAssignment_1() { return cNodesAssignment_1; }
		
		//NODE
		public RuleCall getNodesNODETerminalRuleCall_1_0() { return cNodesNODETerminalRuleCall_1_0; }
		
		//nodes+=NODE
		public Assignment getNodesAssignment_2() { return cNodesAssignment_2; }
		
		//NODE
		public RuleCall getNodesNODETerminalRuleCall_2_0() { return cNodesNODETerminalRuleCall_2_0; }
		
		//nodes+=NODE
		public Assignment getNodesAssignment_3() { return cNodesAssignment_3; }
		
		//NODE
		public RuleCall getNodesNODETerminalRuleCall_3_0() { return cNodesNODETerminalRuleCall_3_0; }
		
		//nodes+=NODE
		public Assignment getNodesAssignment_4() { return cNodesAssignment_4; }
		
		//NODE
		public RuleCall getNodesNODETerminalRuleCall_4_0() { return cNodesNODETerminalRuleCall_4_0; }
		
		//model=Label
		public Assignment getModelAssignment_5() { return cModelAssignment_5; }
		
		//Label
		public RuleCall getModelLabelParserRuleCall_5_0() { return cModelLabelParserRuleCall_5_0; }
		
		//('L' '=' length=NUMBER)? & ('W' '=' width=NUMBER)? & ('AD' '=' drainArea=NUMBER)? & ('AS' '=' sourceArea=NUMBER)? &
		//('PD' '=' drainPerimeter=NUMBER)? & ('PS' '=' sourcePerimeter=NUMBER)? & ('NRD' '=' drainSquares=NUMBER)? & ('NRS' '='
		//sourceSquares=NUMBER)? & off?='OFF'? & ('IC' '=' ic+=NUMBER ',' ic+=NUMBER ',' ic+=NUMBER)? & ('TEMP' '=' temp=NUMBER)?
		public UnorderedGroup getUnorderedGroup_6() { return cUnorderedGroup_6; }
		
		//('L' '=' length=NUMBER)?
		public Group getGroup_6_0() { return cGroup_6_0; }
		
		//'L'
		public Keyword getLKeyword_6_0_0() { return cLKeyword_6_0_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_6_0_1() { return cEqualsSignKeyword_6_0_1; }
		
		//length=NUMBER
		public Assignment getLengthAssignment_6_0_2() { return cLengthAssignment_6_0_2; }
		
		//NUMBER
		public RuleCall getLengthNUMBERTerminalRuleCall_6_0_2_0() { return cLengthNUMBERTerminalRuleCall_6_0_2_0; }
		
		//('W' '=' width=NUMBER)?
		public Group getGroup_6_1() { return cGroup_6_1; }
		
		//'W'
		public Keyword getWKeyword_6_1_0() { return cWKeyword_6_1_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_6_1_1() { return cEqualsSignKeyword_6_1_1; }
		
		//width=NUMBER
		public Assignment getWidthAssignment_6_1_2() { return cWidthAssignment_6_1_2; }
		
		//NUMBER
		public RuleCall getWidthNUMBERTerminalRuleCall_6_1_2_0() { return cWidthNUMBERTerminalRuleCall_6_1_2_0; }
		
		//('AD' '=' drainArea=NUMBER)?
		public Group getGroup_6_2() { return cGroup_6_2; }
		
		//'AD'
		public Keyword getADKeyword_6_2_0() { return cADKeyword_6_2_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_6_2_1() { return cEqualsSignKeyword_6_2_1; }
		
		//drainArea=NUMBER
		public Assignment getDrainAreaAssignment_6_2_2() { return cDrainAreaAssignment_6_2_2; }
		
		//NUMBER
		public RuleCall getDrainAreaNUMBERTerminalRuleCall_6_2_2_0() { return cDrainAreaNUMBERTerminalRuleCall_6_2_2_0; }
		
		//('AS' '=' sourceArea=NUMBER)?
		public Group getGroup_6_3() { return cGroup_6_3; }
		
		//'AS'
		public Keyword getASKeyword_6_3_0() { return cASKeyword_6_3_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_6_3_1() { return cEqualsSignKeyword_6_3_1; }
		
		//sourceArea=NUMBER
		public Assignment getSourceAreaAssignment_6_3_2() { return cSourceAreaAssignment_6_3_2; }
		
		//NUMBER
		public RuleCall getSourceAreaNUMBERTerminalRuleCall_6_3_2_0() { return cSourceAreaNUMBERTerminalRuleCall_6_3_2_0; }
		
		//('PD' '=' drainPerimeter=NUMBER)?
		public Group getGroup_6_4() { return cGroup_6_4; }
		
		//'PD'
		public Keyword getPDKeyword_6_4_0() { return cPDKeyword_6_4_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_6_4_1() { return cEqualsSignKeyword_6_4_1; }
		
		//drainPerimeter=NUMBER
		public Assignment getDrainPerimeterAssignment_6_4_2() { return cDrainPerimeterAssignment_6_4_2; }
		
		//NUMBER
		public RuleCall getDrainPerimeterNUMBERTerminalRuleCall_6_4_2_0() { return cDrainPerimeterNUMBERTerminalRuleCall_6_4_2_0; }
		
		//('PS' '=' sourcePerimeter=NUMBER)?
		public Group getGroup_6_5() { return cGroup_6_5; }
		
		//'PS'
		public Keyword getPSKeyword_6_5_0() { return cPSKeyword_6_5_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_6_5_1() { return cEqualsSignKeyword_6_5_1; }
		
		//sourcePerimeter=NUMBER
		public Assignment getSourcePerimeterAssignment_6_5_2() { return cSourcePerimeterAssignment_6_5_2; }
		
		//NUMBER
		public RuleCall getSourcePerimeterNUMBERTerminalRuleCall_6_5_2_0() { return cSourcePerimeterNUMBERTerminalRuleCall_6_5_2_0; }
		
		//('NRD' '=' drainSquares=NUMBER)?
		public Group getGroup_6_6() { return cGroup_6_6; }
		
		//'NRD'
		public Keyword getNRDKeyword_6_6_0() { return cNRDKeyword_6_6_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_6_6_1() { return cEqualsSignKeyword_6_6_1; }
		
		//drainSquares=NUMBER
		public Assignment getDrainSquaresAssignment_6_6_2() { return cDrainSquaresAssignment_6_6_2; }
		
		//NUMBER
		public RuleCall getDrainSquaresNUMBERTerminalRuleCall_6_6_2_0() { return cDrainSquaresNUMBERTerminalRuleCall_6_6_2_0; }
		
		//('NRS' '=' sourceSquares=NUMBER)?
		public Group getGroup_6_7() { return cGroup_6_7; }
		
		//'NRS'
		public Keyword getNRSKeyword_6_7_0() { return cNRSKeyword_6_7_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_6_7_1() { return cEqualsSignKeyword_6_7_1; }
		
		//sourceSquares=NUMBER
		public Assignment getSourceSquaresAssignment_6_7_2() { return cSourceSquaresAssignment_6_7_2; }
		
		//NUMBER
		public RuleCall getSourceSquaresNUMBERTerminalRuleCall_6_7_2_0() { return cSourceSquaresNUMBERTerminalRuleCall_6_7_2_0; }
		
		//off?='OFF'?
		public Assignment getOffAssignment_6_8() { return cOffAssignment_6_8; }
		
		//'OFF'
		public Keyword getOffOFFKeyword_6_8_0() { return cOffOFFKeyword_6_8_0; }
		
		//('IC' '=' ic+=NUMBER ',' ic+=NUMBER ',' ic+=NUMBER)?
		public Group getGroup_6_9() { return cGroup_6_9; }
		
		//'IC'
		public Keyword getICKeyword_6_9_0() { return cICKeyword_6_9_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_6_9_1() { return cEqualsSignKeyword_6_9_1; }
		
		//ic+=NUMBER
		public Assignment getIcAssignment_6_9_2() { return cIcAssignment_6_9_2; }
		
		//NUMBER
		public RuleCall getIcNUMBERTerminalRuleCall_6_9_2_0() { return cIcNUMBERTerminalRuleCall_6_9_2_0; }
		
		//','
		public Keyword getCommaKeyword_6_9_3() { return cCommaKeyword_6_9_3; }
		
		//ic+=NUMBER
		public Assignment getIcAssignment_6_9_4() { return cIcAssignment_6_9_4; }
		
		//NUMBER
		public RuleCall getIcNUMBERTerminalRuleCall_6_9_4_0() { return cIcNUMBERTerminalRuleCall_6_9_4_0; }
		
		//','
		public Keyword getCommaKeyword_6_9_5() { return cCommaKeyword_6_9_5; }
		
		//ic+=NUMBER
		public Assignment getIcAssignment_6_9_6() { return cIcAssignment_6_9_6; }
		
		//NUMBER
		public RuleCall getIcNUMBERTerminalRuleCall_6_9_6_0() { return cIcNUMBERTerminalRuleCall_6_9_6_0; }
		
		//('TEMP' '=' temp=NUMBER)?
		public Group getGroup_6_10() { return cGroup_6_10; }
		
		//'TEMP'
		public Keyword getTEMPKeyword_6_10_0() { return cTEMPKeyword_6_10_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_6_10_1() { return cEqualsSignKeyword_6_10_1; }
		
		//temp=NUMBER
		public Assignment getTempAssignment_6_10_2() { return cTempAssignment_6_10_2; }
		
		//NUMBER
		public RuleCall getTempNUMBERTerminalRuleCall_6_10_2_0() { return cTempNUMBERTerminalRuleCall_6_10_2_0; }
	}
	public class MOSFETModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.MOSFETModel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMODELKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameLabelParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Keyword cNMOSKeyword_2_0 = (Keyword)cAlternatives_2.eContents().get(0);
		private final Keyword cPMOSKeyword_2_1 = (Keyword)cAlternatives_2.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final UnorderedGroup cUnorderedGroup_4 = (UnorderedGroup)cGroup.eContents().get(4);
		private final Group cGroup_4_0 = (Group)cUnorderedGroup_4.eContents().get(0);
		private final Keyword cLEVELKeyword_4_0_0 = (Keyword)cGroup_4_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_0_1 = (Keyword)cGroup_4_0.eContents().get(1);
		private final Assignment cLevelAssignment_4_0_2 = (Assignment)cGroup_4_0.eContents().get(2);
		private final RuleCall cLevelDIGITTerminalRuleCall_4_0_2_0 = (RuleCall)cLevelAssignment_4_0_2.eContents().get(0);
		private final Alternatives cAlternatives_4_1 = (Alternatives)cUnorderedGroup_4.eContents().get(1);
		private final Keyword cVTOKeyword_4_1_0 = (Keyword)cAlternatives_4_1.eContents().get(0);
		private final Group cGroup_4_1_1 = (Group)cAlternatives_4_1.eContents().get(1);
		private final Keyword cVT0Keyword_4_1_1_0 = (Keyword)cGroup_4_1_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_1_1_1 = (Keyword)cGroup_4_1_1.eContents().get(1);
		private final Assignment cVt0Assignment_4_1_1_2 = (Assignment)cGroup_4_1_1.eContents().get(2);
		private final RuleCall cVt0NUMBERTerminalRuleCall_4_1_1_2_0 = (RuleCall)cVt0Assignment_4_1_1_2.eContents().get(0);
		private final Group cGroup_4_2 = (Group)cUnorderedGroup_4.eContents().get(2);
		private final Keyword cKPKeyword_4_2_0 = (Keyword)cGroup_4_2.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_2_1 = (Keyword)cGroup_4_2.eContents().get(1);
		private final Assignment cTransconductanceAssignment_4_2_2 = (Assignment)cGroup_4_2.eContents().get(2);
		private final RuleCall cTransconductanceNUMBERTerminalRuleCall_4_2_2_0 = (RuleCall)cTransconductanceAssignment_4_2_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cUnorderedGroup_4.eContents().get(3);
		private final Keyword cGAMMAKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_3_1 = (Keyword)cGroup_4_3.eContents().get(1);
		private final Assignment cGammaAssignment_4_3_2 = (Assignment)cGroup_4_3.eContents().get(2);
		private final RuleCall cGammaNUMBERTerminalRuleCall_4_3_2_0 = (RuleCall)cGammaAssignment_4_3_2.eContents().get(0);
		private final Group cGroup_4_4 = (Group)cUnorderedGroup_4.eContents().get(4);
		private final Keyword cPHIKeyword_4_4_0 = (Keyword)cGroup_4_4.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_4_1 = (Keyword)cGroup_4_4.eContents().get(1);
		private final Assignment cPhiAssignment_4_4_2 = (Assignment)cGroup_4_4.eContents().get(2);
		private final RuleCall cPhiNUMBERTerminalRuleCall_4_4_2_0 = (RuleCall)cPhiAssignment_4_4_2.eContents().get(0);
		private final Group cGroup_4_5 = (Group)cUnorderedGroup_4.eContents().get(5);
		private final Keyword cLAMBDAKeyword_4_5_0 = (Keyword)cGroup_4_5.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_5_1 = (Keyword)cGroup_4_5.eContents().get(1);
		private final Assignment cLambdaAssignment_4_5_2 = (Assignment)cGroup_4_5.eContents().get(2);
		private final RuleCall cLambdaNUMBERTerminalRuleCall_4_5_2_0 = (RuleCall)cLambdaAssignment_4_5_2.eContents().get(0);
		private final Group cGroup_4_6 = (Group)cUnorderedGroup_4.eContents().get(6);
		private final Keyword cRDKeyword_4_6_0 = (Keyword)cGroup_4_6.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_6_1 = (Keyword)cGroup_4_6.eContents().get(1);
		private final Assignment cDrainResistanceAssignment_4_6_2 = (Assignment)cGroup_4_6.eContents().get(2);
		private final RuleCall cDrainResistanceNUMBERTerminalRuleCall_4_6_2_0 = (RuleCall)cDrainResistanceAssignment_4_6_2.eContents().get(0);
		private final Group cGroup_4_7 = (Group)cUnorderedGroup_4.eContents().get(7);
		private final Keyword cRSKeyword_4_7_0 = (Keyword)cGroup_4_7.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_7_1 = (Keyword)cGroup_4_7.eContents().get(1);
		private final Assignment cSourceResistanceAssignment_4_7_2 = (Assignment)cGroup_4_7.eContents().get(2);
		private final RuleCall cSourceResistanceNUMBERTerminalRuleCall_4_7_2_0 = (RuleCall)cSourceResistanceAssignment_4_7_2.eContents().get(0);
		private final Group cGroup_4_8 = (Group)cUnorderedGroup_4.eContents().get(8);
		private final Keyword cCBDKeyword_4_8_0 = (Keyword)cGroup_4_8.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_8_1 = (Keyword)cGroup_4_8.eContents().get(1);
		private final Assignment cCapBdAssignment_4_8_2 = (Assignment)cGroup_4_8.eContents().get(2);
		private final RuleCall cCapBdNUMBERTerminalRuleCall_4_8_2_0 = (RuleCall)cCapBdAssignment_4_8_2.eContents().get(0);
		private final Group cGroup_4_9 = (Group)cUnorderedGroup_4.eContents().get(9);
		private final Keyword cCBSKeyword_4_9_0 = (Keyword)cGroup_4_9.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_9_1 = (Keyword)cGroup_4_9.eContents().get(1);
		private final Assignment cCapBsAssignment_4_9_2 = (Assignment)cGroup_4_9.eContents().get(2);
		private final RuleCall cCapBsNUMBERTerminalRuleCall_4_9_2_0 = (RuleCall)cCapBsAssignment_4_9_2.eContents().get(0);
		private final Group cGroup_4_10 = (Group)cUnorderedGroup_4.eContents().get(10);
		private final Keyword cISKeyword_4_10_0 = (Keyword)cGroup_4_10.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_10_1 = (Keyword)cGroup_4_10.eContents().get(1);
		private final Assignment cJunctionSatCurAssignment_4_10_2 = (Assignment)cGroup_4_10.eContents().get(2);
		private final RuleCall cJunctionSatCurNUMBERTerminalRuleCall_4_10_2_0 = (RuleCall)cJunctionSatCurAssignment_4_10_2.eContents().get(0);
		private final Group cGroup_4_11 = (Group)cUnorderedGroup_4.eContents().get(11);
		private final Keyword cPBKeyword_4_11_0 = (Keyword)cGroup_4_11.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_11_1 = (Keyword)cGroup_4_11.eContents().get(1);
		private final Assignment cBulkJunctionPotentialAssignment_4_11_2 = (Assignment)cGroup_4_11.eContents().get(2);
		private final RuleCall cBulkJunctionPotentialNUMBERTerminalRuleCall_4_11_2_0 = (RuleCall)cBulkJunctionPotentialAssignment_4_11_2.eContents().get(0);
		private final Group cGroup_4_12 = (Group)cUnorderedGroup_4.eContents().get(12);
		private final Keyword cCGSOKeyword_4_12_0 = (Keyword)cGroup_4_12.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_12_1 = (Keyword)cGroup_4_12.eContents().get(1);
		private final Assignment cGateSourceOverlapCapFactorAssignment_4_12_2 = (Assignment)cGroup_4_12.eContents().get(2);
		private final RuleCall cGateSourceOverlapCapFactorNUMBERTerminalRuleCall_4_12_2_0 = (RuleCall)cGateSourceOverlapCapFactorAssignment_4_12_2.eContents().get(0);
		private final Group cGroup_4_13 = (Group)cUnorderedGroup_4.eContents().get(13);
		private final Keyword cCGDOKeyword_4_13_0 = (Keyword)cGroup_4_13.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_13_1 = (Keyword)cGroup_4_13.eContents().get(1);
		private final Assignment cGateDrainOverlapCapFactorAssignment_4_13_2 = (Assignment)cGroup_4_13.eContents().get(2);
		private final RuleCall cGateDrainOverlapCapFactorNUMBERTerminalRuleCall_4_13_2_0 = (RuleCall)cGateDrainOverlapCapFactorAssignment_4_13_2.eContents().get(0);
		private final Group cGroup_4_14 = (Group)cUnorderedGroup_4.eContents().get(14);
		private final Keyword cCGBOKeyword_4_14_0 = (Keyword)cGroup_4_14.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_14_1 = (Keyword)cGroup_4_14.eContents().get(1);
		private final Assignment cGateBulkOverlapCapFactorAssignment_4_14_2 = (Assignment)cGroup_4_14.eContents().get(2);
		private final RuleCall cGateBulkOverlapCapFactorNUMBERTerminalRuleCall_4_14_2_0 = (RuleCall)cGateBulkOverlapCapFactorAssignment_4_14_2.eContents().get(0);
		private final Group cGroup_4_15 = (Group)cUnorderedGroup_4.eContents().get(15);
		private final Keyword cRSHKeyword_4_15_0 = (Keyword)cGroup_4_15.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_15_1 = (Keyword)cGroup_4_15.eContents().get(1);
		private final Assignment cSheetResistanceAssignment_4_15_2 = (Assignment)cGroup_4_15.eContents().get(2);
		private final RuleCall cSheetResistanceNUMBERTerminalRuleCall_4_15_2_0 = (RuleCall)cSheetResistanceAssignment_4_15_2.eContents().get(0);
		private final Group cGroup_4_16 = (Group)cUnorderedGroup_4.eContents().get(16);
		private final Keyword cCJKeyword_4_16_0 = (Keyword)cGroup_4_16.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_16_1 = (Keyword)cGroup_4_16.eContents().get(1);
		private final Assignment cBulkCapFactorAssignment_4_16_2 = (Assignment)cGroup_4_16.eContents().get(2);
		private final RuleCall cBulkCapFactorNUMBERTerminalRuleCall_4_16_2_0 = (RuleCall)cBulkCapFactorAssignment_4_16_2.eContents().get(0);
		private final Group cGroup_4_17 = (Group)cUnorderedGroup_4.eContents().get(17);
		private final Keyword cMJKeyword_4_17_0 = (Keyword)cGroup_4_17.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_17_1 = (Keyword)cGroup_4_17.eContents().get(1);
		private final Assignment cBulkJunctionBotGradingCoefficientAssignment_4_17_2 = (Assignment)cGroup_4_17.eContents().get(2);
		private final RuleCall cBulkJunctionBotGradingCoefficientNUMBERTerminalRuleCall_4_17_2_0 = (RuleCall)cBulkJunctionBotGradingCoefficientAssignment_4_17_2.eContents().get(0);
		private final Group cGroup_4_18 = (Group)cUnorderedGroup_4.eContents().get(18);
		private final Keyword cCJSWKeyword_4_18_0 = (Keyword)cGroup_4_18.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_18_1 = (Keyword)cGroup_4_18.eContents().get(1);
		private final Assignment cSidewallCapFactorAssignment_4_18_2 = (Assignment)cGroup_4_18.eContents().get(2);
		private final RuleCall cSidewallCapFactorNUMBERTerminalRuleCall_4_18_2_0 = (RuleCall)cSidewallCapFactorAssignment_4_18_2.eContents().get(0);
		private final Group cGroup_4_19 = (Group)cUnorderedGroup_4.eContents().get(19);
		private final Keyword cMJSWKeyword_4_19_0 = (Keyword)cGroup_4_19.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_19_1 = (Keyword)cGroup_4_19.eContents().get(1);
		private final Assignment cBulkJunctionSideGradingCoefficientAssignment_4_19_2 = (Assignment)cGroup_4_19.eContents().get(2);
		private final RuleCall cBulkJunctionSideGradingCoefficientNUMBERTerminalRuleCall_4_19_2_0 = (RuleCall)cBulkJunctionSideGradingCoefficientAssignment_4_19_2.eContents().get(0);
		private final Group cGroup_4_20 = (Group)cUnorderedGroup_4.eContents().get(20);
		private final Keyword cJSKeyword_4_20_0 = (Keyword)cGroup_4_20.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_20_1 = (Keyword)cGroup_4_20.eContents().get(1);
		private final Assignment cJunctionSatCurDensityAssignment_4_20_2 = (Assignment)cGroup_4_20.eContents().get(2);
		private final RuleCall cJunctionSatCurDensityNUMBERTerminalRuleCall_4_20_2_0 = (RuleCall)cJunctionSatCurDensityAssignment_4_20_2.eContents().get(0);
		private final Group cGroup_4_21 = (Group)cUnorderedGroup_4.eContents().get(21);
		private final Keyword cTOXKeyword_4_21_0 = (Keyword)cGroup_4_21.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_21_1 = (Keyword)cGroup_4_21.eContents().get(1);
		private final Assignment cOxideThicknessAssignment_4_21_2 = (Assignment)cGroup_4_21.eContents().get(2);
		private final RuleCall cOxideThicknessNUMBERTerminalRuleCall_4_21_2_0 = (RuleCall)cOxideThicknessAssignment_4_21_2.eContents().get(0);
		private final Group cGroup_4_22 = (Group)cUnorderedGroup_4.eContents().get(22);
		private final Keyword cNSUBKeyword_4_22_0 = (Keyword)cGroup_4_22.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_22_1 = (Keyword)cGroup_4_22.eContents().get(1);
		private final Assignment cSubstrateDopingAssignment_4_22_2 = (Assignment)cGroup_4_22.eContents().get(2);
		private final RuleCall cSubstrateDopingNUMBERTerminalRuleCall_4_22_2_0 = (RuleCall)cSubstrateDopingAssignment_4_22_2.eContents().get(0);
		private final Group cGroup_4_23 = (Group)cUnorderedGroup_4.eContents().get(23);
		private final Keyword cNSSKeyword_4_23_0 = (Keyword)cGroup_4_23.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_23_1 = (Keyword)cGroup_4_23.eContents().get(1);
		private final Assignment cSurfaceStateDensityAssignment_4_23_2 = (Assignment)cGroup_4_23.eContents().get(2);
		private final RuleCall cSurfaceStateDensityNUMBERTerminalRuleCall_4_23_2_0 = (RuleCall)cSurfaceStateDensityAssignment_4_23_2.eContents().get(0);
		private final Group cGroup_4_24 = (Group)cUnorderedGroup_4.eContents().get(24);
		private final Keyword cNFSKeyword_4_24_0 = (Keyword)cGroup_4_24.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_24_1 = (Keyword)cGroup_4_24.eContents().get(1);
		private final Assignment cNfsAssignment_4_24_2 = (Assignment)cGroup_4_24.eContents().get(2);
		private final RuleCall cNfsNUMBERTerminalRuleCall_4_24_2_0 = (RuleCall)cNfsAssignment_4_24_2.eContents().get(0);
		private final Group cGroup_4_25 = (Group)cUnorderedGroup_4.eContents().get(25);
		private final Keyword cTPGKeyword_4_25_0 = (Keyword)cGroup_4_25.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_25_1 = (Keyword)cGroup_4_25.eContents().get(1);
		private final Assignment cGateTypeAssignment_4_25_2 = (Assignment)cGroup_4_25.eContents().get(2);
		private final Alternatives cGateTypeAlternatives_4_25_2_0 = (Alternatives)cGateTypeAssignment_4_25_2.eContents().get(0);
		private final Keyword cGateType1Keyword_4_25_2_0_0 = (Keyword)cGateTypeAlternatives_4_25_2_0.eContents().get(0);
		private final Keyword cGateType0Keyword_4_25_2_0_1 = (Keyword)cGateTypeAlternatives_4_25_2_0.eContents().get(1);
		private final Keyword cGateType1Keyword_4_25_2_0_2 = (Keyword)cGateTypeAlternatives_4_25_2_0.eContents().get(2);
		private final Group cGroup_4_26 = (Group)cUnorderedGroup_4.eContents().get(26);
		private final Keyword cXJKeyword_4_26_0 = (Keyword)cGroup_4_26.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_26_1 = (Keyword)cGroup_4_26.eContents().get(1);
		private final Assignment cXjAssignment_4_26_2 = (Assignment)cGroup_4_26.eContents().get(2);
		private final RuleCall cXjNUMBERTerminalRuleCall_4_26_2_0 = (RuleCall)cXjAssignment_4_26_2.eContents().get(0);
		private final Group cGroup_4_27 = (Group)cUnorderedGroup_4.eContents().get(27);
		private final Keyword cLDKeyword_4_27_0 = (Keyword)cGroup_4_27.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_27_1 = (Keyword)cGroup_4_27.eContents().get(1);
		private final Assignment cLateralDiffusionAssignment_4_27_2 = (Assignment)cGroup_4_27.eContents().get(2);
		private final RuleCall cLateralDiffusionNUMBERTerminalRuleCall_4_27_2_0 = (RuleCall)cLateralDiffusionAssignment_4_27_2.eContents().get(0);
		private final Alternatives cAlternatives_4_28 = (Alternatives)cUnorderedGroup_4.eContents().get(28);
		private final Keyword cUOKeyword_4_28_0 = (Keyword)cAlternatives_4_28.eContents().get(0);
		private final Group cGroup_4_28_1 = (Group)cAlternatives_4_28.eContents().get(1);
		private final Keyword cU0Keyword_4_28_1_0 = (Keyword)cGroup_4_28_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_28_1_1 = (Keyword)cGroup_4_28_1.eContents().get(1);
		private final Assignment cSurfaceMobilityAssignment_4_28_1_2 = (Assignment)cGroup_4_28_1.eContents().get(2);
		private final RuleCall cSurfaceMobilityNUMBERTerminalRuleCall_4_28_1_2_0 = (RuleCall)cSurfaceMobilityAssignment_4_28_1_2.eContents().get(0);
		private final Group cGroup_4_29 = (Group)cUnorderedGroup_4.eContents().get(29);
		private final Keyword cKFKeyword_4_29_0 = (Keyword)cGroup_4_29.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_29_1 = (Keyword)cGroup_4_29.eContents().get(1);
		private final Assignment cFlickerNoiseCoefficientAssignment_4_29_2 = (Assignment)cGroup_4_29.eContents().get(2);
		private final RuleCall cFlickerNoiseCoefficientNUMBERTerminalRuleCall_4_29_2_0 = (RuleCall)cFlickerNoiseCoefficientAssignment_4_29_2.eContents().get(0);
		private final Group cGroup_4_30 = (Group)cUnorderedGroup_4.eContents().get(30);
		private final Keyword cAFKeyword_4_30_0 = (Keyword)cGroup_4_30.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_30_1 = (Keyword)cGroup_4_30.eContents().get(1);
		private final Assignment cFlickerNoiseExponentAssignment_4_30_2 = (Assignment)cGroup_4_30.eContents().get(2);
		private final RuleCall cFlickerNoiseExponentNUMBERTerminalRuleCall_4_30_2_0 = (RuleCall)cFlickerNoiseExponentAssignment_4_30_2.eContents().get(0);
		private final Group cGroup_4_31 = (Group)cUnorderedGroup_4.eContents().get(31);
		private final Keyword cFCKeyword_4_31_0 = (Keyword)cGroup_4_31.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_31_1 = (Keyword)cGroup_4_31.eContents().get(1);
		private final Assignment cForwardCapDepletionCoefficientAssignment_4_31_2 = (Assignment)cGroup_4_31.eContents().get(2);
		private final RuleCall cForwardCapDepletionCoefficientNUMBERTerminalRuleCall_4_31_2_0 = (RuleCall)cForwardCapDepletionCoefficientAssignment_4_31_2.eContents().get(0);
		private final Group cGroup_4_32 = (Group)cUnorderedGroup_4.eContents().get(32);
		private final Keyword cTNOMKeyword_4_32_0 = (Keyword)cGroup_4_32.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_32_1 = (Keyword)cGroup_4_32.eContents().get(1);
		private final Assignment cNominalTemperatureAssignment_4_32_2 = (Assignment)cGroup_4_32.eContents().get(2);
		private final RuleCall cNominalTemperatureNUMBERTerminalRuleCall_4_32_2_0 = (RuleCall)cNominalTemperatureAssignment_4_32_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//MOSFETModel:
		//	'.MODEL' name=Label ('NMOS' | 'PMOS') '(' (('LEVEL' '=' level=DIGIT)? & ('VTO' | 'VT0' '=' vt0=NUMBER)? & ('KP' '='
		//	transconductance=NUMBER)? & ('GAMMA' '=' gamma=NUMBER)? & ('PHI' '=' phi=NUMBER)? & ('LAMBDA' '=' lambda=NUMBER)? &
		//	('RD' '=' drainResistance=NUMBER)? & ('RS' '=' sourceResistance=NUMBER)? & ('CBD' '=' capBd=NUMBER)? & ('CBS' '='
		//	capBs=NUMBER)? & ('IS' '=' junctionSatCur=NUMBER)? & ('PB' '=' bulkJunctionPotential=NUMBER)? & ('CGSO' '='
		//	gateSourceOverlapCapFactor=NUMBER)? & ('CGDO' '=' gateDrainOverlapCapFactor=NUMBER)? & ('CGBO' '='
		//	gateBulkOverlapCapFactor=NUMBER)? & ('RSH' '=' sheetResistance=NUMBER)? & ('CJ' '=' bulkCapFactor=NUMBER)? & ('MJ' '='
		//	bulkJunctionBotGradingCoefficient=NUMBER)? & ('CJSW' '=' sidewallCapFactor=NUMBER)? & ('MJSW' '='
		//	bulkJunctionSideGradingCoefficient=NUMBER)? & ('JS' '=' junctionSatCurDensity=NUMBER)? & ('TOX' '='
		//	oxideThickness=NUMBER)? & ('NSUB' '=' substrateDoping=NUMBER)? & ('NSS' '=' surfaceStateDensity=NUMBER)? & ('NFS' '='
		//	nfs=NUMBER)? & ('TPG' '=' gateType=('1' | '0' | '-1'))? & ('XJ' '=' xj=NUMBER)? & ('LD' '=' lateralDiffusion=NUMBER)?
		//	& ('UO' | 'U0' '=' surfaceMobility=NUMBER)? & ('KF' '=' flickerNoiseCoefficient=NUMBER)? & ('AF' '='
		//	flickerNoiseExponent=NUMBER)? & ('FC' '=' forwardCapDepletionCoefficient=NUMBER)? & ('TNOM' '='
		//	nominalTemperature=NUMBER)?) ')';
		@Override public ParserRule getRule() { return rule; }
		
		//'.MODEL' name=Label ('NMOS' | 'PMOS') '(' (('LEVEL' '=' level=DIGIT)? & ('VTO' | 'VT0' '=' vt0=NUMBER)? & ('KP' '='
		//transconductance=NUMBER)? & ('GAMMA' '=' gamma=NUMBER)? & ('PHI' '=' phi=NUMBER)? & ('LAMBDA' '=' lambda=NUMBER)? &
		//('RD' '=' drainResistance=NUMBER)? & ('RS' '=' sourceResistance=NUMBER)? & ('CBD' '=' capBd=NUMBER)? & ('CBS' '='
		//capBs=NUMBER)? & ('IS' '=' junctionSatCur=NUMBER)? & ('PB' '=' bulkJunctionPotential=NUMBER)? & ('CGSO' '='
		//gateSourceOverlapCapFactor=NUMBER)? & ('CGDO' '=' gateDrainOverlapCapFactor=NUMBER)? & ('CGBO' '='
		//gateBulkOverlapCapFactor=NUMBER)? & ('RSH' '=' sheetResistance=NUMBER)? & ('CJ' '=' bulkCapFactor=NUMBER)? & ('MJ' '='
		//bulkJunctionBotGradingCoefficient=NUMBER)? & ('CJSW' '=' sidewallCapFactor=NUMBER)? & ('MJSW' '='
		//bulkJunctionSideGradingCoefficient=NUMBER)? & ('JS' '=' junctionSatCurDensity=NUMBER)? & ('TOX' '='
		//oxideThickness=NUMBER)? & ('NSUB' '=' substrateDoping=NUMBER)? & ('NSS' '=' surfaceStateDensity=NUMBER)? & ('NFS' '='
		//nfs=NUMBER)? & ('TPG' '=' gateType=('1' | '0' | '-1'))? & ('XJ' '=' xj=NUMBER)? & ('LD' '=' lateralDiffusion=NUMBER)? &
		//('UO' | 'U0' '=' surfaceMobility=NUMBER)? & ('KF' '=' flickerNoiseCoefficient=NUMBER)? & ('AF' '='
		//flickerNoiseExponent=NUMBER)? & ('FC' '=' forwardCapDepletionCoefficient=NUMBER)? & ('TNOM' '='
		//nominalTemperature=NUMBER)?) ')'
		public Group getGroup() { return cGroup; }
		
		//'.MODEL'
		public Keyword getMODELKeyword_0() { return cMODELKeyword_0; }
		
		//name=Label
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//Label
		public RuleCall getNameLabelParserRuleCall_1_0() { return cNameLabelParserRuleCall_1_0; }
		
		//'NMOS' | 'PMOS'
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//'NMOS'
		public Keyword getNMOSKeyword_2_0() { return cNMOSKeyword_2_0; }
		
		//'PMOS'
		public Keyword getPMOSKeyword_2_1() { return cPMOSKeyword_2_1; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_3() { return cLeftParenthesisKeyword_3; }
		
		//('LEVEL' '=' level=DIGIT)? & ('VTO' | 'VT0' '=' vt0=NUMBER)? & ('KP' '=' transconductance=NUMBER)? & ('GAMMA' '='
		//gamma=NUMBER)? & ('PHI' '=' phi=NUMBER)? & ('LAMBDA' '=' lambda=NUMBER)? & ('RD' '=' drainResistance=NUMBER)? & ('RS'
		//'=' sourceResistance=NUMBER)? & ('CBD' '=' capBd=NUMBER)? & ('CBS' '=' capBs=NUMBER)? & ('IS' '='
		//junctionSatCur=NUMBER)? & ('PB' '=' bulkJunctionPotential=NUMBER)? & ('CGSO' '=' gateSourceOverlapCapFactor=NUMBER)? &
		//('CGDO' '=' gateDrainOverlapCapFactor=NUMBER)? & ('CGBO' '=' gateBulkOverlapCapFactor=NUMBER)? & ('RSH' '='
		//sheetResistance=NUMBER)? & ('CJ' '=' bulkCapFactor=NUMBER)? & ('MJ' '=' bulkJunctionBotGradingCoefficient=NUMBER)? &
		//('CJSW' '=' sidewallCapFactor=NUMBER)? & ('MJSW' '=' bulkJunctionSideGradingCoefficient=NUMBER)? & ('JS' '='
		//junctionSatCurDensity=NUMBER)? & ('TOX' '=' oxideThickness=NUMBER)? & ('NSUB' '=' substrateDoping=NUMBER)? & ('NSS' '='
		//surfaceStateDensity=NUMBER)? & ('NFS' '=' nfs=NUMBER)? & ('TPG' '=' gateType=('1' | '0' | '-1'))? & ('XJ' '='
		//xj=NUMBER)? & ('LD' '=' lateralDiffusion=NUMBER)? & ('UO' | 'U0' '=' surfaceMobility=NUMBER)? & ('KF' '='
		//flickerNoiseCoefficient=NUMBER)? & ('AF' '=' flickerNoiseExponent=NUMBER)? & ('FC' '='
		//forwardCapDepletionCoefficient=NUMBER)? & ('TNOM' '=' nominalTemperature=NUMBER)?
		public UnorderedGroup getUnorderedGroup_4() { return cUnorderedGroup_4; }
		
		//('LEVEL' '=' level=DIGIT)?
		public Group getGroup_4_0() { return cGroup_4_0; }
		
		//'LEVEL'
		public Keyword getLEVELKeyword_4_0_0() { return cLEVELKeyword_4_0_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_0_1() { return cEqualsSignKeyword_4_0_1; }
		
		//level=DIGIT
		public Assignment getLevelAssignment_4_0_2() { return cLevelAssignment_4_0_2; }
		
		//DIGIT
		public RuleCall getLevelDIGITTerminalRuleCall_4_0_2_0() { return cLevelDIGITTerminalRuleCall_4_0_2_0; }
		
		//('VTO' | 'VT0' '=' vt0=NUMBER)?
		public Alternatives getAlternatives_4_1() { return cAlternatives_4_1; }
		
		//'VTO'
		public Keyword getVTOKeyword_4_1_0() { return cVTOKeyword_4_1_0; }
		
		//'VT0' '=' vt0=NUMBER
		public Group getGroup_4_1_1() { return cGroup_4_1_1; }
		
		//'VT0'
		public Keyword getVT0Keyword_4_1_1_0() { return cVT0Keyword_4_1_1_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_1_1_1() { return cEqualsSignKeyword_4_1_1_1; }
		
		//vt0=NUMBER
		public Assignment getVt0Assignment_4_1_1_2() { return cVt0Assignment_4_1_1_2; }
		
		//NUMBER
		public RuleCall getVt0NUMBERTerminalRuleCall_4_1_1_2_0() { return cVt0NUMBERTerminalRuleCall_4_1_1_2_0; }
		
		//('KP' '=' transconductance=NUMBER)?
		public Group getGroup_4_2() { return cGroup_4_2; }
		
		//'KP'
		public Keyword getKPKeyword_4_2_0() { return cKPKeyword_4_2_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_2_1() { return cEqualsSignKeyword_4_2_1; }
		
		//transconductance=NUMBER
		public Assignment getTransconductanceAssignment_4_2_2() { return cTransconductanceAssignment_4_2_2; }
		
		//NUMBER
		public RuleCall getTransconductanceNUMBERTerminalRuleCall_4_2_2_0() { return cTransconductanceNUMBERTerminalRuleCall_4_2_2_0; }
		
		//('GAMMA' '=' gamma=NUMBER)?
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//'GAMMA'
		public Keyword getGAMMAKeyword_4_3_0() { return cGAMMAKeyword_4_3_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_3_1() { return cEqualsSignKeyword_4_3_1; }
		
		//gamma=NUMBER
		public Assignment getGammaAssignment_4_3_2() { return cGammaAssignment_4_3_2; }
		
		//NUMBER
		public RuleCall getGammaNUMBERTerminalRuleCall_4_3_2_0() { return cGammaNUMBERTerminalRuleCall_4_3_2_0; }
		
		//('PHI' '=' phi=NUMBER)?
		public Group getGroup_4_4() { return cGroup_4_4; }
		
		//'PHI'
		public Keyword getPHIKeyword_4_4_0() { return cPHIKeyword_4_4_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_4_1() { return cEqualsSignKeyword_4_4_1; }
		
		//phi=NUMBER
		public Assignment getPhiAssignment_4_4_2() { return cPhiAssignment_4_4_2; }
		
		//NUMBER
		public RuleCall getPhiNUMBERTerminalRuleCall_4_4_2_0() { return cPhiNUMBERTerminalRuleCall_4_4_2_0; }
		
		//('LAMBDA' '=' lambda=NUMBER)?
		public Group getGroup_4_5() { return cGroup_4_5; }
		
		//'LAMBDA'
		public Keyword getLAMBDAKeyword_4_5_0() { return cLAMBDAKeyword_4_5_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_5_1() { return cEqualsSignKeyword_4_5_1; }
		
		//lambda=NUMBER
		public Assignment getLambdaAssignment_4_5_2() { return cLambdaAssignment_4_5_2; }
		
		//NUMBER
		public RuleCall getLambdaNUMBERTerminalRuleCall_4_5_2_0() { return cLambdaNUMBERTerminalRuleCall_4_5_2_0; }
		
		//('RD' '=' drainResistance=NUMBER)?
		public Group getGroup_4_6() { return cGroup_4_6; }
		
		//'RD'
		public Keyword getRDKeyword_4_6_0() { return cRDKeyword_4_6_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_6_1() { return cEqualsSignKeyword_4_6_1; }
		
		//drainResistance=NUMBER
		public Assignment getDrainResistanceAssignment_4_6_2() { return cDrainResistanceAssignment_4_6_2; }
		
		//NUMBER
		public RuleCall getDrainResistanceNUMBERTerminalRuleCall_4_6_2_0() { return cDrainResistanceNUMBERTerminalRuleCall_4_6_2_0; }
		
		//('RS' '=' sourceResistance=NUMBER)?
		public Group getGroup_4_7() { return cGroup_4_7; }
		
		//'RS'
		public Keyword getRSKeyword_4_7_0() { return cRSKeyword_4_7_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_7_1() { return cEqualsSignKeyword_4_7_1; }
		
		//sourceResistance=NUMBER
		public Assignment getSourceResistanceAssignment_4_7_2() { return cSourceResistanceAssignment_4_7_2; }
		
		//NUMBER
		public RuleCall getSourceResistanceNUMBERTerminalRuleCall_4_7_2_0() { return cSourceResistanceNUMBERTerminalRuleCall_4_7_2_0; }
		
		//('CBD' '=' capBd=NUMBER)?
		public Group getGroup_4_8() { return cGroup_4_8; }
		
		//'CBD'
		public Keyword getCBDKeyword_4_8_0() { return cCBDKeyword_4_8_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_8_1() { return cEqualsSignKeyword_4_8_1; }
		
		//capBd=NUMBER
		public Assignment getCapBdAssignment_4_8_2() { return cCapBdAssignment_4_8_2; }
		
		//NUMBER
		public RuleCall getCapBdNUMBERTerminalRuleCall_4_8_2_0() { return cCapBdNUMBERTerminalRuleCall_4_8_2_0; }
		
		//('CBS' '=' capBs=NUMBER)?
		public Group getGroup_4_9() { return cGroup_4_9; }
		
		//'CBS'
		public Keyword getCBSKeyword_4_9_0() { return cCBSKeyword_4_9_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_9_1() { return cEqualsSignKeyword_4_9_1; }
		
		//capBs=NUMBER
		public Assignment getCapBsAssignment_4_9_2() { return cCapBsAssignment_4_9_2; }
		
		//NUMBER
		public RuleCall getCapBsNUMBERTerminalRuleCall_4_9_2_0() { return cCapBsNUMBERTerminalRuleCall_4_9_2_0; }
		
		//('IS' '=' junctionSatCur=NUMBER)?
		public Group getGroup_4_10() { return cGroup_4_10; }
		
		//'IS'
		public Keyword getISKeyword_4_10_0() { return cISKeyword_4_10_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_10_1() { return cEqualsSignKeyword_4_10_1; }
		
		//junctionSatCur=NUMBER
		public Assignment getJunctionSatCurAssignment_4_10_2() { return cJunctionSatCurAssignment_4_10_2; }
		
		//NUMBER
		public RuleCall getJunctionSatCurNUMBERTerminalRuleCall_4_10_2_0() { return cJunctionSatCurNUMBERTerminalRuleCall_4_10_2_0; }
		
		//('PB' '=' bulkJunctionPotential=NUMBER)?
		public Group getGroup_4_11() { return cGroup_4_11; }
		
		//'PB'
		public Keyword getPBKeyword_4_11_0() { return cPBKeyword_4_11_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_11_1() { return cEqualsSignKeyword_4_11_1; }
		
		//bulkJunctionPotential=NUMBER
		public Assignment getBulkJunctionPotentialAssignment_4_11_2() { return cBulkJunctionPotentialAssignment_4_11_2; }
		
		//NUMBER
		public RuleCall getBulkJunctionPotentialNUMBERTerminalRuleCall_4_11_2_0() { return cBulkJunctionPotentialNUMBERTerminalRuleCall_4_11_2_0; }
		
		//('CGSO' '=' gateSourceOverlapCapFactor=NUMBER)?
		public Group getGroup_4_12() { return cGroup_4_12; }
		
		//'CGSO'
		public Keyword getCGSOKeyword_4_12_0() { return cCGSOKeyword_4_12_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_12_1() { return cEqualsSignKeyword_4_12_1; }
		
		//gateSourceOverlapCapFactor=NUMBER
		public Assignment getGateSourceOverlapCapFactorAssignment_4_12_2() { return cGateSourceOverlapCapFactorAssignment_4_12_2; }
		
		//NUMBER
		public RuleCall getGateSourceOverlapCapFactorNUMBERTerminalRuleCall_4_12_2_0() { return cGateSourceOverlapCapFactorNUMBERTerminalRuleCall_4_12_2_0; }
		
		//('CGDO' '=' gateDrainOverlapCapFactor=NUMBER)?
		public Group getGroup_4_13() { return cGroup_4_13; }
		
		//'CGDO'
		public Keyword getCGDOKeyword_4_13_0() { return cCGDOKeyword_4_13_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_13_1() { return cEqualsSignKeyword_4_13_1; }
		
		//gateDrainOverlapCapFactor=NUMBER
		public Assignment getGateDrainOverlapCapFactorAssignment_4_13_2() { return cGateDrainOverlapCapFactorAssignment_4_13_2; }
		
		//NUMBER
		public RuleCall getGateDrainOverlapCapFactorNUMBERTerminalRuleCall_4_13_2_0() { return cGateDrainOverlapCapFactorNUMBERTerminalRuleCall_4_13_2_0; }
		
		//('CGBO' '=' gateBulkOverlapCapFactor=NUMBER)?
		public Group getGroup_4_14() { return cGroup_4_14; }
		
		//'CGBO'
		public Keyword getCGBOKeyword_4_14_0() { return cCGBOKeyword_4_14_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_14_1() { return cEqualsSignKeyword_4_14_1; }
		
		//gateBulkOverlapCapFactor=NUMBER
		public Assignment getGateBulkOverlapCapFactorAssignment_4_14_2() { return cGateBulkOverlapCapFactorAssignment_4_14_2; }
		
		//NUMBER
		public RuleCall getGateBulkOverlapCapFactorNUMBERTerminalRuleCall_4_14_2_0() { return cGateBulkOverlapCapFactorNUMBERTerminalRuleCall_4_14_2_0; }
		
		//('RSH' '=' sheetResistance=NUMBER)?
		public Group getGroup_4_15() { return cGroup_4_15; }
		
		//'RSH'
		public Keyword getRSHKeyword_4_15_0() { return cRSHKeyword_4_15_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_15_1() { return cEqualsSignKeyword_4_15_1; }
		
		//sheetResistance=NUMBER
		public Assignment getSheetResistanceAssignment_4_15_2() { return cSheetResistanceAssignment_4_15_2; }
		
		//NUMBER
		public RuleCall getSheetResistanceNUMBERTerminalRuleCall_4_15_2_0() { return cSheetResistanceNUMBERTerminalRuleCall_4_15_2_0; }
		
		//('CJ' '=' bulkCapFactor=NUMBER)?
		public Group getGroup_4_16() { return cGroup_4_16; }
		
		//'CJ'
		public Keyword getCJKeyword_4_16_0() { return cCJKeyword_4_16_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_16_1() { return cEqualsSignKeyword_4_16_1; }
		
		//bulkCapFactor=NUMBER
		public Assignment getBulkCapFactorAssignment_4_16_2() { return cBulkCapFactorAssignment_4_16_2; }
		
		//NUMBER
		public RuleCall getBulkCapFactorNUMBERTerminalRuleCall_4_16_2_0() { return cBulkCapFactorNUMBERTerminalRuleCall_4_16_2_0; }
		
		//('MJ' '=' bulkJunctionBotGradingCoefficient=NUMBER)?
		public Group getGroup_4_17() { return cGroup_4_17; }
		
		//'MJ'
		public Keyword getMJKeyword_4_17_0() { return cMJKeyword_4_17_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_17_1() { return cEqualsSignKeyword_4_17_1; }
		
		//bulkJunctionBotGradingCoefficient=NUMBER
		public Assignment getBulkJunctionBotGradingCoefficientAssignment_4_17_2() { return cBulkJunctionBotGradingCoefficientAssignment_4_17_2; }
		
		//NUMBER
		public RuleCall getBulkJunctionBotGradingCoefficientNUMBERTerminalRuleCall_4_17_2_0() { return cBulkJunctionBotGradingCoefficientNUMBERTerminalRuleCall_4_17_2_0; }
		
		//('CJSW' '=' sidewallCapFactor=NUMBER)?
		public Group getGroup_4_18() { return cGroup_4_18; }
		
		//'CJSW'
		public Keyword getCJSWKeyword_4_18_0() { return cCJSWKeyword_4_18_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_18_1() { return cEqualsSignKeyword_4_18_1; }
		
		//sidewallCapFactor=NUMBER
		public Assignment getSidewallCapFactorAssignment_4_18_2() { return cSidewallCapFactorAssignment_4_18_2; }
		
		//NUMBER
		public RuleCall getSidewallCapFactorNUMBERTerminalRuleCall_4_18_2_0() { return cSidewallCapFactorNUMBERTerminalRuleCall_4_18_2_0; }
		
		//('MJSW' '=' bulkJunctionSideGradingCoefficient=NUMBER)?
		public Group getGroup_4_19() { return cGroup_4_19; }
		
		//'MJSW'
		public Keyword getMJSWKeyword_4_19_0() { return cMJSWKeyword_4_19_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_19_1() { return cEqualsSignKeyword_4_19_1; }
		
		//bulkJunctionSideGradingCoefficient=NUMBER
		public Assignment getBulkJunctionSideGradingCoefficientAssignment_4_19_2() { return cBulkJunctionSideGradingCoefficientAssignment_4_19_2; }
		
		//NUMBER
		public RuleCall getBulkJunctionSideGradingCoefficientNUMBERTerminalRuleCall_4_19_2_0() { return cBulkJunctionSideGradingCoefficientNUMBERTerminalRuleCall_4_19_2_0; }
		
		//('JS' '=' junctionSatCurDensity=NUMBER)?
		public Group getGroup_4_20() { return cGroup_4_20; }
		
		//'JS'
		public Keyword getJSKeyword_4_20_0() { return cJSKeyword_4_20_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_20_1() { return cEqualsSignKeyword_4_20_1; }
		
		//junctionSatCurDensity=NUMBER
		public Assignment getJunctionSatCurDensityAssignment_4_20_2() { return cJunctionSatCurDensityAssignment_4_20_2; }
		
		//NUMBER
		public RuleCall getJunctionSatCurDensityNUMBERTerminalRuleCall_4_20_2_0() { return cJunctionSatCurDensityNUMBERTerminalRuleCall_4_20_2_0; }
		
		//('TOX' '=' oxideThickness=NUMBER)?
		public Group getGroup_4_21() { return cGroup_4_21; }
		
		//'TOX'
		public Keyword getTOXKeyword_4_21_0() { return cTOXKeyword_4_21_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_21_1() { return cEqualsSignKeyword_4_21_1; }
		
		//oxideThickness=NUMBER
		public Assignment getOxideThicknessAssignment_4_21_2() { return cOxideThicknessAssignment_4_21_2; }
		
		//NUMBER
		public RuleCall getOxideThicknessNUMBERTerminalRuleCall_4_21_2_0() { return cOxideThicknessNUMBERTerminalRuleCall_4_21_2_0; }
		
		//('NSUB' '=' substrateDoping=NUMBER)?
		public Group getGroup_4_22() { return cGroup_4_22; }
		
		//'NSUB'
		public Keyword getNSUBKeyword_4_22_0() { return cNSUBKeyword_4_22_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_22_1() { return cEqualsSignKeyword_4_22_1; }
		
		//substrateDoping=NUMBER
		public Assignment getSubstrateDopingAssignment_4_22_2() { return cSubstrateDopingAssignment_4_22_2; }
		
		//NUMBER
		public RuleCall getSubstrateDopingNUMBERTerminalRuleCall_4_22_2_0() { return cSubstrateDopingNUMBERTerminalRuleCall_4_22_2_0; }
		
		//('NSS' '=' surfaceStateDensity=NUMBER)?
		public Group getGroup_4_23() { return cGroup_4_23; }
		
		//'NSS'
		public Keyword getNSSKeyword_4_23_0() { return cNSSKeyword_4_23_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_23_1() { return cEqualsSignKeyword_4_23_1; }
		
		//surfaceStateDensity=NUMBER
		public Assignment getSurfaceStateDensityAssignment_4_23_2() { return cSurfaceStateDensityAssignment_4_23_2; }
		
		//NUMBER
		public RuleCall getSurfaceStateDensityNUMBERTerminalRuleCall_4_23_2_0() { return cSurfaceStateDensityNUMBERTerminalRuleCall_4_23_2_0; }
		
		//('NFS' '=' nfs=NUMBER)?
		public Group getGroup_4_24() { return cGroup_4_24; }
		
		//'NFS'
		public Keyword getNFSKeyword_4_24_0() { return cNFSKeyword_4_24_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_24_1() { return cEqualsSignKeyword_4_24_1; }
		
		//nfs=NUMBER
		public Assignment getNfsAssignment_4_24_2() { return cNfsAssignment_4_24_2; }
		
		//NUMBER
		public RuleCall getNfsNUMBERTerminalRuleCall_4_24_2_0() { return cNfsNUMBERTerminalRuleCall_4_24_2_0; }
		
		//('TPG' '=' gateType=('1' | '0' | '-1'))?
		public Group getGroup_4_25() { return cGroup_4_25; }
		
		//'TPG'
		public Keyword getTPGKeyword_4_25_0() { return cTPGKeyword_4_25_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_25_1() { return cEqualsSignKeyword_4_25_1; }
		
		//gateType=('1' | '0' | '-1')
		public Assignment getGateTypeAssignment_4_25_2() { return cGateTypeAssignment_4_25_2; }
		
		//('1' | '0' | '-1')
		public Alternatives getGateTypeAlternatives_4_25_2_0() { return cGateTypeAlternatives_4_25_2_0; }
		
		//'1'
		public Keyword getGateType1Keyword_4_25_2_0_0() { return cGateType1Keyword_4_25_2_0_0; }
		
		//'0'
		public Keyword getGateType0Keyword_4_25_2_0_1() { return cGateType0Keyword_4_25_2_0_1; }
		
		//'-1'
		public Keyword getGateType1Keyword_4_25_2_0_2() { return cGateType1Keyword_4_25_2_0_2; }
		
		//('XJ' '=' xj=NUMBER)?
		public Group getGroup_4_26() { return cGroup_4_26; }
		
		//'XJ'
		public Keyword getXJKeyword_4_26_0() { return cXJKeyword_4_26_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_26_1() { return cEqualsSignKeyword_4_26_1; }
		
		//xj=NUMBER
		public Assignment getXjAssignment_4_26_2() { return cXjAssignment_4_26_2; }
		
		//NUMBER
		public RuleCall getXjNUMBERTerminalRuleCall_4_26_2_0() { return cXjNUMBERTerminalRuleCall_4_26_2_0; }
		
		//('LD' '=' lateralDiffusion=NUMBER)?
		public Group getGroup_4_27() { return cGroup_4_27; }
		
		//'LD'
		public Keyword getLDKeyword_4_27_0() { return cLDKeyword_4_27_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_27_1() { return cEqualsSignKeyword_4_27_1; }
		
		//lateralDiffusion=NUMBER
		public Assignment getLateralDiffusionAssignment_4_27_2() { return cLateralDiffusionAssignment_4_27_2; }
		
		//NUMBER
		public RuleCall getLateralDiffusionNUMBERTerminalRuleCall_4_27_2_0() { return cLateralDiffusionNUMBERTerminalRuleCall_4_27_2_0; }
		
		//('UO' | 'U0' '=' surfaceMobility=NUMBER)?
		public Alternatives getAlternatives_4_28() { return cAlternatives_4_28; }
		
		//'UO'
		public Keyword getUOKeyword_4_28_0() { return cUOKeyword_4_28_0; }
		
		//'U0' '=' surfaceMobility=NUMBER
		public Group getGroup_4_28_1() { return cGroup_4_28_1; }
		
		//'U0'
		public Keyword getU0Keyword_4_28_1_0() { return cU0Keyword_4_28_1_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_28_1_1() { return cEqualsSignKeyword_4_28_1_1; }
		
		//surfaceMobility=NUMBER
		public Assignment getSurfaceMobilityAssignment_4_28_1_2() { return cSurfaceMobilityAssignment_4_28_1_2; }
		
		//NUMBER
		public RuleCall getSurfaceMobilityNUMBERTerminalRuleCall_4_28_1_2_0() { return cSurfaceMobilityNUMBERTerminalRuleCall_4_28_1_2_0; }
		
		//('KF' '=' flickerNoiseCoefficient=NUMBER)?
		public Group getGroup_4_29() { return cGroup_4_29; }
		
		//'KF'
		public Keyword getKFKeyword_4_29_0() { return cKFKeyword_4_29_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_29_1() { return cEqualsSignKeyword_4_29_1; }
		
		//flickerNoiseCoefficient=NUMBER
		public Assignment getFlickerNoiseCoefficientAssignment_4_29_2() { return cFlickerNoiseCoefficientAssignment_4_29_2; }
		
		//NUMBER
		public RuleCall getFlickerNoiseCoefficientNUMBERTerminalRuleCall_4_29_2_0() { return cFlickerNoiseCoefficientNUMBERTerminalRuleCall_4_29_2_0; }
		
		//('AF' '=' flickerNoiseExponent=NUMBER)?
		public Group getGroup_4_30() { return cGroup_4_30; }
		
		//'AF'
		public Keyword getAFKeyword_4_30_0() { return cAFKeyword_4_30_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_30_1() { return cEqualsSignKeyword_4_30_1; }
		
		//flickerNoiseExponent=NUMBER
		public Assignment getFlickerNoiseExponentAssignment_4_30_2() { return cFlickerNoiseExponentAssignment_4_30_2; }
		
		//NUMBER
		public RuleCall getFlickerNoiseExponentNUMBERTerminalRuleCall_4_30_2_0() { return cFlickerNoiseExponentNUMBERTerminalRuleCall_4_30_2_0; }
		
		//('FC' '=' forwardCapDepletionCoefficient=NUMBER)?
		public Group getGroup_4_31() { return cGroup_4_31; }
		
		//'FC'
		public Keyword getFCKeyword_4_31_0() { return cFCKeyword_4_31_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_31_1() { return cEqualsSignKeyword_4_31_1; }
		
		//forwardCapDepletionCoefficient=NUMBER
		public Assignment getForwardCapDepletionCoefficientAssignment_4_31_2() { return cForwardCapDepletionCoefficientAssignment_4_31_2; }
		
		//NUMBER
		public RuleCall getForwardCapDepletionCoefficientNUMBERTerminalRuleCall_4_31_2_0() { return cForwardCapDepletionCoefficientNUMBERTerminalRuleCall_4_31_2_0; }
		
		//('TNOM' '=' nominalTemperature=NUMBER)?
		public Group getGroup_4_32() { return cGroup_4_32; }
		
		//'TNOM'
		public Keyword getTNOMKeyword_4_32_0() { return cTNOMKeyword_4_32_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_32_1() { return cEqualsSignKeyword_4_32_1; }
		
		//nominalTemperature=NUMBER
		public Assignment getNominalTemperatureAssignment_4_32_2() { return cNominalTemperatureAssignment_4_32_2; }
		
		//NUMBER
		public RuleCall getNominalTemperatureNUMBERTerminalRuleCall_4_32_2_0() { return cNominalTemperatureNUMBERTerminalRuleCall_4_32_2_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }
	}
	public class BJTElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.BJT");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Alternatives cNameAlternatives_0_0 = (Alternatives)cNameAssignment_0.eContents().get(0);
		private final RuleCall cNameQNIDTerminalRuleCall_0_0_0 = (RuleCall)cNameAlternatives_0_0.eContents().get(0);
		private final RuleCall cNameQPIDTerminalRuleCall_0_0_1 = (RuleCall)cNameAlternatives_0_0.eContents().get(1);
		private final Assignment cNodesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNodesNODETerminalRuleCall_1_0 = (RuleCall)cNodesAssignment_1.eContents().get(0);
		private final Assignment cNodesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNodesNODETerminalRuleCall_2_0 = (RuleCall)cNodesAssignment_2.eContents().get(0);
		private final Assignment cNodesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNodesNODETerminalRuleCall_3_0 = (RuleCall)cNodesAssignment_3.eContents().get(0);
		private final Assignment cNodesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNodesNODETerminalRuleCall_4_0 = (RuleCall)cNodesAssignment_4.eContents().get(0);
		private final Assignment cModelAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cModelLabelParserRuleCall_5_0 = (RuleCall)cModelAssignment_5.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_6 = (UnorderedGroup)cGroup.eContents().get(6);
		private final Group cGroup_6_0 = (Group)cUnorderedGroup_6.eContents().get(0);
		private final Keyword cAREAKeyword_6_0_0 = (Keyword)cGroup_6_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_6_0_1 = (Keyword)cGroup_6_0.eContents().get(1);
		private final Assignment cAreaAssignment_6_0_2 = (Assignment)cGroup_6_0.eContents().get(2);
		private final RuleCall cAreaNUMBERTerminalRuleCall_6_0_2_0 = (RuleCall)cAreaAssignment_6_0_2.eContents().get(0);
		private final Assignment cOffAssignment_6_1 = (Assignment)cUnorderedGroup_6.eContents().get(1);
		private final Keyword cOffOFFKeyword_6_1_0 = (Keyword)cOffAssignment_6_1.eContents().get(0);
		private final Group cGroup_6_2 = (Group)cUnorderedGroup_6.eContents().get(2);
		private final Keyword cICKeyword_6_2_0 = (Keyword)cGroup_6_2.eContents().get(0);
		private final Keyword cEqualsSignKeyword_6_2_1 = (Keyword)cGroup_6_2.eContents().get(1);
		private final Assignment cIcAssignment_6_2_2 = (Assignment)cGroup_6_2.eContents().get(2);
		private final RuleCall cIcNUMBERTerminalRuleCall_6_2_2_0 = (RuleCall)cIcAssignment_6_2_2.eContents().get(0);
		private final Keyword cCommaKeyword_6_2_3 = (Keyword)cGroup_6_2.eContents().get(3);
		private final Assignment cIcAssignment_6_2_4 = (Assignment)cGroup_6_2.eContents().get(4);
		private final RuleCall cIcNUMBERTerminalRuleCall_6_2_4_0 = (RuleCall)cIcAssignment_6_2_4.eContents().get(0);
		private final Group cGroup_6_3 = (Group)cUnorderedGroup_6.eContents().get(3);
		private final Keyword cTEMPKeyword_6_3_0 = (Keyword)cGroup_6_3.eContents().get(0);
		private final Keyword cEqualsSignKeyword_6_3_1 = (Keyword)cGroup_6_3.eContents().get(1);
		private final Assignment cTempAssignment_6_3_2 = (Assignment)cGroup_6_3.eContents().get(2);
		private final RuleCall cTempNUMBERTerminalRuleCall_6_3_2_0 = (RuleCall)cTempAssignment_6_3_2.eContents().get(0);
		
		//BJT:
		//	name=(QNID | QPID) nodes+=NODE nodes+=NODE nodes+=NODE nodes+=NODE? model=Label (('AREA' '=' area=NUMBER)? &
		//	off?='OFF'? & ('IC' '=' ic+=NUMBER ',' ic+=NUMBER)? & ('TEMP' '=' temp=NUMBER)?);
		@Override public ParserRule getRule() { return rule; }
		
		//name=(QNID | QPID) nodes+=NODE nodes+=NODE nodes+=NODE nodes+=NODE? model=Label (('AREA' '=' area=NUMBER)? & off?='OFF'?
		//& ('IC' '=' ic+=NUMBER ',' ic+=NUMBER)? & ('TEMP' '=' temp=NUMBER)?)
		public Group getGroup() { return cGroup; }
		
		//name=(QNID | QPID)
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//(QNID | QPID)
		public Alternatives getNameAlternatives_0_0() { return cNameAlternatives_0_0; }
		
		//QNID
		public RuleCall getNameQNIDTerminalRuleCall_0_0_0() { return cNameQNIDTerminalRuleCall_0_0_0; }
		
		//QPID
		public RuleCall getNameQPIDTerminalRuleCall_0_0_1() { return cNameQPIDTerminalRuleCall_0_0_1; }
		
		//nodes+=NODE
		public Assignment getNodesAssignment_1() { return cNodesAssignment_1; }
		
		//NODE
		public RuleCall getNodesNODETerminalRuleCall_1_0() { return cNodesNODETerminalRuleCall_1_0; }
		
		//nodes+=NODE
		public Assignment getNodesAssignment_2() { return cNodesAssignment_2; }
		
		//NODE
		public RuleCall getNodesNODETerminalRuleCall_2_0() { return cNodesNODETerminalRuleCall_2_0; }
		
		//nodes+=NODE
		public Assignment getNodesAssignment_3() { return cNodesAssignment_3; }
		
		//NODE
		public RuleCall getNodesNODETerminalRuleCall_3_0() { return cNodesNODETerminalRuleCall_3_0; }
		
		//nodes+=NODE?
		public Assignment getNodesAssignment_4() { return cNodesAssignment_4; }
		
		//NODE
		public RuleCall getNodesNODETerminalRuleCall_4_0() { return cNodesNODETerminalRuleCall_4_0; }
		
		//model=Label
		public Assignment getModelAssignment_5() { return cModelAssignment_5; }
		
		//Label
		public RuleCall getModelLabelParserRuleCall_5_0() { return cModelLabelParserRuleCall_5_0; }
		
		//('AREA' '=' area=NUMBER)? & off?='OFF'? & ('IC' '=' ic+=NUMBER ',' ic+=NUMBER)? & ('TEMP' '=' temp=NUMBER)?
		public UnorderedGroup getUnorderedGroup_6() { return cUnorderedGroup_6; }
		
		//('AREA' '=' area=NUMBER)?
		public Group getGroup_6_0() { return cGroup_6_0; }
		
		//'AREA'
		public Keyword getAREAKeyword_6_0_0() { return cAREAKeyword_6_0_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_6_0_1() { return cEqualsSignKeyword_6_0_1; }
		
		//area=NUMBER
		public Assignment getAreaAssignment_6_0_2() { return cAreaAssignment_6_0_2; }
		
		//NUMBER
		public RuleCall getAreaNUMBERTerminalRuleCall_6_0_2_0() { return cAreaNUMBERTerminalRuleCall_6_0_2_0; }
		
		//off?='OFF'?
		public Assignment getOffAssignment_6_1() { return cOffAssignment_6_1; }
		
		//'OFF'
		public Keyword getOffOFFKeyword_6_1_0() { return cOffOFFKeyword_6_1_0; }
		
		//('IC' '=' ic+=NUMBER ',' ic+=NUMBER)?
		public Group getGroup_6_2() { return cGroup_6_2; }
		
		//'IC'
		public Keyword getICKeyword_6_2_0() { return cICKeyword_6_2_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_6_2_1() { return cEqualsSignKeyword_6_2_1; }
		
		//ic+=NUMBER
		public Assignment getIcAssignment_6_2_2() { return cIcAssignment_6_2_2; }
		
		//NUMBER
		public RuleCall getIcNUMBERTerminalRuleCall_6_2_2_0() { return cIcNUMBERTerminalRuleCall_6_2_2_0; }
		
		//','
		public Keyword getCommaKeyword_6_2_3() { return cCommaKeyword_6_2_3; }
		
		//ic+=NUMBER
		public Assignment getIcAssignment_6_2_4() { return cIcAssignment_6_2_4; }
		
		//NUMBER
		public RuleCall getIcNUMBERTerminalRuleCall_6_2_4_0() { return cIcNUMBERTerminalRuleCall_6_2_4_0; }
		
		//('TEMP' '=' temp=NUMBER)?
		public Group getGroup_6_3() { return cGroup_6_3; }
		
		//'TEMP'
		public Keyword getTEMPKeyword_6_3_0() { return cTEMPKeyword_6_3_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_6_3_1() { return cEqualsSignKeyword_6_3_1; }
		
		//temp=NUMBER
		public Assignment getTempAssignment_6_3_2() { return cTempAssignment_6_3_2; }
		
		//NUMBER
		public RuleCall getTempNUMBERTerminalRuleCall_6_3_2_0() { return cTempNUMBERTerminalRuleCall_6_3_2_0; }
	}
	public class BJTModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.BJTModel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMODELKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameLabelParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Keyword cNPNKeyword_2_0 = (Keyword)cAlternatives_2.eContents().get(0);
		private final Keyword cPNPKeyword_2_1 = (Keyword)cAlternatives_2.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final UnorderedGroup cUnorderedGroup_4 = (UnorderedGroup)cGroup.eContents().get(4);
		private final Group cGroup_4_0 = (Group)cUnorderedGroup_4.eContents().get(0);
		private final Keyword cISKeyword_4_0_0 = (Keyword)cGroup_4_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_0_1 = (Keyword)cGroup_4_0.eContents().get(1);
		private final Assignment cSaturationCurrentAssignment_4_0_2 = (Assignment)cGroup_4_0.eContents().get(2);
		private final RuleCall cSaturationCurrentNUMBERTerminalRuleCall_4_0_2_0 = (RuleCall)cSaturationCurrentAssignment_4_0_2.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cUnorderedGroup_4.eContents().get(1);
		private final Keyword cBFKeyword_4_1_0 = (Keyword)cGroup_4_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_1_1 = (Keyword)cGroup_4_1.eContents().get(1);
		private final Assignment cBetaFAssignment_4_1_2 = (Assignment)cGroup_4_1.eContents().get(2);
		private final RuleCall cBetaFNUMBERTerminalRuleCall_4_1_2_0 = (RuleCall)cBetaFAssignment_4_1_2.eContents().get(0);
		private final Group cGroup_4_2 = (Group)cUnorderedGroup_4.eContents().get(2);
		private final Keyword cNFKeyword_4_2_0 = (Keyword)cGroup_4_2.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_2_1 = (Keyword)cGroup_4_2.eContents().get(1);
		private final Assignment cEmissionCoefficientForwardAssignment_4_2_2 = (Assignment)cGroup_4_2.eContents().get(2);
		private final RuleCall cEmissionCoefficientForwardNUMBERTerminalRuleCall_4_2_2_0 = (RuleCall)cEmissionCoefficientForwardAssignment_4_2_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cUnorderedGroup_4.eContents().get(3);
		private final Keyword cVAFKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_3_1 = (Keyword)cGroup_4_3.eContents().get(1);
		private final Assignment cEarlyVoltageForwardAssignment_4_3_2 = (Assignment)cGroup_4_3.eContents().get(2);
		private final RuleCall cEarlyVoltageForwardNUMBERTerminalRuleCall_4_3_2_0 = (RuleCall)cEarlyVoltageForwardAssignment_4_3_2.eContents().get(0);
		private final Group cGroup_4_4 = (Group)cUnorderedGroup_4.eContents().get(4);
		private final Keyword cIKFKeyword_4_4_0 = (Keyword)cGroup_4_4.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_4_1 = (Keyword)cGroup_4_4.eContents().get(1);
		private final Assignment cRollOffForwardAssignment_4_4_2 = (Assignment)cGroup_4_4.eContents().get(2);
		private final RuleCall cRollOffForwardNUMBERTerminalRuleCall_4_4_2_0 = (RuleCall)cRollOffForwardAssignment_4_4_2.eContents().get(0);
		private final Group cGroup_4_5 = (Group)cUnorderedGroup_4.eContents().get(5);
		private final Keyword cISEKeyword_4_5_0 = (Keyword)cGroup_4_5.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_5_1 = (Keyword)cGroup_4_5.eContents().get(1);
		private final Assignment cLeakBeCurrentAssignment_4_5_2 = (Assignment)cGroup_4_5.eContents().get(2);
		private final RuleCall cLeakBeCurrentNUMBERTerminalRuleCall_4_5_2_0 = (RuleCall)cLeakBeCurrentAssignment_4_5_2.eContents().get(0);
		private final Group cGroup_4_6 = (Group)cUnorderedGroup_4.eContents().get(6);
		private final Keyword cNEKeyword_4_6_0 = (Keyword)cGroup_4_6.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_6_1 = (Keyword)cGroup_4_6.eContents().get(1);
		private final Assignment cLeakBeEmissionCoefficientAssignment_4_6_2 = (Assignment)cGroup_4_6.eContents().get(2);
		private final RuleCall cLeakBeEmissionCoefficientNUMBERTerminalRuleCall_4_6_2_0 = (RuleCall)cLeakBeEmissionCoefficientAssignment_4_6_2.eContents().get(0);
		private final Group cGroup_4_7 = (Group)cUnorderedGroup_4.eContents().get(7);
		private final Keyword cBRKeyword_4_7_0 = (Keyword)cGroup_4_7.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_7_1 = (Keyword)cGroup_4_7.eContents().get(1);
		private final Assignment cBetaRAssignment_4_7_2 = (Assignment)cGroup_4_7.eContents().get(2);
		private final RuleCall cBetaRNUMBERTerminalRuleCall_4_7_2_0 = (RuleCall)cBetaRAssignment_4_7_2.eContents().get(0);
		private final Group cGroup_4_8 = (Group)cUnorderedGroup_4.eContents().get(8);
		private final Keyword cNRKeyword_4_8_0 = (Keyword)cGroup_4_8.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_8_1 = (Keyword)cGroup_4_8.eContents().get(1);
		private final Assignment cEmissionCoefficientReverseAssignment_4_8_2 = (Assignment)cGroup_4_8.eContents().get(2);
		private final RuleCall cEmissionCoefficientReverseNUMBERTerminalRuleCall_4_8_2_0 = (RuleCall)cEmissionCoefficientReverseAssignment_4_8_2.eContents().get(0);
		private final Group cGroup_4_9 = (Group)cUnorderedGroup_4.eContents().get(9);
		private final Keyword cVARKeyword_4_9_0 = (Keyword)cGroup_4_9.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_9_1 = (Keyword)cGroup_4_9.eContents().get(1);
		private final Assignment cEarlyVoltageReverseAssignment_4_9_2 = (Assignment)cGroup_4_9.eContents().get(2);
		private final RuleCall cEarlyVoltageReverseNUMBERTerminalRuleCall_4_9_2_0 = (RuleCall)cEarlyVoltageReverseAssignment_4_9_2.eContents().get(0);
		private final Group cGroup_4_10 = (Group)cUnorderedGroup_4.eContents().get(10);
		private final Keyword cIKRKeyword_4_10_0 = (Keyword)cGroup_4_10.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_10_1 = (Keyword)cGroup_4_10.eContents().get(1);
		private final Assignment cRollOffReverseAssignment_4_10_2 = (Assignment)cGroup_4_10.eContents().get(2);
		private final RuleCall cRollOffReverseNUMBERTerminalRuleCall_4_10_2_0 = (RuleCall)cRollOffReverseAssignment_4_10_2.eContents().get(0);
		private final Group cGroup_4_11 = (Group)cUnorderedGroup_4.eContents().get(11);
		private final Keyword cISCKeyword_4_11_0 = (Keyword)cGroup_4_11.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_11_1 = (Keyword)cGroup_4_11.eContents().get(1);
		private final Assignment cLeakBcCurrentAssignment_4_11_2 = (Assignment)cGroup_4_11.eContents().get(2);
		private final RuleCall cLeakBcCurrentNUMBERTerminalRuleCall_4_11_2_0 = (RuleCall)cLeakBcCurrentAssignment_4_11_2.eContents().get(0);
		private final Group cGroup_4_12 = (Group)cUnorderedGroup_4.eContents().get(12);
		private final Keyword cNCKeyword_4_12_0 = (Keyword)cGroup_4_12.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_12_1 = (Keyword)cGroup_4_12.eContents().get(1);
		private final Assignment cLeakBcEmissionCoefficientAssignment_4_12_2 = (Assignment)cGroup_4_12.eContents().get(2);
		private final RuleCall cLeakBcEmissionCoefficientNUMBERTerminalRuleCall_4_12_2_0 = (RuleCall)cLeakBcEmissionCoefficientAssignment_4_12_2.eContents().get(0);
		private final Group cGroup_4_13 = (Group)cUnorderedGroup_4.eContents().get(13);
		private final Keyword cRBKeyword_4_13_0 = (Keyword)cGroup_4_13.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_13_1 = (Keyword)cGroup_4_13.eContents().get(1);
		private final Assignment cBaseResistAssignment_4_13_2 = (Assignment)cGroup_4_13.eContents().get(2);
		private final RuleCall cBaseResistNUMBERTerminalRuleCall_4_13_2_0 = (RuleCall)cBaseResistAssignment_4_13_2.eContents().get(0);
		private final Group cGroup_4_14 = (Group)cUnorderedGroup_4.eContents().get(14);
		private final Keyword cIRBKeyword_4_14_0 = (Keyword)cGroup_4_14.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_14_1 = (Keyword)cGroup_4_14.eContents().get(1);
		private final Assignment cBaseCurrentHalfResistAssignment_4_14_2 = (Assignment)cGroup_4_14.eContents().get(2);
		private final RuleCall cBaseCurrentHalfResistNUMBERTerminalRuleCall_4_14_2_0 = (RuleCall)cBaseCurrentHalfResistAssignment_4_14_2.eContents().get(0);
		private final Group cGroup_4_15 = (Group)cUnorderedGroup_4.eContents().get(15);
		private final Keyword cRBMKeyword_4_15_0 = (Keyword)cGroup_4_15.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_15_1 = (Keyword)cGroup_4_15.eContents().get(1);
		private final Assignment cMinimumBaseResistanceAssignment_4_15_2 = (Assignment)cGroup_4_15.eContents().get(2);
		private final RuleCall cMinimumBaseResistanceNUMBERTerminalRuleCall_4_15_2_0 = (RuleCall)cMinimumBaseResistanceAssignment_4_15_2.eContents().get(0);
		private final Group cGroup_4_16 = (Group)cUnorderedGroup_4.eContents().get(16);
		private final Keyword cREKeyword_4_16_0 = (Keyword)cGroup_4_16.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_16_1 = (Keyword)cGroup_4_16.eContents().get(1);
		private final Assignment cEmitterResistanceAssignment_4_16_2 = (Assignment)cGroup_4_16.eContents().get(2);
		private final RuleCall cEmitterResistanceNUMBERTerminalRuleCall_4_16_2_0 = (RuleCall)cEmitterResistanceAssignment_4_16_2.eContents().get(0);
		private final Group cGroup_4_17 = (Group)cUnorderedGroup_4.eContents().get(17);
		private final Keyword cRCKeyword_4_17_0 = (Keyword)cGroup_4_17.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_17_1 = (Keyword)cGroup_4_17.eContents().get(1);
		private final Assignment cCollectorResistanceAssignment_4_17_2 = (Assignment)cGroup_4_17.eContents().get(2);
		private final RuleCall cCollectorResistanceNUMBERTerminalRuleCall_4_17_2_0 = (RuleCall)cCollectorResistanceAssignment_4_17_2.eContents().get(0);
		private final Group cGroup_4_18 = (Group)cUnorderedGroup_4.eContents().get(18);
		private final Keyword cCJEKeyword_4_18_0 = (Keyword)cGroup_4_18.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_18_1 = (Keyword)cGroup_4_18.eContents().get(1);
		private final Assignment cDepletionCapBeAssignment_4_18_2 = (Assignment)cGroup_4_18.eContents().get(2);
		private final RuleCall cDepletionCapBeNUMBERTerminalRuleCall_4_18_2_0 = (RuleCall)cDepletionCapBeAssignment_4_18_2.eContents().get(0);
		private final Group cGroup_4_19 = (Group)cUnorderedGroup_4.eContents().get(19);
		private final Keyword cVJEKeyword_4_19_0 = (Keyword)cGroup_4_19.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_19_1 = (Keyword)cGroup_4_19.eContents().get(1);
		private final Assignment cPotentialBeAssignment_4_19_2 = (Assignment)cGroup_4_19.eContents().get(2);
		private final RuleCall cPotentialBeNUMBERTerminalRuleCall_4_19_2_0 = (RuleCall)cPotentialBeAssignment_4_19_2.eContents().get(0);
		private final Group cGroup_4_20 = (Group)cUnorderedGroup_4.eContents().get(20);
		private final Keyword cMJEKeyword_4_20_0 = (Keyword)cGroup_4_20.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_20_1 = (Keyword)cGroup_4_20.eContents().get(1);
		private final Assignment cJunctionExpBeAssignment_4_20_2 = (Assignment)cGroup_4_20.eContents().get(2);
		private final RuleCall cJunctionExpBeNUMBERTerminalRuleCall_4_20_2_0 = (RuleCall)cJunctionExpBeAssignment_4_20_2.eContents().get(0);
		private final Group cGroup_4_21 = (Group)cUnorderedGroup_4.eContents().get(21);
		private final Keyword cTFKeyword_4_21_0 = (Keyword)cGroup_4_21.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_21_1 = (Keyword)cGroup_4_21.eContents().get(1);
		private final Assignment cTransitTimeForwardAssignment_4_21_2 = (Assignment)cGroup_4_21.eContents().get(2);
		private final RuleCall cTransitTimeForwardNUMBERTerminalRuleCall_4_21_2_0 = (RuleCall)cTransitTimeForwardAssignment_4_21_2.eContents().get(0);
		private final Group cGroup_4_22 = (Group)cUnorderedGroup_4.eContents().get(22);
		private final Keyword cXTFKeyword_4_22_0 = (Keyword)cGroup_4_22.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_22_1 = (Keyword)cGroup_4_22.eContents().get(1);
		private final Assignment cTransitTimeBiasCoefficientForwardAssignment_4_22_2 = (Assignment)cGroup_4_22.eContents().get(2);
		private final RuleCall cTransitTimeBiasCoefficientForwardNUMBERTerminalRuleCall_4_22_2_0 = (RuleCall)cTransitTimeBiasCoefficientForwardAssignment_4_22_2.eContents().get(0);
		private final Group cGroup_4_23 = (Group)cUnorderedGroup_4.eContents().get(23);
		private final Keyword cVTFKeyword_4_23_0 = (Keyword)cGroup_4_23.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_23_1 = (Keyword)cGroup_4_23.eContents().get(1);
		private final Assignment cTransitTimeForwardVoltageBcAssignment_4_23_2 = (Assignment)cGroup_4_23.eContents().get(2);
		private final RuleCall cTransitTimeForwardVoltageBcNUMBERTerminalRuleCall_4_23_2_0 = (RuleCall)cTransitTimeForwardVoltageBcAssignment_4_23_2.eContents().get(0);
		private final Group cGroup_4_24 = (Group)cUnorderedGroup_4.eContents().get(24);
		private final Keyword cITFKeyword_4_24_0 = (Keyword)cGroup_4_24.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_24_1 = (Keyword)cGroup_4_24.eContents().get(1);
		private final Assignment cTransitTimeHighCurrentForwardAssignment_4_24_2 = (Assignment)cGroup_4_24.eContents().get(2);
		private final RuleCall cTransitTimeHighCurrentForwardNUMBERTerminalRuleCall_4_24_2_0 = (RuleCall)cTransitTimeHighCurrentForwardAssignment_4_24_2.eContents().get(0);
		private final Group cGroup_4_25 = (Group)cUnorderedGroup_4.eContents().get(25);
		private final Keyword cPTFKeyword_4_25_0 = (Keyword)cGroup_4_25.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_25_1 = (Keyword)cGroup_4_25.eContents().get(1);
		private final Assignment cExcessPhaseAssignment_4_25_2 = (Assignment)cGroup_4_25.eContents().get(2);
		private final RuleCall cExcessPhaseNUMBERTerminalRuleCall_4_25_2_0 = (RuleCall)cExcessPhaseAssignment_4_25_2.eContents().get(0);
		private final Group cGroup_4_26 = (Group)cUnorderedGroup_4.eContents().get(26);
		private final Keyword cCJCKeyword_4_26_0 = (Keyword)cGroup_4_26.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_26_1 = (Keyword)cGroup_4_26.eContents().get(1);
		private final Assignment cDepletionCapBcAssignment_4_26_2 = (Assignment)cGroup_4_26.eContents().get(2);
		private final RuleCall cDepletionCapBcNUMBERTerminalRuleCall_4_26_2_0 = (RuleCall)cDepletionCapBcAssignment_4_26_2.eContents().get(0);
		private final Group cGroup_4_27 = (Group)cUnorderedGroup_4.eContents().get(27);
		private final Keyword cVJCKeyword_4_27_0 = (Keyword)cGroup_4_27.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_27_1 = (Keyword)cGroup_4_27.eContents().get(1);
		private final Assignment cPotentialBcAssignment_4_27_2 = (Assignment)cGroup_4_27.eContents().get(2);
		private final RuleCall cPotentialBcNUMBERTerminalRuleCall_4_27_2_0 = (RuleCall)cPotentialBcAssignment_4_27_2.eContents().get(0);
		private final Group cGroup_4_28 = (Group)cUnorderedGroup_4.eContents().get(28);
		private final Keyword cMJCKeyword_4_28_0 = (Keyword)cGroup_4_28.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_28_1 = (Keyword)cGroup_4_28.eContents().get(1);
		private final Assignment cJunctionExpBcAssignment_4_28_2 = (Assignment)cGroup_4_28.eContents().get(2);
		private final RuleCall cJunctionExpBcNUMBERTerminalRuleCall_4_28_2_0 = (RuleCall)cJunctionExpBcAssignment_4_28_2.eContents().get(0);
		private final Group cGroup_4_29 = (Group)cUnorderedGroup_4.eContents().get(29);
		private final Keyword cXCJCKeyword_4_29_0 = (Keyword)cGroup_4_29.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_29_1 = (Keyword)cGroup_4_29.eContents().get(1);
		private final Assignment cBaseFractionBcCapAssignment_4_29_2 = (Assignment)cGroup_4_29.eContents().get(2);
		private final RuleCall cBaseFractionBcCapNUMBERTerminalRuleCall_4_29_2_0 = (RuleCall)cBaseFractionBcCapAssignment_4_29_2.eContents().get(0);
		private final Group cGroup_4_30 = (Group)cUnorderedGroup_4.eContents().get(30);
		private final Keyword cTRKeyword_4_30_0 = (Keyword)cGroup_4_30.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_30_1 = (Keyword)cGroup_4_30.eContents().get(1);
		private final Assignment cTransitTimeReverseAssignment_4_30_2 = (Assignment)cGroup_4_30.eContents().get(2);
		private final RuleCall cTransitTimeReverseNUMBERTerminalRuleCall_4_30_2_0 = (RuleCall)cTransitTimeReverseAssignment_4_30_2.eContents().get(0);
		private final Group cGroup_4_31 = (Group)cUnorderedGroup_4.eContents().get(31);
		private final Keyword cCJSKeyword_4_31_0 = (Keyword)cGroup_4_31.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_31_1 = (Keyword)cGroup_4_31.eContents().get(1);
		private final Assignment cCapCsAssignment_4_31_2 = (Assignment)cGroup_4_31.eContents().get(2);
		private final RuleCall cCapCsNUMBERTerminalRuleCall_4_31_2_0 = (RuleCall)cCapCsAssignment_4_31_2.eContents().get(0);
		private final Group cGroup_4_32 = (Group)cUnorderedGroup_4.eContents().get(32);
		private final Keyword cVJSKeyword_4_32_0 = (Keyword)cGroup_4_32.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_32_1 = (Keyword)cGroup_4_32.eContents().get(1);
		private final Assignment cPotentialSubstrateAssignment_4_32_2 = (Assignment)cGroup_4_32.eContents().get(2);
		private final RuleCall cPotentialSubstrateNUMBERTerminalRuleCall_4_32_2_0 = (RuleCall)cPotentialSubstrateAssignment_4_32_2.eContents().get(0);
		private final Group cGroup_4_33 = (Group)cUnorderedGroup_4.eContents().get(33);
		private final Keyword cMJSKeyword_4_33_0 = (Keyword)cGroup_4_33.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_33_1 = (Keyword)cGroup_4_33.eContents().get(1);
		private final Assignment cExponentialSubstrateAssignment_4_33_2 = (Assignment)cGroup_4_33.eContents().get(2);
		private final RuleCall cExponentialSubstrateNUMBERTerminalRuleCall_4_33_2_0 = (RuleCall)cExponentialSubstrateAssignment_4_33_2.eContents().get(0);
		private final Group cGroup_4_34 = (Group)cUnorderedGroup_4.eContents().get(34);
		private final Keyword cXTBKeyword_4_34_0 = (Keyword)cGroup_4_34.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_34_1 = (Keyword)cGroup_4_34.eContents().get(1);
		private final Assignment cBetaExponentAssignment_4_34_2 = (Assignment)cGroup_4_34.eContents().get(2);
		private final RuleCall cBetaExponentNUMBERTerminalRuleCall_4_34_2_0 = (RuleCall)cBetaExponentAssignment_4_34_2.eContents().get(0);
		private final Group cGroup_4_35 = (Group)cUnorderedGroup_4.eContents().get(35);
		private final Keyword cEGKeyword_4_35_0 = (Keyword)cGroup_4_35.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_35_1 = (Keyword)cGroup_4_35.eContents().get(1);
		private final Assignment cEnergyGapAssignment_4_35_2 = (Assignment)cGroup_4_35.eContents().get(2);
		private final RuleCall cEnergyGapNUMBERTerminalRuleCall_4_35_2_0 = (RuleCall)cEnergyGapAssignment_4_35_2.eContents().get(0);
		private final Group cGroup_4_36 = (Group)cUnorderedGroup_4.eContents().get(36);
		private final Keyword cXTIKeyword_4_36_0 = (Keyword)cGroup_4_36.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_36_1 = (Keyword)cGroup_4_36.eContents().get(1);
		private final Assignment cTempExpIsAssignment_4_36_2 = (Assignment)cGroup_4_36.eContents().get(2);
		private final RuleCall cTempExpIsNUMBERTerminalRuleCall_4_36_2_0 = (RuleCall)cTempExpIsAssignment_4_36_2.eContents().get(0);
		private final Group cGroup_4_37 = (Group)cUnorderedGroup_4.eContents().get(37);
		private final Keyword cKFKeyword_4_37_0 = (Keyword)cGroup_4_37.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_37_1 = (Keyword)cGroup_4_37.eContents().get(1);
		private final Assignment cFlickerNoiseCoefficientAssignment_4_37_2 = (Assignment)cGroup_4_37.eContents().get(2);
		private final RuleCall cFlickerNoiseCoefficientNUMBERTerminalRuleCall_4_37_2_0 = (RuleCall)cFlickerNoiseCoefficientAssignment_4_37_2.eContents().get(0);
		private final Group cGroup_4_38 = (Group)cUnorderedGroup_4.eContents().get(38);
		private final Keyword cAFKeyword_4_38_0 = (Keyword)cGroup_4_38.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_38_1 = (Keyword)cGroup_4_38.eContents().get(1);
		private final Assignment cFlickerNoiseExponentAssignment_4_38_2 = (Assignment)cGroup_4_38.eContents().get(2);
		private final RuleCall cFlickerNoiseExponentNUMBERTerminalRuleCall_4_38_2_0 = (RuleCall)cFlickerNoiseExponentAssignment_4_38_2.eContents().get(0);
		private final Group cGroup_4_39 = (Group)cUnorderedGroup_4.eContents().get(39);
		private final Keyword cFCKeyword_4_39_0 = (Keyword)cGroup_4_39.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_39_1 = (Keyword)cGroup_4_39.eContents().get(1);
		private final Assignment cDepletionCapCoefficientAssignment_4_39_2 = (Assignment)cGroup_4_39.eContents().get(2);
		private final RuleCall cDepletionCapCoefficientNUMBERTerminalRuleCall_4_39_2_0 = (RuleCall)cDepletionCapCoefficientAssignment_4_39_2.eContents().get(0);
		private final Group cGroup_4_40 = (Group)cUnorderedGroup_4.eContents().get(40);
		private final Keyword cTNOMKeyword_4_40_0 = (Keyword)cGroup_4_40.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_40_1 = (Keyword)cGroup_4_40.eContents().get(1);
		private final Assignment cNominalTemperatureAssignment_4_40_2 = (Assignment)cGroup_4_40.eContents().get(2);
		private final RuleCall cNominalTemperatureNUMBERTerminalRuleCall_4_40_2_0 = (RuleCall)cNominalTemperatureAssignment_4_40_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//BJTModel:
		//	'.MODEL' name=Label ('NPN' | 'PNP') '(' (('IS' '=' saturationCurrent=NUMBER)? & ('BF' '=' betaF=NUMBER)? & ('NF' '='
		//	emissionCoefficientForward=NUMBER)? & ('VAF' '=' earlyVoltageForward=NUMBER)? & ('IKF' '=' rollOffForward=NUMBER)? &
		//	('ISE' '=' leakBeCurrent=NUMBER)? & ('NE' '=' leakBeEmissionCoefficient=NUMBER)? & ('BR' '=' betaR=NUMBER)? & ('NR'
		//	'=' emissionCoefficientReverse=NUMBER)? & ('VAR' '=' earlyVoltageReverse=NUMBER)? & ('IKR' '=' rollOffReverse=NUMBER)?
		//	& ('ISC' '=' leakBcCurrent=NUMBER)? & ('NC' '=' leakBcEmissionCoefficient=NUMBER)? & ('RB' '=' baseResist=NUMBER)? &
		//	('IRB' '=' baseCurrentHalfResist=NUMBER)? & ('RBM' '=' minimumBaseResistance=NUMBER)? & ('RE' '='
		//	emitterResistance=NUMBER)? & ('RC' '=' collectorResistance=NUMBER)? & ('CJE' '=' depletionCapBe=NUMBER)? & ('VJE' '='
		//	potentialBe=NUMBER)? & ('MJE' '=' junctionExpBe=NUMBER)? & ('TF' '=' transitTimeForward=NUMBER)? & ('XTF' '='
		//	transitTimeBiasCoefficientForward=NUMBER)? & ('VTF' '=' transitTimeForwardVoltageBc=NUMBER)? & ('ITF' '='
		//	transitTimeHighCurrentForward=NUMBER)? & ('PTF' '=' excessPhase=NUMBER)? & ('CJC' '=' depletionCapBc=NUMBER)? & ('VJC'
		//	'=' potentialBc=NUMBER)? & ('MJC' '=' junctionExpBc=NUMBER)? & ('XCJC' '=' baseFractionBcCap=NUMBER)? & ('TR' '='
		//	transitTimeReverse=NUMBER)? & ('CJS' '=' capCs=NUMBER)? & ('VJS' '=' potentialSubstrate=NUMBER)? & ('MJS' '='
		//	exponentialSubstrate=NUMBER)? & ('XTB' '=' betaExponent=NUMBER)? & ('EG' '=' energyGap=NUMBER)? & ('XTI' '='
		//	tempExpIs=NUMBER)? & ('KF' '=' flickerNoiseCoefficient=NUMBER)? & ('AF' '=' flickerNoiseExponent=NUMBER)? & ('FC' '='
		//	depletionCapCoefficient=NUMBER)? & ('TNOM' '=' nominalTemperature=NUMBER)?) ')';
		@Override public ParserRule getRule() { return rule; }
		
		//'.MODEL' name=Label ('NPN' | 'PNP') '(' (('IS' '=' saturationCurrent=NUMBER)? & ('BF' '=' betaF=NUMBER)? & ('NF' '='
		//emissionCoefficientForward=NUMBER)? & ('VAF' '=' earlyVoltageForward=NUMBER)? & ('IKF' '=' rollOffForward=NUMBER)? &
		//('ISE' '=' leakBeCurrent=NUMBER)? & ('NE' '=' leakBeEmissionCoefficient=NUMBER)? & ('BR' '=' betaR=NUMBER)? & ('NR' '='
		//emissionCoefficientReverse=NUMBER)? & ('VAR' '=' earlyVoltageReverse=NUMBER)? & ('IKR' '=' rollOffReverse=NUMBER)? &
		//('ISC' '=' leakBcCurrent=NUMBER)? & ('NC' '=' leakBcEmissionCoefficient=NUMBER)? & ('RB' '=' baseResist=NUMBER)? &
		//('IRB' '=' baseCurrentHalfResist=NUMBER)? & ('RBM' '=' minimumBaseResistance=NUMBER)? & ('RE' '='
		//emitterResistance=NUMBER)? & ('RC' '=' collectorResistance=NUMBER)? & ('CJE' '=' depletionCapBe=NUMBER)? & ('VJE' '='
		//potentialBe=NUMBER)? & ('MJE' '=' junctionExpBe=NUMBER)? & ('TF' '=' transitTimeForward=NUMBER)? & ('XTF' '='
		//transitTimeBiasCoefficientForward=NUMBER)? & ('VTF' '=' transitTimeForwardVoltageBc=NUMBER)? & ('ITF' '='
		//transitTimeHighCurrentForward=NUMBER)? & ('PTF' '=' excessPhase=NUMBER)? & ('CJC' '=' depletionCapBc=NUMBER)? & ('VJC'
		//'=' potentialBc=NUMBER)? & ('MJC' '=' junctionExpBc=NUMBER)? & ('XCJC' '=' baseFractionBcCap=NUMBER)? & ('TR' '='
		//transitTimeReverse=NUMBER)? & ('CJS' '=' capCs=NUMBER)? & ('VJS' '=' potentialSubstrate=NUMBER)? & ('MJS' '='
		//exponentialSubstrate=NUMBER)? & ('XTB' '=' betaExponent=NUMBER)? & ('EG' '=' energyGap=NUMBER)? & ('XTI' '='
		//tempExpIs=NUMBER)? & ('KF' '=' flickerNoiseCoefficient=NUMBER)? & ('AF' '=' flickerNoiseExponent=NUMBER)? & ('FC' '='
		//depletionCapCoefficient=NUMBER)? & ('TNOM' '=' nominalTemperature=NUMBER)?) ')'
		public Group getGroup() { return cGroup; }
		
		//'.MODEL'
		public Keyword getMODELKeyword_0() { return cMODELKeyword_0; }
		
		//name=Label
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//Label
		public RuleCall getNameLabelParserRuleCall_1_0() { return cNameLabelParserRuleCall_1_0; }
		
		//'NPN' | 'PNP'
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//'NPN'
		public Keyword getNPNKeyword_2_0() { return cNPNKeyword_2_0; }
		
		//'PNP'
		public Keyword getPNPKeyword_2_1() { return cPNPKeyword_2_1; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_3() { return cLeftParenthesisKeyword_3; }
		
		//('IS' '=' saturationCurrent=NUMBER)? & ('BF' '=' betaF=NUMBER)? & ('NF' '=' emissionCoefficientForward=NUMBER)? & ('VAF'
		//'=' earlyVoltageForward=NUMBER)? & ('IKF' '=' rollOffForward=NUMBER)? & ('ISE' '=' leakBeCurrent=NUMBER)? & ('NE' '='
		//leakBeEmissionCoefficient=NUMBER)? & ('BR' '=' betaR=NUMBER)? & ('NR' '=' emissionCoefficientReverse=NUMBER)? & ('VAR'
		//'=' earlyVoltageReverse=NUMBER)? & ('IKR' '=' rollOffReverse=NUMBER)? & ('ISC' '=' leakBcCurrent=NUMBER)? & ('NC' '='
		//leakBcEmissionCoefficient=NUMBER)? & ('RB' '=' baseResist=NUMBER)? & ('IRB' '=' baseCurrentHalfResist=NUMBER)? & ('RBM'
		//'=' minimumBaseResistance=NUMBER)? & ('RE' '=' emitterResistance=NUMBER)? & ('RC' '=' collectorResistance=NUMBER)? &
		//('CJE' '=' depletionCapBe=NUMBER)? & ('VJE' '=' potentialBe=NUMBER)? & ('MJE' '=' junctionExpBe=NUMBER)? & ('TF' '='
		//transitTimeForward=NUMBER)? & ('XTF' '=' transitTimeBiasCoefficientForward=NUMBER)? & ('VTF' '='
		//transitTimeForwardVoltageBc=NUMBER)? & ('ITF' '=' transitTimeHighCurrentForward=NUMBER)? & ('PTF' '='
		//excessPhase=NUMBER)? & ('CJC' '=' depletionCapBc=NUMBER)? & ('VJC' '=' potentialBc=NUMBER)? & ('MJC' '='
		//junctionExpBc=NUMBER)? & ('XCJC' '=' baseFractionBcCap=NUMBER)? & ('TR' '=' transitTimeReverse=NUMBER)? & ('CJS' '='
		//capCs=NUMBER)? & ('VJS' '=' potentialSubstrate=NUMBER)? & ('MJS' '=' exponentialSubstrate=NUMBER)? & ('XTB' '='
		//betaExponent=NUMBER)? & ('EG' '=' energyGap=NUMBER)? & ('XTI' '=' tempExpIs=NUMBER)? & ('KF' '='
		//flickerNoiseCoefficient=NUMBER)? & ('AF' '=' flickerNoiseExponent=NUMBER)? & ('FC' '=' depletionCapCoefficient=NUMBER)?
		//& ('TNOM' '=' nominalTemperature=NUMBER)?
		public UnorderedGroup getUnorderedGroup_4() { return cUnorderedGroup_4; }
		
		//('IS' '=' saturationCurrent=NUMBER)?
		public Group getGroup_4_0() { return cGroup_4_0; }
		
		//'IS'
		public Keyword getISKeyword_4_0_0() { return cISKeyword_4_0_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_0_1() { return cEqualsSignKeyword_4_0_1; }
		
		//saturationCurrent=NUMBER
		public Assignment getSaturationCurrentAssignment_4_0_2() { return cSaturationCurrentAssignment_4_0_2; }
		
		//NUMBER
		public RuleCall getSaturationCurrentNUMBERTerminalRuleCall_4_0_2_0() { return cSaturationCurrentNUMBERTerminalRuleCall_4_0_2_0; }
		
		//('BF' '=' betaF=NUMBER)?
		public Group getGroup_4_1() { return cGroup_4_1; }
		
		//'BF'
		public Keyword getBFKeyword_4_1_0() { return cBFKeyword_4_1_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_1_1() { return cEqualsSignKeyword_4_1_1; }
		
		//betaF=NUMBER
		public Assignment getBetaFAssignment_4_1_2() { return cBetaFAssignment_4_1_2; }
		
		//NUMBER
		public RuleCall getBetaFNUMBERTerminalRuleCall_4_1_2_0() { return cBetaFNUMBERTerminalRuleCall_4_1_2_0; }
		
		//('NF' '=' emissionCoefficientForward=NUMBER)?
		public Group getGroup_4_2() { return cGroup_4_2; }
		
		//'NF'
		public Keyword getNFKeyword_4_2_0() { return cNFKeyword_4_2_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_2_1() { return cEqualsSignKeyword_4_2_1; }
		
		//emissionCoefficientForward=NUMBER
		public Assignment getEmissionCoefficientForwardAssignment_4_2_2() { return cEmissionCoefficientForwardAssignment_4_2_2; }
		
		//NUMBER
		public RuleCall getEmissionCoefficientForwardNUMBERTerminalRuleCall_4_2_2_0() { return cEmissionCoefficientForwardNUMBERTerminalRuleCall_4_2_2_0; }
		
		//('VAF' '=' earlyVoltageForward=NUMBER)?
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//'VAF'
		public Keyword getVAFKeyword_4_3_0() { return cVAFKeyword_4_3_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_3_1() { return cEqualsSignKeyword_4_3_1; }
		
		//earlyVoltageForward=NUMBER
		public Assignment getEarlyVoltageForwardAssignment_4_3_2() { return cEarlyVoltageForwardAssignment_4_3_2; }
		
		//NUMBER
		public RuleCall getEarlyVoltageForwardNUMBERTerminalRuleCall_4_3_2_0() { return cEarlyVoltageForwardNUMBERTerminalRuleCall_4_3_2_0; }
		
		//('IKF' '=' rollOffForward=NUMBER)?
		public Group getGroup_4_4() { return cGroup_4_4; }
		
		//'IKF'
		public Keyword getIKFKeyword_4_4_0() { return cIKFKeyword_4_4_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_4_1() { return cEqualsSignKeyword_4_4_1; }
		
		//rollOffForward=NUMBER
		public Assignment getRollOffForwardAssignment_4_4_2() { return cRollOffForwardAssignment_4_4_2; }
		
		//NUMBER
		public RuleCall getRollOffForwardNUMBERTerminalRuleCall_4_4_2_0() { return cRollOffForwardNUMBERTerminalRuleCall_4_4_2_0; }
		
		//('ISE' '=' leakBeCurrent=NUMBER)?
		public Group getGroup_4_5() { return cGroup_4_5; }
		
		//'ISE'
		public Keyword getISEKeyword_4_5_0() { return cISEKeyword_4_5_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_5_1() { return cEqualsSignKeyword_4_5_1; }
		
		//leakBeCurrent=NUMBER
		public Assignment getLeakBeCurrentAssignment_4_5_2() { return cLeakBeCurrentAssignment_4_5_2; }
		
		//NUMBER
		public RuleCall getLeakBeCurrentNUMBERTerminalRuleCall_4_5_2_0() { return cLeakBeCurrentNUMBERTerminalRuleCall_4_5_2_0; }
		
		//('NE' '=' leakBeEmissionCoefficient=NUMBER)?
		public Group getGroup_4_6() { return cGroup_4_6; }
		
		//'NE'
		public Keyword getNEKeyword_4_6_0() { return cNEKeyword_4_6_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_6_1() { return cEqualsSignKeyword_4_6_1; }
		
		//leakBeEmissionCoefficient=NUMBER
		public Assignment getLeakBeEmissionCoefficientAssignment_4_6_2() { return cLeakBeEmissionCoefficientAssignment_4_6_2; }
		
		//NUMBER
		public RuleCall getLeakBeEmissionCoefficientNUMBERTerminalRuleCall_4_6_2_0() { return cLeakBeEmissionCoefficientNUMBERTerminalRuleCall_4_6_2_0; }
		
		//('BR' '=' betaR=NUMBER)?
		public Group getGroup_4_7() { return cGroup_4_7; }
		
		//'BR'
		public Keyword getBRKeyword_4_7_0() { return cBRKeyword_4_7_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_7_1() { return cEqualsSignKeyword_4_7_1; }
		
		//betaR=NUMBER
		public Assignment getBetaRAssignment_4_7_2() { return cBetaRAssignment_4_7_2; }
		
		//NUMBER
		public RuleCall getBetaRNUMBERTerminalRuleCall_4_7_2_0() { return cBetaRNUMBERTerminalRuleCall_4_7_2_0; }
		
		//('NR' '=' emissionCoefficientReverse=NUMBER)?
		public Group getGroup_4_8() { return cGroup_4_8; }
		
		//'NR'
		public Keyword getNRKeyword_4_8_0() { return cNRKeyword_4_8_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_8_1() { return cEqualsSignKeyword_4_8_1; }
		
		//emissionCoefficientReverse=NUMBER
		public Assignment getEmissionCoefficientReverseAssignment_4_8_2() { return cEmissionCoefficientReverseAssignment_4_8_2; }
		
		//NUMBER
		public RuleCall getEmissionCoefficientReverseNUMBERTerminalRuleCall_4_8_2_0() { return cEmissionCoefficientReverseNUMBERTerminalRuleCall_4_8_2_0; }
		
		//('VAR' '=' earlyVoltageReverse=NUMBER)?
		public Group getGroup_4_9() { return cGroup_4_9; }
		
		//'VAR'
		public Keyword getVARKeyword_4_9_0() { return cVARKeyword_4_9_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_9_1() { return cEqualsSignKeyword_4_9_1; }
		
		//earlyVoltageReverse=NUMBER
		public Assignment getEarlyVoltageReverseAssignment_4_9_2() { return cEarlyVoltageReverseAssignment_4_9_2; }
		
		//NUMBER
		public RuleCall getEarlyVoltageReverseNUMBERTerminalRuleCall_4_9_2_0() { return cEarlyVoltageReverseNUMBERTerminalRuleCall_4_9_2_0; }
		
		//('IKR' '=' rollOffReverse=NUMBER)?
		public Group getGroup_4_10() { return cGroup_4_10; }
		
		//'IKR'
		public Keyword getIKRKeyword_4_10_0() { return cIKRKeyword_4_10_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_10_1() { return cEqualsSignKeyword_4_10_1; }
		
		//rollOffReverse=NUMBER
		public Assignment getRollOffReverseAssignment_4_10_2() { return cRollOffReverseAssignment_4_10_2; }
		
		//NUMBER
		public RuleCall getRollOffReverseNUMBERTerminalRuleCall_4_10_2_0() { return cRollOffReverseNUMBERTerminalRuleCall_4_10_2_0; }
		
		//('ISC' '=' leakBcCurrent=NUMBER)?
		public Group getGroup_4_11() { return cGroup_4_11; }
		
		//'ISC'
		public Keyword getISCKeyword_4_11_0() { return cISCKeyword_4_11_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_11_1() { return cEqualsSignKeyword_4_11_1; }
		
		//leakBcCurrent=NUMBER
		public Assignment getLeakBcCurrentAssignment_4_11_2() { return cLeakBcCurrentAssignment_4_11_2; }
		
		//NUMBER
		public RuleCall getLeakBcCurrentNUMBERTerminalRuleCall_4_11_2_0() { return cLeakBcCurrentNUMBERTerminalRuleCall_4_11_2_0; }
		
		//('NC' '=' leakBcEmissionCoefficient=NUMBER)?
		public Group getGroup_4_12() { return cGroup_4_12; }
		
		//'NC'
		public Keyword getNCKeyword_4_12_0() { return cNCKeyword_4_12_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_12_1() { return cEqualsSignKeyword_4_12_1; }
		
		//leakBcEmissionCoefficient=NUMBER
		public Assignment getLeakBcEmissionCoefficientAssignment_4_12_2() { return cLeakBcEmissionCoefficientAssignment_4_12_2; }
		
		//NUMBER
		public RuleCall getLeakBcEmissionCoefficientNUMBERTerminalRuleCall_4_12_2_0() { return cLeakBcEmissionCoefficientNUMBERTerminalRuleCall_4_12_2_0; }
		
		//('RB' '=' baseResist=NUMBER)?
		public Group getGroup_4_13() { return cGroup_4_13; }
		
		//'RB'
		public Keyword getRBKeyword_4_13_0() { return cRBKeyword_4_13_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_13_1() { return cEqualsSignKeyword_4_13_1; }
		
		//baseResist=NUMBER
		public Assignment getBaseResistAssignment_4_13_2() { return cBaseResistAssignment_4_13_2; }
		
		//NUMBER
		public RuleCall getBaseResistNUMBERTerminalRuleCall_4_13_2_0() { return cBaseResistNUMBERTerminalRuleCall_4_13_2_0; }
		
		//('IRB' '=' baseCurrentHalfResist=NUMBER)?
		public Group getGroup_4_14() { return cGroup_4_14; }
		
		//'IRB'
		public Keyword getIRBKeyword_4_14_0() { return cIRBKeyword_4_14_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_14_1() { return cEqualsSignKeyword_4_14_1; }
		
		//baseCurrentHalfResist=NUMBER
		public Assignment getBaseCurrentHalfResistAssignment_4_14_2() { return cBaseCurrentHalfResistAssignment_4_14_2; }
		
		//NUMBER
		public RuleCall getBaseCurrentHalfResistNUMBERTerminalRuleCall_4_14_2_0() { return cBaseCurrentHalfResistNUMBERTerminalRuleCall_4_14_2_0; }
		
		//('RBM' '=' minimumBaseResistance=NUMBER)?
		public Group getGroup_4_15() { return cGroup_4_15; }
		
		//'RBM'
		public Keyword getRBMKeyword_4_15_0() { return cRBMKeyword_4_15_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_15_1() { return cEqualsSignKeyword_4_15_1; }
		
		//minimumBaseResistance=NUMBER
		public Assignment getMinimumBaseResistanceAssignment_4_15_2() { return cMinimumBaseResistanceAssignment_4_15_2; }
		
		//NUMBER
		public RuleCall getMinimumBaseResistanceNUMBERTerminalRuleCall_4_15_2_0() { return cMinimumBaseResistanceNUMBERTerminalRuleCall_4_15_2_0; }
		
		//('RE' '=' emitterResistance=NUMBER)?
		public Group getGroup_4_16() { return cGroup_4_16; }
		
		//'RE'
		public Keyword getREKeyword_4_16_0() { return cREKeyword_4_16_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_16_1() { return cEqualsSignKeyword_4_16_1; }
		
		//emitterResistance=NUMBER
		public Assignment getEmitterResistanceAssignment_4_16_2() { return cEmitterResistanceAssignment_4_16_2; }
		
		//NUMBER
		public RuleCall getEmitterResistanceNUMBERTerminalRuleCall_4_16_2_0() { return cEmitterResistanceNUMBERTerminalRuleCall_4_16_2_0; }
		
		//('RC' '=' collectorResistance=NUMBER)?
		public Group getGroup_4_17() { return cGroup_4_17; }
		
		//'RC'
		public Keyword getRCKeyword_4_17_0() { return cRCKeyword_4_17_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_17_1() { return cEqualsSignKeyword_4_17_1; }
		
		//collectorResistance=NUMBER
		public Assignment getCollectorResistanceAssignment_4_17_2() { return cCollectorResistanceAssignment_4_17_2; }
		
		//NUMBER
		public RuleCall getCollectorResistanceNUMBERTerminalRuleCall_4_17_2_0() { return cCollectorResistanceNUMBERTerminalRuleCall_4_17_2_0; }
		
		//('CJE' '=' depletionCapBe=NUMBER)?
		public Group getGroup_4_18() { return cGroup_4_18; }
		
		//'CJE'
		public Keyword getCJEKeyword_4_18_0() { return cCJEKeyword_4_18_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_18_1() { return cEqualsSignKeyword_4_18_1; }
		
		//depletionCapBe=NUMBER
		public Assignment getDepletionCapBeAssignment_4_18_2() { return cDepletionCapBeAssignment_4_18_2; }
		
		//NUMBER
		public RuleCall getDepletionCapBeNUMBERTerminalRuleCall_4_18_2_0() { return cDepletionCapBeNUMBERTerminalRuleCall_4_18_2_0; }
		
		//('VJE' '=' potentialBe=NUMBER)?
		public Group getGroup_4_19() { return cGroup_4_19; }
		
		//'VJE'
		public Keyword getVJEKeyword_4_19_0() { return cVJEKeyword_4_19_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_19_1() { return cEqualsSignKeyword_4_19_1; }
		
		//potentialBe=NUMBER
		public Assignment getPotentialBeAssignment_4_19_2() { return cPotentialBeAssignment_4_19_2; }
		
		//NUMBER
		public RuleCall getPotentialBeNUMBERTerminalRuleCall_4_19_2_0() { return cPotentialBeNUMBERTerminalRuleCall_4_19_2_0; }
		
		//('MJE' '=' junctionExpBe=NUMBER)?
		public Group getGroup_4_20() { return cGroup_4_20; }
		
		//'MJE'
		public Keyword getMJEKeyword_4_20_0() { return cMJEKeyword_4_20_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_20_1() { return cEqualsSignKeyword_4_20_1; }
		
		//junctionExpBe=NUMBER
		public Assignment getJunctionExpBeAssignment_4_20_2() { return cJunctionExpBeAssignment_4_20_2; }
		
		//NUMBER
		public RuleCall getJunctionExpBeNUMBERTerminalRuleCall_4_20_2_0() { return cJunctionExpBeNUMBERTerminalRuleCall_4_20_2_0; }
		
		//('TF' '=' transitTimeForward=NUMBER)?
		public Group getGroup_4_21() { return cGroup_4_21; }
		
		//'TF'
		public Keyword getTFKeyword_4_21_0() { return cTFKeyword_4_21_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_21_1() { return cEqualsSignKeyword_4_21_1; }
		
		//transitTimeForward=NUMBER
		public Assignment getTransitTimeForwardAssignment_4_21_2() { return cTransitTimeForwardAssignment_4_21_2; }
		
		//NUMBER
		public RuleCall getTransitTimeForwardNUMBERTerminalRuleCall_4_21_2_0() { return cTransitTimeForwardNUMBERTerminalRuleCall_4_21_2_0; }
		
		//('XTF' '=' transitTimeBiasCoefficientForward=NUMBER)?
		public Group getGroup_4_22() { return cGroup_4_22; }
		
		//'XTF'
		public Keyword getXTFKeyword_4_22_0() { return cXTFKeyword_4_22_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_22_1() { return cEqualsSignKeyword_4_22_1; }
		
		//transitTimeBiasCoefficientForward=NUMBER
		public Assignment getTransitTimeBiasCoefficientForwardAssignment_4_22_2() { return cTransitTimeBiasCoefficientForwardAssignment_4_22_2; }
		
		//NUMBER
		public RuleCall getTransitTimeBiasCoefficientForwardNUMBERTerminalRuleCall_4_22_2_0() { return cTransitTimeBiasCoefficientForwardNUMBERTerminalRuleCall_4_22_2_0; }
		
		//('VTF' '=' transitTimeForwardVoltageBc=NUMBER)?
		public Group getGroup_4_23() { return cGroup_4_23; }
		
		//'VTF'
		public Keyword getVTFKeyword_4_23_0() { return cVTFKeyword_4_23_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_23_1() { return cEqualsSignKeyword_4_23_1; }
		
		//transitTimeForwardVoltageBc=NUMBER
		public Assignment getTransitTimeForwardVoltageBcAssignment_4_23_2() { return cTransitTimeForwardVoltageBcAssignment_4_23_2; }
		
		//NUMBER
		public RuleCall getTransitTimeForwardVoltageBcNUMBERTerminalRuleCall_4_23_2_0() { return cTransitTimeForwardVoltageBcNUMBERTerminalRuleCall_4_23_2_0; }
		
		//('ITF' '=' transitTimeHighCurrentForward=NUMBER)?
		public Group getGroup_4_24() { return cGroup_4_24; }
		
		//'ITF'
		public Keyword getITFKeyword_4_24_0() { return cITFKeyword_4_24_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_24_1() { return cEqualsSignKeyword_4_24_1; }
		
		//transitTimeHighCurrentForward=NUMBER
		public Assignment getTransitTimeHighCurrentForwardAssignment_4_24_2() { return cTransitTimeHighCurrentForwardAssignment_4_24_2; }
		
		//NUMBER
		public RuleCall getTransitTimeHighCurrentForwardNUMBERTerminalRuleCall_4_24_2_0() { return cTransitTimeHighCurrentForwardNUMBERTerminalRuleCall_4_24_2_0; }
		
		//('PTF' '=' excessPhase=NUMBER)?
		public Group getGroup_4_25() { return cGroup_4_25; }
		
		//'PTF'
		public Keyword getPTFKeyword_4_25_0() { return cPTFKeyword_4_25_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_25_1() { return cEqualsSignKeyword_4_25_1; }
		
		//excessPhase=NUMBER
		public Assignment getExcessPhaseAssignment_4_25_2() { return cExcessPhaseAssignment_4_25_2; }
		
		//NUMBER
		public RuleCall getExcessPhaseNUMBERTerminalRuleCall_4_25_2_0() { return cExcessPhaseNUMBERTerminalRuleCall_4_25_2_0; }
		
		//('CJC' '=' depletionCapBc=NUMBER)?
		public Group getGroup_4_26() { return cGroup_4_26; }
		
		//'CJC'
		public Keyword getCJCKeyword_4_26_0() { return cCJCKeyword_4_26_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_26_1() { return cEqualsSignKeyword_4_26_1; }
		
		//depletionCapBc=NUMBER
		public Assignment getDepletionCapBcAssignment_4_26_2() { return cDepletionCapBcAssignment_4_26_2; }
		
		//NUMBER
		public RuleCall getDepletionCapBcNUMBERTerminalRuleCall_4_26_2_0() { return cDepletionCapBcNUMBERTerminalRuleCall_4_26_2_0; }
		
		//('VJC' '=' potentialBc=NUMBER)?
		public Group getGroup_4_27() { return cGroup_4_27; }
		
		//'VJC'
		public Keyword getVJCKeyword_4_27_0() { return cVJCKeyword_4_27_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_27_1() { return cEqualsSignKeyword_4_27_1; }
		
		//potentialBc=NUMBER
		public Assignment getPotentialBcAssignment_4_27_2() { return cPotentialBcAssignment_4_27_2; }
		
		//NUMBER
		public RuleCall getPotentialBcNUMBERTerminalRuleCall_4_27_2_0() { return cPotentialBcNUMBERTerminalRuleCall_4_27_2_0; }
		
		//('MJC' '=' junctionExpBc=NUMBER)?
		public Group getGroup_4_28() { return cGroup_4_28; }
		
		//'MJC'
		public Keyword getMJCKeyword_4_28_0() { return cMJCKeyword_4_28_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_28_1() { return cEqualsSignKeyword_4_28_1; }
		
		//junctionExpBc=NUMBER
		public Assignment getJunctionExpBcAssignment_4_28_2() { return cJunctionExpBcAssignment_4_28_2; }
		
		//NUMBER
		public RuleCall getJunctionExpBcNUMBERTerminalRuleCall_4_28_2_0() { return cJunctionExpBcNUMBERTerminalRuleCall_4_28_2_0; }
		
		//('XCJC' '=' baseFractionBcCap=NUMBER)?
		public Group getGroup_4_29() { return cGroup_4_29; }
		
		//'XCJC'
		public Keyword getXCJCKeyword_4_29_0() { return cXCJCKeyword_4_29_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_29_1() { return cEqualsSignKeyword_4_29_1; }
		
		//baseFractionBcCap=NUMBER
		public Assignment getBaseFractionBcCapAssignment_4_29_2() { return cBaseFractionBcCapAssignment_4_29_2; }
		
		//NUMBER
		public RuleCall getBaseFractionBcCapNUMBERTerminalRuleCall_4_29_2_0() { return cBaseFractionBcCapNUMBERTerminalRuleCall_4_29_2_0; }
		
		//('TR' '=' transitTimeReverse=NUMBER)?
		public Group getGroup_4_30() { return cGroup_4_30; }
		
		//'TR'
		public Keyword getTRKeyword_4_30_0() { return cTRKeyword_4_30_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_30_1() { return cEqualsSignKeyword_4_30_1; }
		
		//transitTimeReverse=NUMBER
		public Assignment getTransitTimeReverseAssignment_4_30_2() { return cTransitTimeReverseAssignment_4_30_2; }
		
		//NUMBER
		public RuleCall getTransitTimeReverseNUMBERTerminalRuleCall_4_30_2_0() { return cTransitTimeReverseNUMBERTerminalRuleCall_4_30_2_0; }
		
		//('CJS' '=' capCs=NUMBER)?
		public Group getGroup_4_31() { return cGroup_4_31; }
		
		//'CJS'
		public Keyword getCJSKeyword_4_31_0() { return cCJSKeyword_4_31_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_31_1() { return cEqualsSignKeyword_4_31_1; }
		
		//capCs=NUMBER
		public Assignment getCapCsAssignment_4_31_2() { return cCapCsAssignment_4_31_2; }
		
		//NUMBER
		public RuleCall getCapCsNUMBERTerminalRuleCall_4_31_2_0() { return cCapCsNUMBERTerminalRuleCall_4_31_2_0; }
		
		//('VJS' '=' potentialSubstrate=NUMBER)?
		public Group getGroup_4_32() { return cGroup_4_32; }
		
		//'VJS'
		public Keyword getVJSKeyword_4_32_0() { return cVJSKeyword_4_32_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_32_1() { return cEqualsSignKeyword_4_32_1; }
		
		//potentialSubstrate=NUMBER
		public Assignment getPotentialSubstrateAssignment_4_32_2() { return cPotentialSubstrateAssignment_4_32_2; }
		
		//NUMBER
		public RuleCall getPotentialSubstrateNUMBERTerminalRuleCall_4_32_2_0() { return cPotentialSubstrateNUMBERTerminalRuleCall_4_32_2_0; }
		
		//('MJS' '=' exponentialSubstrate=NUMBER)?
		public Group getGroup_4_33() { return cGroup_4_33; }
		
		//'MJS'
		public Keyword getMJSKeyword_4_33_0() { return cMJSKeyword_4_33_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_33_1() { return cEqualsSignKeyword_4_33_1; }
		
		//exponentialSubstrate=NUMBER
		public Assignment getExponentialSubstrateAssignment_4_33_2() { return cExponentialSubstrateAssignment_4_33_2; }
		
		//NUMBER
		public RuleCall getExponentialSubstrateNUMBERTerminalRuleCall_4_33_2_0() { return cExponentialSubstrateNUMBERTerminalRuleCall_4_33_2_0; }
		
		//('XTB' '=' betaExponent=NUMBER)?
		public Group getGroup_4_34() { return cGroup_4_34; }
		
		//'XTB'
		public Keyword getXTBKeyword_4_34_0() { return cXTBKeyword_4_34_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_34_1() { return cEqualsSignKeyword_4_34_1; }
		
		//betaExponent=NUMBER
		public Assignment getBetaExponentAssignment_4_34_2() { return cBetaExponentAssignment_4_34_2; }
		
		//NUMBER
		public RuleCall getBetaExponentNUMBERTerminalRuleCall_4_34_2_0() { return cBetaExponentNUMBERTerminalRuleCall_4_34_2_0; }
		
		//('EG' '=' energyGap=NUMBER)?
		public Group getGroup_4_35() { return cGroup_4_35; }
		
		//'EG'
		public Keyword getEGKeyword_4_35_0() { return cEGKeyword_4_35_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_35_1() { return cEqualsSignKeyword_4_35_1; }
		
		//energyGap=NUMBER
		public Assignment getEnergyGapAssignment_4_35_2() { return cEnergyGapAssignment_4_35_2; }
		
		//NUMBER
		public RuleCall getEnergyGapNUMBERTerminalRuleCall_4_35_2_0() { return cEnergyGapNUMBERTerminalRuleCall_4_35_2_0; }
		
		//('XTI' '=' tempExpIs=NUMBER)?
		public Group getGroup_4_36() { return cGroup_4_36; }
		
		//'XTI'
		public Keyword getXTIKeyword_4_36_0() { return cXTIKeyword_4_36_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_36_1() { return cEqualsSignKeyword_4_36_1; }
		
		//tempExpIs=NUMBER
		public Assignment getTempExpIsAssignment_4_36_2() { return cTempExpIsAssignment_4_36_2; }
		
		//NUMBER
		public RuleCall getTempExpIsNUMBERTerminalRuleCall_4_36_2_0() { return cTempExpIsNUMBERTerminalRuleCall_4_36_2_0; }
		
		//('KF' '=' flickerNoiseCoefficient=NUMBER)?
		public Group getGroup_4_37() { return cGroup_4_37; }
		
		//'KF'
		public Keyword getKFKeyword_4_37_0() { return cKFKeyword_4_37_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_37_1() { return cEqualsSignKeyword_4_37_1; }
		
		//flickerNoiseCoefficient=NUMBER
		public Assignment getFlickerNoiseCoefficientAssignment_4_37_2() { return cFlickerNoiseCoefficientAssignment_4_37_2; }
		
		//NUMBER
		public RuleCall getFlickerNoiseCoefficientNUMBERTerminalRuleCall_4_37_2_0() { return cFlickerNoiseCoefficientNUMBERTerminalRuleCall_4_37_2_0; }
		
		//('AF' '=' flickerNoiseExponent=NUMBER)?
		public Group getGroup_4_38() { return cGroup_4_38; }
		
		//'AF'
		public Keyword getAFKeyword_4_38_0() { return cAFKeyword_4_38_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_38_1() { return cEqualsSignKeyword_4_38_1; }
		
		//flickerNoiseExponent=NUMBER
		public Assignment getFlickerNoiseExponentAssignment_4_38_2() { return cFlickerNoiseExponentAssignment_4_38_2; }
		
		//NUMBER
		public RuleCall getFlickerNoiseExponentNUMBERTerminalRuleCall_4_38_2_0() { return cFlickerNoiseExponentNUMBERTerminalRuleCall_4_38_2_0; }
		
		//('FC' '=' depletionCapCoefficient=NUMBER)?
		public Group getGroup_4_39() { return cGroup_4_39; }
		
		//'FC'
		public Keyword getFCKeyword_4_39_0() { return cFCKeyword_4_39_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_39_1() { return cEqualsSignKeyword_4_39_1; }
		
		//depletionCapCoefficient=NUMBER
		public Assignment getDepletionCapCoefficientAssignment_4_39_2() { return cDepletionCapCoefficientAssignment_4_39_2; }
		
		//NUMBER
		public RuleCall getDepletionCapCoefficientNUMBERTerminalRuleCall_4_39_2_0() { return cDepletionCapCoefficientNUMBERTerminalRuleCall_4_39_2_0; }
		
		//('TNOM' '=' nominalTemperature=NUMBER)?
		public Group getGroup_4_40() { return cGroup_4_40; }
		
		//'TNOM'
		public Keyword getTNOMKeyword_4_40_0() { return cTNOMKeyword_4_40_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_40_1() { return cEqualsSignKeyword_4_40_1; }
		
		//nominalTemperature=NUMBER
		public Assignment getNominalTemperatureAssignment_4_40_2() { return cNominalTemperatureAssignment_4_40_2; }
		
		//NUMBER
		public RuleCall getNominalTemperatureNUMBERTerminalRuleCall_4_40_2_0() { return cNominalTemperatureNUMBERTerminalRuleCall_4_40_2_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }
	}
	public class JFETElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.JFET");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Alternatives cNameAlternatives_0_0 = (Alternatives)cNameAssignment_0.eContents().get(0);
		private final RuleCall cNameTNIDTerminalRuleCall_0_0_0 = (RuleCall)cNameAlternatives_0_0.eContents().get(0);
		private final RuleCall cNameTPIDTerminalRuleCall_0_0_1 = (RuleCall)cNameAlternatives_0_0.eContents().get(1);
		private final Assignment cNodesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNodesNODETerminalRuleCall_1_0 = (RuleCall)cNodesAssignment_1.eContents().get(0);
		private final Assignment cNodesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNodesNODETerminalRuleCall_2_0 = (RuleCall)cNodesAssignment_2.eContents().get(0);
		private final Assignment cNodesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNodesNODETerminalRuleCall_3_0 = (RuleCall)cNodesAssignment_3.eContents().get(0);
		private final Assignment cModelAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cModelLabelParserRuleCall_4_0 = (RuleCall)cModelAssignment_4.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_5 = (UnorderedGroup)cGroup.eContents().get(5);
		private final Group cGroup_5_0 = (Group)cUnorderedGroup_5.eContents().get(0);
		private final Keyword cAREAKeyword_5_0_0 = (Keyword)cGroup_5_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_5_0_1 = (Keyword)cGroup_5_0.eContents().get(1);
		private final Assignment cAreaAssignment_5_0_2 = (Assignment)cGroup_5_0.eContents().get(2);
		private final RuleCall cAreaNUMBERTerminalRuleCall_5_0_2_0 = (RuleCall)cAreaAssignment_5_0_2.eContents().get(0);
		private final Assignment cOffAssignment_5_1 = (Assignment)cUnorderedGroup_5.eContents().get(1);
		private final Keyword cOffOFFKeyword_5_1_0 = (Keyword)cOffAssignment_5_1.eContents().get(0);
		private final Group cGroup_5_2 = (Group)cUnorderedGroup_5.eContents().get(2);
		private final Keyword cICKeyword_5_2_0 = (Keyword)cGroup_5_2.eContents().get(0);
		private final Keyword cEqualsSignKeyword_5_2_1 = (Keyword)cGroup_5_2.eContents().get(1);
		private final Assignment cIcAssignment_5_2_2 = (Assignment)cGroup_5_2.eContents().get(2);
		private final RuleCall cIcNUMBERTerminalRuleCall_5_2_2_0 = (RuleCall)cIcAssignment_5_2_2.eContents().get(0);
		private final Keyword cCommaKeyword_5_2_3 = (Keyword)cGroup_5_2.eContents().get(3);
		private final Assignment cIcAssignment_5_2_4 = (Assignment)cGroup_5_2.eContents().get(4);
		private final RuleCall cIcNUMBERTerminalRuleCall_5_2_4_0 = (RuleCall)cIcAssignment_5_2_4.eContents().get(0);
		private final Group cGroup_5_3 = (Group)cUnorderedGroup_5.eContents().get(3);
		private final Keyword cTEMPKeyword_5_3_0 = (Keyword)cGroup_5_3.eContents().get(0);
		private final Keyword cEqualsSignKeyword_5_3_1 = (Keyword)cGroup_5_3.eContents().get(1);
		private final Assignment cTempAssignment_5_3_2 = (Assignment)cGroup_5_3.eContents().get(2);
		private final RuleCall cTempNUMBERTerminalRuleCall_5_3_2_0 = (RuleCall)cTempAssignment_5_3_2.eContents().get(0);
		
		//JFET:
		//	name=(TNID | TPID) nodes+=NODE nodes+=NODE nodes+=NODE model=Label (('AREA' '=' area=NUMBER)? & off?='OFF'? & ('IC'
		//	'=' ic+=NUMBER ',' ic+=NUMBER)? & ('TEMP' '=' temp=NUMBER)?);
		@Override public ParserRule getRule() { return rule; }
		
		//name=(TNID | TPID) nodes+=NODE nodes+=NODE nodes+=NODE model=Label (('AREA' '=' area=NUMBER)? & off?='OFF'? & ('IC' '='
		//ic+=NUMBER ',' ic+=NUMBER)? & ('TEMP' '=' temp=NUMBER)?)
		public Group getGroup() { return cGroup; }
		
		//name=(TNID | TPID)
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//(TNID | TPID)
		public Alternatives getNameAlternatives_0_0() { return cNameAlternatives_0_0; }
		
		//TNID
		public RuleCall getNameTNIDTerminalRuleCall_0_0_0() { return cNameTNIDTerminalRuleCall_0_0_0; }
		
		//TPID
		public RuleCall getNameTPIDTerminalRuleCall_0_0_1() { return cNameTPIDTerminalRuleCall_0_0_1; }
		
		//nodes+=NODE
		public Assignment getNodesAssignment_1() { return cNodesAssignment_1; }
		
		//NODE
		public RuleCall getNodesNODETerminalRuleCall_1_0() { return cNodesNODETerminalRuleCall_1_0; }
		
		//nodes+=NODE
		public Assignment getNodesAssignment_2() { return cNodesAssignment_2; }
		
		//NODE
		public RuleCall getNodesNODETerminalRuleCall_2_0() { return cNodesNODETerminalRuleCall_2_0; }
		
		//nodes+=NODE
		public Assignment getNodesAssignment_3() { return cNodesAssignment_3; }
		
		//NODE
		public RuleCall getNodesNODETerminalRuleCall_3_0() { return cNodesNODETerminalRuleCall_3_0; }
		
		//model=Label
		public Assignment getModelAssignment_4() { return cModelAssignment_4; }
		
		//Label
		public RuleCall getModelLabelParserRuleCall_4_0() { return cModelLabelParserRuleCall_4_0; }
		
		//('AREA' '=' area=NUMBER)? & off?='OFF'? & ('IC' '=' ic+=NUMBER ',' ic+=NUMBER)? & ('TEMP' '=' temp=NUMBER)?
		public UnorderedGroup getUnorderedGroup_5() { return cUnorderedGroup_5; }
		
		//('AREA' '=' area=NUMBER)?
		public Group getGroup_5_0() { return cGroup_5_0; }
		
		//'AREA'
		public Keyword getAREAKeyword_5_0_0() { return cAREAKeyword_5_0_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_5_0_1() { return cEqualsSignKeyword_5_0_1; }
		
		//area=NUMBER
		public Assignment getAreaAssignment_5_0_2() { return cAreaAssignment_5_0_2; }
		
		//NUMBER
		public RuleCall getAreaNUMBERTerminalRuleCall_5_0_2_0() { return cAreaNUMBERTerminalRuleCall_5_0_2_0; }
		
		//off?='OFF'?
		public Assignment getOffAssignment_5_1() { return cOffAssignment_5_1; }
		
		//'OFF'
		public Keyword getOffOFFKeyword_5_1_0() { return cOffOFFKeyword_5_1_0; }
		
		//('IC' '=' ic+=NUMBER ',' ic+=NUMBER)?
		public Group getGroup_5_2() { return cGroup_5_2; }
		
		//'IC'
		public Keyword getICKeyword_5_2_0() { return cICKeyword_5_2_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_5_2_1() { return cEqualsSignKeyword_5_2_1; }
		
		//ic+=NUMBER
		public Assignment getIcAssignment_5_2_2() { return cIcAssignment_5_2_2; }
		
		//NUMBER
		public RuleCall getIcNUMBERTerminalRuleCall_5_2_2_0() { return cIcNUMBERTerminalRuleCall_5_2_2_0; }
		
		//','
		public Keyword getCommaKeyword_5_2_3() { return cCommaKeyword_5_2_3; }
		
		//ic+=NUMBER
		public Assignment getIcAssignment_5_2_4() { return cIcAssignment_5_2_4; }
		
		//NUMBER
		public RuleCall getIcNUMBERTerminalRuleCall_5_2_4_0() { return cIcNUMBERTerminalRuleCall_5_2_4_0; }
		
		//('TEMP' '=' temp=NUMBER)?
		public Group getGroup_5_3() { return cGroup_5_3; }
		
		//'TEMP'
		public Keyword getTEMPKeyword_5_3_0() { return cTEMPKeyword_5_3_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_5_3_1() { return cEqualsSignKeyword_5_3_1; }
		
		//temp=NUMBER
		public Assignment getTempAssignment_5_3_2() { return cTempAssignment_5_3_2; }
		
		//NUMBER
		public RuleCall getTempNUMBERTerminalRuleCall_5_3_2_0() { return cTempNUMBERTerminalRuleCall_5_3_2_0; }
	}
	public class JFETModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.JFETModel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMODELKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameLabelParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Keyword cNJFKeyword_2_0 = (Keyword)cAlternatives_2.eContents().get(0);
		private final Keyword cPJFKeyword_2_1 = (Keyword)cAlternatives_2.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final UnorderedGroup cUnorderedGroup_4 = (UnorderedGroup)cGroup.eContents().get(4);
		private final Alternatives cAlternatives_4_0 = (Alternatives)cUnorderedGroup_4.eContents().get(0);
		private final Keyword cVTOKeyword_4_0_0 = (Keyword)cAlternatives_4_0.eContents().get(0);
		private final Group cGroup_4_0_1 = (Group)cAlternatives_4_0.eContents().get(1);
		private final Keyword cVT0Keyword_4_0_1_0 = (Keyword)cGroup_4_0_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_0_1_1 = (Keyword)cGroup_4_0_1.eContents().get(1);
		private final Assignment cThresholdAssignment_4_0_1_2 = (Assignment)cGroup_4_0_1.eContents().get(2);
		private final RuleCall cThresholdNUMBERTerminalRuleCall_4_0_1_2_0 = (RuleCall)cThresholdAssignment_4_0_1_2.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cUnorderedGroup_4.eContents().get(1);
		private final Keyword cBETAKeyword_4_1_0 = (Keyword)cGroup_4_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_1_1 = (Keyword)cGroup_4_1.eContents().get(1);
		private final Assignment cBetaAssignment_4_1_2 = (Assignment)cGroup_4_1.eContents().get(2);
		private final RuleCall cBetaNUMBERTerminalRuleCall_4_1_2_0 = (RuleCall)cBetaAssignment_4_1_2.eContents().get(0);
		private final Group cGroup_4_2 = (Group)cUnorderedGroup_4.eContents().get(2);
		private final Keyword cLAMBDAKeyword_4_2_0 = (Keyword)cGroup_4_2.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_2_1 = (Keyword)cGroup_4_2.eContents().get(1);
		private final Assignment cLambdaAssignment_4_2_2 = (Assignment)cGroup_4_2.eContents().get(2);
		private final RuleCall cLambdaNUMBERTerminalRuleCall_4_2_2_0 = (RuleCall)cLambdaAssignment_4_2_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cUnorderedGroup_4.eContents().get(3);
		private final Keyword cRDKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_3_1 = (Keyword)cGroup_4_3.eContents().get(1);
		private final Assignment cDrainResistanceAssignment_4_3_2 = (Assignment)cGroup_4_3.eContents().get(2);
		private final RuleCall cDrainResistanceNUMBERTerminalRuleCall_4_3_2_0 = (RuleCall)cDrainResistanceAssignment_4_3_2.eContents().get(0);
		private final Group cGroup_4_4 = (Group)cUnorderedGroup_4.eContents().get(4);
		private final Keyword cRSKeyword_4_4_0 = (Keyword)cGroup_4_4.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_4_1 = (Keyword)cGroup_4_4.eContents().get(1);
		private final Assignment cSourceResistanceAssignment_4_4_2 = (Assignment)cGroup_4_4.eContents().get(2);
		private final RuleCall cSourceResistanceNUMBERTerminalRuleCall_4_4_2_0 = (RuleCall)cSourceResistanceAssignment_4_4_2.eContents().get(0);
		private final Group cGroup_4_5 = (Group)cUnorderedGroup_4.eContents().get(5);
		private final Keyword cCGSKeyword_4_5_0 = (Keyword)cGroup_4_5.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_5_1 = (Keyword)cGroup_4_5.eContents().get(1);
		private final Assignment cCapGsAssignment_4_5_2 = (Assignment)cGroup_4_5.eContents().get(2);
		private final RuleCall cCapGsNUMBERTerminalRuleCall_4_5_2_0 = (RuleCall)cCapGsAssignment_4_5_2.eContents().get(0);
		private final Group cGroup_4_6 = (Group)cUnorderedGroup_4.eContents().get(6);
		private final Keyword cCGDKeyword_4_6_0 = (Keyword)cGroup_4_6.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_6_1 = (Keyword)cGroup_4_6.eContents().get(1);
		private final Assignment cCapGdAssignment_4_6_2 = (Assignment)cGroup_4_6.eContents().get(2);
		private final RuleCall cCapGdNUMBERTerminalRuleCall_4_6_2_0 = (RuleCall)cCapGdAssignment_4_6_2.eContents().get(0);
		private final Group cGroup_4_7 = (Group)cUnorderedGroup_4.eContents().get(7);
		private final Keyword cPBKeyword_4_7_0 = (Keyword)cGroup_4_7.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_7_1 = (Keyword)cGroup_4_7.eContents().get(1);
		private final Assignment cGatePotentialAssignment_4_7_2 = (Assignment)cGroup_4_7.eContents().get(2);
		private final RuleCall cGatePotentialNUMBERTerminalRuleCall_4_7_2_0 = (RuleCall)cGatePotentialAssignment_4_7_2.eContents().get(0);
		private final Group cGroup_4_8 = (Group)cUnorderedGroup_4.eContents().get(8);
		private final Keyword cISKeyword_4_8_0 = (Keyword)cGroup_4_8.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_8_1 = (Keyword)cGroup_4_8.eContents().get(1);
		private final Assignment cGateSaturationCurrentAssignment_4_8_2 = (Assignment)cGroup_4_8.eContents().get(2);
		private final RuleCall cGateSaturationCurrentNUMBERTerminalRuleCall_4_8_2_0 = (RuleCall)cGateSaturationCurrentAssignment_4_8_2.eContents().get(0);
		private final Group cGroup_4_9 = (Group)cUnorderedGroup_4.eContents().get(9);
		private final Keyword cBKeyword_4_9_0 = (Keyword)cGroup_4_9.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_9_1 = (Keyword)cGroup_4_9.eContents().get(1);
		private final Assignment cBAssignment_4_9_2 = (Assignment)cGroup_4_9.eContents().get(2);
		private final RuleCall cBNUMBERTerminalRuleCall_4_9_2_0 = (RuleCall)cBAssignment_4_9_2.eContents().get(0);
		private final Group cGroup_4_10 = (Group)cUnorderedGroup_4.eContents().get(10);
		private final Keyword cKFKeyword_4_10_0 = (Keyword)cGroup_4_10.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_10_1 = (Keyword)cGroup_4_10.eContents().get(1);
		private final Assignment cFlickerNoiseCoefficientAssignment_4_10_2 = (Assignment)cGroup_4_10.eContents().get(2);
		private final RuleCall cFlickerNoiseCoefficientNUMBERTerminalRuleCall_4_10_2_0 = (RuleCall)cFlickerNoiseCoefficientAssignment_4_10_2.eContents().get(0);
		private final Group cGroup_4_11 = (Group)cUnorderedGroup_4.eContents().get(11);
		private final Keyword cAFKeyword_4_11_0 = (Keyword)cGroup_4_11.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_11_1 = (Keyword)cGroup_4_11.eContents().get(1);
		private final Assignment cFlickerNoiseExponentAssignment_4_11_2 = (Assignment)cGroup_4_11.eContents().get(2);
		private final RuleCall cFlickerNoiseExponentNUMBERTerminalRuleCall_4_11_2_0 = (RuleCall)cFlickerNoiseExponentAssignment_4_11_2.eContents().get(0);
		private final Group cGroup_4_12 = (Group)cUnorderedGroup_4.eContents().get(12);
		private final Keyword cFCKeyword_4_12_0 = (Keyword)cGroup_4_12.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_12_1 = (Keyword)cGroup_4_12.eContents().get(1);
		private final Assignment cDepletionCapCoefficientAssignment_4_12_2 = (Assignment)cGroup_4_12.eContents().get(2);
		private final RuleCall cDepletionCapCoefficientNUMBERTerminalRuleCall_4_12_2_0 = (RuleCall)cDepletionCapCoefficientAssignment_4_12_2.eContents().get(0);
		private final Group cGroup_4_13 = (Group)cUnorderedGroup_4.eContents().get(13);
		private final Keyword cTNOMKeyword_4_13_0 = (Keyword)cGroup_4_13.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_13_1 = (Keyword)cGroup_4_13.eContents().get(1);
		private final Assignment cNominalTemperatureAssignment_4_13_2 = (Assignment)cGroup_4_13.eContents().get(2);
		private final RuleCall cNominalTemperatureNUMBERTerminalRuleCall_4_13_2_0 = (RuleCall)cNominalTemperatureAssignment_4_13_2.eContents().get(0);
		
		//JFETModel:
		//	'.MODEL' name=Label ('NJF' | 'PJF') '(' (('VTO' | 'VT0' '=' threshold=NUMBER)? & ('BETA' '=' beta=NUMBER)? & ('LAMBDA'
		//	'=' lambda=NUMBER)? & ('RD' '=' drainResistance=NUMBER)? & ('RS' '=' sourceResistance=NUMBER)? & ('CGS' '='
		//	capGs=NUMBER)? & ('CGD' '=' capGd=NUMBER)? & ('PB' '=' gatePotential=NUMBER)? & ('IS' '='
		//	gateSaturationCurrent=NUMBER)? & ('B' '=' b=NUMBER)? & ('KF' '=' flickerNoiseCoefficient=NUMBER)? & ('AF' '='
		//	flickerNoiseExponent=NUMBER)? & ('FC' '=' depletionCapCoefficient=NUMBER)? & ('TNOM' '=' nominalTemperature=NUMBER)?);
		@Override public ParserRule getRule() { return rule; }
		
		//'.MODEL' name=Label ('NJF' | 'PJF') '(' (('VTO' | 'VT0' '=' threshold=NUMBER)? & ('BETA' '=' beta=NUMBER)? & ('LAMBDA'
		//'=' lambda=NUMBER)? & ('RD' '=' drainResistance=NUMBER)? & ('RS' '=' sourceResistance=NUMBER)? & ('CGS' '='
		//capGs=NUMBER)? & ('CGD' '=' capGd=NUMBER)? & ('PB' '=' gatePotential=NUMBER)? & ('IS' '='
		//gateSaturationCurrent=NUMBER)? & ('B' '=' b=NUMBER)? & ('KF' '=' flickerNoiseCoefficient=NUMBER)? & ('AF' '='
		//flickerNoiseExponent=NUMBER)? & ('FC' '=' depletionCapCoefficient=NUMBER)? & ('TNOM' '=' nominalTemperature=NUMBER)?)
		public Group getGroup() { return cGroup; }
		
		//'.MODEL'
		public Keyword getMODELKeyword_0() { return cMODELKeyword_0; }
		
		//name=Label
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//Label
		public RuleCall getNameLabelParserRuleCall_1_0() { return cNameLabelParserRuleCall_1_0; }
		
		//'NJF' | 'PJF'
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//'NJF'
		public Keyword getNJFKeyword_2_0() { return cNJFKeyword_2_0; }
		
		//'PJF'
		public Keyword getPJFKeyword_2_1() { return cPJFKeyword_2_1; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_3() { return cLeftParenthesisKeyword_3; }
		
		//('VTO' | 'VT0' '=' threshold=NUMBER)? & ('BETA' '=' beta=NUMBER)? & ('LAMBDA' '=' lambda=NUMBER)? & ('RD' '='
		//drainResistance=NUMBER)? & ('RS' '=' sourceResistance=NUMBER)? & ('CGS' '=' capGs=NUMBER)? & ('CGD' '=' capGd=NUMBER)?
		//& ('PB' '=' gatePotential=NUMBER)? & ('IS' '=' gateSaturationCurrent=NUMBER)? & ('B' '=' b=NUMBER)? & ('KF' '='
		//flickerNoiseCoefficient=NUMBER)? & ('AF' '=' flickerNoiseExponent=NUMBER)? & ('FC' '=' depletionCapCoefficient=NUMBER)?
		//& ('TNOM' '=' nominalTemperature=NUMBER)?
		public UnorderedGroup getUnorderedGroup_4() { return cUnorderedGroup_4; }
		
		//('VTO' | 'VT0' '=' threshold=NUMBER)?
		public Alternatives getAlternatives_4_0() { return cAlternatives_4_0; }
		
		//'VTO'
		public Keyword getVTOKeyword_4_0_0() { return cVTOKeyword_4_0_0; }
		
		//'VT0' '=' threshold=NUMBER
		public Group getGroup_4_0_1() { return cGroup_4_0_1; }
		
		//'VT0'
		public Keyword getVT0Keyword_4_0_1_0() { return cVT0Keyword_4_0_1_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_0_1_1() { return cEqualsSignKeyword_4_0_1_1; }
		
		//threshold=NUMBER
		public Assignment getThresholdAssignment_4_0_1_2() { return cThresholdAssignment_4_0_1_2; }
		
		//NUMBER
		public RuleCall getThresholdNUMBERTerminalRuleCall_4_0_1_2_0() { return cThresholdNUMBERTerminalRuleCall_4_0_1_2_0; }
		
		//('BETA' '=' beta=NUMBER)?
		public Group getGroup_4_1() { return cGroup_4_1; }
		
		//'BETA'
		public Keyword getBETAKeyword_4_1_0() { return cBETAKeyword_4_1_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_1_1() { return cEqualsSignKeyword_4_1_1; }
		
		//beta=NUMBER
		public Assignment getBetaAssignment_4_1_2() { return cBetaAssignment_4_1_2; }
		
		//NUMBER
		public RuleCall getBetaNUMBERTerminalRuleCall_4_1_2_0() { return cBetaNUMBERTerminalRuleCall_4_1_2_0; }
		
		//('LAMBDA' '=' lambda=NUMBER)?
		public Group getGroup_4_2() { return cGroup_4_2; }
		
		//'LAMBDA'
		public Keyword getLAMBDAKeyword_4_2_0() { return cLAMBDAKeyword_4_2_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_2_1() { return cEqualsSignKeyword_4_2_1; }
		
		//lambda=NUMBER
		public Assignment getLambdaAssignment_4_2_2() { return cLambdaAssignment_4_2_2; }
		
		//NUMBER
		public RuleCall getLambdaNUMBERTerminalRuleCall_4_2_2_0() { return cLambdaNUMBERTerminalRuleCall_4_2_2_0; }
		
		//('RD' '=' drainResistance=NUMBER)?
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//'RD'
		public Keyword getRDKeyword_4_3_0() { return cRDKeyword_4_3_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_3_1() { return cEqualsSignKeyword_4_3_1; }
		
		//drainResistance=NUMBER
		public Assignment getDrainResistanceAssignment_4_3_2() { return cDrainResistanceAssignment_4_3_2; }
		
		//NUMBER
		public RuleCall getDrainResistanceNUMBERTerminalRuleCall_4_3_2_0() { return cDrainResistanceNUMBERTerminalRuleCall_4_3_2_0; }
		
		//('RS' '=' sourceResistance=NUMBER)?
		public Group getGroup_4_4() { return cGroup_4_4; }
		
		//'RS'
		public Keyword getRSKeyword_4_4_0() { return cRSKeyword_4_4_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_4_1() { return cEqualsSignKeyword_4_4_1; }
		
		//sourceResistance=NUMBER
		public Assignment getSourceResistanceAssignment_4_4_2() { return cSourceResistanceAssignment_4_4_2; }
		
		//NUMBER
		public RuleCall getSourceResistanceNUMBERTerminalRuleCall_4_4_2_0() { return cSourceResistanceNUMBERTerminalRuleCall_4_4_2_0; }
		
		//('CGS' '=' capGs=NUMBER)?
		public Group getGroup_4_5() { return cGroup_4_5; }
		
		//'CGS'
		public Keyword getCGSKeyword_4_5_0() { return cCGSKeyword_4_5_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_5_1() { return cEqualsSignKeyword_4_5_1; }
		
		//capGs=NUMBER
		public Assignment getCapGsAssignment_4_5_2() { return cCapGsAssignment_4_5_2; }
		
		//NUMBER
		public RuleCall getCapGsNUMBERTerminalRuleCall_4_5_2_0() { return cCapGsNUMBERTerminalRuleCall_4_5_2_0; }
		
		//('CGD' '=' capGd=NUMBER)?
		public Group getGroup_4_6() { return cGroup_4_6; }
		
		//'CGD'
		public Keyword getCGDKeyword_4_6_0() { return cCGDKeyword_4_6_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_6_1() { return cEqualsSignKeyword_4_6_1; }
		
		//capGd=NUMBER
		public Assignment getCapGdAssignment_4_6_2() { return cCapGdAssignment_4_6_2; }
		
		//NUMBER
		public RuleCall getCapGdNUMBERTerminalRuleCall_4_6_2_0() { return cCapGdNUMBERTerminalRuleCall_4_6_2_0; }
		
		//('PB' '=' gatePotential=NUMBER)?
		public Group getGroup_4_7() { return cGroup_4_7; }
		
		//'PB'
		public Keyword getPBKeyword_4_7_0() { return cPBKeyword_4_7_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_7_1() { return cEqualsSignKeyword_4_7_1; }
		
		//gatePotential=NUMBER
		public Assignment getGatePotentialAssignment_4_7_2() { return cGatePotentialAssignment_4_7_2; }
		
		//NUMBER
		public RuleCall getGatePotentialNUMBERTerminalRuleCall_4_7_2_0() { return cGatePotentialNUMBERTerminalRuleCall_4_7_2_0; }
		
		//('IS' '=' gateSaturationCurrent=NUMBER)?
		public Group getGroup_4_8() { return cGroup_4_8; }
		
		//'IS'
		public Keyword getISKeyword_4_8_0() { return cISKeyword_4_8_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_8_1() { return cEqualsSignKeyword_4_8_1; }
		
		//gateSaturationCurrent=NUMBER
		public Assignment getGateSaturationCurrentAssignment_4_8_2() { return cGateSaturationCurrentAssignment_4_8_2; }
		
		//NUMBER
		public RuleCall getGateSaturationCurrentNUMBERTerminalRuleCall_4_8_2_0() { return cGateSaturationCurrentNUMBERTerminalRuleCall_4_8_2_0; }
		
		//('B' '=' b=NUMBER)?
		public Group getGroup_4_9() { return cGroup_4_9; }
		
		//'B'
		public Keyword getBKeyword_4_9_0() { return cBKeyword_4_9_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_9_1() { return cEqualsSignKeyword_4_9_1; }
		
		//b=NUMBER
		public Assignment getBAssignment_4_9_2() { return cBAssignment_4_9_2; }
		
		//NUMBER
		public RuleCall getBNUMBERTerminalRuleCall_4_9_2_0() { return cBNUMBERTerminalRuleCall_4_9_2_0; }
		
		//('KF' '=' flickerNoiseCoefficient=NUMBER)?
		public Group getGroup_4_10() { return cGroup_4_10; }
		
		//'KF'
		public Keyword getKFKeyword_4_10_0() { return cKFKeyword_4_10_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_10_1() { return cEqualsSignKeyword_4_10_1; }
		
		//flickerNoiseCoefficient=NUMBER
		public Assignment getFlickerNoiseCoefficientAssignment_4_10_2() { return cFlickerNoiseCoefficientAssignment_4_10_2; }
		
		//NUMBER
		public RuleCall getFlickerNoiseCoefficientNUMBERTerminalRuleCall_4_10_2_0() { return cFlickerNoiseCoefficientNUMBERTerminalRuleCall_4_10_2_0; }
		
		//('AF' '=' flickerNoiseExponent=NUMBER)?
		public Group getGroup_4_11() { return cGroup_4_11; }
		
		//'AF'
		public Keyword getAFKeyword_4_11_0() { return cAFKeyword_4_11_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_11_1() { return cEqualsSignKeyword_4_11_1; }
		
		//flickerNoiseExponent=NUMBER
		public Assignment getFlickerNoiseExponentAssignment_4_11_2() { return cFlickerNoiseExponentAssignment_4_11_2; }
		
		//NUMBER
		public RuleCall getFlickerNoiseExponentNUMBERTerminalRuleCall_4_11_2_0() { return cFlickerNoiseExponentNUMBERTerminalRuleCall_4_11_2_0; }
		
		//('FC' '=' depletionCapCoefficient=NUMBER)?
		public Group getGroup_4_12() { return cGroup_4_12; }
		
		//'FC'
		public Keyword getFCKeyword_4_12_0() { return cFCKeyword_4_12_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_12_1() { return cEqualsSignKeyword_4_12_1; }
		
		//depletionCapCoefficient=NUMBER
		public Assignment getDepletionCapCoefficientAssignment_4_12_2() { return cDepletionCapCoefficientAssignment_4_12_2; }
		
		//NUMBER
		public RuleCall getDepletionCapCoefficientNUMBERTerminalRuleCall_4_12_2_0() { return cDepletionCapCoefficientNUMBERTerminalRuleCall_4_12_2_0; }
		
		//('TNOM' '=' nominalTemperature=NUMBER)?
		public Group getGroup_4_13() { return cGroup_4_13; }
		
		//'TNOM'
		public Keyword getTNOMKeyword_4_13_0() { return cTNOMKeyword_4_13_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_13_1() { return cEqualsSignKeyword_4_13_1; }
		
		//nominalTemperature=NUMBER
		public Assignment getNominalTemperatureAssignment_4_13_2() { return cNominalTemperatureAssignment_4_13_2; }
		
		//NUMBER
		public RuleCall getNominalTemperatureNUMBERTerminalRuleCall_4_13_2_0() { return cNominalTemperatureNUMBERTerminalRuleCall_4_13_2_0; }
	}
	public class VSourceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.VSource");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameVIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Assignment cNodesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNodesNODETerminalRuleCall_1_0 = (RuleCall)cNodesAssignment_1.eContents().get(0);
		private final Assignment cNodesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNodesNODETerminalRuleCall_2_0 = (RuleCall)cNodesAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cDCKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cDcAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cDcNUMBERTerminalRuleCall_3_1_0 = (RuleCall)cDcAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cACKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cAcAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cAcNUMBERTerminalRuleCall_4_1_0 = (RuleCall)cAcAssignment_4_1.eContents().get(0);
		private final Assignment cAcAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cAcNUMBERTerminalRuleCall_4_2_0 = (RuleCall)cAcAssignment_4_2.eContents().get(0);
		private final Assignment cWaveformAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cWaveformWaveformParserRuleCall_5_0 = (RuleCall)cWaveformAssignment_5.eContents().get(0);
		
		//VSource:
		//	name=VID nodes+=NODE nodes+=NODE ('DC'? dc=NUMBER)? ('AC' ac+=NUMBER ac+=NUMBER?)? waveform=Waveform?;
		@Override public ParserRule getRule() { return rule; }
		
		//name=VID nodes+=NODE nodes+=NODE ('DC'? dc=NUMBER)? ('AC' ac+=NUMBER ac+=NUMBER?)? waveform=Waveform?
		public Group getGroup() { return cGroup; }
		
		//name=VID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//VID
		public RuleCall getNameVIDTerminalRuleCall_0_0() { return cNameVIDTerminalRuleCall_0_0; }
		
		//nodes+=NODE
		public Assignment getNodesAssignment_1() { return cNodesAssignment_1; }
		
		//NODE
		public RuleCall getNodesNODETerminalRuleCall_1_0() { return cNodesNODETerminalRuleCall_1_0; }
		
		//nodes+=NODE
		public Assignment getNodesAssignment_2() { return cNodesAssignment_2; }
		
		//NODE
		public RuleCall getNodesNODETerminalRuleCall_2_0() { return cNodesNODETerminalRuleCall_2_0; }
		
		//('DC'? dc=NUMBER)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'DC'?
		public Keyword getDCKeyword_3_0() { return cDCKeyword_3_0; }
		
		//dc=NUMBER
		public Assignment getDcAssignment_3_1() { return cDcAssignment_3_1; }
		
		//NUMBER
		public RuleCall getDcNUMBERTerminalRuleCall_3_1_0() { return cDcNUMBERTerminalRuleCall_3_1_0; }
		
		//('AC' ac+=NUMBER ac+=NUMBER?)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'AC'
		public Keyword getACKeyword_4_0() { return cACKeyword_4_0; }
		
		//ac+=NUMBER
		public Assignment getAcAssignment_4_1() { return cAcAssignment_4_1; }
		
		//NUMBER
		public RuleCall getAcNUMBERTerminalRuleCall_4_1_0() { return cAcNUMBERTerminalRuleCall_4_1_0; }
		
		//ac+=NUMBER?
		public Assignment getAcAssignment_4_2() { return cAcAssignment_4_2; }
		
		//NUMBER
		public RuleCall getAcNUMBERTerminalRuleCall_4_2_0() { return cAcNUMBERTerminalRuleCall_4_2_0; }
		
		//waveform=Waveform?
		public Assignment getWaveformAssignment_5() { return cWaveformAssignment_5; }
		
		//Waveform
		public RuleCall getWaveformWaveformParserRuleCall_5_0() { return cWaveformWaveformParserRuleCall_5_0; }
	}
	public class CurrentSourceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.CurrentSource");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Assignment cNodesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNodesNODETerminalRuleCall_1_0 = (RuleCall)cNodesAssignment_1.eContents().get(0);
		private final Assignment cNodesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNodesNODETerminalRuleCall_2_0 = (RuleCall)cNodesAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cDCKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cDcAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cDcNUMBERTerminalRuleCall_3_1_0 = (RuleCall)cDcAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cACKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cAcAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cAcNUMBERTerminalRuleCall_4_1_0 = (RuleCall)cAcAssignment_4_1.eContents().get(0);
		private final Assignment cAcAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cAcNUMBERTerminalRuleCall_4_2_0 = (RuleCall)cAcAssignment_4_2.eContents().get(0);
		private final Assignment cWaveformAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cWaveformWaveformParserRuleCall_5_0 = (RuleCall)cWaveformAssignment_5.eContents().get(0);
		
		//CurrentSource:
		//	name=IID nodes+=NODE nodes+=NODE ('DC'? dc=NUMBER)? ('AC' ac+=NUMBER ac+=NUMBER?)? waveform=Waveform?;
		@Override public ParserRule getRule() { return rule; }
		
		//name=IID nodes+=NODE nodes+=NODE ('DC'? dc=NUMBER)? ('AC' ac+=NUMBER ac+=NUMBER?)? waveform=Waveform?
		public Group getGroup() { return cGroup; }
		
		//name=IID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//IID
		public RuleCall getNameIIDTerminalRuleCall_0_0() { return cNameIIDTerminalRuleCall_0_0; }
		
		//nodes+=NODE
		public Assignment getNodesAssignment_1() { return cNodesAssignment_1; }
		
		//NODE
		public RuleCall getNodesNODETerminalRuleCall_1_0() { return cNodesNODETerminalRuleCall_1_0; }
		
		//nodes+=NODE
		public Assignment getNodesAssignment_2() { return cNodesAssignment_2; }
		
		//NODE
		public RuleCall getNodesNODETerminalRuleCall_2_0() { return cNodesNODETerminalRuleCall_2_0; }
		
		//('DC'? dc=NUMBER)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'DC'?
		public Keyword getDCKeyword_3_0() { return cDCKeyword_3_0; }
		
		//dc=NUMBER
		public Assignment getDcAssignment_3_1() { return cDcAssignment_3_1; }
		
		//NUMBER
		public RuleCall getDcNUMBERTerminalRuleCall_3_1_0() { return cDcNUMBERTerminalRuleCall_3_1_0; }
		
		//('AC' ac+=NUMBER ac+=NUMBER?)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'AC'
		public Keyword getACKeyword_4_0() { return cACKeyword_4_0; }
		
		//ac+=NUMBER
		public Assignment getAcAssignment_4_1() { return cAcAssignment_4_1; }
		
		//NUMBER
		public RuleCall getAcNUMBERTerminalRuleCall_4_1_0() { return cAcNUMBERTerminalRuleCall_4_1_0; }
		
		//ac+=NUMBER?
		public Assignment getAcAssignment_4_2() { return cAcAssignment_4_2; }
		
		//NUMBER
		public RuleCall getAcNUMBERTerminalRuleCall_4_2_0() { return cAcNUMBERTerminalRuleCall_4_2_0; }
		
		//waveform=Waveform?
		public Assignment getWaveformAssignment_5() { return cWaveformAssignment_5; }
		
		//Waveform
		public RuleCall getWaveformWaveformParserRuleCall_5_0() { return cWaveformWaveformParserRuleCall_5_0; }
	}
	public class VCVSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.VCVS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameEIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Assignment cNodesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNodesNODETerminalRuleCall_1_0 = (RuleCall)cNodesAssignment_1.eContents().get(0);
		private final Assignment cNodesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNodesNODETerminalRuleCall_2_0 = (RuleCall)cNodesAssignment_2.eContents().get(0);
		private final Assignment cNodesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNodesNODETerminalRuleCall_3_0 = (RuleCall)cNodesAssignment_3.eContents().get(0);
		private final Assignment cNodesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNodesNODETerminalRuleCall_4_0 = (RuleCall)cNodesAssignment_4.eContents().get(0);
		private final Assignment cGainAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cGainNUMBERTerminalRuleCall_5_0 = (RuleCall)cGainAssignment_5.eContents().get(0);
		
		//VCVS:
		//	name=EID nodes+=NODE nodes+=NODE nodes+=NODE nodes+=NODE gain=NUMBER;
		@Override public ParserRule getRule() { return rule; }
		
		//name=EID nodes+=NODE nodes+=NODE nodes+=NODE nodes+=NODE gain=NUMBER
		public Group getGroup() { return cGroup; }
		
		//name=EID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//EID
		public RuleCall getNameEIDTerminalRuleCall_0_0() { return cNameEIDTerminalRuleCall_0_0; }
		
		//nodes+=NODE
		public Assignment getNodesAssignment_1() { return cNodesAssignment_1; }
		
		//NODE
		public RuleCall getNodesNODETerminalRuleCall_1_0() { return cNodesNODETerminalRuleCall_1_0; }
		
		//nodes+=NODE
		public Assignment getNodesAssignment_2() { return cNodesAssignment_2; }
		
		//NODE
		public RuleCall getNodesNODETerminalRuleCall_2_0() { return cNodesNODETerminalRuleCall_2_0; }
		
		//nodes+=NODE
		public Assignment getNodesAssignment_3() { return cNodesAssignment_3; }
		
		//NODE
		public RuleCall getNodesNODETerminalRuleCall_3_0() { return cNodesNODETerminalRuleCall_3_0; }
		
		//nodes+=NODE
		public Assignment getNodesAssignment_4() { return cNodesAssignment_4; }
		
		//NODE
		public RuleCall getNodesNODETerminalRuleCall_4_0() { return cNodesNODETerminalRuleCall_4_0; }
		
		//gain=NUMBER
		public Assignment getGainAssignment_5() { return cGainAssignment_5; }
		
		//NUMBER
		public RuleCall getGainNUMBERTerminalRuleCall_5_0() { return cGainNUMBERTerminalRuleCall_5_0; }
	}
	public class VCCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.VCCS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameGIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Assignment cNodesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNodesNODETerminalRuleCall_1_0 = (RuleCall)cNodesAssignment_1.eContents().get(0);
		private final Assignment cNodesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNodesNODETerminalRuleCall_2_0 = (RuleCall)cNodesAssignment_2.eContents().get(0);
		private final Assignment cNodesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNodesNODETerminalRuleCall_3_0 = (RuleCall)cNodesAssignment_3.eContents().get(0);
		private final Assignment cNodesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNodesNODETerminalRuleCall_4_0 = (RuleCall)cNodesAssignment_4.eContents().get(0);
		private final Assignment cTransconductanceAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cTransconductanceNUMBERTerminalRuleCall_5_0 = (RuleCall)cTransconductanceAssignment_5.eContents().get(0);
		
		//VCCS:
		//	name=GID nodes+=NODE nodes+=NODE nodes+=NODE nodes+=NODE transconductance=NUMBER;
		@Override public ParserRule getRule() { return rule; }
		
		//name=GID nodes+=NODE nodes+=NODE nodes+=NODE nodes+=NODE transconductance=NUMBER
		public Group getGroup() { return cGroup; }
		
		//name=GID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//GID
		public RuleCall getNameGIDTerminalRuleCall_0_0() { return cNameGIDTerminalRuleCall_0_0; }
		
		//nodes+=NODE
		public Assignment getNodesAssignment_1() { return cNodesAssignment_1; }
		
		//NODE
		public RuleCall getNodesNODETerminalRuleCall_1_0() { return cNodesNODETerminalRuleCall_1_0; }
		
		//nodes+=NODE
		public Assignment getNodesAssignment_2() { return cNodesAssignment_2; }
		
		//NODE
		public RuleCall getNodesNODETerminalRuleCall_2_0() { return cNodesNODETerminalRuleCall_2_0; }
		
		//nodes+=NODE
		public Assignment getNodesAssignment_3() { return cNodesAssignment_3; }
		
		//NODE
		public RuleCall getNodesNODETerminalRuleCall_3_0() { return cNodesNODETerminalRuleCall_3_0; }
		
		//nodes+=NODE
		public Assignment getNodesAssignment_4() { return cNodesAssignment_4; }
		
		//NODE
		public RuleCall getNodesNODETerminalRuleCall_4_0() { return cNodesNODETerminalRuleCall_4_0; }
		
		//transconductance=NUMBER
		public Assignment getTransconductanceAssignment_5() { return cTransconductanceAssignment_5; }
		
		//NUMBER
		public RuleCall getTransconductanceNUMBERTerminalRuleCall_5_0() { return cTransconductanceNUMBERTerminalRuleCall_5_0; }
	}
	public class CCCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.CCCS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameFIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Assignment cNodesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNodesNODETerminalRuleCall_1_0 = (RuleCall)cNodesAssignment_1.eContents().get(0);
		private final Assignment cNodesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNodesNODETerminalRuleCall_2_0 = (RuleCall)cNodesAssignment_2.eContents().get(0);
		private final Assignment cControllerAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cControllerVIDTerminalRuleCall_3_0 = (RuleCall)cControllerAssignment_3.eContents().get(0);
		private final Assignment cGainAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cGainNUMBERTerminalRuleCall_4_0 = (RuleCall)cGainAssignment_4.eContents().get(0);
		
		//CCCS:
		//	name=FID nodes+=NODE nodes+=NODE controller=VID gain=NUMBER;
		@Override public ParserRule getRule() { return rule; }
		
		//name=FID nodes+=NODE nodes+=NODE controller=VID gain=NUMBER
		public Group getGroup() { return cGroup; }
		
		//name=FID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//FID
		public RuleCall getNameFIDTerminalRuleCall_0_0() { return cNameFIDTerminalRuleCall_0_0; }
		
		//nodes+=NODE
		public Assignment getNodesAssignment_1() { return cNodesAssignment_1; }
		
		//NODE
		public RuleCall getNodesNODETerminalRuleCall_1_0() { return cNodesNODETerminalRuleCall_1_0; }
		
		//nodes+=NODE
		public Assignment getNodesAssignment_2() { return cNodesAssignment_2; }
		
		//NODE
		public RuleCall getNodesNODETerminalRuleCall_2_0() { return cNodesNODETerminalRuleCall_2_0; }
		
		//controller=VID
		public Assignment getControllerAssignment_3() { return cControllerAssignment_3; }
		
		//VID
		public RuleCall getControllerVIDTerminalRuleCall_3_0() { return cControllerVIDTerminalRuleCall_3_0; }
		
		//gain=NUMBER
		public Assignment getGainAssignment_4() { return cGainAssignment_4; }
		
		//NUMBER
		public RuleCall getGainNUMBERTerminalRuleCall_4_0() { return cGainNUMBERTerminalRuleCall_4_0; }
	}
	public class CCVSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.CCVS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameHIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Assignment cNodesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNodesNODETerminalRuleCall_1_0 = (RuleCall)cNodesAssignment_1.eContents().get(0);
		private final Assignment cNodesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNodesNODETerminalRuleCall_2_0 = (RuleCall)cNodesAssignment_2.eContents().get(0);
		private final Assignment cControllerAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cControllerVIDTerminalRuleCall_3_0 = (RuleCall)cControllerAssignment_3.eContents().get(0);
		private final Assignment cTransresistanceAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTransresistanceNUMBERTerminalRuleCall_4_0 = (RuleCall)cTransresistanceAssignment_4.eContents().get(0);
		
		//CCVS:
		//	name=HID nodes+=NODE nodes+=NODE controller=VID transresistance=NUMBER;
		@Override public ParserRule getRule() { return rule; }
		
		//name=HID nodes+=NODE nodes+=NODE controller=VID transresistance=NUMBER
		public Group getGroup() { return cGroup; }
		
		//name=HID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//HID
		public RuleCall getNameHIDTerminalRuleCall_0_0() { return cNameHIDTerminalRuleCall_0_0; }
		
		//nodes+=NODE
		public Assignment getNodesAssignment_1() { return cNodesAssignment_1; }
		
		//NODE
		public RuleCall getNodesNODETerminalRuleCall_1_0() { return cNodesNODETerminalRuleCall_1_0; }
		
		//nodes+=NODE
		public Assignment getNodesAssignment_2() { return cNodesAssignment_2; }
		
		//NODE
		public RuleCall getNodesNODETerminalRuleCall_2_0() { return cNodesNODETerminalRuleCall_2_0; }
		
		//controller=VID
		public Assignment getControllerAssignment_3() { return cControllerAssignment_3; }
		
		//VID
		public RuleCall getControllerVIDTerminalRuleCall_3_0() { return cControllerVIDTerminalRuleCall_3_0; }
		
		//transresistance=NUMBER
		public Assignment getTransresistanceAssignment_4() { return cTransresistanceAssignment_4; }
		
		//NUMBER
		public RuleCall getTransresistanceNUMBERTerminalRuleCall_4_0() { return cTransresistanceNUMBERTerminalRuleCall_4_0; }
	}
	public class GeometericSweepElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.GeometericSweep");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cLinearSweepParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cOctaveSweepParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cDecadeSweepParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//GeometericSweep:
		//	LinearSweep | OctaveSweep | DecadeSweep;
		@Override public ParserRule getRule() { return rule; }
		
		//LinearSweep | OctaveSweep | DecadeSweep
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//LinearSweep
		public RuleCall getLinearSweepParserRuleCall_0() { return cLinearSweepParserRuleCall_0; }
		
		//OctaveSweep
		public RuleCall getOctaveSweepParserRuleCall_1() { return cOctaveSweepParserRuleCall_1; }
		
		//DecadeSweep
		public RuleCall getDecadeSweepParserRuleCall_2() { return cDecadeSweepParserRuleCall_2; }
	}
	public class LinearSweepElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.LinearSweep");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLINKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cInitialAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cInitialNUMBERTerminalRuleCall_1_0 = (RuleCall)cInitialAssignment_1.eContents().get(0);
		private final Assignment cFinalAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cFinalNUMBERTerminalRuleCall_2_0 = (RuleCall)cFinalAssignment_2.eContents().get(0);
		private final Assignment cDeltaAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cDeltaNUMBERTerminalRuleCall_3_0 = (RuleCall)cDeltaAssignment_3.eContents().get(0);
		
		//LinearSweep:
		//	'LIN' initial=NUMBER final=NUMBER delta=NUMBER;
		@Override public ParserRule getRule() { return rule; }
		
		//'LIN' initial=NUMBER final=NUMBER delta=NUMBER
		public Group getGroup() { return cGroup; }
		
		//'LIN'
		public Keyword getLINKeyword_0() { return cLINKeyword_0; }
		
		//initial=NUMBER
		public Assignment getInitialAssignment_1() { return cInitialAssignment_1; }
		
		//NUMBER
		public RuleCall getInitialNUMBERTerminalRuleCall_1_0() { return cInitialNUMBERTerminalRuleCall_1_0; }
		
		//final=NUMBER
		public Assignment getFinalAssignment_2() { return cFinalAssignment_2; }
		
		//NUMBER
		public RuleCall getFinalNUMBERTerminalRuleCall_2_0() { return cFinalNUMBERTerminalRuleCall_2_0; }
		
		//delta=NUMBER
		public Assignment getDeltaAssignment_3() { return cDeltaAssignment_3; }
		
		//NUMBER
		public RuleCall getDeltaNUMBERTerminalRuleCall_3_0() { return cDeltaNUMBERTerminalRuleCall_3_0; }
	}
	public class OctaveSweepElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.OctaveSweep");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cOCTKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cInitialAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cInitialNUMBERTerminalRuleCall_1_0 = (RuleCall)cInitialAssignment_1.eContents().get(0);
		private final Assignment cFinalAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cFinalNUMBERTerminalRuleCall_2_0 = (RuleCall)cFinalAssignment_2.eContents().get(0);
		private final Assignment cPointsPerOctaveAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cPointsPerOctaveNUMBERTerminalRuleCall_3_0 = (RuleCall)cPointsPerOctaveAssignment_3.eContents().get(0);
		
		//OctaveSweep:
		//	'OCT' initial=NUMBER final=NUMBER pointsPerOctave=NUMBER;
		@Override public ParserRule getRule() { return rule; }
		
		//'OCT' initial=NUMBER final=NUMBER pointsPerOctave=NUMBER
		public Group getGroup() { return cGroup; }
		
		//'OCT'
		public Keyword getOCTKeyword_0() { return cOCTKeyword_0; }
		
		//initial=NUMBER
		public Assignment getInitialAssignment_1() { return cInitialAssignment_1; }
		
		//NUMBER
		public RuleCall getInitialNUMBERTerminalRuleCall_1_0() { return cInitialNUMBERTerminalRuleCall_1_0; }
		
		//final=NUMBER
		public Assignment getFinalAssignment_2() { return cFinalAssignment_2; }
		
		//NUMBER
		public RuleCall getFinalNUMBERTerminalRuleCall_2_0() { return cFinalNUMBERTerminalRuleCall_2_0; }
		
		//pointsPerOctave=NUMBER
		public Assignment getPointsPerOctaveAssignment_3() { return cPointsPerOctaveAssignment_3; }
		
		//NUMBER
		public RuleCall getPointsPerOctaveNUMBERTerminalRuleCall_3_0() { return cPointsPerOctaveNUMBERTerminalRuleCall_3_0; }
	}
	public class DecadeSweepElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.DecadeSweep");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDECKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cInitialAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cInitialNUMBERTerminalRuleCall_1_0 = (RuleCall)cInitialAssignment_1.eContents().get(0);
		private final Assignment cFinalAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cFinalNUMBERTerminalRuleCall_2_0 = (RuleCall)cFinalAssignment_2.eContents().get(0);
		private final Assignment cPointsPerDecadeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cPointsPerDecadeNUMBERTerminalRuleCall_3_0 = (RuleCall)cPointsPerDecadeAssignment_3.eContents().get(0);
		
		//DecadeSweep:
		//	'DEC' initial=NUMBER final=NUMBER pointsPerDecade=NUMBER;
		@Override public ParserRule getRule() { return rule; }
		
		//'DEC' initial=NUMBER final=NUMBER pointsPerDecade=NUMBER
		public Group getGroup() { return cGroup; }
		
		//'DEC'
		public Keyword getDECKeyword_0() { return cDECKeyword_0; }
		
		//initial=NUMBER
		public Assignment getInitialAssignment_1() { return cInitialAssignment_1; }
		
		//NUMBER
		public RuleCall getInitialNUMBERTerminalRuleCall_1_0() { return cInitialNUMBERTerminalRuleCall_1_0; }
		
		//final=NUMBER
		public Assignment getFinalAssignment_2() { return cFinalAssignment_2; }
		
		//NUMBER
		public RuleCall getFinalNUMBERTerminalRuleCall_2_0() { return cFinalNUMBERTerminalRuleCall_2_0; }
		
		//pointsPerDecade=NUMBER
		public Assignment getPointsPerDecadeAssignment_3() { return cPointsPerDecadeAssignment_3; }
		
		//NUMBER
		public RuleCall getPointsPerDecadeNUMBERTerminalRuleCall_3_0() { return cPointsPerDecadeNUMBERTerminalRuleCall_3_0; }
	}
	public class ParameterSweepElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.ParameterSweep");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSourceAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cSourceLabelParserRuleCall_0_0 = (RuleCall)cSourceAssignment_0.eContents().get(0);
		private final Assignment cSweepAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cSweepGeometericSweepParserRuleCall_1_0 = (RuleCall)cSweepAssignment_1.eContents().get(0);
		
		//ParameterSweep:
		//	source=Label sweep=GeometericSweep;
		@Override public ParserRule getRule() { return rule; }
		
		//source=Label sweep=GeometericSweep
		public Group getGroup() { return cGroup; }
		
		//source=Label
		public Assignment getSourceAssignment_0() { return cSourceAssignment_0; }
		
		//Label
		public RuleCall getSourceLabelParserRuleCall_0_0() { return cSourceLabelParserRuleCall_0_0; }
		
		//sweep=GeometericSweep
		public Assignment getSweepAssignment_1() { return cSweepAssignment_1; }
		
		//GeometericSweep
		public RuleCall getSweepGeometericSweepParserRuleCall_1_0() { return cSweepGeometericSweepParserRuleCall_1_0; }
	}
	public class SimulationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.Simulation");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cACSimulationParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cDCSimulationParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cNoiseSimulationParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cTransientSimulationParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final Group cGroup_4 = (Group)cAlternatives.eContents().get(4);
		private final Action cSimulationAction_4_0 = (Action)cGroup_4.eContents().get(0);
		private final RuleCall cOPTerminalRuleCall_4_1 = (RuleCall)cGroup_4.eContents().get(1);
		
		//Simulation:
		//	ACSimulation | DCSimulation | NoiseSimulation | TransientSimulation | {Simulation} OP;
		@Override public ParserRule getRule() { return rule; }
		
		//ACSimulation | DCSimulation | NoiseSimulation | TransientSimulation | {Simulation} OP
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ACSimulation
		public RuleCall getACSimulationParserRuleCall_0() { return cACSimulationParserRuleCall_0; }
		
		//DCSimulation
		public RuleCall getDCSimulationParserRuleCall_1() { return cDCSimulationParserRuleCall_1; }
		
		//NoiseSimulation
		public RuleCall getNoiseSimulationParserRuleCall_2() { return cNoiseSimulationParserRuleCall_2; }
		
		//TransientSimulation
		public RuleCall getTransientSimulationParserRuleCall_3() { return cTransientSimulationParserRuleCall_3; }
		
		//{Simulation} OP
		public Group getGroup_4() { return cGroup_4; }
		
		//{Simulation}
		public Action getSimulationAction_4_0() { return cSimulationAction_4_0; }
		
		//OP
		public RuleCall getOPTerminalRuleCall_4_1() { return cOPTerminalRuleCall_4_1; }
	}
	public class ACSimulationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.ACSimulation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cACKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cSweepAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cSweepGeometericSweepParserRuleCall_1_0 = (RuleCall)cSweepAssignment_1.eContents().get(0);
		
		//ACSimulation:
		//	'.AC' sweep=GeometericSweep;
		@Override public ParserRule getRule() { return rule; }
		
		//'.AC' sweep=GeometericSweep
		public Group getGroup() { return cGroup; }
		
		//'.AC'
		public Keyword getACKeyword_0() { return cACKeyword_0; }
		
		//sweep=GeometericSweep
		public Assignment getSweepAssignment_1() { return cSweepAssignment_1; }
		
		//GeometericSweep
		public RuleCall getSweepGeometericSweepParserRuleCall_1_0() { return cSweepGeometericSweepParserRuleCall_1_0; }
	}
	public class DCSimulationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.DCSimulation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDCKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cSweepsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cSweepsParameterSweepParserRuleCall_1_0 = (RuleCall)cSweepsAssignment_1.eContents().get(0);
		private final Assignment cSweepsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cSweepsParameterSweepParserRuleCall_2_0 = (RuleCall)cSweepsAssignment_2.eContents().get(0);
		
		//DCSimulation:
		//	'.DC' sweeps+=ParameterSweep sweeps+=ParameterSweep*;
		@Override public ParserRule getRule() { return rule; }
		
		//'.DC' sweeps+=ParameterSweep sweeps+=ParameterSweep*
		public Group getGroup() { return cGroup; }
		
		//'.DC'
		public Keyword getDCKeyword_0() { return cDCKeyword_0; }
		
		//sweeps+=ParameterSweep
		public Assignment getSweepsAssignment_1() { return cSweepsAssignment_1; }
		
		//ParameterSweep
		public RuleCall getSweepsParameterSweepParserRuleCall_1_0() { return cSweepsParameterSweepParserRuleCall_1_0; }
		
		//sweeps+=ParameterSweep*
		public Assignment getSweepsAssignment_2() { return cSweepsAssignment_2; }
		
		//ParameterSweep
		public RuleCall getSweepsParameterSweepParserRuleCall_2_0() { return cSweepsParameterSweepParserRuleCall_2_0; }
	}
	public class NoiseSimulationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.NoiseSimulation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNOISEKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cOutputAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cOutputExportParserRuleCall_1_0_0 = (RuleCall)cOutputAssignment_1_0.eContents().get(0);
		private final Assignment cInputSourceAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cInputSourceLabelParserRuleCall_1_1_0 = (RuleCall)cInputSourceAssignment_1_1.eContents().get(0);
		private final Assignment cIsweepAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cIsweepGeometericSweepParserRuleCall_1_2_0 = (RuleCall)cIsweepAssignment_1_2.eContents().get(0);
		
		//NoiseSimulation:
		//	'.NOISE' (output+=Export inputSource=Label isweep=GeometericSweep);
		@Override public ParserRule getRule() { return rule; }
		
		//'.NOISE' (output+=Export inputSource=Label isweep=GeometericSweep)
		public Group getGroup() { return cGroup; }
		
		//'.NOISE'
		public Keyword getNOISEKeyword_0() { return cNOISEKeyword_0; }
		
		//output+=Export inputSource=Label isweep=GeometericSweep
		public Group getGroup_1() { return cGroup_1; }
		
		//output+=Export
		public Assignment getOutputAssignment_1_0() { return cOutputAssignment_1_0; }
		
		//Export
		public RuleCall getOutputExportParserRuleCall_1_0_0() { return cOutputExportParserRuleCall_1_0_0; }
		
		//inputSource=Label
		public Assignment getInputSourceAssignment_1_1() { return cInputSourceAssignment_1_1; }
		
		//Label
		public RuleCall getInputSourceLabelParserRuleCall_1_1_0() { return cInputSourceLabelParserRuleCall_1_1_0; }
		
		//isweep=GeometericSweep
		public Assignment getIsweepAssignment_1_2() { return cIsweepAssignment_1_2; }
		
		//GeometericSweep
		public RuleCall getIsweepGeometericSweepParserRuleCall_1_2_0() { return cIsweepGeometericSweepParserRuleCall_1_2_0; }
	}
	public class TransientSimulationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.TransientSimulation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTRANKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cArgsAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cArgsNUMBERTerminalRuleCall_1_0_0 = (RuleCall)cArgsAssignment_1_0.eContents().get(0);
		private final Assignment cArgsAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cArgsNUMBERTerminalRuleCall_1_1_0 = (RuleCall)cArgsAssignment_1_1.eContents().get(0);
		private final Assignment cArgsAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cArgsNUMBERTerminalRuleCall_1_2_0 = (RuleCall)cArgsAssignment_1_2.eContents().get(0);
		private final Assignment cUicAssignment_1_3 = (Assignment)cGroup_1.eContents().get(3);
		private final Keyword cUicUICKeyword_1_3_0 = (Keyword)cUicAssignment_1_3.eContents().get(0);
		
		//TransientSimulation:
		//	'.TRAN' (args+=NUMBER args+=NUMBER args+=NUMBER* uic?='UIC'?);
		@Override public ParserRule getRule() { return rule; }
		
		//'.TRAN' (args+=NUMBER args+=NUMBER args+=NUMBER* uic?='UIC'?)
		public Group getGroup() { return cGroup; }
		
		//'.TRAN'
		public Keyword getTRANKeyword_0() { return cTRANKeyword_0; }
		
		//args+=NUMBER args+=NUMBER args+=NUMBER* uic?='UIC'?
		public Group getGroup_1() { return cGroup_1; }
		
		//args+=NUMBER
		public Assignment getArgsAssignment_1_0() { return cArgsAssignment_1_0; }
		
		//NUMBER
		public RuleCall getArgsNUMBERTerminalRuleCall_1_0_0() { return cArgsNUMBERTerminalRuleCall_1_0_0; }
		
		//args+=NUMBER
		public Assignment getArgsAssignment_1_1() { return cArgsAssignment_1_1; }
		
		//NUMBER
		public RuleCall getArgsNUMBERTerminalRuleCall_1_1_0() { return cArgsNUMBERTerminalRuleCall_1_1_0; }
		
		//args+=NUMBER*
		public Assignment getArgsAssignment_1_2() { return cArgsAssignment_1_2; }
		
		//NUMBER
		public RuleCall getArgsNUMBERTerminalRuleCall_1_2_0() { return cArgsNUMBERTerminalRuleCall_1_2_0; }
		
		//uic?='UIC'?
		public Assignment getUicAssignment_1_3() { return cUicAssignment_1_3; }
		
		//'UIC'
		public Keyword getUicUICKeyword_1_3_0() { return cUicUICKeyword_1_3_0; }
	}
	public class OutputElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.Output");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cPrintParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cPlotParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Output:
		//	Print | Plot;
		@Override public ParserRule getRule() { return rule; }
		
		//Print | Plot
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Print
		public RuleCall getPrintParserRuleCall_0() { return cPrintParserRuleCall_0; }
		
		//Plot
		public RuleCall getPlotParserRuleCall_1() { return cPlotParserRuleCall_1; }
	}
	public class PrintElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.Print");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPRINTKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cPrtypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cPrtypePRTYPEEnumRuleCall_1_0 = (RuleCall)cPrtypeAssignment_1.eContents().get(0);
		private final Assignment cExportsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cExportsExportParserRuleCall_2_0 = (RuleCall)cExportsAssignment_2.eContents().get(0);
		private final Assignment cExportsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cExportsExportParserRuleCall_3_0 = (RuleCall)cExportsAssignment_3.eContents().get(0);
		
		//Print:
		//	'.PRINT' prtype=PRTYPE exports+=Export exports+=Export*;
		@Override public ParserRule getRule() { return rule; }
		
		//'.PRINT' prtype=PRTYPE exports+=Export exports+=Export*
		public Group getGroup() { return cGroup; }
		
		//'.PRINT'
		public Keyword getPRINTKeyword_0() { return cPRINTKeyword_0; }
		
		//prtype=PRTYPE
		public Assignment getPrtypeAssignment_1() { return cPrtypeAssignment_1; }
		
		//PRTYPE
		public RuleCall getPrtypePRTYPEEnumRuleCall_1_0() { return cPrtypePRTYPEEnumRuleCall_1_0; }
		
		//exports+=Export
		public Assignment getExportsAssignment_2() { return cExportsAssignment_2; }
		
		//Export
		public RuleCall getExportsExportParserRuleCall_2_0() { return cExportsExportParserRuleCall_2_0; }
		
		//exports+=Export*
		public Assignment getExportsAssignment_3() { return cExportsAssignment_3; }
		
		//Export
		public RuleCall getExportsExportParserRuleCall_3_0() { return cExportsExportParserRuleCall_3_0; }
	}
	public class PlotElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.Plot");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPLOTKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cPrtypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cPrtypePRTYPEEnumRuleCall_1_0 = (RuleCall)cPrtypeAssignment_1.eContents().get(0);
		private final Assignment cExportsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cExportsExportParserRuleCall_2_0 = (RuleCall)cExportsAssignment_2.eContents().get(0);
		private final Assignment cExportsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cExportsExportParserRuleCall_3_0 = (RuleCall)cExportsAssignment_3.eContents().get(0);
		
		//Plot:
		//	'.PLOT' prtype=PRTYPE exports+=Export exports+=Export*;
		@Override public ParserRule getRule() { return rule; }
		
		//'.PLOT' prtype=PRTYPE exports+=Export exports+=Export*
		public Group getGroup() { return cGroup; }
		
		//'.PLOT'
		public Keyword getPLOTKeyword_0() { return cPLOTKeyword_0; }
		
		//prtype=PRTYPE
		public Assignment getPrtypeAssignment_1() { return cPrtypeAssignment_1; }
		
		//PRTYPE
		public RuleCall getPrtypePRTYPEEnumRuleCall_1_0() { return cPrtypePRTYPEEnumRuleCall_1_0; }
		
		//exports+=Export
		public Assignment getExportsAssignment_2() { return cExportsAssignment_2; }
		
		//Export
		public RuleCall getExportsExportParserRuleCall_2_0() { return cExportsExportParserRuleCall_2_0; }
		
		//exports+=Export*
		public Assignment getExportsAssignment_3() { return cExportsAssignment_3; }
		
		//Export
		public RuleCall getExportsExportParserRuleCall_3_0() { return cExportsExportParserRuleCall_3_0; }
	}
	public class ExportElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.Export");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cVoltageExportParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cCurrentExportParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Export:
		//	VoltageExport | CurrentExport;
		@Override public ParserRule getRule() { return rule; }
		
		//VoltageExport | CurrentExport
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//VoltageExport
		public RuleCall getVoltageExportParserRuleCall_0() { return cVoltageExportParserRuleCall_0; }
		
		//CurrentExport
		public RuleCall getCurrentExportParserRuleCall_1() { return cCurrentExportParserRuleCall_1; }
	}
	public class VoltageExportElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.VoltageExport");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPrefixAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Alternatives cPrefixAlternatives_0_0 = (Alternatives)cPrefixAssignment_0.eContents().get(0);
		private final Keyword cPrefixVKeyword_0_0_0 = (Keyword)cPrefixAlternatives_0_0.eContents().get(0);
		private final Keyword cPrefixVMKeyword_0_0_1 = (Keyword)cPrefixAlternatives_0_0.eContents().get(1);
		private final Keyword cPrefixVDBKeyword_0_0_2 = (Keyword)cPrefixAlternatives_0_0.eContents().get(2);
		private final Keyword cPrefixVPKeyword_0_0_3 = (Keyword)cPrefixAlternatives_0_0.eContents().get(3);
		private final Keyword cPrefixVRKeyword_0_0_4 = (Keyword)cPrefixAlternatives_0_0.eContents().get(4);
		private final Keyword cPrefixVIKeyword_0_0_5 = (Keyword)cPrefixAlternatives_0_0.eContents().get(5);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cNodesAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cNodesLabelParserRuleCall_2_0_0 = (RuleCall)cNodesAssignment_2_0.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cGroup_2.eContents().get(1);
		private final Keyword cCommaKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cNodesAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cNodesNODETerminalRuleCall_2_1_1_0 = (RuleCall)cNodesAssignment_2_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//VoltageExport:
		//	prefix=('V' | 'VM' | 'VDB' | 'VP' | 'VR' | 'VI') '(' (nodes+=Label (',' nodes+=NODE)?) ')';
		@Override public ParserRule getRule() { return rule; }
		
		//prefix=('V' | 'VM' | 'VDB' | 'VP' | 'VR' | 'VI') '(' (nodes+=Label (',' nodes+=NODE)?) ')'
		public Group getGroup() { return cGroup; }
		
		//prefix=('V' | 'VM' | 'VDB' | 'VP' | 'VR' | 'VI')
		public Assignment getPrefixAssignment_0() { return cPrefixAssignment_0; }
		
		//('V' | 'VM' | 'VDB' | 'VP' | 'VR' | 'VI')
		public Alternatives getPrefixAlternatives_0_0() { return cPrefixAlternatives_0_0; }
		
		//'V'
		public Keyword getPrefixVKeyword_0_0_0() { return cPrefixVKeyword_0_0_0; }
		
		//'VM'
		public Keyword getPrefixVMKeyword_0_0_1() { return cPrefixVMKeyword_0_0_1; }
		
		//'VDB'
		public Keyword getPrefixVDBKeyword_0_0_2() { return cPrefixVDBKeyword_0_0_2; }
		
		//'VP'
		public Keyword getPrefixVPKeyword_0_0_3() { return cPrefixVPKeyword_0_0_3; }
		
		//'VR'
		public Keyword getPrefixVRKeyword_0_0_4() { return cPrefixVRKeyword_0_0_4; }
		
		//'VI'
		public Keyword getPrefixVIKeyword_0_0_5() { return cPrefixVIKeyword_0_0_5; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//nodes+=Label (',' nodes+=NODE)?
		public Group getGroup_2() { return cGroup_2; }
		
		//nodes+=Label
		public Assignment getNodesAssignment_2_0() { return cNodesAssignment_2_0; }
		
		//Label
		public RuleCall getNodesLabelParserRuleCall_2_0_0() { return cNodesLabelParserRuleCall_2_0_0; }
		
		//(',' nodes+=NODE)?
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//','
		public Keyword getCommaKeyword_2_1_0() { return cCommaKeyword_2_1_0; }
		
		//nodes+=NODE
		public Assignment getNodesAssignment_2_1_1() { return cNodesAssignment_2_1_1; }
		
		//NODE
		public RuleCall getNodesNODETerminalRuleCall_2_1_1_0() { return cNodesNODETerminalRuleCall_2_1_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3() { return cRightParenthesisKeyword_3; }
	}
	public class CurrentExportElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.CurrentExport");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPrefixAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Alternatives cPrefixAlternatives_0_0 = (Alternatives)cPrefixAssignment_0.eContents().get(0);
		private final Keyword cPrefixIKeyword_0_0_0 = (Keyword)cPrefixAlternatives_0_0.eContents().get(0);
		private final Keyword cPrefixIMKeyword_0_0_1 = (Keyword)cPrefixAlternatives_0_0.eContents().get(1);
		private final Keyword cPrefixIDBKeyword_0_0_2 = (Keyword)cPrefixAlternatives_0_0.eContents().get(2);
		private final Keyword cPrefixIPKeyword_0_0_3 = (Keyword)cPrefixAlternatives_0_0.eContents().get(3);
		private final Keyword cPrefixIRKeyword_0_0_4 = (Keyword)cPrefixAlternatives_0_0.eContents().get(4);
		private final Keyword cPrefixIIKeyword_0_0_5 = (Keyword)cPrefixAlternatives_0_0.eContents().get(5);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNodesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNodesLabelParserRuleCall_2_0 = (RuleCall)cNodesAssignment_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//CurrentExport:
		//	prefix=('I' | 'IM' | 'IDB' | 'IP' | 'IR' | 'II') '(' nodes+=Label ')';
		@Override public ParserRule getRule() { return rule; }
		
		//prefix=('I' | 'IM' | 'IDB' | 'IP' | 'IR' | 'II') '(' nodes+=Label ')'
		public Group getGroup() { return cGroup; }
		
		//prefix=('I' | 'IM' | 'IDB' | 'IP' | 'IR' | 'II')
		public Assignment getPrefixAssignment_0() { return cPrefixAssignment_0; }
		
		//('I' | 'IM' | 'IDB' | 'IP' | 'IR' | 'II')
		public Alternatives getPrefixAlternatives_0_0() { return cPrefixAlternatives_0_0; }
		
		//'I'
		public Keyword getPrefixIKeyword_0_0_0() { return cPrefixIKeyword_0_0_0; }
		
		//'IM'
		public Keyword getPrefixIMKeyword_0_0_1() { return cPrefixIMKeyword_0_0_1; }
		
		//'IDB'
		public Keyword getPrefixIDBKeyword_0_0_2() { return cPrefixIDBKeyword_0_0_2; }
		
		//'IP'
		public Keyword getPrefixIPKeyword_0_0_3() { return cPrefixIPKeyword_0_0_3; }
		
		//'IR'
		public Keyword getPrefixIRKeyword_0_0_4() { return cPrefixIRKeyword_0_0_4; }
		
		//'II'
		public Keyword getPrefixIIKeyword_0_0_5() { return cPrefixIIKeyword_0_0_5; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//nodes+=Label
		public Assignment getNodesAssignment_2() { return cNodesAssignment_2; }
		
		//Label
		public RuleCall getNodesLabelParserRuleCall_2_0() { return cNodesLabelParserRuleCall_2_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3() { return cRightParenthesisKeyword_3; }
	}
	public class WaveformElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.Waveform");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cExpParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cSineParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cPulseParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cPWLParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cSFFMParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cAMParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		
		//Waveform:
		//	Exp | Sine | Pulse | PWL | SFFM | AM;
		@Override public ParserRule getRule() { return rule; }
		
		//Exp | Sine | Pulse | PWL | SFFM | AM
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Exp
		public RuleCall getExpParserRuleCall_0() { return cExpParserRuleCall_0; }
		
		//Sine
		public RuleCall getSineParserRuleCall_1() { return cSineParserRuleCall_1; }
		
		//Pulse
		public RuleCall getPulseParserRuleCall_2() { return cPulseParserRuleCall_2; }
		
		//PWL
		public RuleCall getPWLParserRuleCall_3() { return cPWLParserRuleCall_3; }
		
		//SFFM
		public RuleCall getSFFMParserRuleCall_4() { return cSFFMParserRuleCall_4; }
		
		//AM
		public RuleCall getAMParserRuleCall_5() { return cAMParserRuleCall_5; }
	}
	public class ExpElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.Exp");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEXPKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cArgsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cArgsNUMBERTerminalRuleCall_2_0 = (RuleCall)cArgsAssignment_2.eContents().get(0);
		private final Assignment cArgsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cArgsNUMBERTerminalRuleCall_3_0 = (RuleCall)cArgsAssignment_3.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Exp:
		//	'EXP' '(' args+=NUMBER args+=NUMBER* ')';
		@Override public ParserRule getRule() { return rule; }
		
		//'EXP' '(' args+=NUMBER args+=NUMBER* ')'
		public Group getGroup() { return cGroup; }
		
		//'EXP'
		public Keyword getEXPKeyword_0() { return cEXPKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//args+=NUMBER
		public Assignment getArgsAssignment_2() { return cArgsAssignment_2; }
		
		//NUMBER
		public RuleCall getArgsNUMBERTerminalRuleCall_2_0() { return cArgsNUMBERTerminalRuleCall_2_0; }
		
		//args+=NUMBER*
		public Assignment getArgsAssignment_3() { return cArgsAssignment_3; }
		
		//NUMBER
		public RuleCall getArgsNUMBERTerminalRuleCall_3_0() { return cArgsNUMBERTerminalRuleCall_3_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }
	}
	public class SineElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.Sine");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSINKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cArgsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cArgsNUMBERTerminalRuleCall_2_0 = (RuleCall)cArgsAssignment_2.eContents().get(0);
		private final Assignment cArgsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cArgsNUMBERTerminalRuleCall_3_0 = (RuleCall)cArgsAssignment_3.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Sine:
		//	'SIN' '(' args+=NUMBER args+=NUMBER* ')';
		@Override public ParserRule getRule() { return rule; }
		
		//'SIN' '(' args+=NUMBER args+=NUMBER* ')'
		public Group getGroup() { return cGroup; }
		
		//'SIN'
		public Keyword getSINKeyword_0() { return cSINKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//args+=NUMBER
		public Assignment getArgsAssignment_2() { return cArgsAssignment_2; }
		
		//NUMBER
		public RuleCall getArgsNUMBERTerminalRuleCall_2_0() { return cArgsNUMBERTerminalRuleCall_2_0; }
		
		//args+=NUMBER*
		public Assignment getArgsAssignment_3() { return cArgsAssignment_3; }
		
		//NUMBER
		public RuleCall getArgsNUMBERTerminalRuleCall_3_0() { return cArgsNUMBERTerminalRuleCall_3_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }
	}
	public class PulseElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.Pulse");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPULSEKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cArgsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cArgsNUMBERTerminalRuleCall_2_0 = (RuleCall)cArgsAssignment_2.eContents().get(0);
		private final Assignment cArgsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cArgsNUMBERTerminalRuleCall_3_0 = (RuleCall)cArgsAssignment_3.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Pulse:
		//	'PULSE' '(' args+=NUMBER args+=NUMBER* ')';
		@Override public ParserRule getRule() { return rule; }
		
		//'PULSE' '(' args+=NUMBER args+=NUMBER* ')'
		public Group getGroup() { return cGroup; }
		
		//'PULSE'
		public Keyword getPULSEKeyword_0() { return cPULSEKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//args+=NUMBER
		public Assignment getArgsAssignment_2() { return cArgsAssignment_2; }
		
		//NUMBER
		public RuleCall getArgsNUMBERTerminalRuleCall_2_0() { return cArgsNUMBERTerminalRuleCall_2_0; }
		
		//args+=NUMBER*
		public Assignment getArgsAssignment_3() { return cArgsAssignment_3; }
		
		//NUMBER
		public RuleCall getArgsNUMBERTerminalRuleCall_3_0() { return cArgsNUMBERTerminalRuleCall_3_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }
	}
	public class PWLElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.PWL");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPWLKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cArgsAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cArgsNUMBERTerminalRuleCall_2_0_0 = (RuleCall)cArgsAssignment_2_0.eContents().get(0);
		private final Assignment cArgsAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cArgsNUMBERTerminalRuleCall_2_1_0 = (RuleCall)cArgsAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Assignment cArgsAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final RuleCall cArgsNUMBERTerminalRuleCall_3_0_0 = (RuleCall)cArgsAssignment_3_0.eContents().get(0);
		private final Assignment cArgsAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cArgsNUMBERTerminalRuleCall_3_1_0 = (RuleCall)cArgsAssignment_3_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//PWL:
		//	'PWL' '(' (args+=NUMBER args+=NUMBER) (args+=NUMBER args+=NUMBER)* ')';
		@Override public ParserRule getRule() { return rule; }
		
		//'PWL' '(' (args+=NUMBER args+=NUMBER) (args+=NUMBER args+=NUMBER)* ')'
		public Group getGroup() { return cGroup; }
		
		//'PWL'
		public Keyword getPWLKeyword_0() { return cPWLKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//args+=NUMBER args+=NUMBER
		public Group getGroup_2() { return cGroup_2; }
		
		//args+=NUMBER
		public Assignment getArgsAssignment_2_0() { return cArgsAssignment_2_0; }
		
		//NUMBER
		public RuleCall getArgsNUMBERTerminalRuleCall_2_0_0() { return cArgsNUMBERTerminalRuleCall_2_0_0; }
		
		//args+=NUMBER
		public Assignment getArgsAssignment_2_1() { return cArgsAssignment_2_1; }
		
		//NUMBER
		public RuleCall getArgsNUMBERTerminalRuleCall_2_1_0() { return cArgsNUMBERTerminalRuleCall_2_1_0; }
		
		//(args+=NUMBER args+=NUMBER)*
		public Group getGroup_3() { return cGroup_3; }
		
		//args+=NUMBER
		public Assignment getArgsAssignment_3_0() { return cArgsAssignment_3_0; }
		
		//NUMBER
		public RuleCall getArgsNUMBERTerminalRuleCall_3_0_0() { return cArgsNUMBERTerminalRuleCall_3_0_0; }
		
		//args+=NUMBER
		public Assignment getArgsAssignment_3_1() { return cArgsAssignment_3_1; }
		
		//NUMBER
		public RuleCall getArgsNUMBERTerminalRuleCall_3_1_0() { return cArgsNUMBERTerminalRuleCall_3_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }
	}
	public class SFFMElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.SFFM");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSFFMKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cArgsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cArgsNUMBERTerminalRuleCall_2_0 = (RuleCall)cArgsAssignment_2.eContents().get(0);
		private final Assignment cArgsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cArgsNUMBERTerminalRuleCall_3_0 = (RuleCall)cArgsAssignment_3.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//SFFM:
		//	'SFFM' '(' args+=NUMBER args+=NUMBER* ')';
		@Override public ParserRule getRule() { return rule; }
		
		//'SFFM' '(' args+=NUMBER args+=NUMBER* ')'
		public Group getGroup() { return cGroup; }
		
		//'SFFM'
		public Keyword getSFFMKeyword_0() { return cSFFMKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//args+=NUMBER
		public Assignment getArgsAssignment_2() { return cArgsAssignment_2; }
		
		//NUMBER
		public RuleCall getArgsNUMBERTerminalRuleCall_2_0() { return cArgsNUMBERTerminalRuleCall_2_0; }
		
		//args+=NUMBER*
		public Assignment getArgsAssignment_3() { return cArgsAssignment_3; }
		
		//NUMBER
		public RuleCall getArgsNUMBERTerminalRuleCall_3_0() { return cArgsNUMBERTerminalRuleCall_3_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }
	}
	public class AMElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.AM");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAMKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cArgsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cArgsNUMBERTerminalRuleCall_2_0 = (RuleCall)cArgsAssignment_2.eContents().get(0);
		private final Assignment cArgsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cArgsNUMBERTerminalRuleCall_3_0 = (RuleCall)cArgsAssignment_3.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//AM:
		//	'AM' '(' args+=NUMBER args+=NUMBER* ')';
		@Override public ParserRule getRule() { return rule; }
		
		//'AM' '(' args+=NUMBER args+=NUMBER* ')'
		public Group getGroup() { return cGroup; }
		
		//'AM'
		public Keyword getAMKeyword_0() { return cAMKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//args+=NUMBER
		public Assignment getArgsAssignment_2() { return cArgsAssignment_2; }
		
		//NUMBER
		public RuleCall getArgsNUMBERTerminalRuleCall_2_0() { return cArgsNUMBERTerminalRuleCall_2_0; }
		
		//args+=NUMBER*
		public Assignment getArgsAssignment_3() { return cArgsAssignment_3; }
		
		//NUMBER
		public RuleCall getArgsNUMBERTerminalRuleCall_3_0() { return cArgsNUMBERTerminalRuleCall_3_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }
	}
	public class OptionsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.Options");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cOPTIONKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_1 = (UnorderedGroup)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cUnorderedGroup_1.eContents().get(0);
		private final Keyword cABSTOLKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1_0_1 = (Keyword)cGroup_1_0.eContents().get(1);
		private final Assignment cAbstolAssignment_1_0_2 = (Assignment)cGroup_1_0.eContents().get(2);
		private final RuleCall cAbstolNUMBERTerminalRuleCall_1_0_2_0 = (RuleCall)cAbstolAssignment_1_0_2.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cUnorderedGroup_1.eContents().get(1);
		private final Keyword cBADMOS3Keyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1_1_1 = (Keyword)cGroup_1_1.eContents().get(1);
		private final Assignment cBadmos3Assignment_1_1_2 = (Assignment)cGroup_1_1.eContents().get(2);
		private final RuleCall cBadmos3NUMBERTerminalRuleCall_1_1_2_0 = (RuleCall)cBadmos3Assignment_1_1_2.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cUnorderedGroup_1.eContents().get(2);
		private final Keyword cCHGTOLKeyword_1_2_0 = (Keyword)cGroup_1_2.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1_2_1 = (Keyword)cGroup_1_2.eContents().get(1);
		private final Assignment cChgtolAssignment_1_2_2 = (Assignment)cGroup_1_2.eContents().get(2);
		private final RuleCall cChgtolNUMBERTerminalRuleCall_1_2_2_0 = (RuleCall)cChgtolAssignment_1_2_2.eContents().get(0);
		private final Group cGroup_1_3 = (Group)cUnorderedGroup_1.eContents().get(3);
		private final Keyword cDEFADKeyword_1_3_0 = (Keyword)cGroup_1_3.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1_3_1 = (Keyword)cGroup_1_3.eContents().get(1);
		private final Assignment cDefadAssignment_1_3_2 = (Assignment)cGroup_1_3.eContents().get(2);
		private final RuleCall cDefadNUMBERTerminalRuleCall_1_3_2_0 = (RuleCall)cDefadAssignment_1_3_2.eContents().get(0);
		private final Group cGroup_1_4 = (Group)cUnorderedGroup_1.eContents().get(4);
		private final Keyword cDEFASKeyword_1_4_0 = (Keyword)cGroup_1_4.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1_4_1 = (Keyword)cGroup_1_4.eContents().get(1);
		private final Assignment cDefasAssignment_1_4_2 = (Assignment)cGroup_1_4.eContents().get(2);
		private final RuleCall cDefasNUMBERTerminalRuleCall_1_4_2_0 = (RuleCall)cDefasAssignment_1_4_2.eContents().get(0);
		private final Group cGroup_1_5 = (Group)cUnorderedGroup_1.eContents().get(5);
		private final Keyword cDEFLKeyword_1_5_0 = (Keyword)cGroup_1_5.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1_5_1 = (Keyword)cGroup_1_5.eContents().get(1);
		private final Assignment cDeflAssignment_1_5_2 = (Assignment)cGroup_1_5.eContents().get(2);
		private final RuleCall cDeflNUMBERTerminalRuleCall_1_5_2_0 = (RuleCall)cDeflAssignment_1_5_2.eContents().get(0);
		private final Group cGroup_1_6 = (Group)cUnorderedGroup_1.eContents().get(6);
		private final Keyword cDEFWKeyword_1_6_0 = (Keyword)cGroup_1_6.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1_6_1 = (Keyword)cGroup_1_6.eContents().get(1);
		private final Assignment cDefaultWidthAssignment_1_6_2 = (Assignment)cGroup_1_6.eContents().get(2);
		private final RuleCall cDefaultWidthNUMBERTerminalRuleCall_1_6_2_0 = (RuleCall)cDefaultWidthAssignment_1_6_2.eContents().get(0);
		private final Group cGroup_1_7 = (Group)cUnorderedGroup_1.eContents().get(7);
		private final Keyword cGMINKeyword_1_7_0 = (Keyword)cGroup_1_7.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1_7_1 = (Keyword)cGroup_1_7.eContents().get(1);
		private final Assignment cGminAssignment_1_7_2 = (Assignment)cGroup_1_7.eContents().get(2);
		private final RuleCall cGminNUMBERTerminalRuleCall_1_7_2_0 = (RuleCall)cGminAssignment_1_7_2.eContents().get(0);
		private final Group cGroup_1_8 = (Group)cUnorderedGroup_1.eContents().get(8);
		private final Keyword cITL1Keyword_1_8_0 = (Keyword)cGroup_1_8.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1_8_1 = (Keyword)cGroup_1_8.eContents().get(1);
		private final Assignment cItl1Assignment_1_8_2 = (Assignment)cGroup_1_8.eContents().get(2);
		private final RuleCall cItl1NUMBERTerminalRuleCall_1_8_2_0 = (RuleCall)cItl1Assignment_1_8_2.eContents().get(0);
		private final Group cGroup_1_9 = (Group)cUnorderedGroup_1.eContents().get(9);
		private final Keyword cITL2Keyword_1_9_0 = (Keyword)cGroup_1_9.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1_9_1 = (Keyword)cGroup_1_9.eContents().get(1);
		private final Assignment cItl2Assignment_1_9_2 = (Assignment)cGroup_1_9.eContents().get(2);
		private final RuleCall cItl2NUMBERTerminalRuleCall_1_9_2_0 = (RuleCall)cItl2Assignment_1_9_2.eContents().get(0);
		private final Group cGroup_1_10 = (Group)cUnorderedGroup_1.eContents().get(10);
		private final Keyword cITL3Keyword_1_10_0 = (Keyword)cGroup_1_10.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1_10_1 = (Keyword)cGroup_1_10.eContents().get(1);
		private final Assignment cItl3Assignment_1_10_2 = (Assignment)cGroup_1_10.eContents().get(2);
		private final RuleCall cItl3NUMBERTerminalRuleCall_1_10_2_0 = (RuleCall)cItl3Assignment_1_10_2.eContents().get(0);
		private final Group cGroup_1_11 = (Group)cUnorderedGroup_1.eContents().get(11);
		private final Keyword cITL4Keyword_1_11_0 = (Keyword)cGroup_1_11.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1_11_1 = (Keyword)cGroup_1_11.eContents().get(1);
		private final Assignment cItl4Assignment_1_11_2 = (Assignment)cGroup_1_11.eContents().get(2);
		private final RuleCall cItl4NUMBERTerminalRuleCall_1_11_2_0 = (RuleCall)cItl4Assignment_1_11_2.eContents().get(0);
		private final Group cGroup_1_12 = (Group)cUnorderedGroup_1.eContents().get(12);
		private final Keyword cITL5Keyword_1_12_0 = (Keyword)cGroup_1_12.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1_12_1 = (Keyword)cGroup_1_12.eContents().get(1);
		private final Assignment cItl5Assignment_1_12_2 = (Assignment)cGroup_1_12.eContents().get(2);
		private final RuleCall cItl5NUMBERTerminalRuleCall_1_12_2_0 = (RuleCall)cItl5Assignment_1_12_2.eContents().get(0);
		private final Group cGroup_1_13 = (Group)cUnorderedGroup_1.eContents().get(13);
		private final Keyword cKEEPOPINFOKeyword_1_13_0 = (Keyword)cGroup_1_13.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1_13_1 = (Keyword)cGroup_1_13.eContents().get(1);
		private final Assignment cKeepopinfoAssignment_1_13_2 = (Assignment)cGroup_1_13.eContents().get(2);
		private final RuleCall cKeepopinfoNUMBERTerminalRuleCall_1_13_2_0 = (RuleCall)cKeepopinfoAssignment_1_13_2.eContents().get(0);
		private final Group cGroup_1_14 = (Group)cUnorderedGroup_1.eContents().get(14);
		private final Keyword cMETHODKeyword_1_14_0 = (Keyword)cGroup_1_14.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1_14_1 = (Keyword)cGroup_1_14.eContents().get(1);
		private final Assignment cMethodAssignment_1_14_2 = (Assignment)cGroup_1_14.eContents().get(2);
		private final RuleCall cMethodIntegrationMethodEnumRuleCall_1_14_2_0 = (RuleCall)cMethodAssignment_1_14_2.eContents().get(0);
		private final Group cGroup_1_15 = (Group)cUnorderedGroup_1.eContents().get(15);
		private final Keyword cPIVRELKeyword_1_15_0 = (Keyword)cGroup_1_15.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1_15_1 = (Keyword)cGroup_1_15.eContents().get(1);
		private final Assignment cPivrelAssignment_1_15_2 = (Assignment)cGroup_1_15.eContents().get(2);
		private final RuleCall cPivrelNUMBERTerminalRuleCall_1_15_2_0 = (RuleCall)cPivrelAssignment_1_15_2.eContents().get(0);
		private final Group cGroup_1_16 = (Group)cUnorderedGroup_1.eContents().get(16);
		private final Keyword cRELTOLKeyword_1_16_0 = (Keyword)cGroup_1_16.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1_16_1 = (Keyword)cGroup_1_16.eContents().get(1);
		private final Assignment cReltolAssignment_1_16_2 = (Assignment)cGroup_1_16.eContents().get(2);
		private final RuleCall cReltolNUMBERTerminalRuleCall_1_16_2_0 = (RuleCall)cReltolAssignment_1_16_2.eContents().get(0);
		private final Group cGroup_1_17 = (Group)cUnorderedGroup_1.eContents().get(17);
		private final Keyword cTEMPKeyword_1_17_0 = (Keyword)cGroup_1_17.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1_17_1 = (Keyword)cGroup_1_17.eContents().get(1);
		private final Assignment cTempAssignment_1_17_2 = (Assignment)cGroup_1_17.eContents().get(2);
		private final RuleCall cTempNUMBERTerminalRuleCall_1_17_2_0 = (RuleCall)cTempAssignment_1_17_2.eContents().get(0);
		private final Group cGroup_1_18 = (Group)cUnorderedGroup_1.eContents().get(18);
		private final Keyword cTNOMKeyword_1_18_0 = (Keyword)cGroup_1_18.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1_18_1 = (Keyword)cGroup_1_18.eContents().get(1);
		private final Assignment cNominalTemperatureAssignment_1_18_2 = (Assignment)cGroup_1_18.eContents().get(2);
		private final RuleCall cNominalTemperatureNUMBERTerminalRuleCall_1_18_2_0 = (RuleCall)cNominalTemperatureAssignment_1_18_2.eContents().get(0);
		private final Group cGroup_1_19 = (Group)cUnorderedGroup_1.eContents().get(19);
		private final Keyword cTRTOLKeyword_1_19_0 = (Keyword)cGroup_1_19.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1_19_1 = (Keyword)cGroup_1_19.eContents().get(1);
		private final Assignment cTrtolAssignment_1_19_2 = (Assignment)cGroup_1_19.eContents().get(2);
		private final RuleCall cTrtolNUMBERTerminalRuleCall_1_19_2_0 = (RuleCall)cTrtolAssignment_1_19_2.eContents().get(0);
		private final Group cGroup_1_20 = (Group)cUnorderedGroup_1.eContents().get(20);
		private final Keyword cVNTOLKeyword_1_20_0 = (Keyword)cGroup_1_20.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1_20_1 = (Keyword)cGroup_1_20.eContents().get(1);
		private final Assignment cVntolAssignment_1_20_2 = (Assignment)cGroup_1_20.eContents().get(2);
		private final RuleCall cVntolNUMBERTerminalRuleCall_1_20_2_0 = (RuleCall)cVntolAssignment_1_20_2.eContents().get(0);
		
		//Options:
		//	'.OPTION' ('ABSTOL' '=' abstol=NUMBER & 'BADMOS3' '=' badmos3=NUMBER & 'CHGTOL' '=' chgtol=NUMBER & 'DEFAD' '='
		//	defad=NUMBER & 'DEFAS' '=' defas=NUMBER & 'DEFL' '=' defl=NUMBER & 'DEFW' '=' defaultWidth=NUMBER & 'GMIN' '='
		//	gmin=NUMBER & 'ITL1' '=' itl1=NUMBER & 'ITL2' '=' itl2=NUMBER & 'ITL3' '=' itl3=NUMBER & 'ITL4' '=' itl4=NUMBER &
		//	'ITL5' '=' itl5=NUMBER & 'KEEPOPINFO' '=' keepopinfo=NUMBER & 'METHOD' '=' method=IntegrationMethod & 'PIVREL' '='
		//	pivrel=NUMBER & 'RELTOL' '=' reltol=NUMBER & 'TEMP' '=' temp=NUMBER & 'TNOM' '=' nominalTemperature=NUMBER & 'TRTOL'
		//	'=' trtol=NUMBER & 'VNTOL' '=' vntol=NUMBER);
		@Override public ParserRule getRule() { return rule; }
		
		//'.OPTION' ('ABSTOL' '=' abstol=NUMBER & 'BADMOS3' '=' badmos3=NUMBER & 'CHGTOL' '=' chgtol=NUMBER & 'DEFAD' '='
		//defad=NUMBER & 'DEFAS' '=' defas=NUMBER & 'DEFL' '=' defl=NUMBER & 'DEFW' '=' defaultWidth=NUMBER & 'GMIN' '='
		//gmin=NUMBER & 'ITL1' '=' itl1=NUMBER & 'ITL2' '=' itl2=NUMBER & 'ITL3' '=' itl3=NUMBER & 'ITL4' '=' itl4=NUMBER &
		//'ITL5' '=' itl5=NUMBER & 'KEEPOPINFO' '=' keepopinfo=NUMBER & 'METHOD' '=' method=IntegrationMethod & 'PIVREL' '='
		//pivrel=NUMBER & 'RELTOL' '=' reltol=NUMBER & 'TEMP' '=' temp=NUMBER & 'TNOM' '=' nominalTemperature=NUMBER & 'TRTOL'
		//'=' trtol=NUMBER & 'VNTOL' '=' vntol=NUMBER)
		public Group getGroup() { return cGroup; }
		
		//'.OPTION'
		public Keyword getOPTIONKeyword_0() { return cOPTIONKeyword_0; }
		
		//'ABSTOL' '=' abstol=NUMBER & 'BADMOS3' '=' badmos3=NUMBER & 'CHGTOL' '=' chgtol=NUMBER & 'DEFAD' '=' defad=NUMBER &
		//'DEFAS' '=' defas=NUMBER & 'DEFL' '=' defl=NUMBER & 'DEFW' '=' defaultWidth=NUMBER & 'GMIN' '=' gmin=NUMBER & 'ITL1'
		//'=' itl1=NUMBER & 'ITL2' '=' itl2=NUMBER & 'ITL3' '=' itl3=NUMBER & 'ITL4' '=' itl4=NUMBER & 'ITL5' '=' itl5=NUMBER &
		//'KEEPOPINFO' '=' keepopinfo=NUMBER & 'METHOD' '=' method=IntegrationMethod & 'PIVREL' '=' pivrel=NUMBER & 'RELTOL' '='
		//reltol=NUMBER & 'TEMP' '=' temp=NUMBER & 'TNOM' '=' nominalTemperature=NUMBER & 'TRTOL' '=' trtol=NUMBER & 'VNTOL' '='
		//vntol=NUMBER
		public UnorderedGroup getUnorderedGroup_1() { return cUnorderedGroup_1; }
		
		//'ABSTOL' '=' abstol=NUMBER
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'ABSTOL'
		public Keyword getABSTOLKeyword_1_0_0() { return cABSTOLKeyword_1_0_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_1_0_1() { return cEqualsSignKeyword_1_0_1; }
		
		//abstol=NUMBER
		public Assignment getAbstolAssignment_1_0_2() { return cAbstolAssignment_1_0_2; }
		
		//NUMBER
		public RuleCall getAbstolNUMBERTerminalRuleCall_1_0_2_0() { return cAbstolNUMBERTerminalRuleCall_1_0_2_0; }
		
		//'BADMOS3' '=' badmos3=NUMBER
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'BADMOS3'
		public Keyword getBADMOS3Keyword_1_1_0() { return cBADMOS3Keyword_1_1_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_1_1_1() { return cEqualsSignKeyword_1_1_1; }
		
		//badmos3=NUMBER
		public Assignment getBadmos3Assignment_1_1_2() { return cBadmos3Assignment_1_1_2; }
		
		//NUMBER
		public RuleCall getBadmos3NUMBERTerminalRuleCall_1_1_2_0() { return cBadmos3NUMBERTerminalRuleCall_1_1_2_0; }
		
		//'CHGTOL' '=' chgtol=NUMBER
		public Group getGroup_1_2() { return cGroup_1_2; }
		
		//'CHGTOL'
		public Keyword getCHGTOLKeyword_1_2_0() { return cCHGTOLKeyword_1_2_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_1_2_1() { return cEqualsSignKeyword_1_2_1; }
		
		//chgtol=NUMBER
		public Assignment getChgtolAssignment_1_2_2() { return cChgtolAssignment_1_2_2; }
		
		//NUMBER
		public RuleCall getChgtolNUMBERTerminalRuleCall_1_2_2_0() { return cChgtolNUMBERTerminalRuleCall_1_2_2_0; }
		
		//'DEFAD' '=' defad=NUMBER
		public Group getGroup_1_3() { return cGroup_1_3; }
		
		//'DEFAD'
		public Keyword getDEFADKeyword_1_3_0() { return cDEFADKeyword_1_3_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_1_3_1() { return cEqualsSignKeyword_1_3_1; }
		
		//defad=NUMBER
		public Assignment getDefadAssignment_1_3_2() { return cDefadAssignment_1_3_2; }
		
		//NUMBER
		public RuleCall getDefadNUMBERTerminalRuleCall_1_3_2_0() { return cDefadNUMBERTerminalRuleCall_1_3_2_0; }
		
		//'DEFAS' '=' defas=NUMBER
		public Group getGroup_1_4() { return cGroup_1_4; }
		
		//'DEFAS'
		public Keyword getDEFASKeyword_1_4_0() { return cDEFASKeyword_1_4_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_1_4_1() { return cEqualsSignKeyword_1_4_1; }
		
		//defas=NUMBER
		public Assignment getDefasAssignment_1_4_2() { return cDefasAssignment_1_4_2; }
		
		//NUMBER
		public RuleCall getDefasNUMBERTerminalRuleCall_1_4_2_0() { return cDefasNUMBERTerminalRuleCall_1_4_2_0; }
		
		//'DEFL' '=' defl=NUMBER
		public Group getGroup_1_5() { return cGroup_1_5; }
		
		//'DEFL'
		public Keyword getDEFLKeyword_1_5_0() { return cDEFLKeyword_1_5_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_1_5_1() { return cEqualsSignKeyword_1_5_1; }
		
		//defl=NUMBER
		public Assignment getDeflAssignment_1_5_2() { return cDeflAssignment_1_5_2; }
		
		//NUMBER
		public RuleCall getDeflNUMBERTerminalRuleCall_1_5_2_0() { return cDeflNUMBERTerminalRuleCall_1_5_2_0; }
		
		//'DEFW' '=' defaultWidth=NUMBER
		public Group getGroup_1_6() { return cGroup_1_6; }
		
		//'DEFW'
		public Keyword getDEFWKeyword_1_6_0() { return cDEFWKeyword_1_6_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_1_6_1() { return cEqualsSignKeyword_1_6_1; }
		
		//defaultWidth=NUMBER
		public Assignment getDefaultWidthAssignment_1_6_2() { return cDefaultWidthAssignment_1_6_2; }
		
		//NUMBER
		public RuleCall getDefaultWidthNUMBERTerminalRuleCall_1_6_2_0() { return cDefaultWidthNUMBERTerminalRuleCall_1_6_2_0; }
		
		//'GMIN' '=' gmin=NUMBER
		public Group getGroup_1_7() { return cGroup_1_7; }
		
		//'GMIN'
		public Keyword getGMINKeyword_1_7_0() { return cGMINKeyword_1_7_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_1_7_1() { return cEqualsSignKeyword_1_7_1; }
		
		//gmin=NUMBER
		public Assignment getGminAssignment_1_7_2() { return cGminAssignment_1_7_2; }
		
		//NUMBER
		public RuleCall getGminNUMBERTerminalRuleCall_1_7_2_0() { return cGminNUMBERTerminalRuleCall_1_7_2_0; }
		
		//'ITL1' '=' itl1=NUMBER
		public Group getGroup_1_8() { return cGroup_1_8; }
		
		//'ITL1'
		public Keyword getITL1Keyword_1_8_0() { return cITL1Keyword_1_8_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_1_8_1() { return cEqualsSignKeyword_1_8_1; }
		
		//itl1=NUMBER
		public Assignment getItl1Assignment_1_8_2() { return cItl1Assignment_1_8_2; }
		
		//NUMBER
		public RuleCall getItl1NUMBERTerminalRuleCall_1_8_2_0() { return cItl1NUMBERTerminalRuleCall_1_8_2_0; }
		
		//'ITL2' '=' itl2=NUMBER
		public Group getGroup_1_9() { return cGroup_1_9; }
		
		//'ITL2'
		public Keyword getITL2Keyword_1_9_0() { return cITL2Keyword_1_9_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_1_9_1() { return cEqualsSignKeyword_1_9_1; }
		
		//itl2=NUMBER
		public Assignment getItl2Assignment_1_9_2() { return cItl2Assignment_1_9_2; }
		
		//NUMBER
		public RuleCall getItl2NUMBERTerminalRuleCall_1_9_2_0() { return cItl2NUMBERTerminalRuleCall_1_9_2_0; }
		
		//'ITL3' '=' itl3=NUMBER
		public Group getGroup_1_10() { return cGroup_1_10; }
		
		//'ITL3'
		public Keyword getITL3Keyword_1_10_0() { return cITL3Keyword_1_10_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_1_10_1() { return cEqualsSignKeyword_1_10_1; }
		
		//itl3=NUMBER
		public Assignment getItl3Assignment_1_10_2() { return cItl3Assignment_1_10_2; }
		
		//NUMBER
		public RuleCall getItl3NUMBERTerminalRuleCall_1_10_2_0() { return cItl3NUMBERTerminalRuleCall_1_10_2_0; }
		
		//'ITL4' '=' itl4=NUMBER
		public Group getGroup_1_11() { return cGroup_1_11; }
		
		//'ITL4'
		public Keyword getITL4Keyword_1_11_0() { return cITL4Keyword_1_11_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_1_11_1() { return cEqualsSignKeyword_1_11_1; }
		
		//itl4=NUMBER
		public Assignment getItl4Assignment_1_11_2() { return cItl4Assignment_1_11_2; }
		
		//NUMBER
		public RuleCall getItl4NUMBERTerminalRuleCall_1_11_2_0() { return cItl4NUMBERTerminalRuleCall_1_11_2_0; }
		
		//'ITL5' '=' itl5=NUMBER
		public Group getGroup_1_12() { return cGroup_1_12; }
		
		//'ITL5'
		public Keyword getITL5Keyword_1_12_0() { return cITL5Keyword_1_12_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_1_12_1() { return cEqualsSignKeyword_1_12_1; }
		
		//itl5=NUMBER
		public Assignment getItl5Assignment_1_12_2() { return cItl5Assignment_1_12_2; }
		
		//NUMBER
		public RuleCall getItl5NUMBERTerminalRuleCall_1_12_2_0() { return cItl5NUMBERTerminalRuleCall_1_12_2_0; }
		
		//'KEEPOPINFO' '=' keepopinfo=NUMBER
		public Group getGroup_1_13() { return cGroup_1_13; }
		
		//'KEEPOPINFO'
		public Keyword getKEEPOPINFOKeyword_1_13_0() { return cKEEPOPINFOKeyword_1_13_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_1_13_1() { return cEqualsSignKeyword_1_13_1; }
		
		//keepopinfo=NUMBER
		public Assignment getKeepopinfoAssignment_1_13_2() { return cKeepopinfoAssignment_1_13_2; }
		
		//NUMBER
		public RuleCall getKeepopinfoNUMBERTerminalRuleCall_1_13_2_0() { return cKeepopinfoNUMBERTerminalRuleCall_1_13_2_0; }
		
		//'METHOD' '=' method=IntegrationMethod
		public Group getGroup_1_14() { return cGroup_1_14; }
		
		//'METHOD'
		public Keyword getMETHODKeyword_1_14_0() { return cMETHODKeyword_1_14_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_1_14_1() { return cEqualsSignKeyword_1_14_1; }
		
		//method=IntegrationMethod
		public Assignment getMethodAssignment_1_14_2() { return cMethodAssignment_1_14_2; }
		
		//IntegrationMethod
		public RuleCall getMethodIntegrationMethodEnumRuleCall_1_14_2_0() { return cMethodIntegrationMethodEnumRuleCall_1_14_2_0; }
		
		//'PIVREL' '=' pivrel=NUMBER
		public Group getGroup_1_15() { return cGroup_1_15; }
		
		//'PIVREL'
		public Keyword getPIVRELKeyword_1_15_0() { return cPIVRELKeyword_1_15_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_1_15_1() { return cEqualsSignKeyword_1_15_1; }
		
		//pivrel=NUMBER
		public Assignment getPivrelAssignment_1_15_2() { return cPivrelAssignment_1_15_2; }
		
		//NUMBER
		public RuleCall getPivrelNUMBERTerminalRuleCall_1_15_2_0() { return cPivrelNUMBERTerminalRuleCall_1_15_2_0; }
		
		//'RELTOL' '=' reltol=NUMBER
		public Group getGroup_1_16() { return cGroup_1_16; }
		
		//'RELTOL'
		public Keyword getRELTOLKeyword_1_16_0() { return cRELTOLKeyword_1_16_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_1_16_1() { return cEqualsSignKeyword_1_16_1; }
		
		//reltol=NUMBER
		public Assignment getReltolAssignment_1_16_2() { return cReltolAssignment_1_16_2; }
		
		//NUMBER
		public RuleCall getReltolNUMBERTerminalRuleCall_1_16_2_0() { return cReltolNUMBERTerminalRuleCall_1_16_2_0; }
		
		//'TEMP' '=' temp=NUMBER
		public Group getGroup_1_17() { return cGroup_1_17; }
		
		//'TEMP'
		public Keyword getTEMPKeyword_1_17_0() { return cTEMPKeyword_1_17_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_1_17_1() { return cEqualsSignKeyword_1_17_1; }
		
		//temp=NUMBER
		public Assignment getTempAssignment_1_17_2() { return cTempAssignment_1_17_2; }
		
		//NUMBER
		public RuleCall getTempNUMBERTerminalRuleCall_1_17_2_0() { return cTempNUMBERTerminalRuleCall_1_17_2_0; }
		
		//'TNOM' '=' nominalTemperature=NUMBER
		public Group getGroup_1_18() { return cGroup_1_18; }
		
		//'TNOM'
		public Keyword getTNOMKeyword_1_18_0() { return cTNOMKeyword_1_18_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_1_18_1() { return cEqualsSignKeyword_1_18_1; }
		
		//nominalTemperature=NUMBER
		public Assignment getNominalTemperatureAssignment_1_18_2() { return cNominalTemperatureAssignment_1_18_2; }
		
		//NUMBER
		public RuleCall getNominalTemperatureNUMBERTerminalRuleCall_1_18_2_0() { return cNominalTemperatureNUMBERTerminalRuleCall_1_18_2_0; }
		
		//'TRTOL' '=' trtol=NUMBER
		public Group getGroup_1_19() { return cGroup_1_19; }
		
		//'TRTOL'
		public Keyword getTRTOLKeyword_1_19_0() { return cTRTOLKeyword_1_19_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_1_19_1() { return cEqualsSignKeyword_1_19_1; }
		
		//trtol=NUMBER
		public Assignment getTrtolAssignment_1_19_2() { return cTrtolAssignment_1_19_2; }
		
		//NUMBER
		public RuleCall getTrtolNUMBERTerminalRuleCall_1_19_2_0() { return cTrtolNUMBERTerminalRuleCall_1_19_2_0; }
		
		//'VNTOL' '=' vntol=NUMBER
		public Group getGroup_1_20() { return cGroup_1_20; }
		
		//'VNTOL'
		public Keyword getVNTOLKeyword_1_20_0() { return cVNTOLKeyword_1_20_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_1_20_1() { return cEqualsSignKeyword_1_20_1; }
		
		//vntol=NUMBER
		public Assignment getVntolAssignment_1_20_2() { return cVntolAssignment_1_20_2; }
		
		//NUMBER
		public RuleCall getVntolNUMBERTerminalRuleCall_1_20_2_0() { return cVntolNUMBERTerminalRuleCall_1_20_2_0; }
	}
	public class NodeSetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.NodeSet");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNODESETKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cEntriesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cEntriesNodeSetEntryParserRuleCall_1_0 = (RuleCall)cEntriesAssignment_1.eContents().get(0);
		private final Assignment cEntriesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cEntriesNodeSetEntryParserRuleCall_2_0 = (RuleCall)cEntriesAssignment_2.eContents().get(0);
		
		//NodeSet:
		//	'.NODESET' entries+=NodeSetEntry entries+=NodeSetEntry*;
		@Override public ParserRule getRule() { return rule; }
		
		//'.NODESET' entries+=NodeSetEntry entries+=NodeSetEntry*
		public Group getGroup() { return cGroup; }
		
		//'.NODESET'
		public Keyword getNODESETKeyword_0() { return cNODESETKeyword_0; }
		
		//entries+=NodeSetEntry
		public Assignment getEntriesAssignment_1() { return cEntriesAssignment_1; }
		
		//NodeSetEntry
		public RuleCall getEntriesNodeSetEntryParserRuleCall_1_0() { return cEntriesNodeSetEntryParserRuleCall_1_0; }
		
		//entries+=NodeSetEntry*
		public Assignment getEntriesAssignment_2() { return cEntriesAssignment_2; }
		
		//NodeSetEntry
		public RuleCall getEntriesNodeSetEntryParserRuleCall_2_0() { return cEntriesNodeSetEntryParserRuleCall_2_0; }
	}
	public class InitialConditionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.InitialCondition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cICKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cEntriesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cEntriesNodeSetEntryParserRuleCall_1_0 = (RuleCall)cEntriesAssignment_1.eContents().get(0);
		private final Assignment cEntriesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cEntriesNodeSetEntryParserRuleCall_2_0 = (RuleCall)cEntriesAssignment_2.eContents().get(0);
		
		//InitialCondition:
		//	'.IC' entries+=NodeSetEntry entries+=NodeSetEntry*;
		@Override public ParserRule getRule() { return rule; }
		
		//'.IC' entries+=NodeSetEntry entries+=NodeSetEntry*
		public Group getGroup() { return cGroup; }
		
		//'.IC'
		public Keyword getICKeyword_0() { return cICKeyword_0; }
		
		//entries+=NodeSetEntry
		public Assignment getEntriesAssignment_1() { return cEntriesAssignment_1; }
		
		//NodeSetEntry
		public RuleCall getEntriesNodeSetEntryParserRuleCall_1_0() { return cEntriesNodeSetEntryParserRuleCall_1_0; }
		
		//entries+=NodeSetEntry*
		public Assignment getEntriesAssignment_2() { return cEntriesAssignment_2; }
		
		//NodeSetEntry
		public RuleCall getEntriesNodeSetEntryParserRuleCall_2_0() { return cEntriesNodeSetEntryParserRuleCall_2_0; }
	}
	public class NodeSetEntryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.NodeSetEntry");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cVKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNodeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNodeNODETerminalRuleCall_2_0 = (RuleCall)cNodeAssignment_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cEqualsSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cValueAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cValueNUMBERTerminalRuleCall_5_0 = (RuleCall)cValueAssignment_5.eContents().get(0);
		
		//NodeSetEntry:
		//	'V' '(' node+=NODE ')' '=' value=NUMBER;
		@Override public ParserRule getRule() { return rule; }
		
		//'V' '(' node+=NODE ')' '=' value=NUMBER
		public Group getGroup() { return cGroup; }
		
		//'V'
		public Keyword getVKeyword_0() { return cVKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//node+=NODE
		public Assignment getNodeAssignment_2() { return cNodeAssignment_2; }
		
		//NODE
		public RuleCall getNodeNODETerminalRuleCall_2_0() { return cNodeNODETerminalRuleCall_2_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3() { return cRightParenthesisKeyword_3; }
		
		//'='
		public Keyword getEqualsSignKeyword_4() { return cEqualsSignKeyword_4; }
		
		//value=NUMBER
		public Assignment getValueAssignment_5() { return cValueAssignment_5; }
		
		//NUMBER
		public RuleCall getValueNUMBERTerminalRuleCall_5_0() { return cValueNUMBERTerminalRuleCall_5_0; }
	}
	public class LabelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.Label");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cNODETerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cBIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cCIDTerminalRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cDIDTerminalRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cEIDTerminalRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cFIDTerminalRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cGIDTerminalRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cHIDTerminalRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cIIDTerminalRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cKIDTerminalRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		private final RuleCall cLIDTerminalRuleCall_10 = (RuleCall)cAlternatives.eContents().get(10);
		private final RuleCall cMNIDTerminalRuleCall_11 = (RuleCall)cAlternatives.eContents().get(11);
		private final RuleCall cMPIDTerminalRuleCall_12 = (RuleCall)cAlternatives.eContents().get(12);
		private final RuleCall cOIDTerminalRuleCall_13 = (RuleCall)cAlternatives.eContents().get(13);
		private final RuleCall cQNIDTerminalRuleCall_14 = (RuleCall)cAlternatives.eContents().get(14);
		private final RuleCall cQPIDTerminalRuleCall_15 = (RuleCall)cAlternatives.eContents().get(15);
		private final RuleCall cRIDTerminalRuleCall_16 = (RuleCall)cAlternatives.eContents().get(16);
		private final RuleCall cSIDTerminalRuleCall_17 = (RuleCall)cAlternatives.eContents().get(17);
		private final RuleCall cTNIDTerminalRuleCall_18 = (RuleCall)cAlternatives.eContents().get(18);
		private final RuleCall cTPIDTerminalRuleCall_19 = (RuleCall)cAlternatives.eContents().get(19);
		private final RuleCall cVIDTerminalRuleCall_20 = (RuleCall)cAlternatives.eContents().get(20);
		private final RuleCall cIDTerminalRuleCall_21 = (RuleCall)cAlternatives.eContents().get(21);
		
		//Label:
		//	NODE | BID | CID | DID | EID | FID | GID | HID | IID | KID | LID | MNID | MPID | OID | QNID | QPID | RID | SID | TNID
		//	| TPID | VID | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//NODE | BID | CID | DID | EID | FID | GID | HID | IID | KID | LID | MNID | MPID | OID | QNID | QPID | RID | SID | TNID |
		//TPID | VID | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//NODE
		public RuleCall getNODETerminalRuleCall_0() { return cNODETerminalRuleCall_0; }
		
		//BID
		public RuleCall getBIDTerminalRuleCall_1() { return cBIDTerminalRuleCall_1; }
		
		//CID
		public RuleCall getCIDTerminalRuleCall_2() { return cCIDTerminalRuleCall_2; }
		
		//DID
		public RuleCall getDIDTerminalRuleCall_3() { return cDIDTerminalRuleCall_3; }
		
		//EID
		public RuleCall getEIDTerminalRuleCall_4() { return cEIDTerminalRuleCall_4; }
		
		//FID
		public RuleCall getFIDTerminalRuleCall_5() { return cFIDTerminalRuleCall_5; }
		
		//GID
		public RuleCall getGIDTerminalRuleCall_6() { return cGIDTerminalRuleCall_6; }
		
		//HID
		public RuleCall getHIDTerminalRuleCall_7() { return cHIDTerminalRuleCall_7; }
		
		//IID
		public RuleCall getIIDTerminalRuleCall_8() { return cIIDTerminalRuleCall_8; }
		
		//KID
		public RuleCall getKIDTerminalRuleCall_9() { return cKIDTerminalRuleCall_9; }
		
		//LID
		public RuleCall getLIDTerminalRuleCall_10() { return cLIDTerminalRuleCall_10; }
		
		//MNID
		public RuleCall getMNIDTerminalRuleCall_11() { return cMNIDTerminalRuleCall_11; }
		
		//MPID
		public RuleCall getMPIDTerminalRuleCall_12() { return cMPIDTerminalRuleCall_12; }
		
		//OID
		public RuleCall getOIDTerminalRuleCall_13() { return cOIDTerminalRuleCall_13; }
		
		//QNID
		public RuleCall getQNIDTerminalRuleCall_14() { return cQNIDTerminalRuleCall_14; }
		
		//QPID
		public RuleCall getQPIDTerminalRuleCall_15() { return cQPIDTerminalRuleCall_15; }
		
		//RID
		public RuleCall getRIDTerminalRuleCall_16() { return cRIDTerminalRuleCall_16; }
		
		//SID
		public RuleCall getSIDTerminalRuleCall_17() { return cSIDTerminalRuleCall_17; }
		
		//TNID
		public RuleCall getTNIDTerminalRuleCall_18() { return cTNIDTerminalRuleCall_18; }
		
		//TPID
		public RuleCall getTPIDTerminalRuleCall_19() { return cTPIDTerminalRuleCall_19; }
		
		//VID
		public RuleCall getVIDTerminalRuleCall_20() { return cVIDTerminalRuleCall_20; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_21() { return cIDTerminalRuleCall_21; }
	}
	
	public class PRTYPEElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.PRTYPE");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cDCEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cDCDCKeyword_0_0 = (Keyword)cDCEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cACEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cACACKeyword_1_0 = (Keyword)cACEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cTRANEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cTRANTRANKeyword_2_0 = (Keyword)cTRANEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cNOISEEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cNOISENOISEKeyword_3_0 = (Keyword)cNOISEEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum PRTYPE:
		//	DC | AC | TRAN | NOISE;
		public EnumRule getRule() { return rule; }
		
		//DC | AC | TRAN | NOISE
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//DC
		public EnumLiteralDeclaration getDCEnumLiteralDeclaration_0() { return cDCEnumLiteralDeclaration_0; }
		
		//'DC'
		public Keyword getDCDCKeyword_0_0() { return cDCDCKeyword_0_0; }
		
		//AC
		public EnumLiteralDeclaration getACEnumLiteralDeclaration_1() { return cACEnumLiteralDeclaration_1; }
		
		//'AC'
		public Keyword getACACKeyword_1_0() { return cACACKeyword_1_0; }
		
		//TRAN
		public EnumLiteralDeclaration getTRANEnumLiteralDeclaration_2() { return cTRANEnumLiteralDeclaration_2; }
		
		//'TRAN'
		public Keyword getTRANTRANKeyword_2_0() { return cTRANTRANKeyword_2_0; }
		
		//NOISE
		public EnumLiteralDeclaration getNOISEEnumLiteralDeclaration_3() { return cNOISEEnumLiteralDeclaration_3; }
		
		//'NOISE'
		public Keyword getNOISENOISEKeyword_3_0() { return cNOISENOISEKeyword_3_0; }
	}
	public class IntegrationMethodElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.IntegrationMethod");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cGEAREnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cGEARGearKeyword_0_0 = (Keyword)cGEAREnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cTRAPEZOIDALEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cTRAPEZOIDALTrapezoidalKeyword_1_0 = (Keyword)cTRAPEZOIDALEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cEULEREnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cEULEREulerKeyword_2_0 = (Keyword)cEULEREnumLiteralDeclaration_2.eContents().get(0);
		
		//enum IntegrationMethod:
		//	GEAR='Gear' | TRAPEZOIDAL='Trapezoidal' | EULER='Euler';
		public EnumRule getRule() { return rule; }
		
		//GEAR='Gear' | TRAPEZOIDAL='Trapezoidal' | EULER='Euler'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//GEAR='Gear'
		public EnumLiteralDeclaration getGEAREnumLiteralDeclaration_0() { return cGEAREnumLiteralDeclaration_0; }
		
		//'Gear'
		public Keyword getGEARGearKeyword_0_0() { return cGEARGearKeyword_0_0; }
		
		//TRAPEZOIDAL='Trapezoidal'
		public EnumLiteralDeclaration getTRAPEZOIDALEnumLiteralDeclaration_1() { return cTRAPEZOIDALEnumLiteralDeclaration_1; }
		
		//'Trapezoidal'
		public Keyword getTRAPEZOIDALTrapezoidalKeyword_1_0() { return cTRAPEZOIDALTrapezoidalKeyword_1_0; }
		
		//EULER='Euler'
		public EnumLiteralDeclaration getEULEREnumLiteralDeclaration_2() { return cEULEREnumLiteralDeclaration_2; }
		
		//'Euler'
		public Keyword getEULEREulerKeyword_2_0() { return cEULEREulerKeyword_2_0; }
	}
	
	private final CompilationElements pCompilation;
	private final EntityElements pEntity;
	private final ComponentElements pComponent;
	private final SubCircuitDefinitionElements pSubCircuitDefinition;
	private final SubCircuitElements pSubCircuit;
	private final ResistorElements pResistor;
	private final ResistorModelElements pResistorModel;
	private final CapacitorElements pCapacitor;
	private final CapacitorModelElements pCapacitorModel;
	private final InductorElements pInductor;
	private final MutualInductanceElements pMutualInductance;
	private final VoltageSwitchElements pVoltageSwitch;
	private final VoltageSwitchModelElements pVoltageSwitchModel;
	private final CurrentSwitchElements pCurrentSwitch;
	private final CurrentSwitchModelElements pCurrentSwitchModel;
	private final DiodeElements pDiode;
	private final DiodeModelElements pDiodeModel;
	private final MOSFETElements pMOSFET;
	private final MOSFETModelElements pMOSFETModel;
	private final BJTElements pBJT;
	private final BJTModelElements pBJTModel;
	private final JFETElements pJFET;
	private final JFETModelElements pJFETModel;
	private final VSourceElements pVSource;
	private final CurrentSourceElements pCurrentSource;
	private final VCVSElements pVCVS;
	private final VCCSElements pVCCS;
	private final CCCSElements pCCCS;
	private final CCVSElements pCCVS;
	private final GeometericSweepElements pGeometericSweep;
	private final LinearSweepElements pLinearSweep;
	private final OctaveSweepElements pOctaveSweep;
	private final DecadeSweepElements pDecadeSweep;
	private final ParameterSweepElements pParameterSweep;
	private final SimulationElements pSimulation;
	private final ACSimulationElements pACSimulation;
	private final DCSimulationElements pDCSimulation;
	private final NoiseSimulationElements pNoiseSimulation;
	private final TransientSimulationElements pTransientSimulation;
	private final OutputElements pOutput;
	private final PrintElements pPrint;
	private final PlotElements pPlot;
	private final ExportElements pExport;
	private final VoltageExportElements pVoltageExport;
	private final CurrentExportElements pCurrentExport;
	private final WaveformElements pWaveform;
	private final ExpElements pExp;
	private final SineElements pSine;
	private final PulseElements pPulse;
	private final PWLElements pPWL;
	private final SFFMElements pSFFM;
	private final AMElements pAM;
	private final OptionsElements pOptions;
	private final NodeSetElements pNodeSet;
	private final InitialConditionElements pInitialCondition;
	private final NodeSetEntryElements pNodeSetEntry;
	private final LabelElements pLabel;
	private final PRTYPEElements ePRTYPE;
	private final IntegrationMethodElements eIntegrationMethod;
	private final TerminalRule tOP;
	private final TerminalRule tCHAR;
	private final TerminalRule tDIGIT;
	private final TerminalRule tBID;
	private final TerminalRule tCID;
	private final TerminalRule tDID;
	private final TerminalRule tEID;
	private final TerminalRule tFID;
	private final TerminalRule tGID;
	private final TerminalRule tHID;
	private final TerminalRule tIID;
	private final TerminalRule tKID;
	private final TerminalRule tLID;
	private final TerminalRule tMNID;
	private final TerminalRule tMPID;
	private final TerminalRule tOID;
	private final TerminalRule tQNID;
	private final TerminalRule tQPID;
	private final TerminalRule tRID;
	private final TerminalRule tSID;
	private final TerminalRule tTNID;
	private final TerminalRule tTPID;
	private final TerminalRule tVID;
	private final TerminalRule tWID;
	private final TerminalRule tXID;
	private final TerminalRule tINT;
	private final TerminalRule tDECIMAL;
	private final TerminalRule tMETRIC_PREFIX;
	private final TerminalRule tNUMBER;
	private final TerminalRule tNODE;
	private final TerminalRule tID;
	private final TerminalRule tSL_COMMENT;
	private final TerminalRule tWS;
	
	private final Grammar grammar;

	@Inject
	public XSpiceGrammarAccess(GrammarProvider grammarProvider) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.pCompilation = new CompilationElements();
		this.pEntity = new EntityElements();
		this.pComponent = new ComponentElements();
		this.pSubCircuitDefinition = new SubCircuitDefinitionElements();
		this.pSubCircuit = new SubCircuitElements();
		this.pResistor = new ResistorElements();
		this.pResistorModel = new ResistorModelElements();
		this.pCapacitor = new CapacitorElements();
		this.pCapacitorModel = new CapacitorModelElements();
		this.pInductor = new InductorElements();
		this.pMutualInductance = new MutualInductanceElements();
		this.pVoltageSwitch = new VoltageSwitchElements();
		this.pVoltageSwitchModel = new VoltageSwitchModelElements();
		this.pCurrentSwitch = new CurrentSwitchElements();
		this.pCurrentSwitchModel = new CurrentSwitchModelElements();
		this.pDiode = new DiodeElements();
		this.pDiodeModel = new DiodeModelElements();
		this.pMOSFET = new MOSFETElements();
		this.pMOSFETModel = new MOSFETModelElements();
		this.pBJT = new BJTElements();
		this.pBJTModel = new BJTModelElements();
		this.pJFET = new JFETElements();
		this.pJFETModel = new JFETModelElements();
		this.pVSource = new VSourceElements();
		this.pCurrentSource = new CurrentSourceElements();
		this.pVCVS = new VCVSElements();
		this.pVCCS = new VCCSElements();
		this.pCCCS = new CCCSElements();
		this.pCCVS = new CCVSElements();
		this.pGeometericSweep = new GeometericSweepElements();
		this.pLinearSweep = new LinearSweepElements();
		this.pOctaveSweep = new OctaveSweepElements();
		this.pDecadeSweep = new DecadeSweepElements();
		this.pParameterSweep = new ParameterSweepElements();
		this.pSimulation = new SimulationElements();
		this.pACSimulation = new ACSimulationElements();
		this.pDCSimulation = new DCSimulationElements();
		this.pNoiseSimulation = new NoiseSimulationElements();
		this.pTransientSimulation = new TransientSimulationElements();
		this.pOutput = new OutputElements();
		this.pPrint = new PrintElements();
		this.pPlot = new PlotElements();
		this.pExport = new ExportElements();
		this.pVoltageExport = new VoltageExportElements();
		this.pCurrentExport = new CurrentExportElements();
		this.pWaveform = new WaveformElements();
		this.pExp = new ExpElements();
		this.pSine = new SineElements();
		this.pPulse = new PulseElements();
		this.pPWL = new PWLElements();
		this.pSFFM = new SFFMElements();
		this.pAM = new AMElements();
		this.pOptions = new OptionsElements();
		this.pNodeSet = new NodeSetElements();
		this.pInitialCondition = new InitialConditionElements();
		this.pNodeSetEntry = new NodeSetEntryElements();
		this.pLabel = new LabelElements();
		this.ePRTYPE = new PRTYPEElements();
		this.eIntegrationMethod = new IntegrationMethodElements();
		this.tOP = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.OP");
		this.tCHAR = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.CHAR");
		this.tDIGIT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.DIGIT");
		this.tBID = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.BID");
		this.tCID = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.CID");
		this.tDID = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.DID");
		this.tEID = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.EID");
		this.tFID = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.FID");
		this.tGID = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.GID");
		this.tHID = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.HID");
		this.tIID = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.IID");
		this.tKID = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.KID");
		this.tLID = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.LID");
		this.tMNID = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.MNID");
		this.tMPID = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.MPID");
		this.tOID = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.OID");
		this.tQNID = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.QNID");
		this.tQPID = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.QPID");
		this.tRID = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.RID");
		this.tSID = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.SID");
		this.tTNID = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.TNID");
		this.tTPID = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.TPID");
		this.tVID = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.VID");
		this.tWID = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.WID");
		this.tXID = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.XID");
		this.tINT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.INT");
		this.tDECIMAL = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.DECIMAL");
		this.tMETRIC_PREFIX = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.METRIC_PREFIX");
		this.tNUMBER = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.NUMBER");
		this.tNODE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.NODE");
		this.tID = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.ID");
		this.tSL_COMMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.SL_COMMENT");
		this.tWS = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "com.xtext.ravornyo.xspice.XSpice.WS");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("com.xtext.ravornyo.xspice.XSpice".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	

	
	//Compilation:
	//	{Compilation} (SL_COMMENT | definitions+=SubCircuitDefinition | entities+=Entity | simulations+=Simulation |
	//	outputs+=Output | options+=Options | ic+=InitialCondition | nodeset+=NodeSet)*
	//	'.END'?;
	public CompilationElements getCompilationAccess() {
		return pCompilation;
	}
	
	public ParserRule getCompilationRule() {
		return getCompilationAccess().getRule();
	}
	
	//Entity:
	//	Component | SubCircuit | ResistorModel | CapacitorModel | MutualInductance | VoltageSwitchModel | CurrentSwitchModel |
	//	DiodeModel | MOSFETModel | BJTModel | JFETModel;
	public EntityElements getEntityAccess() {
		return pEntity;
	}
	
	public ParserRule getEntityRule() {
		return getEntityAccess().getRule();
	}
	
	//Component:
	//	Resistor | Capacitor | Inductor | VoltageSwitch | CurrentSwitch | Diode | MOSFET | BJT | JFET | VSource |
	//	CurrentSource | VCVS | VCCS | CCCS | CCVS;
	public ComponentElements getComponentAccess() {
		return pComponent;
	}
	
	public ParserRule getComponentRule() {
		return getComponentAccess().getRule();
	}
	
	//SubCircuitDefinition:
	//	'.SUBCKT' name=Label pins+=NODE pins+=NODE* (SL_COMMENT | definitions+=SubCircuitDefinition | entities+=Entity)*
	//	'.END';
	public SubCircuitDefinitionElements getSubCircuitDefinitionAccess() {
		return pSubCircuitDefinition;
	}
	
	public ParserRule getSubCircuitDefinitionRule() {
		return getSubCircuitDefinitionAccess().getRule();
	}
	
	//SubCircuit:
	//	name=XID nodes+=NODE nodes+=NODE* definition=[SubCircuitDefinition|Label];
	public SubCircuitElements getSubCircuitAccess() {
		return pSubCircuit;
	}
	
	public ParserRule getSubCircuitRule() {
		return getSubCircuitAccess().getRule();
	}
	
	//Resistor:
	//	name=RID nodes+=NODE nodes+=NODE resistance=NUMBER? model=Label? ('L' '=' length=NUMBER & ('W' '=' width=NUMBER)? &
	//	('TEMP' '=' temp=NUMBER)?)?;
	public ResistorElements getResistorAccess() {
		return pResistor;
	}
	
	public ParserRule getResistorRule() {
		return getResistorAccess().getRule();
	}
	
	//ResistorModel:
	//	'.MODEL' name=Label 'R' '(' ('RSH' '=' sheetResistance=NUMBER & ('DEFW' '=' defaultWidth=NUMBER)? & ('NARROW' '='
	//	narrow=NUMBER)? & ('TC1' '=' temperatureCoefficient1=NUMBER)? & ('TC2' '=' temperatureCoefficient2=NUMBER)? & ('TNOM'
	//	'=' nominalTemperature=NUMBER)?) ')';
	public ResistorModelElements getResistorModelAccess() {
		return pResistorModel;
	}
	
	public ParserRule getResistorModelRule() {
		return getResistorModelAccess().getRule();
	}
	
	//Capacitor:
	//	name=CID nodes+=NODE nodes+=NODE capacitance=NUMBER? model=Label? (('L' '=' length=NUMBER)? & ('W' '=' width=NUMBER)?)
	//	('IC' '=' initialCondition=NUMBER)?;
	public CapacitorElements getCapacitorAccess() {
		return pCapacitor;
	}
	
	public ParserRule getCapacitorRule() {
		return getCapacitorAccess().getRule();
	}
	
	//CapacitorModel:
	//	'.MODEL' name=Label 'C' '(' ('CJ' '=' junctionCap=NUMBER & 'CJSW' '=' junctionCapSidewall=NUMBER & ('DEFW' '='
	//	defaultWidth=NUMBER)? & ('NARROW' '=' narrow=NUMBER)? & ('TC1' '=' temperatureCoefficient1=NUMBER)? & ('TC2' '='
	//	temperatureCoefficient2=NUMBER)? & ('TNOM' '=' nominalTemperature=NUMBER)?) ')';
	public CapacitorModelElements getCapacitorModelAccess() {
		return pCapacitorModel;
	}
	
	public ParserRule getCapacitorModelRule() {
		return getCapacitorModelAccess().getRule();
	}
	
	//Inductor:
	//	name=LID nodes+=NODE nodes+=NODE inductance=NUMBER ('IC' '=' initialCondition=NUMBER)?;
	public InductorElements getInductorAccess() {
		return pInductor;
	}
	
	public ParserRule getInductorRule() {
		return getInductorAccess().getRule();
	}
	
	//MutualInductance:
	//	name=KID inductor1=LID inductor2=LID coupling=NUMBER;
	public MutualInductanceElements getMutualInductanceAccess() {
		return pMutualInductance;
	}
	
	public ParserRule getMutualInductanceRule() {
		return getMutualInductanceAccess().getRule();
	}
	
	//VoltageSwitch:
	//	name=SID nodes+=NODE nodes+=NODE nodes+=NODE nodes+=NODE model=Label (zeroState?='ON' | 'OFF')?;
	public VoltageSwitchElements getVoltageSwitchAccess() {
		return pVoltageSwitch;
	}
	
	public ParserRule getVoltageSwitchRule() {
		return getVoltageSwitchAccess().getRule();
	}
	
	//VoltageSwitchModel:
	//	'.MODEL' name=Label 'SW' '(' ('VT' '=' threshold=NUMBER & 'VH' '=' hysteresis=NUMBER & 'RON' '=' onResistance=NUMBER &
	//	'ROFF' '=' offResistance=NUMBER) ')';
	public VoltageSwitchModelElements getVoltageSwitchModelAccess() {
		return pVoltageSwitchModel;
	}
	
	public ParserRule getVoltageSwitchModelRule() {
		return getVoltageSwitchModelAccess().getRule();
	}
	
	//CurrentSwitch:
	//	name=WID nodes+=NODE nodes+=NODE controllingSource=IID model=Label (zeroState?='ON' | 'OFF')?;
	public CurrentSwitchElements getCurrentSwitchAccess() {
		return pCurrentSwitch;
	}
	
	public ParserRule getCurrentSwitchRule() {
		return getCurrentSwitchAccess().getRule();
	}
	
	//CurrentSwitchModel:
	//	'.MODEL' name=Label 'CSW' '(' ('IT' '=' threshold=NUMBER & 'IH' '=' hysteresis=NUMBER & 'RON' '=' onResistance=NUMBER
	//	& 'ROFF' '=' offResistance=NUMBER) ')';
	public CurrentSwitchModelElements getCurrentSwitchModelAccess() {
		return pCurrentSwitchModel;
	}
	
	public ParserRule getCurrentSwitchModelRule() {
		return getCurrentSwitchModelAccess().getRule();
	}
	
	//Diode:
	//	name=DID nodes+=NODE nodes+=NODE model=Label (('AREA' '=' area=NUMBER)? & off?='OFF'? & ('IC' '=' ic=NUMBER)? &
	//	('TEMP' '=' temp=NUMBER)?);
	public DiodeElements getDiodeAccess() {
		return pDiode;
	}
	
	public ParserRule getDiodeRule() {
		return getDiodeAccess().getRule();
	}
	
	//DiodeModel:
	//	'.MODEL' name=Label 'D' '(' (('IS' '=' saturationCurrent=NUMBER)? & ('RS' '=' resistance=NUMBER)? & ('N' '='
	//	emissionCoefficient=NUMBER)? & ('TT' '=' transitTime=NUMBER)? & ('CJO' '=' junctionCap=NUMBER)? & ('VJ' '='
	//	junctionPotential=NUMBER)? & ('M' '=' gradingCoefficient=NUMBER)? & ('EG' '=' activationEnergy=NUMBER)? & ('XTI' '='
	//	saturationCurrentExp=NUMBER)? & ('KF' '=' flickerNoiseCoefficient=NUMBER)? & ('AF' '=' flickerNoiseExponent=NUMBER)? &
	//	('FC' '=' depletionCapCoefficient=NUMBER)? & ('BV' '=' breakdownVoltage=NUMBER)? & ('IBV' '='
	//	breakdownCurrent=NUMBER)? & ('TNOM' '=' nominalTemperature=NUMBER)?) ')';
	public DiodeModelElements getDiodeModelAccess() {
		return pDiodeModel;
	}
	
	public ParserRule getDiodeModelRule() {
		return getDiodeModelAccess().getRule();
	}
	
	//MOSFET:
	//	name=(MNID | MPID) nodes+=NODE nodes+=NODE nodes+=NODE nodes+=NODE model=Label (('L' '=' length=NUMBER)? & ('W' '='
	//	width=NUMBER)? & ('AD' '=' drainArea=NUMBER)?
	//	& ('AS' '=' sourceArea=NUMBER)? & ('PD' '=' drainPerimeter=NUMBER)? & ('PS' '=' sourcePerimeter=NUMBER)? & ('NRD' '='
	//	drainSquares=NUMBER)? & ('NRS' '=' sourceSquares=NUMBER)? & off?='OFF'?
	//	& ('IC' '=' ic+=NUMBER ',' ic+=NUMBER ',' ic+=NUMBER)? & ('TEMP' '=' temp=NUMBER)?);
	public MOSFETElements getMOSFETAccess() {
		return pMOSFET;
	}
	
	public ParserRule getMOSFETRule() {
		return getMOSFETAccess().getRule();
	}
	
	//MOSFETModel:
	//	'.MODEL' name=Label ('NMOS' | 'PMOS') '(' (('LEVEL' '=' level=DIGIT)? & ('VTO' | 'VT0' '=' vt0=NUMBER)? & ('KP' '='
	//	transconductance=NUMBER)? & ('GAMMA' '=' gamma=NUMBER)? & ('PHI' '=' phi=NUMBER)? & ('LAMBDA' '=' lambda=NUMBER)? &
	//	('RD' '=' drainResistance=NUMBER)? & ('RS' '=' sourceResistance=NUMBER)? & ('CBD' '=' capBd=NUMBER)? & ('CBS' '='
	//	capBs=NUMBER)? & ('IS' '=' junctionSatCur=NUMBER)? & ('PB' '=' bulkJunctionPotential=NUMBER)? & ('CGSO' '='
	//	gateSourceOverlapCapFactor=NUMBER)? & ('CGDO' '=' gateDrainOverlapCapFactor=NUMBER)? & ('CGBO' '='
	//	gateBulkOverlapCapFactor=NUMBER)? & ('RSH' '=' sheetResistance=NUMBER)? & ('CJ' '=' bulkCapFactor=NUMBER)? & ('MJ' '='
	//	bulkJunctionBotGradingCoefficient=NUMBER)? & ('CJSW' '=' sidewallCapFactor=NUMBER)? & ('MJSW' '='
	//	bulkJunctionSideGradingCoefficient=NUMBER)? & ('JS' '=' junctionSatCurDensity=NUMBER)? & ('TOX' '='
	//	oxideThickness=NUMBER)? & ('NSUB' '=' substrateDoping=NUMBER)? & ('NSS' '=' surfaceStateDensity=NUMBER)? & ('NFS' '='
	//	nfs=NUMBER)? & ('TPG' '=' gateType=('1' | '0' | '-1'))? & ('XJ' '=' xj=NUMBER)? & ('LD' '=' lateralDiffusion=NUMBER)?
	//	& ('UO' | 'U0' '=' surfaceMobility=NUMBER)? & ('KF' '=' flickerNoiseCoefficient=NUMBER)? & ('AF' '='
	//	flickerNoiseExponent=NUMBER)? & ('FC' '=' forwardCapDepletionCoefficient=NUMBER)? & ('TNOM' '='
	//	nominalTemperature=NUMBER)?) ')';
	public MOSFETModelElements getMOSFETModelAccess() {
		return pMOSFETModel;
	}
	
	public ParserRule getMOSFETModelRule() {
		return getMOSFETModelAccess().getRule();
	}
	
	//BJT:
	//	name=(QNID | QPID) nodes+=NODE nodes+=NODE nodes+=NODE nodes+=NODE? model=Label (('AREA' '=' area=NUMBER)? &
	//	off?='OFF'? & ('IC' '=' ic+=NUMBER ',' ic+=NUMBER)? & ('TEMP' '=' temp=NUMBER)?);
	public BJTElements getBJTAccess() {
		return pBJT;
	}
	
	public ParserRule getBJTRule() {
		return getBJTAccess().getRule();
	}
	
	//BJTModel:
	//	'.MODEL' name=Label ('NPN' | 'PNP') '(' (('IS' '=' saturationCurrent=NUMBER)? & ('BF' '=' betaF=NUMBER)? & ('NF' '='
	//	emissionCoefficientForward=NUMBER)? & ('VAF' '=' earlyVoltageForward=NUMBER)? & ('IKF' '=' rollOffForward=NUMBER)? &
	//	('ISE' '=' leakBeCurrent=NUMBER)? & ('NE' '=' leakBeEmissionCoefficient=NUMBER)? & ('BR' '=' betaR=NUMBER)? & ('NR'
	//	'=' emissionCoefficientReverse=NUMBER)? & ('VAR' '=' earlyVoltageReverse=NUMBER)? & ('IKR' '=' rollOffReverse=NUMBER)?
	//	& ('ISC' '=' leakBcCurrent=NUMBER)? & ('NC' '=' leakBcEmissionCoefficient=NUMBER)? & ('RB' '=' baseResist=NUMBER)? &
	//	('IRB' '=' baseCurrentHalfResist=NUMBER)? & ('RBM' '=' minimumBaseResistance=NUMBER)? & ('RE' '='
	//	emitterResistance=NUMBER)? & ('RC' '=' collectorResistance=NUMBER)? & ('CJE' '=' depletionCapBe=NUMBER)? & ('VJE' '='
	//	potentialBe=NUMBER)? & ('MJE' '=' junctionExpBe=NUMBER)? & ('TF' '=' transitTimeForward=NUMBER)? & ('XTF' '='
	//	transitTimeBiasCoefficientForward=NUMBER)? & ('VTF' '=' transitTimeForwardVoltageBc=NUMBER)? & ('ITF' '='
	//	transitTimeHighCurrentForward=NUMBER)? & ('PTF' '=' excessPhase=NUMBER)? & ('CJC' '=' depletionCapBc=NUMBER)? & ('VJC'
	//	'=' potentialBc=NUMBER)? & ('MJC' '=' junctionExpBc=NUMBER)? & ('XCJC' '=' baseFractionBcCap=NUMBER)? & ('TR' '='
	//	transitTimeReverse=NUMBER)? & ('CJS' '=' capCs=NUMBER)? & ('VJS' '=' potentialSubstrate=NUMBER)? & ('MJS' '='
	//	exponentialSubstrate=NUMBER)? & ('XTB' '=' betaExponent=NUMBER)? & ('EG' '=' energyGap=NUMBER)? & ('XTI' '='
	//	tempExpIs=NUMBER)? & ('KF' '=' flickerNoiseCoefficient=NUMBER)? & ('AF' '=' flickerNoiseExponent=NUMBER)? & ('FC' '='
	//	depletionCapCoefficient=NUMBER)? & ('TNOM' '=' nominalTemperature=NUMBER)?) ')';
	public BJTModelElements getBJTModelAccess() {
		return pBJTModel;
	}
	
	public ParserRule getBJTModelRule() {
		return getBJTModelAccess().getRule();
	}
	
	//JFET:
	//	name=(TNID | TPID) nodes+=NODE nodes+=NODE nodes+=NODE model=Label (('AREA' '=' area=NUMBER)? & off?='OFF'? & ('IC'
	//	'=' ic+=NUMBER ',' ic+=NUMBER)? & ('TEMP' '=' temp=NUMBER)?);
	public JFETElements getJFETAccess() {
		return pJFET;
	}
	
	public ParserRule getJFETRule() {
		return getJFETAccess().getRule();
	}
	
	//JFETModel:
	//	'.MODEL' name=Label ('NJF' | 'PJF') '(' (('VTO' | 'VT0' '=' threshold=NUMBER)? & ('BETA' '=' beta=NUMBER)? & ('LAMBDA'
	//	'=' lambda=NUMBER)? & ('RD' '=' drainResistance=NUMBER)? & ('RS' '=' sourceResistance=NUMBER)? & ('CGS' '='
	//	capGs=NUMBER)? & ('CGD' '=' capGd=NUMBER)? & ('PB' '=' gatePotential=NUMBER)? & ('IS' '='
	//	gateSaturationCurrent=NUMBER)? & ('B' '=' b=NUMBER)? & ('KF' '=' flickerNoiseCoefficient=NUMBER)? & ('AF' '='
	//	flickerNoiseExponent=NUMBER)? & ('FC' '=' depletionCapCoefficient=NUMBER)? & ('TNOM' '=' nominalTemperature=NUMBER)?);
	public JFETModelElements getJFETModelAccess() {
		return pJFETModel;
	}
	
	public ParserRule getJFETModelRule() {
		return getJFETModelAccess().getRule();
	}
	
	//VSource:
	//	name=VID nodes+=NODE nodes+=NODE ('DC'? dc=NUMBER)? ('AC' ac+=NUMBER ac+=NUMBER?)? waveform=Waveform?;
	public VSourceElements getVSourceAccess() {
		return pVSource;
	}
	
	public ParserRule getVSourceRule() {
		return getVSourceAccess().getRule();
	}
	
	//CurrentSource:
	//	name=IID nodes+=NODE nodes+=NODE ('DC'? dc=NUMBER)? ('AC' ac+=NUMBER ac+=NUMBER?)? waveform=Waveform?;
	public CurrentSourceElements getCurrentSourceAccess() {
		return pCurrentSource;
	}
	
	public ParserRule getCurrentSourceRule() {
		return getCurrentSourceAccess().getRule();
	}
	
	//VCVS:
	//	name=EID nodes+=NODE nodes+=NODE nodes+=NODE nodes+=NODE gain=NUMBER;
	public VCVSElements getVCVSAccess() {
		return pVCVS;
	}
	
	public ParserRule getVCVSRule() {
		return getVCVSAccess().getRule();
	}
	
	//VCCS:
	//	name=GID nodes+=NODE nodes+=NODE nodes+=NODE nodes+=NODE transconductance=NUMBER;
	public VCCSElements getVCCSAccess() {
		return pVCCS;
	}
	
	public ParserRule getVCCSRule() {
		return getVCCSAccess().getRule();
	}
	
	//CCCS:
	//	name=FID nodes+=NODE nodes+=NODE controller=VID gain=NUMBER;
	public CCCSElements getCCCSAccess() {
		return pCCCS;
	}
	
	public ParserRule getCCCSRule() {
		return getCCCSAccess().getRule();
	}
	
	//CCVS:
	//	name=HID nodes+=NODE nodes+=NODE controller=VID transresistance=NUMBER;
	public CCVSElements getCCVSAccess() {
		return pCCVS;
	}
	
	public ParserRule getCCVSRule() {
		return getCCVSAccess().getRule();
	}
	
	//GeometericSweep:
	//	LinearSweep | OctaveSweep | DecadeSweep;
	public GeometericSweepElements getGeometericSweepAccess() {
		return pGeometericSweep;
	}
	
	public ParserRule getGeometericSweepRule() {
		return getGeometericSweepAccess().getRule();
	}
	
	//LinearSweep:
	//	'LIN' initial=NUMBER final=NUMBER delta=NUMBER;
	public LinearSweepElements getLinearSweepAccess() {
		return pLinearSweep;
	}
	
	public ParserRule getLinearSweepRule() {
		return getLinearSweepAccess().getRule();
	}
	
	//OctaveSweep:
	//	'OCT' initial=NUMBER final=NUMBER pointsPerOctave=NUMBER;
	public OctaveSweepElements getOctaveSweepAccess() {
		return pOctaveSweep;
	}
	
	public ParserRule getOctaveSweepRule() {
		return getOctaveSweepAccess().getRule();
	}
	
	//DecadeSweep:
	//	'DEC' initial=NUMBER final=NUMBER pointsPerDecade=NUMBER;
	public DecadeSweepElements getDecadeSweepAccess() {
		return pDecadeSweep;
	}
	
	public ParserRule getDecadeSweepRule() {
		return getDecadeSweepAccess().getRule();
	}
	
	//ParameterSweep:
	//	source=Label sweep=GeometericSweep;
	public ParameterSweepElements getParameterSweepAccess() {
		return pParameterSweep;
	}
	
	public ParserRule getParameterSweepRule() {
		return getParameterSweepAccess().getRule();
	}
	
	//Simulation:
	//	ACSimulation | DCSimulation | NoiseSimulation | TransientSimulation | {Simulation} OP;
	public SimulationElements getSimulationAccess() {
		return pSimulation;
	}
	
	public ParserRule getSimulationRule() {
		return getSimulationAccess().getRule();
	}
	
	//ACSimulation:
	//	'.AC' sweep=GeometericSweep;
	public ACSimulationElements getACSimulationAccess() {
		return pACSimulation;
	}
	
	public ParserRule getACSimulationRule() {
		return getACSimulationAccess().getRule();
	}
	
	//DCSimulation:
	//	'.DC' sweeps+=ParameterSweep sweeps+=ParameterSweep*;
	public DCSimulationElements getDCSimulationAccess() {
		return pDCSimulation;
	}
	
	public ParserRule getDCSimulationRule() {
		return getDCSimulationAccess().getRule();
	}
	
	//NoiseSimulation:
	//	'.NOISE' (output+=Export inputSource=Label isweep=GeometericSweep);
	public NoiseSimulationElements getNoiseSimulationAccess() {
		return pNoiseSimulation;
	}
	
	public ParserRule getNoiseSimulationRule() {
		return getNoiseSimulationAccess().getRule();
	}
	
	//TransientSimulation:
	//	'.TRAN' (args+=NUMBER args+=NUMBER args+=NUMBER* uic?='UIC'?);
	public TransientSimulationElements getTransientSimulationAccess() {
		return pTransientSimulation;
	}
	
	public ParserRule getTransientSimulationRule() {
		return getTransientSimulationAccess().getRule();
	}
	
	//Output:
	//	Print | Plot;
	public OutputElements getOutputAccess() {
		return pOutput;
	}
	
	public ParserRule getOutputRule() {
		return getOutputAccess().getRule();
	}
	
	//Print:
	//	'.PRINT' prtype=PRTYPE exports+=Export exports+=Export*;
	public PrintElements getPrintAccess() {
		return pPrint;
	}
	
	public ParserRule getPrintRule() {
		return getPrintAccess().getRule();
	}
	
	//Plot:
	//	'.PLOT' prtype=PRTYPE exports+=Export exports+=Export*;
	public PlotElements getPlotAccess() {
		return pPlot;
	}
	
	public ParserRule getPlotRule() {
		return getPlotAccess().getRule();
	}
	
	//Export:
	//	VoltageExport | CurrentExport;
	public ExportElements getExportAccess() {
		return pExport;
	}
	
	public ParserRule getExportRule() {
		return getExportAccess().getRule();
	}
	
	//VoltageExport:
	//	prefix=('V' | 'VM' | 'VDB' | 'VP' | 'VR' | 'VI') '(' (nodes+=Label (',' nodes+=NODE)?) ')';
	public VoltageExportElements getVoltageExportAccess() {
		return pVoltageExport;
	}
	
	public ParserRule getVoltageExportRule() {
		return getVoltageExportAccess().getRule();
	}
	
	//CurrentExport:
	//	prefix=('I' | 'IM' | 'IDB' | 'IP' | 'IR' | 'II') '(' nodes+=Label ')';
	public CurrentExportElements getCurrentExportAccess() {
		return pCurrentExport;
	}
	
	public ParserRule getCurrentExportRule() {
		return getCurrentExportAccess().getRule();
	}
	
	//Waveform:
	//	Exp | Sine | Pulse | PWL | SFFM | AM;
	public WaveformElements getWaveformAccess() {
		return pWaveform;
	}
	
	public ParserRule getWaveformRule() {
		return getWaveformAccess().getRule();
	}
	
	//Exp:
	//	'EXP' '(' args+=NUMBER args+=NUMBER* ')';
	public ExpElements getExpAccess() {
		return pExp;
	}
	
	public ParserRule getExpRule() {
		return getExpAccess().getRule();
	}
	
	//Sine:
	//	'SIN' '(' args+=NUMBER args+=NUMBER* ')';
	public SineElements getSineAccess() {
		return pSine;
	}
	
	public ParserRule getSineRule() {
		return getSineAccess().getRule();
	}
	
	//Pulse:
	//	'PULSE' '(' args+=NUMBER args+=NUMBER* ')';
	public PulseElements getPulseAccess() {
		return pPulse;
	}
	
	public ParserRule getPulseRule() {
		return getPulseAccess().getRule();
	}
	
	//PWL:
	//	'PWL' '(' (args+=NUMBER args+=NUMBER) (args+=NUMBER args+=NUMBER)* ')';
	public PWLElements getPWLAccess() {
		return pPWL;
	}
	
	public ParserRule getPWLRule() {
		return getPWLAccess().getRule();
	}
	
	//SFFM:
	//	'SFFM' '(' args+=NUMBER args+=NUMBER* ')';
	public SFFMElements getSFFMAccess() {
		return pSFFM;
	}
	
	public ParserRule getSFFMRule() {
		return getSFFMAccess().getRule();
	}
	
	//AM:
	//	'AM' '(' args+=NUMBER args+=NUMBER* ')';
	public AMElements getAMAccess() {
		return pAM;
	}
	
	public ParserRule getAMRule() {
		return getAMAccess().getRule();
	}
	
	//Options:
	//	'.OPTION' ('ABSTOL' '=' abstol=NUMBER & 'BADMOS3' '=' badmos3=NUMBER & 'CHGTOL' '=' chgtol=NUMBER & 'DEFAD' '='
	//	defad=NUMBER & 'DEFAS' '=' defas=NUMBER & 'DEFL' '=' defl=NUMBER & 'DEFW' '=' defaultWidth=NUMBER & 'GMIN' '='
	//	gmin=NUMBER & 'ITL1' '=' itl1=NUMBER & 'ITL2' '=' itl2=NUMBER & 'ITL3' '=' itl3=NUMBER & 'ITL4' '=' itl4=NUMBER &
	//	'ITL5' '=' itl5=NUMBER & 'KEEPOPINFO' '=' keepopinfo=NUMBER & 'METHOD' '=' method=IntegrationMethod & 'PIVREL' '='
	//	pivrel=NUMBER & 'RELTOL' '=' reltol=NUMBER & 'TEMP' '=' temp=NUMBER & 'TNOM' '=' nominalTemperature=NUMBER & 'TRTOL'
	//	'=' trtol=NUMBER & 'VNTOL' '=' vntol=NUMBER);
	public OptionsElements getOptionsAccess() {
		return pOptions;
	}
	
	public ParserRule getOptionsRule() {
		return getOptionsAccess().getRule();
	}
	
	//NodeSet:
	//	'.NODESET' entries+=NodeSetEntry entries+=NodeSetEntry*;
	public NodeSetElements getNodeSetAccess() {
		return pNodeSet;
	}
	
	public ParserRule getNodeSetRule() {
		return getNodeSetAccess().getRule();
	}
	
	//InitialCondition:
	//	'.IC' entries+=NodeSetEntry entries+=NodeSetEntry*;
	public InitialConditionElements getInitialConditionAccess() {
		return pInitialCondition;
	}
	
	public ParserRule getInitialConditionRule() {
		return getInitialConditionAccess().getRule();
	}
	
	//NodeSetEntry:
	//	'V' '(' node+=NODE ')' '=' value=NUMBER;
	public NodeSetEntryElements getNodeSetEntryAccess() {
		return pNodeSetEntry;
	}
	
	public ParserRule getNodeSetEntryRule() {
		return getNodeSetEntryAccess().getRule();
	}
	
	//Label:
	//	NODE | BID | CID | DID | EID | FID | GID | HID | IID | KID | LID | MNID | MPID | OID | QNID | QPID | RID | SID | TNID
	//	| TPID | VID | ID;
	public LabelElements getLabelAccess() {
		return pLabel;
	}
	
	public ParserRule getLabelRule() {
		return getLabelAccess().getRule();
	}
	
	//enum PRTYPE:
	//	DC | AC | TRAN | NOISE;
	public PRTYPEElements getPRTYPEAccess() {
		return ePRTYPE;
	}
	
	public EnumRule getPRTYPERule() {
		return getPRTYPEAccess().getRule();
	}
	
	//enum IntegrationMethod:
	//	GEAR='Gear' | TRAPEZOIDAL='Trapezoidal' | EULER='Euler';
	public IntegrationMethodElements getIntegrationMethodAccess() {
		return eIntegrationMethod;
	}
	
	public EnumRule getIntegrationMethodRule() {
		return getIntegrationMethodAccess().getRule();
	}
	
	//terminal OP:
	//	'.OP';
	public TerminalRule getOPRule() {
		return tOP;
	}
	
	//terminal CHAR:
	//	'a'..'z' | 'A'..'Z';
	public TerminalRule getCHARRule() {
		return tCHAR;
	}
	
	//terminal DIGIT returns ecore::EInt:
	//	'0'..'9';
	public TerminalRule getDIGITRule() {
		return tDIGIT;
	}
	
	//terminal BID:
	//	'^'? 'B' (CHAR | '_' | DIGIT) (CHAR | '_' | DIGIT)*;
	public TerminalRule getBIDRule() {
		return tBID;
	}
	
	//terminal CID:
	//	'^'? 'C' (CHAR | '_' | DIGIT) (CHAR | '_' | DIGIT)*;
	public TerminalRule getCIDRule() {
		return tCID;
	}
	
	//terminal DID:
	//	'^'? 'D' (CHAR | '_' | DIGIT) (CHAR | '_' | DIGIT)*;
	public TerminalRule getDIDRule() {
		return tDID;
	}
	
	//terminal EID:
	//	'^'? 'E' (CHAR | '_' | DIGIT) (CHAR | '_' | DIGIT)*;
	public TerminalRule getEIDRule() {
		return tEID;
	}
	
	//terminal FID:
	//	'^'? 'F' (CHAR | '_' | DIGIT) (CHAR | '_' | DIGIT)*;
	public TerminalRule getFIDRule() {
		return tFID;
	}
	
	//terminal GID:
	//	'^'? 'G' (CHAR | '_' | DIGIT) (CHAR | '_' | DIGIT)*;
	public TerminalRule getGIDRule() {
		return tGID;
	}
	
	//terminal HID:
	//	'^'? 'H' (CHAR | '_' | DIGIT) (CHAR | '_' | DIGIT)*;
	public TerminalRule getHIDRule() {
		return tHID;
	}
	
	//terminal IID:
	//	'^'? 'I' (CHAR | '_' | DIGIT) (CHAR | '_' | DIGIT)*;
	public TerminalRule getIIDRule() {
		return tIID;
	}
	
	//terminal KID:
	//	'^'? 'K' (CHAR | '_' | DIGIT) (CHAR | '_' | DIGIT)*;
	public TerminalRule getKIDRule() {
		return tKID;
	}
	
	//terminal LID:
	//	'^'? 'L' (CHAR | '_' | DIGIT) (CHAR | '_' | DIGIT)*;
	public TerminalRule getLIDRule() {
		return tLID;
	}
	
	//terminal MNID:
	//	'^'? 'MN' (CHAR | '_' | DIGIT) (CHAR | '_' | DIGIT)*;
	public TerminalRule getMNIDRule() {
		return tMNID;
	}
	
	//terminal MPID:
	//	'^'? 'MP' (CHAR | '_' | DIGIT) (CHAR | '_' | DIGIT)*;
	public TerminalRule getMPIDRule() {
		return tMPID;
	}
	
	//terminal OID:
	//	'^'? 'O' (CHAR | '_' | DIGIT) (CHAR | '_' | DIGIT)*;
	public TerminalRule getOIDRule() {
		return tOID;
	}
	
	//terminal QNID:
	//	'^'? 'QN' (CHAR | '_' | DIGIT) (CHAR | '_' | DIGIT)*;
	public TerminalRule getQNIDRule() {
		return tQNID;
	}
	
	//terminal QPID:
	//	'^'? 'QP' (CHAR | '_' | DIGIT) (CHAR | '_' | DIGIT)*;
	public TerminalRule getQPIDRule() {
		return tQPID;
	}
	
	//terminal RID:
	//	'^'? 'R' (CHAR | '_' | DIGIT) (CHAR | '_' | DIGIT)*;
	public TerminalRule getRIDRule() {
		return tRID;
	}
	
	//terminal SID:
	//	'^'? 'S' (CHAR | '_' | DIGIT) (CHAR | '_' | DIGIT)*;
	public TerminalRule getSIDRule() {
		return tSID;
	}
	
	//terminal TNID:
	//	'^'? 'TN' (CHAR | '_' | DIGIT) (CHAR | '_' | DIGIT)*;
	public TerminalRule getTNIDRule() {
		return tTNID;
	}
	
	//terminal TPID:
	//	'^'? 'TP' (CHAR | '_' | DIGIT) (CHAR | '_' | DIGIT)*;
	public TerminalRule getTPIDRule() {
		return tTPID;
	}
	
	//terminal VID:
	//	'^'? 'V' (CHAR | '_' | DIGIT) (CHAR | '_' | DIGIT)*;
	public TerminalRule getVIDRule() {
		return tVID;
	}
	
	//terminal WID:
	//	'^'? 'W' (CHAR | '_' | DIGIT) (CHAR | '_' | DIGIT)*;
	public TerminalRule getWIDRule() {
		return tWID;
	}
	
	//terminal XID:
	//	'^'? 'X' (CHAR | '_' | DIGIT) (CHAR | '_' | DIGIT)*;
	public TerminalRule getXIDRule() {
		return tXID;
	}
	
	//terminal INT returns ecore::EInt:
	//	DIGIT DIGIT*;
	public TerminalRule getINTRule() {
		return tINT;
	}
	
	//terminal DECIMAL returns ecore::EInt:
	//	('+' | '-')? (INT '.')? INT;
	public TerminalRule getDECIMALRule() {
		return tDECIMAL;
	}
	
	//terminal METRIC_PREFIX returns ecore::EChar:
	//	'E' | 'P' | 'T' | 'G' | 'M' | 'K' | 'k' | 'H' | 'd' | 'c' | 'm' | 'U' | 'u' | 'μ' | 'n' | 'p' | 'f' | 'a';
	public TerminalRule getMETRIC_PREFIXRule() {
		return tMETRIC_PREFIX;
	}
	
	//terminal NUMBER returns ecore::EBigDecimal:
	//	DECIMAL (('E' | 'e') ('-' | '+')? INT)? METRIC_PREFIX?;
	public TerminalRule getNUMBERRule() {
		return tNUMBER;
	}
	
	//terminal NODE:
	//	'^'? ('N' | 'n')? (CHAR | '_' | DIGIT) (CHAR | '_' | DIGIT);
	public TerminalRule getNODERule() {
		return tNODE;
	}
	
	//terminal ID:
	//	'^'? (CHAR | '_') (CHAR | '_' | DIGIT)*;
	public TerminalRule getIDRule() {
		return tID;
	}
	
	//terminal SL_COMMENT:
	//	('//' | ';' | '*') !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return tSL_COMMENT;
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return tWS;
	}
}
