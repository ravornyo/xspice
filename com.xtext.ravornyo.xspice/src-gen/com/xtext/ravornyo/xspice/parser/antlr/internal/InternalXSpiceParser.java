package com.xtext.ravornyo.xspice.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import com.xtext.ravornyo.xspice.services.XSpiceGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;

@SuppressWarnings("all")
public class InternalXSpiceParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_SL_COMMENT", "RULE_NODE", "RULE_XID", "RULE_RID", "RULE_NUMBER", "RULE_CID", "RULE_LID", "RULE_KID", "RULE_SID", "RULE_WID", "RULE_IID", "RULE_DID", "RULE_MNID", "RULE_MPID", "RULE_DIGIT", "RULE_QNID", "RULE_QPID", "RULE_TNID", "RULE_TPID", "RULE_VID", "RULE_EID", "RULE_GID", "RULE_FID", "RULE_HID", "RULE_OP", "RULE_BID", "RULE_OID", "RULE_ID", "RULE_CHAR", "RULE_INT", "RULE_DECIMAL", "RULE_METRIC_PREFIX", "RULE_WS", "'.END'", "'.SUBCKT'", "'L'", "'='", "'W'", "'TEMP'", "'.MODEL'", "'R'", "'('", "'RSH'", "'DEFW'", "'NARROW'", "'TC1'", "'TC2'", "'TNOM'", "')'", "'IC'", "'C'", "'CJ'", "'CJSW'", "'ON'", "'OFF'", "'SW'", "'VT'", "'VH'", "'RON'", "'ROFF'", "'CSW'", "'IT'", "'IH'", "'AREA'", "'D'", "'IS'", "'RS'", "'N'", "'TT'", "'CJO'", "'VJ'", "'M'", "'EG'", "'XTI'", "'KF'", "'AF'", "'FC'", "'BV'", "'IBV'", "'AD'", "'AS'", "'PD'", "'PS'", "'NRD'", "'NRS'", "','", "'NMOS'", "'PMOS'", "'LEVEL'", "'VTO'", "'VT0'", "'KP'", "'GAMMA'", "'PHI'", "'LAMBDA'", "'RD'", "'CBD'", "'CBS'", "'PB'", "'CGSO'", "'CGDO'", "'CGBO'", "'MJ'", "'MJSW'", "'JS'", "'TOX'", "'NSUB'", "'NSS'", "'NFS'", "'TPG'", "'1'", "'0'", "'-1'", "'XJ'", "'LD'", "'UO'", "'U0'", "'NPN'", "'PNP'", "'BF'", "'NF'", "'VAF'", "'IKF'", "'ISE'", "'NE'", "'BR'", "'NR'", "'VAR'", "'IKR'", "'ISC'", "'NC'", "'RB'", "'IRB'", "'RBM'", "'RE'", "'RC'", "'CJE'", "'VJE'", "'MJE'", "'TF'", "'XTF'", "'VTF'", "'ITF'", "'PTF'", "'CJC'", "'VJC'", "'MJC'", "'XCJC'", "'TR'", "'CJS'", "'VJS'", "'MJS'", "'XTB'", "'NJF'", "'PJF'", "'BETA'", "'CGS'", "'CGD'", "'B'", "'DC'", "'AC'", "'LIN'", "'OCT'", "'DEC'", "'.AC'", "'.DC'", "'.NOISE'", "'.TRAN'", "'UIC'", "'.PRINT'", "'.PLOT'", "'V'", "'VM'", "'VDB'", "'VP'", "'VR'", "'VI'", "'I'", "'IM'", "'IDB'", "'IP'", "'IR'", "'II'", "'EXP'", "'SIN'", "'PULSE'", "'PWL'", "'SFFM'", "'AM'", "'.OPTION'", "'ABSTOL'", "'BADMOS3'", "'CHGTOL'", "'DEFAD'", "'DEFAS'", "'DEFL'", "'GMIN'", "'ITL1'", "'ITL2'", "'ITL3'", "'ITL4'", "'ITL5'", "'KEEPOPINFO'", "'METHOD'", "'PIVREL'", "'RELTOL'", "'TRTOL'", "'VNTOL'", "'.NODESET'", "'.IC'", "'TRAN'", "'NOISE'", "'Gear'", "'Trapezoidal'", "'Euler'"
    };
    public static final int T__144=144;
    public static final int T__143=143;
    public static final int T__146=146;
    public static final int T__50=50;
    public static final int T__145=145;
    public static final int T__140=140;
    public static final int T__142=142;
    public static final int T__141=141;
    public static final int T__59=59;
    public static final int RULE_VID=23;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__137=137;
    public static final int T__52=52;
    public static final int T__136=136;
    public static final int T__53=53;
    public static final int T__139=139;
    public static final int T__54=54;
    public static final int T__138=138;
    public static final int T__133=133;
    public static final int T__132=132;
    public static final int T__60=60;
    public static final int T__135=135;
    public static final int T__61=61;
    public static final int T__134=134;
    public static final int RULE_FID=26;
    public static final int RULE_ID=31;
    public static final int T__131=131;
    public static final int T__130=130;
    public static final int RULE_INT=33;
    public static final int T__66=66;
    public static final int T__67=67;
    public static final int T__129=129;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__62=62;
    public static final int T__126=126;
    public static final int T__63=63;
    public static final int T__125=125;
    public static final int T__64=64;
    public static final int T__128=128;
    public static final int T__65=65;
    public static final int T__127=127;
    public static final int T__166=166;
    public static final int T__165=165;
    public static final int T__168=168;
    public static final int T__167=167;
    public static final int RULE_NODE=5;
    public static final int T__162=162;
    public static final int T__161=161;
    public static final int T__164=164;
    public static final int T__163=163;
    public static final int RULE_MPID=17;
    public static final int T__160=160;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__159=159;
    public static final int T__158=158;
    public static final int T__155=155;
    public static final int T__154=154;
    public static final int T__157=157;
    public static final int T__156=156;
    public static final int T__151=151;
    public static final int T__150=150;
    public static final int T__153=153;
    public static final int T__152=152;
    public static final int RULE_EID=24;
    public static final int RULE_QNID=19;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__40=40;
    public static final int T__148=148;
    public static final int T__41=41;
    public static final int T__147=147;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__149=149;
    public static final int T__100=100;
    public static final int T__102=102;
    public static final int T__101=101;
    public static final int T__218=218;
    public static final int T__217=217;
    public static final int T__214=214;
    public static final int T__213=213;
    public static final int T__216=216;
    public static final int T__215=215;
    public static final int RULE_LID=10;
    public static final int T__210=210;
    public static final int T__212=212;
    public static final int T__211=211;
    public static final int RULE_DID=15;
    public static final int RULE_DECIMAL=34;
    public static final int T__207=207;
    public static final int T__206=206;
    public static final int T__209=209;
    public static final int T__208=208;
    public static final int T__203=203;
    public static final int T__202=202;
    public static final int T__205=205;
    public static final int T__204=204;
    public static final int T__122=122;
    public static final int T__121=121;
    public static final int T__124=124;
    public static final int T__123=123;
    public static final int T__120=120;
    public static final int RULE_SL_COMMENT=4;
    public static final int RULE_SID=12;
    public static final int RULE_TPID=22;
    public static final int T__119=119;
    public static final int RULE_KID=11;
    public static final int T__118=118;
    public static final int T__115=115;
    public static final int EOF=-1;
    public static final int T__114=114;
    public static final int T__117=117;
    public static final int T__116=116;
    public static final int T__111=111;
    public static final int T__110=110;
    public static final int RULE_CID=9;
    public static final int T__113=113;
    public static final int T__112=112;
    public static final int RULE_NUMBER=8;
    public static final int T__108=108;
    public static final int T__107=107;
    public static final int RULE_MNID=16;
    public static final int T__109=109;
    public static final int T__104=104;
    public static final int T__103=103;
    public static final int T__106=106;
    public static final int T__105=105;
    public static final int RULE_RID=7;
    public static final int RULE_OP=28;
    public static final int RULE_BID=29;
    public static final int RULE_DIGIT=18;
    public static final int RULE_METRIC_PREFIX=35;
    public static final int T__201=201;
    public static final int T__200=200;
    public static final int RULE_TNID=21;
    public static final int RULE_IID=14;
    public static final int T__91=91;
    public static final int T__188=188;
    public static final int T__92=92;
    public static final int T__187=187;
    public static final int T__93=93;
    public static final int T__94=94;
    public static final int T__189=189;
    public static final int T__184=184;
    public static final int T__183=183;
    public static final int T__186=186;
    public static final int T__90=90;
    public static final int T__185=185;
    public static final int T__180=180;
    public static final int T__182=182;
    public static final int T__181=181;
    public static final int RULE_XID=6;
    public static final int T__99=99;
    public static final int RULE_CHAR=32;
    public static final int RULE_HID=27;
    public static final int T__95=95;
    public static final int T__96=96;
    public static final int T__97=97;
    public static final int T__98=98;
    public static final int T__177=177;
    public static final int T__176=176;
    public static final int T__179=179;
    public static final int T__178=178;
    public static final int T__173=173;
    public static final int T__172=172;
    public static final int T__175=175;
    public static final int T__174=174;
    public static final int T__171=171;
    public static final int T__170=170;
    public static final int T__169=169;
    public static final int T__70=70;
    public static final int T__71=71;
    public static final int T__72=72;
    public static final int RULE_WID=13;
    public static final int T__77=77;
    public static final int T__78=78;
    public static final int T__79=79;
    public static final int T__73=73;
    public static final int RULE_OID=30;
    public static final int T__74=74;
    public static final int T__75=75;
    public static final int T__76=76;
    public static final int T__80=80;
    public static final int T__199=199;
    public static final int T__81=81;
    public static final int T__198=198;
    public static final int T__82=82;
    public static final int T__83=83;
    public static final int T__195=195;
    public static final int T__194=194;
    public static final int RULE_GID=25;
    public static final int RULE_WS=36;
    public static final int T__197=197;
    public static final int T__196=196;
    public static final int T__191=191;
    public static final int T__190=190;
    public static final int T__193=193;
    public static final int T__192=192;
    public static final int RULE_QPID=20;
    public static final int T__88=88;
    public static final int T__89=89;
    public static final int T__84=84;
    public static final int T__85=85;
    public static final int T__86=86;
    public static final int T__87=87;

    // delegates
    // delegators


        public InternalXSpiceParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalXSpiceParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalXSpiceParser.tokenNames; }
    public String getGrammarFileName() { return "InternalXSpice.g"; }



     	private XSpiceGrammarAccess grammarAccess;

        public InternalXSpiceParser(TokenStream input, XSpiceGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }

        @Override
        protected String getFirstRuleName() {
        	return "Compilation";
       	}

       	@Override
       	protected XSpiceGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}




    // $ANTLR start "entryRuleCompilation"
    // InternalXSpice.g:65:1: entryRuleCompilation returns [EObject current=null] : iv_ruleCompilation= ruleCompilation EOF ;
    public final EObject entryRuleCompilation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCompilation = null;


        try {
            // InternalXSpice.g:65:52: (iv_ruleCompilation= ruleCompilation EOF )
            // InternalXSpice.g:66:2: iv_ruleCompilation= ruleCompilation EOF
            {
             newCompositeNode(grammarAccess.getCompilationRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleCompilation=ruleCompilation();

            state._fsp--;

             current =iv_ruleCompilation; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCompilation"


    // $ANTLR start "ruleCompilation"
    // InternalXSpice.g:72:1: ruleCompilation returns [EObject current=null] : ( () (this_SL_COMMENT_1= RULE_SL_COMMENT | ( (lv_definitions_2_0= ruleSubCircuitDefinition ) ) | ( (lv_entities_3_0= ruleEntity ) ) | ( (lv_simulations_4_0= ruleSimulation ) ) | ( (lv_outputs_5_0= ruleOutput ) ) | ( (lv_options_6_0= ruleOptions ) ) | ( (lv_ic_7_0= ruleInitialCondition ) ) | ( (lv_nodeset_8_0= ruleNodeSet ) ) )* (otherlv_9= '.END' )? ) ;
    public final EObject ruleCompilation() throws RecognitionException {
        EObject current = null;

        Token this_SL_COMMENT_1=null;
        Token otherlv_9=null;
        EObject lv_definitions_2_0 = null;

        EObject lv_entities_3_0 = null;

        EObject lv_simulations_4_0 = null;

        EObject lv_outputs_5_0 = null;

        EObject lv_options_6_0 = null;

        EObject lv_ic_7_0 = null;

        EObject lv_nodeset_8_0 = null;



        	enterRule();

        try {
            // InternalXSpice.g:78:2: ( ( () (this_SL_COMMENT_1= RULE_SL_COMMENT | ( (lv_definitions_2_0= ruleSubCircuitDefinition ) ) | ( (lv_entities_3_0= ruleEntity ) ) | ( (lv_simulations_4_0= ruleSimulation ) ) | ( (lv_outputs_5_0= ruleOutput ) ) | ( (lv_options_6_0= ruleOptions ) ) | ( (lv_ic_7_0= ruleInitialCondition ) ) | ( (lv_nodeset_8_0= ruleNodeSet ) ) )* (otherlv_9= '.END' )? ) )
            // InternalXSpice.g:79:2: ( () (this_SL_COMMENT_1= RULE_SL_COMMENT | ( (lv_definitions_2_0= ruleSubCircuitDefinition ) ) | ( (lv_entities_3_0= ruleEntity ) ) | ( (lv_simulations_4_0= ruleSimulation ) ) | ( (lv_outputs_5_0= ruleOutput ) ) | ( (lv_options_6_0= ruleOptions ) ) | ( (lv_ic_7_0= ruleInitialCondition ) ) | ( (lv_nodeset_8_0= ruleNodeSet ) ) )* (otherlv_9= '.END' )? )
            {
            // InternalXSpice.g:79:2: ( () (this_SL_COMMENT_1= RULE_SL_COMMENT | ( (lv_definitions_2_0= ruleSubCircuitDefinition ) ) | ( (lv_entities_3_0= ruleEntity ) ) | ( (lv_simulations_4_0= ruleSimulation ) ) | ( (lv_outputs_5_0= ruleOutput ) ) | ( (lv_options_6_0= ruleOptions ) ) | ( (lv_ic_7_0= ruleInitialCondition ) ) | ( (lv_nodeset_8_0= ruleNodeSet ) ) )* (otherlv_9= '.END' )? )
            // InternalXSpice.g:80:3: () (this_SL_COMMENT_1= RULE_SL_COMMENT | ( (lv_definitions_2_0= ruleSubCircuitDefinition ) ) | ( (lv_entities_3_0= ruleEntity ) ) | ( (lv_simulations_4_0= ruleSimulation ) ) | ( (lv_outputs_5_0= ruleOutput ) ) | ( (lv_options_6_0= ruleOptions ) ) | ( (lv_ic_7_0= ruleInitialCondition ) ) | ( (lv_nodeset_8_0= ruleNodeSet ) ) )* (otherlv_9= '.END' )?
            {
            // InternalXSpice.g:80:3: ()
            // InternalXSpice.g:81:4: 
            {

            				current = forceCreateModelElement(
            					grammarAccess.getCompilationAccess().getCompilationAction_0(),
            					current);
            			

            }

            // InternalXSpice.g:87:3: (this_SL_COMMENT_1= RULE_SL_COMMENT | ( (lv_definitions_2_0= ruleSubCircuitDefinition ) ) | ( (lv_entities_3_0= ruleEntity ) ) | ( (lv_simulations_4_0= ruleSimulation ) ) | ( (lv_outputs_5_0= ruleOutput ) ) | ( (lv_options_6_0= ruleOptions ) ) | ( (lv_ic_7_0= ruleInitialCondition ) ) | ( (lv_nodeset_8_0= ruleNodeSet ) ) )*
            loop1:
            do {
                int alt1=9;
                switch ( input.LA(1) ) {
                case RULE_SL_COMMENT:
                    {
                    alt1=1;
                    }
                    break;
                case 38:
                    {
                    alt1=2;
                    }
                    break;
                case RULE_XID:
                case RULE_RID:
                case RULE_CID:
                case RULE_LID:
                case RULE_KID:
                case RULE_SID:
                case RULE_WID:
                case RULE_IID:
                case RULE_DID:
                case RULE_MNID:
                case RULE_MPID:
                case RULE_QNID:
                case RULE_QPID:
                case RULE_TNID:
                case RULE_TPID:
                case RULE_VID:
                case RULE_EID:
                case RULE_GID:
                case RULE_FID:
                case RULE_HID:
                case 43:
                    {
                    alt1=3;
                    }
                    break;
                case RULE_OP:
                case 168:
                case 169:
                case 170:
                case 171:
                    {
                    alt1=4;
                    }
                    break;
                case 173:
                case 174:
                    {
                    alt1=5;
                    }
                    break;
                case 193:
                    {
                    alt1=6;
                    }
                    break;
                case 213:
                    {
                    alt1=7;
                    }
                    break;
                case 212:
                    {
                    alt1=8;
                    }
                    break;

                }

                switch (alt1) {
            	case 1 :
            	    // InternalXSpice.g:88:4: this_SL_COMMENT_1= RULE_SL_COMMENT
            	    {
            	    this_SL_COMMENT_1=(Token)match(input,RULE_SL_COMMENT,FOLLOW_3); 

            	    				newLeafNode(this_SL_COMMENT_1, grammarAccess.getCompilationAccess().getSL_COMMENTTerminalRuleCall_1_0());
            	    			

            	    }
            	    break;
            	case 2 :
            	    // InternalXSpice.g:93:4: ( (lv_definitions_2_0= ruleSubCircuitDefinition ) )
            	    {
            	    // InternalXSpice.g:93:4: ( (lv_definitions_2_0= ruleSubCircuitDefinition ) )
            	    // InternalXSpice.g:94:5: (lv_definitions_2_0= ruleSubCircuitDefinition )
            	    {
            	    // InternalXSpice.g:94:5: (lv_definitions_2_0= ruleSubCircuitDefinition )
            	    // InternalXSpice.g:95:6: lv_definitions_2_0= ruleSubCircuitDefinition
            	    {

            	    						newCompositeNode(grammarAccess.getCompilationAccess().getDefinitionsSubCircuitDefinitionParserRuleCall_1_1_0());
            	    					
            	    pushFollow(FOLLOW_3);
            	    lv_definitions_2_0=ruleSubCircuitDefinition();

            	    state._fsp--;


            	    						if (current==null) {
            	    							current = createModelElementForParent(grammarAccess.getCompilationRule());
            	    						}
            	    						add(
            	    							current,
            	    							"definitions",
            	    							lv_definitions_2_0,
            	    							"com.xtext.ravornyo.xspice.XSpice.SubCircuitDefinition");
            	    						afterParserOrEnumRuleCall();
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalXSpice.g:113:4: ( (lv_entities_3_0= ruleEntity ) )
            	    {
            	    // InternalXSpice.g:113:4: ( (lv_entities_3_0= ruleEntity ) )
            	    // InternalXSpice.g:114:5: (lv_entities_3_0= ruleEntity )
            	    {
            	    // InternalXSpice.g:114:5: (lv_entities_3_0= ruleEntity )
            	    // InternalXSpice.g:115:6: lv_entities_3_0= ruleEntity
            	    {

            	    						newCompositeNode(grammarAccess.getCompilationAccess().getEntitiesEntityParserRuleCall_1_2_0());
            	    					
            	    pushFollow(FOLLOW_3);
            	    lv_entities_3_0=ruleEntity();

            	    state._fsp--;


            	    						if (current==null) {
            	    							current = createModelElementForParent(grammarAccess.getCompilationRule());
            	    						}
            	    						add(
            	    							current,
            	    							"entities",
            	    							lv_entities_3_0,
            	    							"com.xtext.ravornyo.xspice.XSpice.Entity");
            	    						afterParserOrEnumRuleCall();
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalXSpice.g:133:4: ( (lv_simulations_4_0= ruleSimulation ) )
            	    {
            	    // InternalXSpice.g:133:4: ( (lv_simulations_4_0= ruleSimulation ) )
            	    // InternalXSpice.g:134:5: (lv_simulations_4_0= ruleSimulation )
            	    {
            	    // InternalXSpice.g:134:5: (lv_simulations_4_0= ruleSimulation )
            	    // InternalXSpice.g:135:6: lv_simulations_4_0= ruleSimulation
            	    {

            	    						newCompositeNode(grammarAccess.getCompilationAccess().getSimulationsSimulationParserRuleCall_1_3_0());
            	    					
            	    pushFollow(FOLLOW_3);
            	    lv_simulations_4_0=ruleSimulation();

            	    state._fsp--;


            	    						if (current==null) {
            	    							current = createModelElementForParent(grammarAccess.getCompilationRule());
            	    						}
            	    						add(
            	    							current,
            	    							"simulations",
            	    							lv_simulations_4_0,
            	    							"com.xtext.ravornyo.xspice.XSpice.Simulation");
            	    						afterParserOrEnumRuleCall();
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalXSpice.g:153:4: ( (lv_outputs_5_0= ruleOutput ) )
            	    {
            	    // InternalXSpice.g:153:4: ( (lv_outputs_5_0= ruleOutput ) )
            	    // InternalXSpice.g:154:5: (lv_outputs_5_0= ruleOutput )
            	    {
            	    // InternalXSpice.g:154:5: (lv_outputs_5_0= ruleOutput )
            	    // InternalXSpice.g:155:6: lv_outputs_5_0= ruleOutput
            	    {

            	    						newCompositeNode(grammarAccess.getCompilationAccess().getOutputsOutputParserRuleCall_1_4_0());
            	    					
            	    pushFollow(FOLLOW_3);
            	    lv_outputs_5_0=ruleOutput();

            	    state._fsp--;


            	    						if (current==null) {
            	    							current = createModelElementForParent(grammarAccess.getCompilationRule());
            	    						}
            	    						add(
            	    							current,
            	    							"outputs",
            	    							lv_outputs_5_0,
            	    							"com.xtext.ravornyo.xspice.XSpice.Output");
            	    						afterParserOrEnumRuleCall();
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalXSpice.g:173:4: ( (lv_options_6_0= ruleOptions ) )
            	    {
            	    // InternalXSpice.g:173:4: ( (lv_options_6_0= ruleOptions ) )
            	    // InternalXSpice.g:174:5: (lv_options_6_0= ruleOptions )
            	    {
            	    // InternalXSpice.g:174:5: (lv_options_6_0= ruleOptions )
            	    // InternalXSpice.g:175:6: lv_options_6_0= ruleOptions
            	    {

            	    						newCompositeNode(grammarAccess.getCompilationAccess().getOptionsOptionsParserRuleCall_1_5_0());
            	    					
            	    pushFollow(FOLLOW_3);
            	    lv_options_6_0=ruleOptions();

            	    state._fsp--;


            	    						if (current==null) {
            	    							current = createModelElementForParent(grammarAccess.getCompilationRule());
            	    						}
            	    						add(
            	    							current,
            	    							"options",
            	    							lv_options_6_0,
            	    							"com.xtext.ravornyo.xspice.XSpice.Options");
            	    						afterParserOrEnumRuleCall();
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // InternalXSpice.g:193:4: ( (lv_ic_7_0= ruleInitialCondition ) )
            	    {
            	    // InternalXSpice.g:193:4: ( (lv_ic_7_0= ruleInitialCondition ) )
            	    // InternalXSpice.g:194:5: (lv_ic_7_0= ruleInitialCondition )
            	    {
            	    // InternalXSpice.g:194:5: (lv_ic_7_0= ruleInitialCondition )
            	    // InternalXSpice.g:195:6: lv_ic_7_0= ruleInitialCondition
            	    {

            	    						newCompositeNode(grammarAccess.getCompilationAccess().getIcInitialConditionParserRuleCall_1_6_0());
            	    					
            	    pushFollow(FOLLOW_3);
            	    lv_ic_7_0=ruleInitialCondition();

            	    state._fsp--;


            	    						if (current==null) {
            	    							current = createModelElementForParent(grammarAccess.getCompilationRule());
            	    						}
            	    						add(
            	    							current,
            	    							"ic",
            	    							lv_ic_7_0,
            	    							"com.xtext.ravornyo.xspice.XSpice.InitialCondition");
            	    						afterParserOrEnumRuleCall();
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 8 :
            	    // InternalXSpice.g:213:4: ( (lv_nodeset_8_0= ruleNodeSet ) )
            	    {
            	    // InternalXSpice.g:213:4: ( (lv_nodeset_8_0= ruleNodeSet ) )
            	    // InternalXSpice.g:214:5: (lv_nodeset_8_0= ruleNodeSet )
            	    {
            	    // InternalXSpice.g:214:5: (lv_nodeset_8_0= ruleNodeSet )
            	    // InternalXSpice.g:215:6: lv_nodeset_8_0= ruleNodeSet
            	    {

            	    						newCompositeNode(grammarAccess.getCompilationAccess().getNodesetNodeSetParserRuleCall_1_7_0());
            	    					
            	    pushFollow(FOLLOW_3);
            	    lv_nodeset_8_0=ruleNodeSet();

            	    state._fsp--;


            	    						if (current==null) {
            	    							current = createModelElementForParent(grammarAccess.getCompilationRule());
            	    						}
            	    						add(
            	    							current,
            	    							"nodeset",
            	    							lv_nodeset_8_0,
            	    							"com.xtext.ravornyo.xspice.XSpice.NodeSet");
            	    						afterParserOrEnumRuleCall();
            	    					

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);

            // InternalXSpice.g:233:3: (otherlv_9= '.END' )?
            int alt2=2;
            int LA2_0 = input.LA(1);

            if ( (LA2_0==37) ) {
                alt2=1;
            }
            switch (alt2) {
                case 1 :
                    // InternalXSpice.g:234:4: otherlv_9= '.END'
                    {
                    otherlv_9=(Token)match(input,37,FOLLOW_2); 

                    				newLeafNode(otherlv_9, grammarAccess.getCompilationAccess().getENDKeyword_2());
                    			

                    }
                    break;

            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCompilation"


    // $ANTLR start "entryRuleEntity"
    // InternalXSpice.g:243:1: entryRuleEntity returns [EObject current=null] : iv_ruleEntity= ruleEntity EOF ;
    public final EObject entryRuleEntity() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEntity = null;


        try {
            // InternalXSpice.g:243:47: (iv_ruleEntity= ruleEntity EOF )
            // InternalXSpice.g:244:2: iv_ruleEntity= ruleEntity EOF
            {
             newCompositeNode(grammarAccess.getEntityRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleEntity=ruleEntity();

            state._fsp--;

             current =iv_ruleEntity; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEntity"


    // $ANTLR start "ruleEntity"
    // InternalXSpice.g:250:1: ruleEntity returns [EObject current=null] : (this_Component_0= ruleComponent | this_SubCircuit_1= ruleSubCircuit | this_ResistorModel_2= ruleResistorModel | this_CapacitorModel_3= ruleCapacitorModel | this_MutualInductance_4= ruleMutualInductance | this_VoltageSwitchModel_5= ruleVoltageSwitchModel | this_CurrentSwitchModel_6= ruleCurrentSwitchModel | this_DiodeModel_7= ruleDiodeModel | this_MOSFETModel_8= ruleMOSFETModel | this_BJTModel_9= ruleBJTModel | this_JFETModel_10= ruleJFETModel ) ;
    public final EObject ruleEntity() throws RecognitionException {
        EObject current = null;

        EObject this_Component_0 = null;

        EObject this_SubCircuit_1 = null;

        EObject this_ResistorModel_2 = null;

        EObject this_CapacitorModel_3 = null;

        EObject this_MutualInductance_4 = null;

        EObject this_VoltageSwitchModel_5 = null;

        EObject this_CurrentSwitchModel_6 = null;

        EObject this_DiodeModel_7 = null;

        EObject this_MOSFETModel_8 = null;

        EObject this_BJTModel_9 = null;

        EObject this_JFETModel_10 = null;



        	enterRule();

        try {
            // InternalXSpice.g:256:2: ( (this_Component_0= ruleComponent | this_SubCircuit_1= ruleSubCircuit | this_ResistorModel_2= ruleResistorModel | this_CapacitorModel_3= ruleCapacitorModel | this_MutualInductance_4= ruleMutualInductance | this_VoltageSwitchModel_5= ruleVoltageSwitchModel | this_CurrentSwitchModel_6= ruleCurrentSwitchModel | this_DiodeModel_7= ruleDiodeModel | this_MOSFETModel_8= ruleMOSFETModel | this_BJTModel_9= ruleBJTModel | this_JFETModel_10= ruleJFETModel ) )
            // InternalXSpice.g:257:2: (this_Component_0= ruleComponent | this_SubCircuit_1= ruleSubCircuit | this_ResistorModel_2= ruleResistorModel | this_CapacitorModel_3= ruleCapacitorModel | this_MutualInductance_4= ruleMutualInductance | this_VoltageSwitchModel_5= ruleVoltageSwitchModel | this_CurrentSwitchModel_6= ruleCurrentSwitchModel | this_DiodeModel_7= ruleDiodeModel | this_MOSFETModel_8= ruleMOSFETModel | this_BJTModel_9= ruleBJTModel | this_JFETModel_10= ruleJFETModel )
            {
            // InternalXSpice.g:257:2: (this_Component_0= ruleComponent | this_SubCircuit_1= ruleSubCircuit | this_ResistorModel_2= ruleResistorModel | this_CapacitorModel_3= ruleCapacitorModel | this_MutualInductance_4= ruleMutualInductance | this_VoltageSwitchModel_5= ruleVoltageSwitchModel | this_CurrentSwitchModel_6= ruleCurrentSwitchModel | this_DiodeModel_7= ruleDiodeModel | this_MOSFETModel_8= ruleMOSFETModel | this_BJTModel_9= ruleBJTModel | this_JFETModel_10= ruleJFETModel )
            int alt3=11;
            alt3 = dfa3.predict(input);
            switch (alt3) {
                case 1 :
                    // InternalXSpice.g:258:3: this_Component_0= ruleComponent
                    {

                    			newCompositeNode(grammarAccess.getEntityAccess().getComponentParserRuleCall_0());
                    		
                    pushFollow(FOLLOW_2);
                    this_Component_0=ruleComponent();

                    state._fsp--;


                    			current = this_Component_0;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 2 :
                    // InternalXSpice.g:267:3: this_SubCircuit_1= ruleSubCircuit
                    {

                    			newCompositeNode(grammarAccess.getEntityAccess().getSubCircuitParserRuleCall_1());
                    		
                    pushFollow(FOLLOW_2);
                    this_SubCircuit_1=ruleSubCircuit();

                    state._fsp--;


                    			current = this_SubCircuit_1;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 3 :
                    // InternalXSpice.g:276:3: this_ResistorModel_2= ruleResistorModel
                    {

                    			newCompositeNode(grammarAccess.getEntityAccess().getResistorModelParserRuleCall_2());
                    		
                    pushFollow(FOLLOW_2);
                    this_ResistorModel_2=ruleResistorModel();

                    state._fsp--;


                    			current = this_ResistorModel_2;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 4 :
                    // InternalXSpice.g:285:3: this_CapacitorModel_3= ruleCapacitorModel
                    {

                    			newCompositeNode(grammarAccess.getEntityAccess().getCapacitorModelParserRuleCall_3());
                    		
                    pushFollow(FOLLOW_2);
                    this_CapacitorModel_3=ruleCapacitorModel();

                    state._fsp--;


                    			current = this_CapacitorModel_3;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 5 :
                    // InternalXSpice.g:294:3: this_MutualInductance_4= ruleMutualInductance
                    {

                    			newCompositeNode(grammarAccess.getEntityAccess().getMutualInductanceParserRuleCall_4());
                    		
                    pushFollow(FOLLOW_2);
                    this_MutualInductance_4=ruleMutualInductance();

                    state._fsp--;


                    			current = this_MutualInductance_4;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 6 :
                    // InternalXSpice.g:303:3: this_VoltageSwitchModel_5= ruleVoltageSwitchModel
                    {

                    			newCompositeNode(grammarAccess.getEntityAccess().getVoltageSwitchModelParserRuleCall_5());
                    		
                    pushFollow(FOLLOW_2);
                    this_VoltageSwitchModel_5=ruleVoltageSwitchModel();

                    state._fsp--;


                    			current = this_VoltageSwitchModel_5;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 7 :
                    // InternalXSpice.g:312:3: this_CurrentSwitchModel_6= ruleCurrentSwitchModel
                    {

                    			newCompositeNode(grammarAccess.getEntityAccess().getCurrentSwitchModelParserRuleCall_6());
                    		
                    pushFollow(FOLLOW_2);
                    this_CurrentSwitchModel_6=ruleCurrentSwitchModel();

                    state._fsp--;


                    			current = this_CurrentSwitchModel_6;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 8 :
                    // InternalXSpice.g:321:3: this_DiodeModel_7= ruleDiodeModel
                    {

                    			newCompositeNode(grammarAccess.getEntityAccess().getDiodeModelParserRuleCall_7());
                    		
                    pushFollow(FOLLOW_2);
                    this_DiodeModel_7=ruleDiodeModel();

                    state._fsp--;


                    			current = this_DiodeModel_7;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 9 :
                    // InternalXSpice.g:330:3: this_MOSFETModel_8= ruleMOSFETModel
                    {

                    			newCompositeNode(grammarAccess.getEntityAccess().getMOSFETModelParserRuleCall_8());
                    		
                    pushFollow(FOLLOW_2);
                    this_MOSFETModel_8=ruleMOSFETModel();

                    state._fsp--;


                    			current = this_MOSFETModel_8;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 10 :
                    // InternalXSpice.g:339:3: this_BJTModel_9= ruleBJTModel
                    {

                    			newCompositeNode(grammarAccess.getEntityAccess().getBJTModelParserRuleCall_9());
                    		
                    pushFollow(FOLLOW_2);
                    this_BJTModel_9=ruleBJTModel();

                    state._fsp--;


                    			current = this_BJTModel_9;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 11 :
                    // InternalXSpice.g:348:3: this_JFETModel_10= ruleJFETModel
                    {

                    			newCompositeNode(grammarAccess.getEntityAccess().getJFETModelParserRuleCall_10());
                    		
                    pushFollow(FOLLOW_2);
                    this_JFETModel_10=ruleJFETModel();

                    state._fsp--;


                    			current = this_JFETModel_10;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEntity"


    // $ANTLR start "entryRuleComponent"
    // InternalXSpice.g:360:1: entryRuleComponent returns [EObject current=null] : iv_ruleComponent= ruleComponent EOF ;
    public final EObject entryRuleComponent() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleComponent = null;


        try {
            // InternalXSpice.g:360:50: (iv_ruleComponent= ruleComponent EOF )
            // InternalXSpice.g:361:2: iv_ruleComponent= ruleComponent EOF
            {
             newCompositeNode(grammarAccess.getComponentRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleComponent=ruleComponent();

            state._fsp--;

             current =iv_ruleComponent; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleComponent"


    // $ANTLR start "ruleComponent"
    // InternalXSpice.g:367:1: ruleComponent returns [EObject current=null] : (this_Resistor_0= ruleResistor | this_Capacitor_1= ruleCapacitor | this_Inductor_2= ruleInductor | this_VoltageSwitch_3= ruleVoltageSwitch | this_CurrentSwitch_4= ruleCurrentSwitch | this_Diode_5= ruleDiode | this_MOSFET_6= ruleMOSFET | this_BJT_7= ruleBJT | this_JFET_8= ruleJFET | this_VSource_9= ruleVSource | this_CurrentSource_10= ruleCurrentSource | this_VCVS_11= ruleVCVS | this_VCCS_12= ruleVCCS | this_CCCS_13= ruleCCCS | this_CCVS_14= ruleCCVS ) ;
    public final EObject ruleComponent() throws RecognitionException {
        EObject current = null;

        EObject this_Resistor_0 = null;

        EObject this_Capacitor_1 = null;

        EObject this_Inductor_2 = null;

        EObject this_VoltageSwitch_3 = null;

        EObject this_CurrentSwitch_4 = null;

        EObject this_Diode_5 = null;

        EObject this_MOSFET_6 = null;

        EObject this_BJT_7 = null;

        EObject this_JFET_8 = null;

        EObject this_VSource_9 = null;

        EObject this_CurrentSource_10 = null;

        EObject this_VCVS_11 = null;

        EObject this_VCCS_12 = null;

        EObject this_CCCS_13 = null;

        EObject this_CCVS_14 = null;



        	enterRule();

        try {
            // InternalXSpice.g:373:2: ( (this_Resistor_0= ruleResistor | this_Capacitor_1= ruleCapacitor | this_Inductor_2= ruleInductor | this_VoltageSwitch_3= ruleVoltageSwitch | this_CurrentSwitch_4= ruleCurrentSwitch | this_Diode_5= ruleDiode | this_MOSFET_6= ruleMOSFET | this_BJT_7= ruleBJT | this_JFET_8= ruleJFET | this_VSource_9= ruleVSource | this_CurrentSource_10= ruleCurrentSource | this_VCVS_11= ruleVCVS | this_VCCS_12= ruleVCCS | this_CCCS_13= ruleCCCS | this_CCVS_14= ruleCCVS ) )
            // InternalXSpice.g:374:2: (this_Resistor_0= ruleResistor | this_Capacitor_1= ruleCapacitor | this_Inductor_2= ruleInductor | this_VoltageSwitch_3= ruleVoltageSwitch | this_CurrentSwitch_4= ruleCurrentSwitch | this_Diode_5= ruleDiode | this_MOSFET_6= ruleMOSFET | this_BJT_7= ruleBJT | this_JFET_8= ruleJFET | this_VSource_9= ruleVSource | this_CurrentSource_10= ruleCurrentSource | this_VCVS_11= ruleVCVS | this_VCCS_12= ruleVCCS | this_CCCS_13= ruleCCCS | this_CCVS_14= ruleCCVS )
            {
            // InternalXSpice.g:374:2: (this_Resistor_0= ruleResistor | this_Capacitor_1= ruleCapacitor | this_Inductor_2= ruleInductor | this_VoltageSwitch_3= ruleVoltageSwitch | this_CurrentSwitch_4= ruleCurrentSwitch | this_Diode_5= ruleDiode | this_MOSFET_6= ruleMOSFET | this_BJT_7= ruleBJT | this_JFET_8= ruleJFET | this_VSource_9= ruleVSource | this_CurrentSource_10= ruleCurrentSource | this_VCVS_11= ruleVCVS | this_VCCS_12= ruleVCCS | this_CCCS_13= ruleCCCS | this_CCVS_14= ruleCCVS )
            int alt4=15;
            switch ( input.LA(1) ) {
            case RULE_RID:
                {
                alt4=1;
                }
                break;
            case RULE_CID:
                {
                alt4=2;
                }
                break;
            case RULE_LID:
                {
                alt4=3;
                }
                break;
            case RULE_SID:
                {
                alt4=4;
                }
                break;
            case RULE_WID:
                {
                alt4=5;
                }
                break;
            case RULE_DID:
                {
                alt4=6;
                }
                break;
            case RULE_MNID:
            case RULE_MPID:
                {
                alt4=7;
                }
                break;
            case RULE_QNID:
            case RULE_QPID:
                {
                alt4=8;
                }
                break;
            case RULE_TNID:
            case RULE_TPID:
                {
                alt4=9;
                }
                break;
            case RULE_VID:
                {
                alt4=10;
                }
                break;
            case RULE_IID:
                {
                alt4=11;
                }
                break;
            case RULE_EID:
                {
                alt4=12;
                }
                break;
            case RULE_GID:
                {
                alt4=13;
                }
                break;
            case RULE_FID:
                {
                alt4=14;
                }
                break;
            case RULE_HID:
                {
                alt4=15;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 4, 0, input);

                throw nvae;
            }

            switch (alt4) {
                case 1 :
                    // InternalXSpice.g:375:3: this_Resistor_0= ruleResistor
                    {

                    			newCompositeNode(grammarAccess.getComponentAccess().getResistorParserRuleCall_0());
                    		
                    pushFollow(FOLLOW_2);
                    this_Resistor_0=ruleResistor();

                    state._fsp--;


                    			current = this_Resistor_0;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 2 :
                    // InternalXSpice.g:384:3: this_Capacitor_1= ruleCapacitor
                    {

                    			newCompositeNode(grammarAccess.getComponentAccess().getCapacitorParserRuleCall_1());
                    		
                    pushFollow(FOLLOW_2);
                    this_Capacitor_1=ruleCapacitor();

                    state._fsp--;


                    			current = this_Capacitor_1;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 3 :
                    // InternalXSpice.g:393:3: this_Inductor_2= ruleInductor
                    {

                    			newCompositeNode(grammarAccess.getComponentAccess().getInductorParserRuleCall_2());
                    		
                    pushFollow(FOLLOW_2);
                    this_Inductor_2=ruleInductor();

                    state._fsp--;


                    			current = this_Inductor_2;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 4 :
                    // InternalXSpice.g:402:3: this_VoltageSwitch_3= ruleVoltageSwitch
                    {

                    			newCompositeNode(grammarAccess.getComponentAccess().getVoltageSwitchParserRuleCall_3());
                    		
                    pushFollow(FOLLOW_2);
                    this_VoltageSwitch_3=ruleVoltageSwitch();

                    state._fsp--;


                    			current = this_VoltageSwitch_3;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 5 :
                    // InternalXSpice.g:411:3: this_CurrentSwitch_4= ruleCurrentSwitch
                    {

                    			newCompositeNode(grammarAccess.getComponentAccess().getCurrentSwitchParserRuleCall_4());
                    		
                    pushFollow(FOLLOW_2);
                    this_CurrentSwitch_4=ruleCurrentSwitch();

                    state._fsp--;


                    			current = this_CurrentSwitch_4;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 6 :
                    // InternalXSpice.g:420:3: this_Diode_5= ruleDiode
                    {

                    			newCompositeNode(grammarAccess.getComponentAccess().getDiodeParserRuleCall_5());
                    		
                    pushFollow(FOLLOW_2);
                    this_Diode_5=ruleDiode();

                    state._fsp--;


                    			current = this_Diode_5;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 7 :
                    // InternalXSpice.g:429:3: this_MOSFET_6= ruleMOSFET
                    {

                    			newCompositeNode(grammarAccess.getComponentAccess().getMOSFETParserRuleCall_6());
                    		
                    pushFollow(FOLLOW_2);
                    this_MOSFET_6=ruleMOSFET();

                    state._fsp--;


                    			current = this_MOSFET_6;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 8 :
                    // InternalXSpice.g:438:3: this_BJT_7= ruleBJT
                    {

                    			newCompositeNode(grammarAccess.getComponentAccess().getBJTParserRuleCall_7());
                    		
                    pushFollow(FOLLOW_2);
                    this_BJT_7=ruleBJT();

                    state._fsp--;


                    			current = this_BJT_7;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 9 :
                    // InternalXSpice.g:447:3: this_JFET_8= ruleJFET
                    {

                    			newCompositeNode(grammarAccess.getComponentAccess().getJFETParserRuleCall_8());
                    		
                    pushFollow(FOLLOW_2);
                    this_JFET_8=ruleJFET();

                    state._fsp--;


                    			current = this_JFET_8;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 10 :
                    // InternalXSpice.g:456:3: this_VSource_9= ruleVSource
                    {

                    			newCompositeNode(grammarAccess.getComponentAccess().getVSourceParserRuleCall_9());
                    		
                    pushFollow(FOLLOW_2);
                    this_VSource_9=ruleVSource();

                    state._fsp--;


                    			current = this_VSource_9;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 11 :
                    // InternalXSpice.g:465:3: this_CurrentSource_10= ruleCurrentSource
                    {

                    			newCompositeNode(grammarAccess.getComponentAccess().getCurrentSourceParserRuleCall_10());
                    		
                    pushFollow(FOLLOW_2);
                    this_CurrentSource_10=ruleCurrentSource();

                    state._fsp--;


                    			current = this_CurrentSource_10;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 12 :
                    // InternalXSpice.g:474:3: this_VCVS_11= ruleVCVS
                    {

                    			newCompositeNode(grammarAccess.getComponentAccess().getVCVSParserRuleCall_11());
                    		
                    pushFollow(FOLLOW_2);
                    this_VCVS_11=ruleVCVS();

                    state._fsp--;


                    			current = this_VCVS_11;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 13 :
                    // InternalXSpice.g:483:3: this_VCCS_12= ruleVCCS
                    {

                    			newCompositeNode(grammarAccess.getComponentAccess().getVCCSParserRuleCall_12());
                    		
                    pushFollow(FOLLOW_2);
                    this_VCCS_12=ruleVCCS();

                    state._fsp--;


                    			current = this_VCCS_12;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 14 :
                    // InternalXSpice.g:492:3: this_CCCS_13= ruleCCCS
                    {

                    			newCompositeNode(grammarAccess.getComponentAccess().getCCCSParserRuleCall_13());
                    		
                    pushFollow(FOLLOW_2);
                    this_CCCS_13=ruleCCCS();

                    state._fsp--;


                    			current = this_CCCS_13;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 15 :
                    // InternalXSpice.g:501:3: this_CCVS_14= ruleCCVS
                    {

                    			newCompositeNode(grammarAccess.getComponentAccess().getCCVSParserRuleCall_14());
                    		
                    pushFollow(FOLLOW_2);
                    this_CCVS_14=ruleCCVS();

                    state._fsp--;


                    			current = this_CCVS_14;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleComponent"


    // $ANTLR start "entryRuleSubCircuitDefinition"
    // InternalXSpice.g:513:1: entryRuleSubCircuitDefinition returns [EObject current=null] : iv_ruleSubCircuitDefinition= ruleSubCircuitDefinition EOF ;
    public final EObject entryRuleSubCircuitDefinition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSubCircuitDefinition = null;


        try {
            // InternalXSpice.g:513:61: (iv_ruleSubCircuitDefinition= ruleSubCircuitDefinition EOF )
            // InternalXSpice.g:514:2: iv_ruleSubCircuitDefinition= ruleSubCircuitDefinition EOF
            {
             newCompositeNode(grammarAccess.getSubCircuitDefinitionRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleSubCircuitDefinition=ruleSubCircuitDefinition();

            state._fsp--;

             current =iv_ruleSubCircuitDefinition; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSubCircuitDefinition"


    // $ANTLR start "ruleSubCircuitDefinition"
    // InternalXSpice.g:520:1: ruleSubCircuitDefinition returns [EObject current=null] : (otherlv_0= '.SUBCKT' ( (lv_name_1_0= ruleLabel ) ) ( (lv_pins_2_0= RULE_NODE ) ) ( (lv_pins_3_0= RULE_NODE ) )* (this_SL_COMMENT_4= RULE_SL_COMMENT | ( (lv_definitions_5_0= ruleSubCircuitDefinition ) ) | ( (lv_entities_6_0= ruleEntity ) ) )* otherlv_7= '.END' ) ;
    public final EObject ruleSubCircuitDefinition() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_pins_2_0=null;
        Token lv_pins_3_0=null;
        Token this_SL_COMMENT_4=null;
        Token otherlv_7=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_definitions_5_0 = null;

        EObject lv_entities_6_0 = null;



        	enterRule();

        try {
            // InternalXSpice.g:526:2: ( (otherlv_0= '.SUBCKT' ( (lv_name_1_0= ruleLabel ) ) ( (lv_pins_2_0= RULE_NODE ) ) ( (lv_pins_3_0= RULE_NODE ) )* (this_SL_COMMENT_4= RULE_SL_COMMENT | ( (lv_definitions_5_0= ruleSubCircuitDefinition ) ) | ( (lv_entities_6_0= ruleEntity ) ) )* otherlv_7= '.END' ) )
            // InternalXSpice.g:527:2: (otherlv_0= '.SUBCKT' ( (lv_name_1_0= ruleLabel ) ) ( (lv_pins_2_0= RULE_NODE ) ) ( (lv_pins_3_0= RULE_NODE ) )* (this_SL_COMMENT_4= RULE_SL_COMMENT | ( (lv_definitions_5_0= ruleSubCircuitDefinition ) ) | ( (lv_entities_6_0= ruleEntity ) ) )* otherlv_7= '.END' )
            {
            // InternalXSpice.g:527:2: (otherlv_0= '.SUBCKT' ( (lv_name_1_0= ruleLabel ) ) ( (lv_pins_2_0= RULE_NODE ) ) ( (lv_pins_3_0= RULE_NODE ) )* (this_SL_COMMENT_4= RULE_SL_COMMENT | ( (lv_definitions_5_0= ruleSubCircuitDefinition ) ) | ( (lv_entities_6_0= ruleEntity ) ) )* otherlv_7= '.END' )
            // InternalXSpice.g:528:3: otherlv_0= '.SUBCKT' ( (lv_name_1_0= ruleLabel ) ) ( (lv_pins_2_0= RULE_NODE ) ) ( (lv_pins_3_0= RULE_NODE ) )* (this_SL_COMMENT_4= RULE_SL_COMMENT | ( (lv_definitions_5_0= ruleSubCircuitDefinition ) ) | ( (lv_entities_6_0= ruleEntity ) ) )* otherlv_7= '.END'
            {
            otherlv_0=(Token)match(input,38,FOLLOW_4); 

            			newLeafNode(otherlv_0, grammarAccess.getSubCircuitDefinitionAccess().getSUBCKTKeyword_0());
            		
            // InternalXSpice.g:532:3: ( (lv_name_1_0= ruleLabel ) )
            // InternalXSpice.g:533:4: (lv_name_1_0= ruleLabel )
            {
            // InternalXSpice.g:533:4: (lv_name_1_0= ruleLabel )
            // InternalXSpice.g:534:5: lv_name_1_0= ruleLabel
            {

            					newCompositeNode(grammarAccess.getSubCircuitDefinitionAccess().getNameLabelParserRuleCall_1_0());
            				
            pushFollow(FOLLOW_5);
            lv_name_1_0=ruleLabel();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getSubCircuitDefinitionRule());
            					}
            					set(
            						current,
            						"name",
            						lv_name_1_0,
            						"com.xtext.ravornyo.xspice.XSpice.Label");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            // InternalXSpice.g:551:3: ( (lv_pins_2_0= RULE_NODE ) )
            // InternalXSpice.g:552:4: (lv_pins_2_0= RULE_NODE )
            {
            // InternalXSpice.g:552:4: (lv_pins_2_0= RULE_NODE )
            // InternalXSpice.g:553:5: lv_pins_2_0= RULE_NODE
            {
            lv_pins_2_0=(Token)match(input,RULE_NODE,FOLLOW_6); 

            					newLeafNode(lv_pins_2_0, grammarAccess.getSubCircuitDefinitionAccess().getPinsNODETerminalRuleCall_2_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getSubCircuitDefinitionRule());
            					}
            					addWithLastConsumed(
            						current,
            						"pins",
            						lv_pins_2_0,
            						"com.xtext.ravornyo.xspice.XSpice.NODE");
            				

            }


            }

            // InternalXSpice.g:569:3: ( (lv_pins_3_0= RULE_NODE ) )*
            loop5:
            do {
                int alt5=2;
                int LA5_0 = input.LA(1);

                if ( (LA5_0==RULE_NODE) ) {
                    alt5=1;
                }


                switch (alt5) {
            	case 1 :
            	    // InternalXSpice.g:570:4: (lv_pins_3_0= RULE_NODE )
            	    {
            	    // InternalXSpice.g:570:4: (lv_pins_3_0= RULE_NODE )
            	    // InternalXSpice.g:571:5: lv_pins_3_0= RULE_NODE
            	    {
            	    lv_pins_3_0=(Token)match(input,RULE_NODE,FOLLOW_6); 

            	    					newLeafNode(lv_pins_3_0, grammarAccess.getSubCircuitDefinitionAccess().getPinsNODETerminalRuleCall_3_0());
            	    				

            	    					if (current==null) {
            	    						current = createModelElement(grammarAccess.getSubCircuitDefinitionRule());
            	    					}
            	    					addWithLastConsumed(
            	    						current,
            	    						"pins",
            	    						lv_pins_3_0,
            	    						"com.xtext.ravornyo.xspice.XSpice.NODE");
            	    				

            	    }


            	    }
            	    break;

            	default :
            	    break loop5;
                }
            } while (true);

            // InternalXSpice.g:587:3: (this_SL_COMMENT_4= RULE_SL_COMMENT | ( (lv_definitions_5_0= ruleSubCircuitDefinition ) ) | ( (lv_entities_6_0= ruleEntity ) ) )*
            loop6:
            do {
                int alt6=4;
                switch ( input.LA(1) ) {
                case RULE_SL_COMMENT:
                    {
                    alt6=1;
                    }
                    break;
                case 38:
                    {
                    alt6=2;
                    }
                    break;
                case RULE_XID:
                case RULE_RID:
                case RULE_CID:
                case RULE_LID:
                case RULE_KID:
                case RULE_SID:
                case RULE_WID:
                case RULE_IID:
                case RULE_DID:
                case RULE_MNID:
                case RULE_MPID:
                case RULE_QNID:
                case RULE_QPID:
                case RULE_TNID:
                case RULE_TPID:
                case RULE_VID:
                case RULE_EID:
                case RULE_GID:
                case RULE_FID:
                case RULE_HID:
                case 43:
                    {
                    alt6=3;
                    }
                    break;

                }

                switch (alt6) {
            	case 1 :
            	    // InternalXSpice.g:588:4: this_SL_COMMENT_4= RULE_SL_COMMENT
            	    {
            	    this_SL_COMMENT_4=(Token)match(input,RULE_SL_COMMENT,FOLLOW_7); 

            	    				newLeafNode(this_SL_COMMENT_4, grammarAccess.getSubCircuitDefinitionAccess().getSL_COMMENTTerminalRuleCall_4_0());
            	    			

            	    }
            	    break;
            	case 2 :
            	    // InternalXSpice.g:593:4: ( (lv_definitions_5_0= ruleSubCircuitDefinition ) )
            	    {
            	    // InternalXSpice.g:593:4: ( (lv_definitions_5_0= ruleSubCircuitDefinition ) )
            	    // InternalXSpice.g:594:5: (lv_definitions_5_0= ruleSubCircuitDefinition )
            	    {
            	    // InternalXSpice.g:594:5: (lv_definitions_5_0= ruleSubCircuitDefinition )
            	    // InternalXSpice.g:595:6: lv_definitions_5_0= ruleSubCircuitDefinition
            	    {

            	    						newCompositeNode(grammarAccess.getSubCircuitDefinitionAccess().getDefinitionsSubCircuitDefinitionParserRuleCall_4_1_0());
            	    					
            	    pushFollow(FOLLOW_7);
            	    lv_definitions_5_0=ruleSubCircuitDefinition();

            	    state._fsp--;


            	    						if (current==null) {
            	    							current = createModelElementForParent(grammarAccess.getSubCircuitDefinitionRule());
            	    						}
            	    						add(
            	    							current,
            	    							"definitions",
            	    							lv_definitions_5_0,
            	    							"com.xtext.ravornyo.xspice.XSpice.SubCircuitDefinition");
            	    						afterParserOrEnumRuleCall();
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalXSpice.g:613:4: ( (lv_entities_6_0= ruleEntity ) )
            	    {
            	    // InternalXSpice.g:613:4: ( (lv_entities_6_0= ruleEntity ) )
            	    // InternalXSpice.g:614:5: (lv_entities_6_0= ruleEntity )
            	    {
            	    // InternalXSpice.g:614:5: (lv_entities_6_0= ruleEntity )
            	    // InternalXSpice.g:615:6: lv_entities_6_0= ruleEntity
            	    {

            	    						newCompositeNode(grammarAccess.getSubCircuitDefinitionAccess().getEntitiesEntityParserRuleCall_4_2_0());
            	    					
            	    pushFollow(FOLLOW_7);
            	    lv_entities_6_0=ruleEntity();

            	    state._fsp--;


            	    						if (current==null) {
            	    							current = createModelElementForParent(grammarAccess.getSubCircuitDefinitionRule());
            	    						}
            	    						add(
            	    							current,
            	    							"entities",
            	    							lv_entities_6_0,
            	    							"com.xtext.ravornyo.xspice.XSpice.Entity");
            	    						afterParserOrEnumRuleCall();
            	    					

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop6;
                }
            } while (true);

            otherlv_7=(Token)match(input,37,FOLLOW_2); 

            			newLeafNode(otherlv_7, grammarAccess.getSubCircuitDefinitionAccess().getENDKeyword_5());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSubCircuitDefinition"


    // $ANTLR start "entryRuleSubCircuit"
    // InternalXSpice.g:641:1: entryRuleSubCircuit returns [EObject current=null] : iv_ruleSubCircuit= ruleSubCircuit EOF ;
    public final EObject entryRuleSubCircuit() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSubCircuit = null;


        try {
            // InternalXSpice.g:641:51: (iv_ruleSubCircuit= ruleSubCircuit EOF )
            // InternalXSpice.g:642:2: iv_ruleSubCircuit= ruleSubCircuit EOF
            {
             newCompositeNode(grammarAccess.getSubCircuitRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleSubCircuit=ruleSubCircuit();

            state._fsp--;

             current =iv_ruleSubCircuit; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSubCircuit"


    // $ANTLR start "ruleSubCircuit"
    // InternalXSpice.g:648:1: ruleSubCircuit returns [EObject current=null] : ( ( (lv_name_0_0= RULE_XID ) ) ( (lv_nodes_1_0= RULE_NODE ) ) ( (lv_nodes_2_0= RULE_NODE ) )* ( ( ruleLabel ) ) ) ;
    public final EObject ruleSubCircuit() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token lv_nodes_1_0=null;
        Token lv_nodes_2_0=null;


        	enterRule();

        try {
            // InternalXSpice.g:654:2: ( ( ( (lv_name_0_0= RULE_XID ) ) ( (lv_nodes_1_0= RULE_NODE ) ) ( (lv_nodes_2_0= RULE_NODE ) )* ( ( ruleLabel ) ) ) )
            // InternalXSpice.g:655:2: ( ( (lv_name_0_0= RULE_XID ) ) ( (lv_nodes_1_0= RULE_NODE ) ) ( (lv_nodes_2_0= RULE_NODE ) )* ( ( ruleLabel ) ) )
            {
            // InternalXSpice.g:655:2: ( ( (lv_name_0_0= RULE_XID ) ) ( (lv_nodes_1_0= RULE_NODE ) ) ( (lv_nodes_2_0= RULE_NODE ) )* ( ( ruleLabel ) ) )
            // InternalXSpice.g:656:3: ( (lv_name_0_0= RULE_XID ) ) ( (lv_nodes_1_0= RULE_NODE ) ) ( (lv_nodes_2_0= RULE_NODE ) )* ( ( ruleLabel ) )
            {
            // InternalXSpice.g:656:3: ( (lv_name_0_0= RULE_XID ) )
            // InternalXSpice.g:657:4: (lv_name_0_0= RULE_XID )
            {
            // InternalXSpice.g:657:4: (lv_name_0_0= RULE_XID )
            // InternalXSpice.g:658:5: lv_name_0_0= RULE_XID
            {
            lv_name_0_0=(Token)match(input,RULE_XID,FOLLOW_5); 

            					newLeafNode(lv_name_0_0, grammarAccess.getSubCircuitAccess().getNameXIDTerminalRuleCall_0_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getSubCircuitRule());
            					}
            					setWithLastConsumed(
            						current,
            						"name",
            						lv_name_0_0,
            						"com.xtext.ravornyo.xspice.XSpice.XID");
            				

            }


            }

            // InternalXSpice.g:674:3: ( (lv_nodes_1_0= RULE_NODE ) )
            // InternalXSpice.g:675:4: (lv_nodes_1_0= RULE_NODE )
            {
            // InternalXSpice.g:675:4: (lv_nodes_1_0= RULE_NODE )
            // InternalXSpice.g:676:5: lv_nodes_1_0= RULE_NODE
            {
            lv_nodes_1_0=(Token)match(input,RULE_NODE,FOLLOW_4); 

            					newLeafNode(lv_nodes_1_0, grammarAccess.getSubCircuitAccess().getNodesNODETerminalRuleCall_1_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getSubCircuitRule());
            					}
            					addWithLastConsumed(
            						current,
            						"nodes",
            						lv_nodes_1_0,
            						"com.xtext.ravornyo.xspice.XSpice.NODE");
            				

            }


            }

            // InternalXSpice.g:692:3: ( (lv_nodes_2_0= RULE_NODE ) )*
            loop7:
            do {
                int alt7=2;
                alt7 = dfa7.predict(input);
                switch (alt7) {
            	case 1 :
            	    // InternalXSpice.g:693:4: (lv_nodes_2_0= RULE_NODE )
            	    {
            	    // InternalXSpice.g:693:4: (lv_nodes_2_0= RULE_NODE )
            	    // InternalXSpice.g:694:5: lv_nodes_2_0= RULE_NODE
            	    {
            	    lv_nodes_2_0=(Token)match(input,RULE_NODE,FOLLOW_4); 

            	    					newLeafNode(lv_nodes_2_0, grammarAccess.getSubCircuitAccess().getNodesNODETerminalRuleCall_2_0());
            	    				

            	    					if (current==null) {
            	    						current = createModelElement(grammarAccess.getSubCircuitRule());
            	    					}
            	    					addWithLastConsumed(
            	    						current,
            	    						"nodes",
            	    						lv_nodes_2_0,
            	    						"com.xtext.ravornyo.xspice.XSpice.NODE");
            	    				

            	    }


            	    }
            	    break;

            	default :
            	    break loop7;
                }
            } while (true);

            // InternalXSpice.g:710:3: ( ( ruleLabel ) )
            // InternalXSpice.g:711:4: ( ruleLabel )
            {
            // InternalXSpice.g:711:4: ( ruleLabel )
            // InternalXSpice.g:712:5: ruleLabel
            {

            					if (current==null) {
            						current = createModelElement(grammarAccess.getSubCircuitRule());
            					}
            				

            					newCompositeNode(grammarAccess.getSubCircuitAccess().getDefinitionSubCircuitDefinitionCrossReference_3_0());
            				
            pushFollow(FOLLOW_2);
            ruleLabel();

            state._fsp--;


            					afterParserOrEnumRuleCall();
            				

            }


            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSubCircuit"


    // $ANTLR start "entryRuleResistor"
    // InternalXSpice.g:730:1: entryRuleResistor returns [EObject current=null] : iv_ruleResistor= ruleResistor EOF ;
    public final EObject entryRuleResistor() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleResistor = null;


        try {
            // InternalXSpice.g:730:49: (iv_ruleResistor= ruleResistor EOF )
            // InternalXSpice.g:731:2: iv_ruleResistor= ruleResistor EOF
            {
             newCompositeNode(grammarAccess.getResistorRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleResistor=ruleResistor();

            state._fsp--;

             current =iv_ruleResistor; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleResistor"


    // $ANTLR start "ruleResistor"
    // InternalXSpice.g:737:1: ruleResistor returns [EObject current=null] : ( ( (lv_name_0_0= RULE_RID ) ) ( (lv_nodes_1_0= RULE_NODE ) ) ( (lv_nodes_2_0= RULE_NODE ) ) ( (lv_resistance_3_0= RULE_NUMBER ) )? ( (lv_model_4_0= ruleLabel ) )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'L' otherlv_7= '=' ( (lv_length_8_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'W' otherlv_10= '=' ( (lv_width_11_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'TEMP' otherlv_13= '=' ( (lv_temp_14_0= RULE_NUMBER ) ) ) ) ) ) )+ {...}?) ) )? ) ;
    public final EObject ruleResistor() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token lv_nodes_1_0=null;
        Token lv_nodes_2_0=null;
        Token lv_resistance_3_0=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token lv_length_8_0=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token lv_width_11_0=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token lv_temp_14_0=null;
        AntlrDatatypeRuleToken lv_model_4_0 = null;



        	enterRule();

        try {
            // InternalXSpice.g:743:2: ( ( ( (lv_name_0_0= RULE_RID ) ) ( (lv_nodes_1_0= RULE_NODE ) ) ( (lv_nodes_2_0= RULE_NODE ) ) ( (lv_resistance_3_0= RULE_NUMBER ) )? ( (lv_model_4_0= ruleLabel ) )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'L' otherlv_7= '=' ( (lv_length_8_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'W' otherlv_10= '=' ( (lv_width_11_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'TEMP' otherlv_13= '=' ( (lv_temp_14_0= RULE_NUMBER ) ) ) ) ) ) )+ {...}?) ) )? ) )
            // InternalXSpice.g:744:2: ( ( (lv_name_0_0= RULE_RID ) ) ( (lv_nodes_1_0= RULE_NODE ) ) ( (lv_nodes_2_0= RULE_NODE ) ) ( (lv_resistance_3_0= RULE_NUMBER ) )? ( (lv_model_4_0= ruleLabel ) )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'L' otherlv_7= '=' ( (lv_length_8_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'W' otherlv_10= '=' ( (lv_width_11_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'TEMP' otherlv_13= '=' ( (lv_temp_14_0= RULE_NUMBER ) ) ) ) ) ) )+ {...}?) ) )? )
            {
            // InternalXSpice.g:744:2: ( ( (lv_name_0_0= RULE_RID ) ) ( (lv_nodes_1_0= RULE_NODE ) ) ( (lv_nodes_2_0= RULE_NODE ) ) ( (lv_resistance_3_0= RULE_NUMBER ) )? ( (lv_model_4_0= ruleLabel ) )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'L' otherlv_7= '=' ( (lv_length_8_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'W' otherlv_10= '=' ( (lv_width_11_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'TEMP' otherlv_13= '=' ( (lv_temp_14_0= RULE_NUMBER ) ) ) ) ) ) )+ {...}?) ) )? )
            // InternalXSpice.g:745:3: ( (lv_name_0_0= RULE_RID ) ) ( (lv_nodes_1_0= RULE_NODE ) ) ( (lv_nodes_2_0= RULE_NODE ) ) ( (lv_resistance_3_0= RULE_NUMBER ) )? ( (lv_model_4_0= ruleLabel ) )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'L' otherlv_7= '=' ( (lv_length_8_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'W' otherlv_10= '=' ( (lv_width_11_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'TEMP' otherlv_13= '=' ( (lv_temp_14_0= RULE_NUMBER ) ) ) ) ) ) )+ {...}?) ) )?
            {
            // InternalXSpice.g:745:3: ( (lv_name_0_0= RULE_RID ) )
            // InternalXSpice.g:746:4: (lv_name_0_0= RULE_RID )
            {
            // InternalXSpice.g:746:4: (lv_name_0_0= RULE_RID )
            // InternalXSpice.g:747:5: lv_name_0_0= RULE_RID
            {
            lv_name_0_0=(Token)match(input,RULE_RID,FOLLOW_5); 

            					newLeafNode(lv_name_0_0, grammarAccess.getResistorAccess().getNameRIDTerminalRuleCall_0_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getResistorRule());
            					}
            					setWithLastConsumed(
            						current,
            						"name",
            						lv_name_0_0,
            						"com.xtext.ravornyo.xspice.XSpice.RID");
            				

            }


            }

            // InternalXSpice.g:763:3: ( (lv_nodes_1_0= RULE_NODE ) )
            // InternalXSpice.g:764:4: (lv_nodes_1_0= RULE_NODE )
            {
            // InternalXSpice.g:764:4: (lv_nodes_1_0= RULE_NODE )
            // InternalXSpice.g:765:5: lv_nodes_1_0= RULE_NODE
            {
            lv_nodes_1_0=(Token)match(input,RULE_NODE,FOLLOW_5); 

            					newLeafNode(lv_nodes_1_0, grammarAccess.getResistorAccess().getNodesNODETerminalRuleCall_1_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getResistorRule());
            					}
            					addWithLastConsumed(
            						current,
            						"nodes",
            						lv_nodes_1_0,
            						"com.xtext.ravornyo.xspice.XSpice.NODE");
            				

            }


            }

            // InternalXSpice.g:781:3: ( (lv_nodes_2_0= RULE_NODE ) )
            // InternalXSpice.g:782:4: (lv_nodes_2_0= RULE_NODE )
            {
            // InternalXSpice.g:782:4: (lv_nodes_2_0= RULE_NODE )
            // InternalXSpice.g:783:5: lv_nodes_2_0= RULE_NODE
            {
            lv_nodes_2_0=(Token)match(input,RULE_NODE,FOLLOW_8); 

            					newLeafNode(lv_nodes_2_0, grammarAccess.getResistorAccess().getNodesNODETerminalRuleCall_2_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getResistorRule());
            					}
            					addWithLastConsumed(
            						current,
            						"nodes",
            						lv_nodes_2_0,
            						"com.xtext.ravornyo.xspice.XSpice.NODE");
            				

            }


            }

            // InternalXSpice.g:799:3: ( (lv_resistance_3_0= RULE_NUMBER ) )?
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==RULE_NUMBER) ) {
                alt8=1;
            }
            switch (alt8) {
                case 1 :
                    // InternalXSpice.g:800:4: (lv_resistance_3_0= RULE_NUMBER )
                    {
                    // InternalXSpice.g:800:4: (lv_resistance_3_0= RULE_NUMBER )
                    // InternalXSpice.g:801:5: lv_resistance_3_0= RULE_NUMBER
                    {
                    lv_resistance_3_0=(Token)match(input,RULE_NUMBER,FOLLOW_9); 

                    					newLeafNode(lv_resistance_3_0, grammarAccess.getResistorAccess().getResistanceNUMBERTerminalRuleCall_3_0());
                    				

                    					if (current==null) {
                    						current = createModelElement(grammarAccess.getResistorRule());
                    					}
                    					setWithLastConsumed(
                    						current,
                    						"resistance",
                    						lv_resistance_3_0,
                    						"com.xtext.ravornyo.xspice.XSpice.NUMBER");
                    				

                    }


                    }
                    break;

            }

            // InternalXSpice.g:817:3: ( (lv_model_4_0= ruleLabel ) )?
            int alt9=2;
            alt9 = dfa9.predict(input);
            switch (alt9) {
                case 1 :
                    // InternalXSpice.g:818:4: (lv_model_4_0= ruleLabel )
                    {
                    // InternalXSpice.g:818:4: (lv_model_4_0= ruleLabel )
                    // InternalXSpice.g:819:5: lv_model_4_0= ruleLabel
                    {

                    					newCompositeNode(grammarAccess.getResistorAccess().getModelLabelParserRuleCall_4_0());
                    				
                    pushFollow(FOLLOW_10);
                    lv_model_4_0=ruleLabel();

                    state._fsp--;


                    					if (current==null) {
                    						current = createModelElementForParent(grammarAccess.getResistorRule());
                    					}
                    					set(
                    						current,
                    						"model",
                    						lv_model_4_0,
                    						"com.xtext.ravornyo.xspice.XSpice.Label");
                    					afterParserOrEnumRuleCall();
                    				

                    }


                    }
                    break;

            }

            // InternalXSpice.g:836:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'L' otherlv_7= '=' ( (lv_length_8_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'W' otherlv_10= '=' ( (lv_width_11_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'TEMP' otherlv_13= '=' ( (lv_temp_14_0= RULE_NUMBER ) ) ) ) ) ) )+ {...}?) ) )?
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( (LA11_0==39||(LA11_0>=41 && LA11_0<=42)) ) {
                alt11=1;
            }
            switch (alt11) {
                case 1 :
                    // InternalXSpice.g:837:4: ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'L' otherlv_7= '=' ( (lv_length_8_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'W' otherlv_10= '=' ( (lv_width_11_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'TEMP' otherlv_13= '=' ( (lv_temp_14_0= RULE_NUMBER ) ) ) ) ) ) )+ {...}?) )
                    {
                    // InternalXSpice.g:837:4: ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'L' otherlv_7= '=' ( (lv_length_8_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'W' otherlv_10= '=' ( (lv_width_11_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'TEMP' otherlv_13= '=' ( (lv_temp_14_0= RULE_NUMBER ) ) ) ) ) ) )+ {...}?) )
                    // InternalXSpice.g:838:5: ( ( ({...}? => ( ({...}? => (otherlv_6= 'L' otherlv_7= '=' ( (lv_length_8_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'W' otherlv_10= '=' ( (lv_width_11_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'TEMP' otherlv_13= '=' ( (lv_temp_14_0= RULE_NUMBER ) ) ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getResistorAccess().getUnorderedGroup_5());
                    				
                    // InternalXSpice.g:841:5: ( ( ({...}? => ( ({...}? => (otherlv_6= 'L' otherlv_7= '=' ( (lv_length_8_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'W' otherlv_10= '=' ( (lv_width_11_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'TEMP' otherlv_13= '=' ( (lv_temp_14_0= RULE_NUMBER ) ) ) ) ) ) )+ {...}?)
                    // InternalXSpice.g:842:6: ( ({...}? => ( ({...}? => (otherlv_6= 'L' otherlv_7= '=' ( (lv_length_8_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'W' otherlv_10= '=' ( (lv_width_11_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'TEMP' otherlv_13= '=' ( (lv_temp_14_0= RULE_NUMBER ) ) ) ) ) ) )+ {...}?
                    {
                    // InternalXSpice.g:842:6: ( ({...}? => ( ({...}? => (otherlv_6= 'L' otherlv_7= '=' ( (lv_length_8_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'W' otherlv_10= '=' ( (lv_width_11_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'TEMP' otherlv_13= '=' ( (lv_temp_14_0= RULE_NUMBER ) ) ) ) ) ) )+
                    int cnt10=0;
                    loop10:
                    do {
                        int alt10=4;
                        int LA10_0 = input.LA(1);

                        if ( LA10_0 == 39 && getUnorderedGroupHelper().canSelect(grammarAccess.getResistorAccess().getUnorderedGroup_5(), 0) ) {
                            alt10=1;
                        }
                        else if ( LA10_0 == 41 && getUnorderedGroupHelper().canSelect(grammarAccess.getResistorAccess().getUnorderedGroup_5(), 1) ) {
                            alt10=2;
                        }
                        else if ( LA10_0 == 42 && getUnorderedGroupHelper().canSelect(grammarAccess.getResistorAccess().getUnorderedGroup_5(), 2) ) {
                            alt10=3;
                        }


                        switch (alt10) {
                    	case 1 :
                    	    // InternalXSpice.g:843:4: ({...}? => ( ({...}? => (otherlv_6= 'L' otherlv_7= '=' ( (lv_length_8_0= RULE_NUMBER ) ) ) ) ) )
                    	    {
                    	    // InternalXSpice.g:843:4: ({...}? => ( ({...}? => (otherlv_6= 'L' otherlv_7= '=' ( (lv_length_8_0= RULE_NUMBER ) ) ) ) ) )
                    	    // InternalXSpice.g:844:5: {...}? => ( ({...}? => (otherlv_6= 'L' otherlv_7= '=' ( (lv_length_8_0= RULE_NUMBER ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getResistorAccess().getUnorderedGroup_5(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleResistor", "getUnorderedGroupHelper().canSelect(grammarAccess.getResistorAccess().getUnorderedGroup_5(), 0)");
                    	    }
                    	    // InternalXSpice.g:844:105: ( ({...}? => (otherlv_6= 'L' otherlv_7= '=' ( (lv_length_8_0= RULE_NUMBER ) ) ) ) )
                    	    // InternalXSpice.g:845:6: ({...}? => (otherlv_6= 'L' otherlv_7= '=' ( (lv_length_8_0= RULE_NUMBER ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getResistorAccess().getUnorderedGroup_5(), 0);
                    	    					
                    	    // InternalXSpice.g:848:9: ({...}? => (otherlv_6= 'L' otherlv_7= '=' ( (lv_length_8_0= RULE_NUMBER ) ) ) )
                    	    // InternalXSpice.g:848:10: {...}? => (otherlv_6= 'L' otherlv_7= '=' ( (lv_length_8_0= RULE_NUMBER ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleResistor", "true");
                    	    }
                    	    // InternalXSpice.g:848:19: (otherlv_6= 'L' otherlv_7= '=' ( (lv_length_8_0= RULE_NUMBER ) ) )
                    	    // InternalXSpice.g:848:20: otherlv_6= 'L' otherlv_7= '=' ( (lv_length_8_0= RULE_NUMBER ) )
                    	    {
                    	    otherlv_6=(Token)match(input,39,FOLLOW_11); 

                    	    									newLeafNode(otherlv_6, grammarAccess.getResistorAccess().getLKeyword_5_0_0());
                    	    								
                    	    otherlv_7=(Token)match(input,40,FOLLOW_12); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getResistorAccess().getEqualsSignKeyword_5_0_1());
                    	    								
                    	    // InternalXSpice.g:856:9: ( (lv_length_8_0= RULE_NUMBER ) )
                    	    // InternalXSpice.g:857:10: (lv_length_8_0= RULE_NUMBER )
                    	    {
                    	    // InternalXSpice.g:857:10: (lv_length_8_0= RULE_NUMBER )
                    	    // InternalXSpice.g:858:11: lv_length_8_0= RULE_NUMBER
                    	    {
                    	    lv_length_8_0=(Token)match(input,RULE_NUMBER,FOLLOW_10); 

                    	    											newLeafNode(lv_length_8_0, grammarAccess.getResistorAccess().getLengthNUMBERTerminalRuleCall_5_0_2_0());
                    	    										

                    	    											if (current==null) {
                    	    												current = createModelElement(grammarAccess.getResistorRule());
                    	    											}
                    	    											setWithLastConsumed(
                    	    												current,
                    	    												"length",
                    	    												lv_length_8_0,
                    	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getResistorAccess().getUnorderedGroup_5());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalXSpice.g:880:4: ({...}? => ( ({...}? => (otherlv_9= 'W' otherlv_10= '=' ( (lv_width_11_0= RULE_NUMBER ) ) ) ) ) )
                    	    {
                    	    // InternalXSpice.g:880:4: ({...}? => ( ({...}? => (otherlv_9= 'W' otherlv_10= '=' ( (lv_width_11_0= RULE_NUMBER ) ) ) ) ) )
                    	    // InternalXSpice.g:881:5: {...}? => ( ({...}? => (otherlv_9= 'W' otherlv_10= '=' ( (lv_width_11_0= RULE_NUMBER ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getResistorAccess().getUnorderedGroup_5(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleResistor", "getUnorderedGroupHelper().canSelect(grammarAccess.getResistorAccess().getUnorderedGroup_5(), 1)");
                    	    }
                    	    // InternalXSpice.g:881:105: ( ({...}? => (otherlv_9= 'W' otherlv_10= '=' ( (lv_width_11_0= RULE_NUMBER ) ) ) ) )
                    	    // InternalXSpice.g:882:6: ({...}? => (otherlv_9= 'W' otherlv_10= '=' ( (lv_width_11_0= RULE_NUMBER ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getResistorAccess().getUnorderedGroup_5(), 1);
                    	    					
                    	    // InternalXSpice.g:885:9: ({...}? => (otherlv_9= 'W' otherlv_10= '=' ( (lv_width_11_0= RULE_NUMBER ) ) ) )
                    	    // InternalXSpice.g:885:10: {...}? => (otherlv_9= 'W' otherlv_10= '=' ( (lv_width_11_0= RULE_NUMBER ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleResistor", "true");
                    	    }
                    	    // InternalXSpice.g:885:19: (otherlv_9= 'W' otherlv_10= '=' ( (lv_width_11_0= RULE_NUMBER ) ) )
                    	    // InternalXSpice.g:885:20: otherlv_9= 'W' otherlv_10= '=' ( (lv_width_11_0= RULE_NUMBER ) )
                    	    {
                    	    otherlv_9=(Token)match(input,41,FOLLOW_11); 

                    	    									newLeafNode(otherlv_9, grammarAccess.getResistorAccess().getWKeyword_5_1_0());
                    	    								
                    	    otherlv_10=(Token)match(input,40,FOLLOW_12); 

                    	    									newLeafNode(otherlv_10, grammarAccess.getResistorAccess().getEqualsSignKeyword_5_1_1());
                    	    								
                    	    // InternalXSpice.g:893:9: ( (lv_width_11_0= RULE_NUMBER ) )
                    	    // InternalXSpice.g:894:10: (lv_width_11_0= RULE_NUMBER )
                    	    {
                    	    // InternalXSpice.g:894:10: (lv_width_11_0= RULE_NUMBER )
                    	    // InternalXSpice.g:895:11: lv_width_11_0= RULE_NUMBER
                    	    {
                    	    lv_width_11_0=(Token)match(input,RULE_NUMBER,FOLLOW_10); 

                    	    											newLeafNode(lv_width_11_0, grammarAccess.getResistorAccess().getWidthNUMBERTerminalRuleCall_5_1_2_0());
                    	    										

                    	    											if (current==null) {
                    	    												current = createModelElement(grammarAccess.getResistorRule());
                    	    											}
                    	    											setWithLastConsumed(
                    	    												current,
                    	    												"width",
                    	    												lv_width_11_0,
                    	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getResistorAccess().getUnorderedGroup_5());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalXSpice.g:917:4: ({...}? => ( ({...}? => (otherlv_12= 'TEMP' otherlv_13= '=' ( (lv_temp_14_0= RULE_NUMBER ) ) ) ) ) )
                    	    {
                    	    // InternalXSpice.g:917:4: ({...}? => ( ({...}? => (otherlv_12= 'TEMP' otherlv_13= '=' ( (lv_temp_14_0= RULE_NUMBER ) ) ) ) ) )
                    	    // InternalXSpice.g:918:5: {...}? => ( ({...}? => (otherlv_12= 'TEMP' otherlv_13= '=' ( (lv_temp_14_0= RULE_NUMBER ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getResistorAccess().getUnorderedGroup_5(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleResistor", "getUnorderedGroupHelper().canSelect(grammarAccess.getResistorAccess().getUnorderedGroup_5(), 2)");
                    	    }
                    	    // InternalXSpice.g:918:105: ( ({...}? => (otherlv_12= 'TEMP' otherlv_13= '=' ( (lv_temp_14_0= RULE_NUMBER ) ) ) ) )
                    	    // InternalXSpice.g:919:6: ({...}? => (otherlv_12= 'TEMP' otherlv_13= '=' ( (lv_temp_14_0= RULE_NUMBER ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getResistorAccess().getUnorderedGroup_5(), 2);
                    	    					
                    	    // InternalXSpice.g:922:9: ({...}? => (otherlv_12= 'TEMP' otherlv_13= '=' ( (lv_temp_14_0= RULE_NUMBER ) ) ) )
                    	    // InternalXSpice.g:922:10: {...}? => (otherlv_12= 'TEMP' otherlv_13= '=' ( (lv_temp_14_0= RULE_NUMBER ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleResistor", "true");
                    	    }
                    	    // InternalXSpice.g:922:19: (otherlv_12= 'TEMP' otherlv_13= '=' ( (lv_temp_14_0= RULE_NUMBER ) ) )
                    	    // InternalXSpice.g:922:20: otherlv_12= 'TEMP' otherlv_13= '=' ( (lv_temp_14_0= RULE_NUMBER ) )
                    	    {
                    	    otherlv_12=(Token)match(input,42,FOLLOW_11); 

                    	    									newLeafNode(otherlv_12, grammarAccess.getResistorAccess().getTEMPKeyword_5_2_0());
                    	    								
                    	    otherlv_13=(Token)match(input,40,FOLLOW_12); 

                    	    									newLeafNode(otherlv_13, grammarAccess.getResistorAccess().getEqualsSignKeyword_5_2_1());
                    	    								
                    	    // InternalXSpice.g:930:9: ( (lv_temp_14_0= RULE_NUMBER ) )
                    	    // InternalXSpice.g:931:10: (lv_temp_14_0= RULE_NUMBER )
                    	    {
                    	    // InternalXSpice.g:931:10: (lv_temp_14_0= RULE_NUMBER )
                    	    // InternalXSpice.g:932:11: lv_temp_14_0= RULE_NUMBER
                    	    {
                    	    lv_temp_14_0=(Token)match(input,RULE_NUMBER,FOLLOW_10); 

                    	    											newLeafNode(lv_temp_14_0, grammarAccess.getResistorAccess().getTempNUMBERTerminalRuleCall_5_2_2_0());
                    	    										

                    	    											if (current==null) {
                    	    												current = createModelElement(grammarAccess.getResistorRule());
                    	    											}
                    	    											setWithLastConsumed(
                    	    												current,
                    	    												"temp",
                    	    												lv_temp_14_0,
                    	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getResistorAccess().getUnorderedGroup_5());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt10 >= 1 ) break loop10;
                                EarlyExitException eee =
                                    new EarlyExitException(10, input);
                                throw eee;
                        }
                        cnt10++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getResistorAccess().getUnorderedGroup_5()) ) {
                        throw new FailedPredicateException(input, "ruleResistor", "getUnorderedGroupHelper().canLeave(grammarAccess.getResistorAccess().getUnorderedGroup_5())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getResistorAccess().getUnorderedGroup_5());
                    				

                    }
                    break;

            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleResistor"


    // $ANTLR start "entryRuleResistorModel"
    // InternalXSpice.g:966:1: entryRuleResistorModel returns [EObject current=null] : iv_ruleResistorModel= ruleResistorModel EOF ;
    public final EObject entryRuleResistorModel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleResistorModel = null;


        try {
            // InternalXSpice.g:966:54: (iv_ruleResistorModel= ruleResistorModel EOF )
            // InternalXSpice.g:967:2: iv_ruleResistorModel= ruleResistorModel EOF
            {
             newCompositeNode(grammarAccess.getResistorModelRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleResistorModel=ruleResistorModel();

            state._fsp--;

             current =iv_ruleResistorModel; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleResistorModel"


    // $ANTLR start "ruleResistorModel"
    // InternalXSpice.g:973:1: ruleResistorModel returns [EObject current=null] : (otherlv_0= '.MODEL' ( (lv_name_1_0= ruleLabel ) ) otherlv_2= 'R' otherlv_3= '(' ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'RSH' otherlv_6= '=' ( (lv_sheetResistance_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'DEFW' otherlv_9= '=' ( (lv_defaultWidth_10_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'NARROW' otherlv_12= '=' ( (lv_narrow_13_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'TC1' otherlv_15= '=' ( (lv_temperatureCoefficient1_16_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'TC2' otherlv_18= '=' ( (lv_temperatureCoefficient2_19_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'TNOM' otherlv_21= '=' ( (lv_nominalTemperature_22_0= RULE_NUMBER ) ) ) ) ) ) )+ {...}?) ) ) otherlv_23= ')' ) ;
    public final EObject ruleResistorModel() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token lv_sheetResistance_7_0=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token lv_defaultWidth_10_0=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token lv_narrow_13_0=null;
        Token otherlv_14=null;
        Token otherlv_15=null;
        Token lv_temperatureCoefficient1_16_0=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token lv_temperatureCoefficient2_19_0=null;
        Token otherlv_20=null;
        Token otherlv_21=null;
        Token lv_nominalTemperature_22_0=null;
        Token otherlv_23=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
            // InternalXSpice.g:979:2: ( (otherlv_0= '.MODEL' ( (lv_name_1_0= ruleLabel ) ) otherlv_2= 'R' otherlv_3= '(' ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'RSH' otherlv_6= '=' ( (lv_sheetResistance_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'DEFW' otherlv_9= '=' ( (lv_defaultWidth_10_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'NARROW' otherlv_12= '=' ( (lv_narrow_13_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'TC1' otherlv_15= '=' ( (lv_temperatureCoefficient1_16_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'TC2' otherlv_18= '=' ( (lv_temperatureCoefficient2_19_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'TNOM' otherlv_21= '=' ( (lv_nominalTemperature_22_0= RULE_NUMBER ) ) ) ) ) ) )+ {...}?) ) ) otherlv_23= ')' ) )
            // InternalXSpice.g:980:2: (otherlv_0= '.MODEL' ( (lv_name_1_0= ruleLabel ) ) otherlv_2= 'R' otherlv_3= '(' ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'RSH' otherlv_6= '=' ( (lv_sheetResistance_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'DEFW' otherlv_9= '=' ( (lv_defaultWidth_10_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'NARROW' otherlv_12= '=' ( (lv_narrow_13_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'TC1' otherlv_15= '=' ( (lv_temperatureCoefficient1_16_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'TC2' otherlv_18= '=' ( (lv_temperatureCoefficient2_19_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'TNOM' otherlv_21= '=' ( (lv_nominalTemperature_22_0= RULE_NUMBER ) ) ) ) ) ) )+ {...}?) ) ) otherlv_23= ')' )
            {
            // InternalXSpice.g:980:2: (otherlv_0= '.MODEL' ( (lv_name_1_0= ruleLabel ) ) otherlv_2= 'R' otherlv_3= '(' ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'RSH' otherlv_6= '=' ( (lv_sheetResistance_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'DEFW' otherlv_9= '=' ( (lv_defaultWidth_10_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'NARROW' otherlv_12= '=' ( (lv_narrow_13_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'TC1' otherlv_15= '=' ( (lv_temperatureCoefficient1_16_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'TC2' otherlv_18= '=' ( (lv_temperatureCoefficient2_19_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'TNOM' otherlv_21= '=' ( (lv_nominalTemperature_22_0= RULE_NUMBER ) ) ) ) ) ) )+ {...}?) ) ) otherlv_23= ')' )
            // InternalXSpice.g:981:3: otherlv_0= '.MODEL' ( (lv_name_1_0= ruleLabel ) ) otherlv_2= 'R' otherlv_3= '(' ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'RSH' otherlv_6= '=' ( (lv_sheetResistance_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'DEFW' otherlv_9= '=' ( (lv_defaultWidth_10_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'NARROW' otherlv_12= '=' ( (lv_narrow_13_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'TC1' otherlv_15= '=' ( (lv_temperatureCoefficient1_16_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'TC2' otherlv_18= '=' ( (lv_temperatureCoefficient2_19_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'TNOM' otherlv_21= '=' ( (lv_nominalTemperature_22_0= RULE_NUMBER ) ) ) ) ) ) )+ {...}?) ) ) otherlv_23= ')'
            {
            otherlv_0=(Token)match(input,43,FOLLOW_4); 

            			newLeafNode(otherlv_0, grammarAccess.getResistorModelAccess().getMODELKeyword_0());
            		
            // InternalXSpice.g:985:3: ( (lv_name_1_0= ruleLabel ) )
            // InternalXSpice.g:986:4: (lv_name_1_0= ruleLabel )
            {
            // InternalXSpice.g:986:4: (lv_name_1_0= ruleLabel )
            // InternalXSpice.g:987:5: lv_name_1_0= ruleLabel
            {

            					newCompositeNode(grammarAccess.getResistorModelAccess().getNameLabelParserRuleCall_1_0());
            				
            pushFollow(FOLLOW_13);
            lv_name_1_0=ruleLabel();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getResistorModelRule());
            					}
            					set(
            						current,
            						"name",
            						lv_name_1_0,
            						"com.xtext.ravornyo.xspice.XSpice.Label");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            otherlv_2=(Token)match(input,44,FOLLOW_14); 

            			newLeafNode(otherlv_2, grammarAccess.getResistorModelAccess().getRKeyword_2());
            		
            otherlv_3=(Token)match(input,45,FOLLOW_15); 

            			newLeafNode(otherlv_3, grammarAccess.getResistorModelAccess().getLeftParenthesisKeyword_3());
            		
            // InternalXSpice.g:1012:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'RSH' otherlv_6= '=' ( (lv_sheetResistance_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'DEFW' otherlv_9= '=' ( (lv_defaultWidth_10_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'NARROW' otherlv_12= '=' ( (lv_narrow_13_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'TC1' otherlv_15= '=' ( (lv_temperatureCoefficient1_16_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'TC2' otherlv_18= '=' ( (lv_temperatureCoefficient2_19_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'TNOM' otherlv_21= '=' ( (lv_nominalTemperature_22_0= RULE_NUMBER ) ) ) ) ) ) )+ {...}?) ) )
            // InternalXSpice.g:1013:4: ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'RSH' otherlv_6= '=' ( (lv_sheetResistance_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'DEFW' otherlv_9= '=' ( (lv_defaultWidth_10_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'NARROW' otherlv_12= '=' ( (lv_narrow_13_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'TC1' otherlv_15= '=' ( (lv_temperatureCoefficient1_16_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'TC2' otherlv_18= '=' ( (lv_temperatureCoefficient2_19_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'TNOM' otherlv_21= '=' ( (lv_nominalTemperature_22_0= RULE_NUMBER ) ) ) ) ) ) )+ {...}?) )
            {
            // InternalXSpice.g:1013:4: ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'RSH' otherlv_6= '=' ( (lv_sheetResistance_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'DEFW' otherlv_9= '=' ( (lv_defaultWidth_10_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'NARROW' otherlv_12= '=' ( (lv_narrow_13_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'TC1' otherlv_15= '=' ( (lv_temperatureCoefficient1_16_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'TC2' otherlv_18= '=' ( (lv_temperatureCoefficient2_19_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'TNOM' otherlv_21= '=' ( (lv_nominalTemperature_22_0= RULE_NUMBER ) ) ) ) ) ) )+ {...}?) )
            // InternalXSpice.g:1014:5: ( ( ({...}? => ( ({...}? => (otherlv_5= 'RSH' otherlv_6= '=' ( (lv_sheetResistance_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'DEFW' otherlv_9= '=' ( (lv_defaultWidth_10_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'NARROW' otherlv_12= '=' ( (lv_narrow_13_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'TC1' otherlv_15= '=' ( (lv_temperatureCoefficient1_16_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'TC2' otherlv_18= '=' ( (lv_temperatureCoefficient2_19_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'TNOM' otherlv_21= '=' ( (lv_nominalTemperature_22_0= RULE_NUMBER ) ) ) ) ) ) )+ {...}?)
            {
             
            				  getUnorderedGroupHelper().enter(grammarAccess.getResistorModelAccess().getUnorderedGroup_4());
            				
            // InternalXSpice.g:1017:5: ( ( ({...}? => ( ({...}? => (otherlv_5= 'RSH' otherlv_6= '=' ( (lv_sheetResistance_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'DEFW' otherlv_9= '=' ( (lv_defaultWidth_10_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'NARROW' otherlv_12= '=' ( (lv_narrow_13_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'TC1' otherlv_15= '=' ( (lv_temperatureCoefficient1_16_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'TC2' otherlv_18= '=' ( (lv_temperatureCoefficient2_19_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'TNOM' otherlv_21= '=' ( (lv_nominalTemperature_22_0= RULE_NUMBER ) ) ) ) ) ) )+ {...}?)
            // InternalXSpice.g:1018:6: ( ({...}? => ( ({...}? => (otherlv_5= 'RSH' otherlv_6= '=' ( (lv_sheetResistance_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'DEFW' otherlv_9= '=' ( (lv_defaultWidth_10_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'NARROW' otherlv_12= '=' ( (lv_narrow_13_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'TC1' otherlv_15= '=' ( (lv_temperatureCoefficient1_16_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'TC2' otherlv_18= '=' ( (lv_temperatureCoefficient2_19_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'TNOM' otherlv_21= '=' ( (lv_nominalTemperature_22_0= RULE_NUMBER ) ) ) ) ) ) )+ {...}?
            {
            // InternalXSpice.g:1018:6: ( ({...}? => ( ({...}? => (otherlv_5= 'RSH' otherlv_6= '=' ( (lv_sheetResistance_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'DEFW' otherlv_9= '=' ( (lv_defaultWidth_10_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'NARROW' otherlv_12= '=' ( (lv_narrow_13_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'TC1' otherlv_15= '=' ( (lv_temperatureCoefficient1_16_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'TC2' otherlv_18= '=' ( (lv_temperatureCoefficient2_19_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'TNOM' otherlv_21= '=' ( (lv_nominalTemperature_22_0= RULE_NUMBER ) ) ) ) ) ) )+
            int cnt12=0;
            loop12:
            do {
                int alt12=7;
                int LA12_0 = input.LA(1);

                if ( LA12_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getResistorModelAccess().getUnorderedGroup_4(), 0) ) {
                    alt12=1;
                }
                else if ( LA12_0 == 47 && getUnorderedGroupHelper().canSelect(grammarAccess.getResistorModelAccess().getUnorderedGroup_4(), 1) ) {
                    alt12=2;
                }
                else if ( LA12_0 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getResistorModelAccess().getUnorderedGroup_4(), 2) ) {
                    alt12=3;
                }
                else if ( LA12_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getResistorModelAccess().getUnorderedGroup_4(), 3) ) {
                    alt12=4;
                }
                else if ( LA12_0 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getResistorModelAccess().getUnorderedGroup_4(), 4) ) {
                    alt12=5;
                }
                else if ( LA12_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getResistorModelAccess().getUnorderedGroup_4(), 5) ) {
                    alt12=6;
                }


                switch (alt12) {
            	case 1 :
            	    // InternalXSpice.g:1019:4: ({...}? => ( ({...}? => (otherlv_5= 'RSH' otherlv_6= '=' ( (lv_sheetResistance_7_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:1019:4: ({...}? => ( ({...}? => (otherlv_5= 'RSH' otherlv_6= '=' ( (lv_sheetResistance_7_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:1020:5: {...}? => ( ({...}? => (otherlv_5= 'RSH' otherlv_6= '=' ( (lv_sheetResistance_7_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getResistorModelAccess().getUnorderedGroup_4(), 0) ) {
            	        throw new FailedPredicateException(input, "ruleResistorModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getResistorModelAccess().getUnorderedGroup_4(), 0)");
            	    }
            	    // InternalXSpice.g:1020:110: ( ({...}? => (otherlv_5= 'RSH' otherlv_6= '=' ( (lv_sheetResistance_7_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:1021:6: ({...}? => (otherlv_5= 'RSH' otherlv_6= '=' ( (lv_sheetResistance_7_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getResistorModelAccess().getUnorderedGroup_4(), 0);
            	    					
            	    // InternalXSpice.g:1024:9: ({...}? => (otherlv_5= 'RSH' otherlv_6= '=' ( (lv_sheetResistance_7_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:1024:10: {...}? => (otherlv_5= 'RSH' otherlv_6= '=' ( (lv_sheetResistance_7_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleResistorModel", "true");
            	    }
            	    // InternalXSpice.g:1024:19: (otherlv_5= 'RSH' otherlv_6= '=' ( (lv_sheetResistance_7_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:1024:20: otherlv_5= 'RSH' otherlv_6= '=' ( (lv_sheetResistance_7_0= RULE_NUMBER ) )
            	    {
            	    otherlv_5=(Token)match(input,46,FOLLOW_11); 

            	    									newLeafNode(otherlv_5, grammarAccess.getResistorModelAccess().getRSHKeyword_4_0_0());
            	    								
            	    otherlv_6=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_6, grammarAccess.getResistorModelAccess().getEqualsSignKeyword_4_0_1());
            	    								
            	    // InternalXSpice.g:1032:9: ( (lv_sheetResistance_7_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:1033:10: (lv_sheetResistance_7_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:1033:10: (lv_sheetResistance_7_0= RULE_NUMBER )
            	    // InternalXSpice.g:1034:11: lv_sheetResistance_7_0= RULE_NUMBER
            	    {
            	    lv_sheetResistance_7_0=(Token)match(input,RULE_NUMBER,FOLLOW_16); 

            	    											newLeafNode(lv_sheetResistance_7_0, grammarAccess.getResistorModelAccess().getSheetResistanceNUMBERTerminalRuleCall_4_0_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getResistorModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"sheetResistance",
            	    												lv_sheetResistance_7_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getResistorModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalXSpice.g:1056:4: ({...}? => ( ({...}? => (otherlv_8= 'DEFW' otherlv_9= '=' ( (lv_defaultWidth_10_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:1056:4: ({...}? => ( ({...}? => (otherlv_8= 'DEFW' otherlv_9= '=' ( (lv_defaultWidth_10_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:1057:5: {...}? => ( ({...}? => (otherlv_8= 'DEFW' otherlv_9= '=' ( (lv_defaultWidth_10_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getResistorModelAccess().getUnorderedGroup_4(), 1) ) {
            	        throw new FailedPredicateException(input, "ruleResistorModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getResistorModelAccess().getUnorderedGroup_4(), 1)");
            	    }
            	    // InternalXSpice.g:1057:110: ( ({...}? => (otherlv_8= 'DEFW' otherlv_9= '=' ( (lv_defaultWidth_10_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:1058:6: ({...}? => (otherlv_8= 'DEFW' otherlv_9= '=' ( (lv_defaultWidth_10_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getResistorModelAccess().getUnorderedGroup_4(), 1);
            	    					
            	    // InternalXSpice.g:1061:9: ({...}? => (otherlv_8= 'DEFW' otherlv_9= '=' ( (lv_defaultWidth_10_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:1061:10: {...}? => (otherlv_8= 'DEFW' otherlv_9= '=' ( (lv_defaultWidth_10_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleResistorModel", "true");
            	    }
            	    // InternalXSpice.g:1061:19: (otherlv_8= 'DEFW' otherlv_9= '=' ( (lv_defaultWidth_10_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:1061:20: otherlv_8= 'DEFW' otherlv_9= '=' ( (lv_defaultWidth_10_0= RULE_NUMBER ) )
            	    {
            	    otherlv_8=(Token)match(input,47,FOLLOW_11); 

            	    									newLeafNode(otherlv_8, grammarAccess.getResistorModelAccess().getDEFWKeyword_4_1_0());
            	    								
            	    otherlv_9=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_9, grammarAccess.getResistorModelAccess().getEqualsSignKeyword_4_1_1());
            	    								
            	    // InternalXSpice.g:1069:9: ( (lv_defaultWidth_10_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:1070:10: (lv_defaultWidth_10_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:1070:10: (lv_defaultWidth_10_0= RULE_NUMBER )
            	    // InternalXSpice.g:1071:11: lv_defaultWidth_10_0= RULE_NUMBER
            	    {
            	    lv_defaultWidth_10_0=(Token)match(input,RULE_NUMBER,FOLLOW_16); 

            	    											newLeafNode(lv_defaultWidth_10_0, grammarAccess.getResistorModelAccess().getDefaultWidthNUMBERTerminalRuleCall_4_1_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getResistorModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"defaultWidth",
            	    												lv_defaultWidth_10_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getResistorModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalXSpice.g:1093:4: ({...}? => ( ({...}? => (otherlv_11= 'NARROW' otherlv_12= '=' ( (lv_narrow_13_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:1093:4: ({...}? => ( ({...}? => (otherlv_11= 'NARROW' otherlv_12= '=' ( (lv_narrow_13_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:1094:5: {...}? => ( ({...}? => (otherlv_11= 'NARROW' otherlv_12= '=' ( (lv_narrow_13_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getResistorModelAccess().getUnorderedGroup_4(), 2) ) {
            	        throw new FailedPredicateException(input, "ruleResistorModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getResistorModelAccess().getUnorderedGroup_4(), 2)");
            	    }
            	    // InternalXSpice.g:1094:110: ( ({...}? => (otherlv_11= 'NARROW' otherlv_12= '=' ( (lv_narrow_13_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:1095:6: ({...}? => (otherlv_11= 'NARROW' otherlv_12= '=' ( (lv_narrow_13_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getResistorModelAccess().getUnorderedGroup_4(), 2);
            	    					
            	    // InternalXSpice.g:1098:9: ({...}? => (otherlv_11= 'NARROW' otherlv_12= '=' ( (lv_narrow_13_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:1098:10: {...}? => (otherlv_11= 'NARROW' otherlv_12= '=' ( (lv_narrow_13_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleResistorModel", "true");
            	    }
            	    // InternalXSpice.g:1098:19: (otherlv_11= 'NARROW' otherlv_12= '=' ( (lv_narrow_13_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:1098:20: otherlv_11= 'NARROW' otherlv_12= '=' ( (lv_narrow_13_0= RULE_NUMBER ) )
            	    {
            	    otherlv_11=(Token)match(input,48,FOLLOW_11); 

            	    									newLeafNode(otherlv_11, grammarAccess.getResistorModelAccess().getNARROWKeyword_4_2_0());
            	    								
            	    otherlv_12=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_12, grammarAccess.getResistorModelAccess().getEqualsSignKeyword_4_2_1());
            	    								
            	    // InternalXSpice.g:1106:9: ( (lv_narrow_13_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:1107:10: (lv_narrow_13_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:1107:10: (lv_narrow_13_0= RULE_NUMBER )
            	    // InternalXSpice.g:1108:11: lv_narrow_13_0= RULE_NUMBER
            	    {
            	    lv_narrow_13_0=(Token)match(input,RULE_NUMBER,FOLLOW_16); 

            	    											newLeafNode(lv_narrow_13_0, grammarAccess.getResistorModelAccess().getNarrowNUMBERTerminalRuleCall_4_2_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getResistorModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"narrow",
            	    												lv_narrow_13_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getResistorModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalXSpice.g:1130:4: ({...}? => ( ({...}? => (otherlv_14= 'TC1' otherlv_15= '=' ( (lv_temperatureCoefficient1_16_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:1130:4: ({...}? => ( ({...}? => (otherlv_14= 'TC1' otherlv_15= '=' ( (lv_temperatureCoefficient1_16_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:1131:5: {...}? => ( ({...}? => (otherlv_14= 'TC1' otherlv_15= '=' ( (lv_temperatureCoefficient1_16_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getResistorModelAccess().getUnorderedGroup_4(), 3) ) {
            	        throw new FailedPredicateException(input, "ruleResistorModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getResistorModelAccess().getUnorderedGroup_4(), 3)");
            	    }
            	    // InternalXSpice.g:1131:110: ( ({...}? => (otherlv_14= 'TC1' otherlv_15= '=' ( (lv_temperatureCoefficient1_16_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:1132:6: ({...}? => (otherlv_14= 'TC1' otherlv_15= '=' ( (lv_temperatureCoefficient1_16_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getResistorModelAccess().getUnorderedGroup_4(), 3);
            	    					
            	    // InternalXSpice.g:1135:9: ({...}? => (otherlv_14= 'TC1' otherlv_15= '=' ( (lv_temperatureCoefficient1_16_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:1135:10: {...}? => (otherlv_14= 'TC1' otherlv_15= '=' ( (lv_temperatureCoefficient1_16_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleResistorModel", "true");
            	    }
            	    // InternalXSpice.g:1135:19: (otherlv_14= 'TC1' otherlv_15= '=' ( (lv_temperatureCoefficient1_16_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:1135:20: otherlv_14= 'TC1' otherlv_15= '=' ( (lv_temperatureCoefficient1_16_0= RULE_NUMBER ) )
            	    {
            	    otherlv_14=(Token)match(input,49,FOLLOW_11); 

            	    									newLeafNode(otherlv_14, grammarAccess.getResistorModelAccess().getTC1Keyword_4_3_0());
            	    								
            	    otherlv_15=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_15, grammarAccess.getResistorModelAccess().getEqualsSignKeyword_4_3_1());
            	    								
            	    // InternalXSpice.g:1143:9: ( (lv_temperatureCoefficient1_16_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:1144:10: (lv_temperatureCoefficient1_16_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:1144:10: (lv_temperatureCoefficient1_16_0= RULE_NUMBER )
            	    // InternalXSpice.g:1145:11: lv_temperatureCoefficient1_16_0= RULE_NUMBER
            	    {
            	    lv_temperatureCoefficient1_16_0=(Token)match(input,RULE_NUMBER,FOLLOW_16); 

            	    											newLeafNode(lv_temperatureCoefficient1_16_0, grammarAccess.getResistorModelAccess().getTemperatureCoefficient1NUMBERTerminalRuleCall_4_3_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getResistorModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"temperatureCoefficient1",
            	    												lv_temperatureCoefficient1_16_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getResistorModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalXSpice.g:1167:4: ({...}? => ( ({...}? => (otherlv_17= 'TC2' otherlv_18= '=' ( (lv_temperatureCoefficient2_19_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:1167:4: ({...}? => ( ({...}? => (otherlv_17= 'TC2' otherlv_18= '=' ( (lv_temperatureCoefficient2_19_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:1168:5: {...}? => ( ({...}? => (otherlv_17= 'TC2' otherlv_18= '=' ( (lv_temperatureCoefficient2_19_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getResistorModelAccess().getUnorderedGroup_4(), 4) ) {
            	        throw new FailedPredicateException(input, "ruleResistorModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getResistorModelAccess().getUnorderedGroup_4(), 4)");
            	    }
            	    // InternalXSpice.g:1168:110: ( ({...}? => (otherlv_17= 'TC2' otherlv_18= '=' ( (lv_temperatureCoefficient2_19_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:1169:6: ({...}? => (otherlv_17= 'TC2' otherlv_18= '=' ( (lv_temperatureCoefficient2_19_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getResistorModelAccess().getUnorderedGroup_4(), 4);
            	    					
            	    // InternalXSpice.g:1172:9: ({...}? => (otherlv_17= 'TC2' otherlv_18= '=' ( (lv_temperatureCoefficient2_19_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:1172:10: {...}? => (otherlv_17= 'TC2' otherlv_18= '=' ( (lv_temperatureCoefficient2_19_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleResistorModel", "true");
            	    }
            	    // InternalXSpice.g:1172:19: (otherlv_17= 'TC2' otherlv_18= '=' ( (lv_temperatureCoefficient2_19_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:1172:20: otherlv_17= 'TC2' otherlv_18= '=' ( (lv_temperatureCoefficient2_19_0= RULE_NUMBER ) )
            	    {
            	    otherlv_17=(Token)match(input,50,FOLLOW_11); 

            	    									newLeafNode(otherlv_17, grammarAccess.getResistorModelAccess().getTC2Keyword_4_4_0());
            	    								
            	    otherlv_18=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_18, grammarAccess.getResistorModelAccess().getEqualsSignKeyword_4_4_1());
            	    								
            	    // InternalXSpice.g:1180:9: ( (lv_temperatureCoefficient2_19_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:1181:10: (lv_temperatureCoefficient2_19_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:1181:10: (lv_temperatureCoefficient2_19_0= RULE_NUMBER )
            	    // InternalXSpice.g:1182:11: lv_temperatureCoefficient2_19_0= RULE_NUMBER
            	    {
            	    lv_temperatureCoefficient2_19_0=(Token)match(input,RULE_NUMBER,FOLLOW_16); 

            	    											newLeafNode(lv_temperatureCoefficient2_19_0, grammarAccess.getResistorModelAccess().getTemperatureCoefficient2NUMBERTerminalRuleCall_4_4_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getResistorModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"temperatureCoefficient2",
            	    												lv_temperatureCoefficient2_19_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getResistorModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalXSpice.g:1204:4: ({...}? => ( ({...}? => (otherlv_20= 'TNOM' otherlv_21= '=' ( (lv_nominalTemperature_22_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:1204:4: ({...}? => ( ({...}? => (otherlv_20= 'TNOM' otherlv_21= '=' ( (lv_nominalTemperature_22_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:1205:5: {...}? => ( ({...}? => (otherlv_20= 'TNOM' otherlv_21= '=' ( (lv_nominalTemperature_22_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getResistorModelAccess().getUnorderedGroup_4(), 5) ) {
            	        throw new FailedPredicateException(input, "ruleResistorModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getResistorModelAccess().getUnorderedGroup_4(), 5)");
            	    }
            	    // InternalXSpice.g:1205:110: ( ({...}? => (otherlv_20= 'TNOM' otherlv_21= '=' ( (lv_nominalTemperature_22_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:1206:6: ({...}? => (otherlv_20= 'TNOM' otherlv_21= '=' ( (lv_nominalTemperature_22_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getResistorModelAccess().getUnorderedGroup_4(), 5);
            	    					
            	    // InternalXSpice.g:1209:9: ({...}? => (otherlv_20= 'TNOM' otherlv_21= '=' ( (lv_nominalTemperature_22_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:1209:10: {...}? => (otherlv_20= 'TNOM' otherlv_21= '=' ( (lv_nominalTemperature_22_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleResistorModel", "true");
            	    }
            	    // InternalXSpice.g:1209:19: (otherlv_20= 'TNOM' otherlv_21= '=' ( (lv_nominalTemperature_22_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:1209:20: otherlv_20= 'TNOM' otherlv_21= '=' ( (lv_nominalTemperature_22_0= RULE_NUMBER ) )
            	    {
            	    otherlv_20=(Token)match(input,51,FOLLOW_11); 

            	    									newLeafNode(otherlv_20, grammarAccess.getResistorModelAccess().getTNOMKeyword_4_5_0());
            	    								
            	    otherlv_21=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_21, grammarAccess.getResistorModelAccess().getEqualsSignKeyword_4_5_1());
            	    								
            	    // InternalXSpice.g:1217:9: ( (lv_nominalTemperature_22_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:1218:10: (lv_nominalTemperature_22_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:1218:10: (lv_nominalTemperature_22_0= RULE_NUMBER )
            	    // InternalXSpice.g:1219:11: lv_nominalTemperature_22_0= RULE_NUMBER
            	    {
            	    lv_nominalTemperature_22_0=(Token)match(input,RULE_NUMBER,FOLLOW_16); 

            	    											newLeafNode(lv_nominalTemperature_22_0, grammarAccess.getResistorModelAccess().getNominalTemperatureNUMBERTerminalRuleCall_4_5_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getResistorModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"nominalTemperature",
            	    												lv_nominalTemperature_22_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getResistorModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt12 >= 1 ) break loop12;
                        EarlyExitException eee =
                            new EarlyExitException(12, input);
                        throw eee;
                }
                cnt12++;
            } while (true);

            if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getResistorModelAccess().getUnorderedGroup_4()) ) {
                throw new FailedPredicateException(input, "ruleResistorModel", "getUnorderedGroupHelper().canLeave(grammarAccess.getResistorModelAccess().getUnorderedGroup_4())");
            }

            }


            }

             
            				  getUnorderedGroupHelper().leave(grammarAccess.getResistorModelAccess().getUnorderedGroup_4());
            				

            }

            otherlv_23=(Token)match(input,52,FOLLOW_2); 

            			newLeafNode(otherlv_23, grammarAccess.getResistorModelAccess().getRightParenthesisKeyword_5());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleResistorModel"


    // $ANTLR start "entryRuleCapacitor"
    // InternalXSpice.g:1257:1: entryRuleCapacitor returns [EObject current=null] : iv_ruleCapacitor= ruleCapacitor EOF ;
    public final EObject entryRuleCapacitor() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCapacitor = null;


        try {
            // InternalXSpice.g:1257:50: (iv_ruleCapacitor= ruleCapacitor EOF )
            // InternalXSpice.g:1258:2: iv_ruleCapacitor= ruleCapacitor EOF
            {
             newCompositeNode(grammarAccess.getCapacitorRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleCapacitor=ruleCapacitor();

            state._fsp--;

             current =iv_ruleCapacitor; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCapacitor"


    // $ANTLR start "ruleCapacitor"
    // InternalXSpice.g:1264:1: ruleCapacitor returns [EObject current=null] : ( ( (lv_name_0_0= RULE_CID ) ) ( (lv_nodes_1_0= RULE_NODE ) ) ( (lv_nodes_2_0= RULE_NODE ) ) ( (lv_capacitance_3_0= RULE_NUMBER ) )? ( (lv_model_4_0= ruleLabel ) )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'L' otherlv_7= '=' ( (lv_length_8_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'W' otherlv_10= '=' ( (lv_width_11_0= RULE_NUMBER ) ) ) ) ) ) )* ) ) ) (otherlv_12= 'IC' otherlv_13= '=' ( (lv_initialCondition_14_0= RULE_NUMBER ) ) )? ) ;
    public final EObject ruleCapacitor() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token lv_nodes_1_0=null;
        Token lv_nodes_2_0=null;
        Token lv_capacitance_3_0=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token lv_length_8_0=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token lv_width_11_0=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token lv_initialCondition_14_0=null;
        AntlrDatatypeRuleToken lv_model_4_0 = null;



        	enterRule();

        try {
            // InternalXSpice.g:1270:2: ( ( ( (lv_name_0_0= RULE_CID ) ) ( (lv_nodes_1_0= RULE_NODE ) ) ( (lv_nodes_2_0= RULE_NODE ) ) ( (lv_capacitance_3_0= RULE_NUMBER ) )? ( (lv_model_4_0= ruleLabel ) )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'L' otherlv_7= '=' ( (lv_length_8_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'W' otherlv_10= '=' ( (lv_width_11_0= RULE_NUMBER ) ) ) ) ) ) )* ) ) ) (otherlv_12= 'IC' otherlv_13= '=' ( (lv_initialCondition_14_0= RULE_NUMBER ) ) )? ) )
            // InternalXSpice.g:1271:2: ( ( (lv_name_0_0= RULE_CID ) ) ( (lv_nodes_1_0= RULE_NODE ) ) ( (lv_nodes_2_0= RULE_NODE ) ) ( (lv_capacitance_3_0= RULE_NUMBER ) )? ( (lv_model_4_0= ruleLabel ) )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'L' otherlv_7= '=' ( (lv_length_8_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'W' otherlv_10= '=' ( (lv_width_11_0= RULE_NUMBER ) ) ) ) ) ) )* ) ) ) (otherlv_12= 'IC' otherlv_13= '=' ( (lv_initialCondition_14_0= RULE_NUMBER ) ) )? )
            {
            // InternalXSpice.g:1271:2: ( ( (lv_name_0_0= RULE_CID ) ) ( (lv_nodes_1_0= RULE_NODE ) ) ( (lv_nodes_2_0= RULE_NODE ) ) ( (lv_capacitance_3_0= RULE_NUMBER ) )? ( (lv_model_4_0= ruleLabel ) )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'L' otherlv_7= '=' ( (lv_length_8_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'W' otherlv_10= '=' ( (lv_width_11_0= RULE_NUMBER ) ) ) ) ) ) )* ) ) ) (otherlv_12= 'IC' otherlv_13= '=' ( (lv_initialCondition_14_0= RULE_NUMBER ) ) )? )
            // InternalXSpice.g:1272:3: ( (lv_name_0_0= RULE_CID ) ) ( (lv_nodes_1_0= RULE_NODE ) ) ( (lv_nodes_2_0= RULE_NODE ) ) ( (lv_capacitance_3_0= RULE_NUMBER ) )? ( (lv_model_4_0= ruleLabel ) )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'L' otherlv_7= '=' ( (lv_length_8_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'W' otherlv_10= '=' ( (lv_width_11_0= RULE_NUMBER ) ) ) ) ) ) )* ) ) ) (otherlv_12= 'IC' otherlv_13= '=' ( (lv_initialCondition_14_0= RULE_NUMBER ) ) )?
            {
            // InternalXSpice.g:1272:3: ( (lv_name_0_0= RULE_CID ) )
            // InternalXSpice.g:1273:4: (lv_name_0_0= RULE_CID )
            {
            // InternalXSpice.g:1273:4: (lv_name_0_0= RULE_CID )
            // InternalXSpice.g:1274:5: lv_name_0_0= RULE_CID
            {
            lv_name_0_0=(Token)match(input,RULE_CID,FOLLOW_5); 

            					newLeafNode(lv_name_0_0, grammarAccess.getCapacitorAccess().getNameCIDTerminalRuleCall_0_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getCapacitorRule());
            					}
            					setWithLastConsumed(
            						current,
            						"name",
            						lv_name_0_0,
            						"com.xtext.ravornyo.xspice.XSpice.CID");
            				

            }


            }

            // InternalXSpice.g:1290:3: ( (lv_nodes_1_0= RULE_NODE ) )
            // InternalXSpice.g:1291:4: (lv_nodes_1_0= RULE_NODE )
            {
            // InternalXSpice.g:1291:4: (lv_nodes_1_0= RULE_NODE )
            // InternalXSpice.g:1292:5: lv_nodes_1_0= RULE_NODE
            {
            lv_nodes_1_0=(Token)match(input,RULE_NODE,FOLLOW_5); 

            					newLeafNode(lv_nodes_1_0, grammarAccess.getCapacitorAccess().getNodesNODETerminalRuleCall_1_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getCapacitorRule());
            					}
            					addWithLastConsumed(
            						current,
            						"nodes",
            						lv_nodes_1_0,
            						"com.xtext.ravornyo.xspice.XSpice.NODE");
            				

            }


            }

            // InternalXSpice.g:1308:3: ( (lv_nodes_2_0= RULE_NODE ) )
            // InternalXSpice.g:1309:4: (lv_nodes_2_0= RULE_NODE )
            {
            // InternalXSpice.g:1309:4: (lv_nodes_2_0= RULE_NODE )
            // InternalXSpice.g:1310:5: lv_nodes_2_0= RULE_NODE
            {
            lv_nodes_2_0=(Token)match(input,RULE_NODE,FOLLOW_17); 

            					newLeafNode(lv_nodes_2_0, grammarAccess.getCapacitorAccess().getNodesNODETerminalRuleCall_2_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getCapacitorRule());
            					}
            					addWithLastConsumed(
            						current,
            						"nodes",
            						lv_nodes_2_0,
            						"com.xtext.ravornyo.xspice.XSpice.NODE");
            				

            }


            }

            // InternalXSpice.g:1326:3: ( (lv_capacitance_3_0= RULE_NUMBER ) )?
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( (LA13_0==RULE_NUMBER) ) {
                alt13=1;
            }
            switch (alt13) {
                case 1 :
                    // InternalXSpice.g:1327:4: (lv_capacitance_3_0= RULE_NUMBER )
                    {
                    // InternalXSpice.g:1327:4: (lv_capacitance_3_0= RULE_NUMBER )
                    // InternalXSpice.g:1328:5: lv_capacitance_3_0= RULE_NUMBER
                    {
                    lv_capacitance_3_0=(Token)match(input,RULE_NUMBER,FOLLOW_18); 

                    					newLeafNode(lv_capacitance_3_0, grammarAccess.getCapacitorAccess().getCapacitanceNUMBERTerminalRuleCall_3_0());
                    				

                    					if (current==null) {
                    						current = createModelElement(grammarAccess.getCapacitorRule());
                    					}
                    					setWithLastConsumed(
                    						current,
                    						"capacitance",
                    						lv_capacitance_3_0,
                    						"com.xtext.ravornyo.xspice.XSpice.NUMBER");
                    				

                    }


                    }
                    break;

            }

            // InternalXSpice.g:1344:3: ( (lv_model_4_0= ruleLabel ) )?
            int alt14=2;
            alt14 = dfa14.predict(input);
            switch (alt14) {
                case 1 :
                    // InternalXSpice.g:1345:4: (lv_model_4_0= ruleLabel )
                    {
                    // InternalXSpice.g:1345:4: (lv_model_4_0= ruleLabel )
                    // InternalXSpice.g:1346:5: lv_model_4_0= ruleLabel
                    {

                    					newCompositeNode(grammarAccess.getCapacitorAccess().getModelLabelParserRuleCall_4_0());
                    				
                    pushFollow(FOLLOW_19);
                    lv_model_4_0=ruleLabel();

                    state._fsp--;


                    					if (current==null) {
                    						current = createModelElementForParent(grammarAccess.getCapacitorRule());
                    					}
                    					set(
                    						current,
                    						"model",
                    						lv_model_4_0,
                    						"com.xtext.ravornyo.xspice.XSpice.Label");
                    					afterParserOrEnumRuleCall();
                    				

                    }


                    }
                    break;

            }

            // InternalXSpice.g:1363:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'L' otherlv_7= '=' ( (lv_length_8_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'W' otherlv_10= '=' ( (lv_width_11_0= RULE_NUMBER ) ) ) ) ) ) )* ) ) )
            // InternalXSpice.g:1364:4: ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'L' otherlv_7= '=' ( (lv_length_8_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'W' otherlv_10= '=' ( (lv_width_11_0= RULE_NUMBER ) ) ) ) ) ) )* ) )
            {
            // InternalXSpice.g:1364:4: ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'L' otherlv_7= '=' ( (lv_length_8_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'W' otherlv_10= '=' ( (lv_width_11_0= RULE_NUMBER ) ) ) ) ) ) )* ) )
            // InternalXSpice.g:1365:5: ( ( ({...}? => ( ({...}? => (otherlv_6= 'L' otherlv_7= '=' ( (lv_length_8_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'W' otherlv_10= '=' ( (lv_width_11_0= RULE_NUMBER ) ) ) ) ) ) )* )
            {
             
            				  getUnorderedGroupHelper().enter(grammarAccess.getCapacitorAccess().getUnorderedGroup_5());
            				
            // InternalXSpice.g:1368:5: ( ( ({...}? => ( ({...}? => (otherlv_6= 'L' otherlv_7= '=' ( (lv_length_8_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'W' otherlv_10= '=' ( (lv_width_11_0= RULE_NUMBER ) ) ) ) ) ) )* )
            // InternalXSpice.g:1369:6: ( ({...}? => ( ({...}? => (otherlv_6= 'L' otherlv_7= '=' ( (lv_length_8_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'W' otherlv_10= '=' ( (lv_width_11_0= RULE_NUMBER ) ) ) ) ) ) )*
            {
            // InternalXSpice.g:1369:6: ( ({...}? => ( ({...}? => (otherlv_6= 'L' otherlv_7= '=' ( (lv_length_8_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'W' otherlv_10= '=' ( (lv_width_11_0= RULE_NUMBER ) ) ) ) ) ) )*
            loop15:
            do {
                int alt15=3;
                int LA15_0 = input.LA(1);

                if ( LA15_0 == 39 && getUnorderedGroupHelper().canSelect(grammarAccess.getCapacitorAccess().getUnorderedGroup_5(), 0) ) {
                    alt15=1;
                }
                else if ( LA15_0 == 41 && getUnorderedGroupHelper().canSelect(grammarAccess.getCapacitorAccess().getUnorderedGroup_5(), 1) ) {
                    alt15=2;
                }


                switch (alt15) {
            	case 1 :
            	    // InternalXSpice.g:1370:4: ({...}? => ( ({...}? => (otherlv_6= 'L' otherlv_7= '=' ( (lv_length_8_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:1370:4: ({...}? => ( ({...}? => (otherlv_6= 'L' otherlv_7= '=' ( (lv_length_8_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:1371:5: {...}? => ( ({...}? => (otherlv_6= 'L' otherlv_7= '=' ( (lv_length_8_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getCapacitorAccess().getUnorderedGroup_5(), 0) ) {
            	        throw new FailedPredicateException(input, "ruleCapacitor", "getUnorderedGroupHelper().canSelect(grammarAccess.getCapacitorAccess().getUnorderedGroup_5(), 0)");
            	    }
            	    // InternalXSpice.g:1371:106: ( ({...}? => (otherlv_6= 'L' otherlv_7= '=' ( (lv_length_8_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:1372:6: ({...}? => (otherlv_6= 'L' otherlv_7= '=' ( (lv_length_8_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getCapacitorAccess().getUnorderedGroup_5(), 0);
            	    					
            	    // InternalXSpice.g:1375:9: ({...}? => (otherlv_6= 'L' otherlv_7= '=' ( (lv_length_8_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:1375:10: {...}? => (otherlv_6= 'L' otherlv_7= '=' ( (lv_length_8_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleCapacitor", "true");
            	    }
            	    // InternalXSpice.g:1375:19: (otherlv_6= 'L' otherlv_7= '=' ( (lv_length_8_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:1375:20: otherlv_6= 'L' otherlv_7= '=' ( (lv_length_8_0= RULE_NUMBER ) )
            	    {
            	    otherlv_6=(Token)match(input,39,FOLLOW_11); 

            	    									newLeafNode(otherlv_6, grammarAccess.getCapacitorAccess().getLKeyword_5_0_0());
            	    								
            	    otherlv_7=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_7, grammarAccess.getCapacitorAccess().getEqualsSignKeyword_5_0_1());
            	    								
            	    // InternalXSpice.g:1383:9: ( (lv_length_8_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:1384:10: (lv_length_8_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:1384:10: (lv_length_8_0= RULE_NUMBER )
            	    // InternalXSpice.g:1385:11: lv_length_8_0= RULE_NUMBER
            	    {
            	    lv_length_8_0=(Token)match(input,RULE_NUMBER,FOLLOW_19); 

            	    											newLeafNode(lv_length_8_0, grammarAccess.getCapacitorAccess().getLengthNUMBERTerminalRuleCall_5_0_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getCapacitorRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"length",
            	    												lv_length_8_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getCapacitorAccess().getUnorderedGroup_5());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalXSpice.g:1407:4: ({...}? => ( ({...}? => (otherlv_9= 'W' otherlv_10= '=' ( (lv_width_11_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:1407:4: ({...}? => ( ({...}? => (otherlv_9= 'W' otherlv_10= '=' ( (lv_width_11_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:1408:5: {...}? => ( ({...}? => (otherlv_9= 'W' otherlv_10= '=' ( (lv_width_11_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getCapacitorAccess().getUnorderedGroup_5(), 1) ) {
            	        throw new FailedPredicateException(input, "ruleCapacitor", "getUnorderedGroupHelper().canSelect(grammarAccess.getCapacitorAccess().getUnorderedGroup_5(), 1)");
            	    }
            	    // InternalXSpice.g:1408:106: ( ({...}? => (otherlv_9= 'W' otherlv_10= '=' ( (lv_width_11_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:1409:6: ({...}? => (otherlv_9= 'W' otherlv_10= '=' ( (lv_width_11_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getCapacitorAccess().getUnorderedGroup_5(), 1);
            	    					
            	    // InternalXSpice.g:1412:9: ({...}? => (otherlv_9= 'W' otherlv_10= '=' ( (lv_width_11_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:1412:10: {...}? => (otherlv_9= 'W' otherlv_10= '=' ( (lv_width_11_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleCapacitor", "true");
            	    }
            	    // InternalXSpice.g:1412:19: (otherlv_9= 'W' otherlv_10= '=' ( (lv_width_11_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:1412:20: otherlv_9= 'W' otherlv_10= '=' ( (lv_width_11_0= RULE_NUMBER ) )
            	    {
            	    otherlv_9=(Token)match(input,41,FOLLOW_11); 

            	    									newLeafNode(otherlv_9, grammarAccess.getCapacitorAccess().getWKeyword_5_1_0());
            	    								
            	    otherlv_10=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_10, grammarAccess.getCapacitorAccess().getEqualsSignKeyword_5_1_1());
            	    								
            	    // InternalXSpice.g:1420:9: ( (lv_width_11_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:1421:10: (lv_width_11_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:1421:10: (lv_width_11_0= RULE_NUMBER )
            	    // InternalXSpice.g:1422:11: lv_width_11_0= RULE_NUMBER
            	    {
            	    lv_width_11_0=(Token)match(input,RULE_NUMBER,FOLLOW_19); 

            	    											newLeafNode(lv_width_11_0, grammarAccess.getCapacitorAccess().getWidthNUMBERTerminalRuleCall_5_1_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getCapacitorRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"width",
            	    												lv_width_11_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getCapacitorAccess().getUnorderedGroup_5());
            	    					

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop15;
                }
            } while (true);


            }


            }

             
            				  getUnorderedGroupHelper().leave(grammarAccess.getCapacitorAccess().getUnorderedGroup_5());
            				

            }

            // InternalXSpice.g:1451:3: (otherlv_12= 'IC' otherlv_13= '=' ( (lv_initialCondition_14_0= RULE_NUMBER ) ) )?
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==53) ) {
                alt16=1;
            }
            switch (alt16) {
                case 1 :
                    // InternalXSpice.g:1452:4: otherlv_12= 'IC' otherlv_13= '=' ( (lv_initialCondition_14_0= RULE_NUMBER ) )
                    {
                    otherlv_12=(Token)match(input,53,FOLLOW_11); 

                    				newLeafNode(otherlv_12, grammarAccess.getCapacitorAccess().getICKeyword_6_0());
                    			
                    otherlv_13=(Token)match(input,40,FOLLOW_12); 

                    				newLeafNode(otherlv_13, grammarAccess.getCapacitorAccess().getEqualsSignKeyword_6_1());
                    			
                    // InternalXSpice.g:1460:4: ( (lv_initialCondition_14_0= RULE_NUMBER ) )
                    // InternalXSpice.g:1461:5: (lv_initialCondition_14_0= RULE_NUMBER )
                    {
                    // InternalXSpice.g:1461:5: (lv_initialCondition_14_0= RULE_NUMBER )
                    // InternalXSpice.g:1462:6: lv_initialCondition_14_0= RULE_NUMBER
                    {
                    lv_initialCondition_14_0=(Token)match(input,RULE_NUMBER,FOLLOW_2); 

                    						newLeafNode(lv_initialCondition_14_0, grammarAccess.getCapacitorAccess().getInitialConditionNUMBERTerminalRuleCall_6_2_0());
                    					

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getCapacitorRule());
                    						}
                    						setWithLastConsumed(
                    							current,
                    							"initialCondition",
                    							lv_initialCondition_14_0,
                    							"com.xtext.ravornyo.xspice.XSpice.NUMBER");
                    					

                    }


                    }


                    }
                    break;

            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCapacitor"


    // $ANTLR start "entryRuleCapacitorModel"
    // InternalXSpice.g:1483:1: entryRuleCapacitorModel returns [EObject current=null] : iv_ruleCapacitorModel= ruleCapacitorModel EOF ;
    public final EObject entryRuleCapacitorModel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCapacitorModel = null;


        try {
            // InternalXSpice.g:1483:55: (iv_ruleCapacitorModel= ruleCapacitorModel EOF )
            // InternalXSpice.g:1484:2: iv_ruleCapacitorModel= ruleCapacitorModel EOF
            {
             newCompositeNode(grammarAccess.getCapacitorModelRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleCapacitorModel=ruleCapacitorModel();

            state._fsp--;

             current =iv_ruleCapacitorModel; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCapacitorModel"


    // $ANTLR start "ruleCapacitorModel"
    // InternalXSpice.g:1490:1: ruleCapacitorModel returns [EObject current=null] : (otherlv_0= '.MODEL' ( (lv_name_1_0= ruleLabel ) ) otherlv_2= 'C' otherlv_3= '(' ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'CJ' otherlv_6= '=' ( (lv_junctionCap_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'CJSW' otherlv_9= '=' ( (lv_junctionCapSidewall_10_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'DEFW' otherlv_12= '=' ( (lv_defaultWidth_13_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'NARROW' otherlv_15= '=' ( (lv_narrow_16_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'TC1' otherlv_18= '=' ( (lv_temperatureCoefficient1_19_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'TC2' otherlv_21= '=' ( (lv_temperatureCoefficient2_22_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'TNOM' otherlv_24= '=' ( (lv_nominalTemperature_25_0= RULE_NUMBER ) ) ) ) ) ) )+ {...}?) ) ) otherlv_26= ')' ) ;
    public final EObject ruleCapacitorModel() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token lv_junctionCap_7_0=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token lv_junctionCapSidewall_10_0=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token lv_defaultWidth_13_0=null;
        Token otherlv_14=null;
        Token otherlv_15=null;
        Token lv_narrow_16_0=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token lv_temperatureCoefficient1_19_0=null;
        Token otherlv_20=null;
        Token otherlv_21=null;
        Token lv_temperatureCoefficient2_22_0=null;
        Token otherlv_23=null;
        Token otherlv_24=null;
        Token lv_nominalTemperature_25_0=null;
        Token otherlv_26=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
            // InternalXSpice.g:1496:2: ( (otherlv_0= '.MODEL' ( (lv_name_1_0= ruleLabel ) ) otherlv_2= 'C' otherlv_3= '(' ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'CJ' otherlv_6= '=' ( (lv_junctionCap_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'CJSW' otherlv_9= '=' ( (lv_junctionCapSidewall_10_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'DEFW' otherlv_12= '=' ( (lv_defaultWidth_13_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'NARROW' otherlv_15= '=' ( (lv_narrow_16_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'TC1' otherlv_18= '=' ( (lv_temperatureCoefficient1_19_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'TC2' otherlv_21= '=' ( (lv_temperatureCoefficient2_22_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'TNOM' otherlv_24= '=' ( (lv_nominalTemperature_25_0= RULE_NUMBER ) ) ) ) ) ) )+ {...}?) ) ) otherlv_26= ')' ) )
            // InternalXSpice.g:1497:2: (otherlv_0= '.MODEL' ( (lv_name_1_0= ruleLabel ) ) otherlv_2= 'C' otherlv_3= '(' ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'CJ' otherlv_6= '=' ( (lv_junctionCap_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'CJSW' otherlv_9= '=' ( (lv_junctionCapSidewall_10_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'DEFW' otherlv_12= '=' ( (lv_defaultWidth_13_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'NARROW' otherlv_15= '=' ( (lv_narrow_16_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'TC1' otherlv_18= '=' ( (lv_temperatureCoefficient1_19_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'TC2' otherlv_21= '=' ( (lv_temperatureCoefficient2_22_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'TNOM' otherlv_24= '=' ( (lv_nominalTemperature_25_0= RULE_NUMBER ) ) ) ) ) ) )+ {...}?) ) ) otherlv_26= ')' )
            {
            // InternalXSpice.g:1497:2: (otherlv_0= '.MODEL' ( (lv_name_1_0= ruleLabel ) ) otherlv_2= 'C' otherlv_3= '(' ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'CJ' otherlv_6= '=' ( (lv_junctionCap_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'CJSW' otherlv_9= '=' ( (lv_junctionCapSidewall_10_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'DEFW' otherlv_12= '=' ( (lv_defaultWidth_13_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'NARROW' otherlv_15= '=' ( (lv_narrow_16_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'TC1' otherlv_18= '=' ( (lv_temperatureCoefficient1_19_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'TC2' otherlv_21= '=' ( (lv_temperatureCoefficient2_22_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'TNOM' otherlv_24= '=' ( (lv_nominalTemperature_25_0= RULE_NUMBER ) ) ) ) ) ) )+ {...}?) ) ) otherlv_26= ')' )
            // InternalXSpice.g:1498:3: otherlv_0= '.MODEL' ( (lv_name_1_0= ruleLabel ) ) otherlv_2= 'C' otherlv_3= '(' ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'CJ' otherlv_6= '=' ( (lv_junctionCap_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'CJSW' otherlv_9= '=' ( (lv_junctionCapSidewall_10_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'DEFW' otherlv_12= '=' ( (lv_defaultWidth_13_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'NARROW' otherlv_15= '=' ( (lv_narrow_16_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'TC1' otherlv_18= '=' ( (lv_temperatureCoefficient1_19_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'TC2' otherlv_21= '=' ( (lv_temperatureCoefficient2_22_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'TNOM' otherlv_24= '=' ( (lv_nominalTemperature_25_0= RULE_NUMBER ) ) ) ) ) ) )+ {...}?) ) ) otherlv_26= ')'
            {
            otherlv_0=(Token)match(input,43,FOLLOW_4); 

            			newLeafNode(otherlv_0, grammarAccess.getCapacitorModelAccess().getMODELKeyword_0());
            		
            // InternalXSpice.g:1502:3: ( (lv_name_1_0= ruleLabel ) )
            // InternalXSpice.g:1503:4: (lv_name_1_0= ruleLabel )
            {
            // InternalXSpice.g:1503:4: (lv_name_1_0= ruleLabel )
            // InternalXSpice.g:1504:5: lv_name_1_0= ruleLabel
            {

            					newCompositeNode(grammarAccess.getCapacitorModelAccess().getNameLabelParserRuleCall_1_0());
            				
            pushFollow(FOLLOW_20);
            lv_name_1_0=ruleLabel();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getCapacitorModelRule());
            					}
            					set(
            						current,
            						"name",
            						lv_name_1_0,
            						"com.xtext.ravornyo.xspice.XSpice.Label");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            otherlv_2=(Token)match(input,54,FOLLOW_14); 

            			newLeafNode(otherlv_2, grammarAccess.getCapacitorModelAccess().getCKeyword_2());
            		
            otherlv_3=(Token)match(input,45,FOLLOW_21); 

            			newLeafNode(otherlv_3, grammarAccess.getCapacitorModelAccess().getLeftParenthesisKeyword_3());
            		
            // InternalXSpice.g:1529:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'CJ' otherlv_6= '=' ( (lv_junctionCap_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'CJSW' otherlv_9= '=' ( (lv_junctionCapSidewall_10_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'DEFW' otherlv_12= '=' ( (lv_defaultWidth_13_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'NARROW' otherlv_15= '=' ( (lv_narrow_16_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'TC1' otherlv_18= '=' ( (lv_temperatureCoefficient1_19_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'TC2' otherlv_21= '=' ( (lv_temperatureCoefficient2_22_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'TNOM' otherlv_24= '=' ( (lv_nominalTemperature_25_0= RULE_NUMBER ) ) ) ) ) ) )+ {...}?) ) )
            // InternalXSpice.g:1530:4: ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'CJ' otherlv_6= '=' ( (lv_junctionCap_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'CJSW' otherlv_9= '=' ( (lv_junctionCapSidewall_10_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'DEFW' otherlv_12= '=' ( (lv_defaultWidth_13_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'NARROW' otherlv_15= '=' ( (lv_narrow_16_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'TC1' otherlv_18= '=' ( (lv_temperatureCoefficient1_19_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'TC2' otherlv_21= '=' ( (lv_temperatureCoefficient2_22_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'TNOM' otherlv_24= '=' ( (lv_nominalTemperature_25_0= RULE_NUMBER ) ) ) ) ) ) )+ {...}?) )
            {
            // InternalXSpice.g:1530:4: ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'CJ' otherlv_6= '=' ( (lv_junctionCap_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'CJSW' otherlv_9= '=' ( (lv_junctionCapSidewall_10_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'DEFW' otherlv_12= '=' ( (lv_defaultWidth_13_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'NARROW' otherlv_15= '=' ( (lv_narrow_16_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'TC1' otherlv_18= '=' ( (lv_temperatureCoefficient1_19_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'TC2' otherlv_21= '=' ( (lv_temperatureCoefficient2_22_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'TNOM' otherlv_24= '=' ( (lv_nominalTemperature_25_0= RULE_NUMBER ) ) ) ) ) ) )+ {...}?) )
            // InternalXSpice.g:1531:5: ( ( ({...}? => ( ({...}? => (otherlv_5= 'CJ' otherlv_6= '=' ( (lv_junctionCap_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'CJSW' otherlv_9= '=' ( (lv_junctionCapSidewall_10_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'DEFW' otherlv_12= '=' ( (lv_defaultWidth_13_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'NARROW' otherlv_15= '=' ( (lv_narrow_16_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'TC1' otherlv_18= '=' ( (lv_temperatureCoefficient1_19_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'TC2' otherlv_21= '=' ( (lv_temperatureCoefficient2_22_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'TNOM' otherlv_24= '=' ( (lv_nominalTemperature_25_0= RULE_NUMBER ) ) ) ) ) ) )+ {...}?)
            {
             
            				  getUnorderedGroupHelper().enter(grammarAccess.getCapacitorModelAccess().getUnorderedGroup_4());
            				
            // InternalXSpice.g:1534:5: ( ( ({...}? => ( ({...}? => (otherlv_5= 'CJ' otherlv_6= '=' ( (lv_junctionCap_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'CJSW' otherlv_9= '=' ( (lv_junctionCapSidewall_10_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'DEFW' otherlv_12= '=' ( (lv_defaultWidth_13_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'NARROW' otherlv_15= '=' ( (lv_narrow_16_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'TC1' otherlv_18= '=' ( (lv_temperatureCoefficient1_19_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'TC2' otherlv_21= '=' ( (lv_temperatureCoefficient2_22_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'TNOM' otherlv_24= '=' ( (lv_nominalTemperature_25_0= RULE_NUMBER ) ) ) ) ) ) )+ {...}?)
            // InternalXSpice.g:1535:6: ( ({...}? => ( ({...}? => (otherlv_5= 'CJ' otherlv_6= '=' ( (lv_junctionCap_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'CJSW' otherlv_9= '=' ( (lv_junctionCapSidewall_10_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'DEFW' otherlv_12= '=' ( (lv_defaultWidth_13_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'NARROW' otherlv_15= '=' ( (lv_narrow_16_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'TC1' otherlv_18= '=' ( (lv_temperatureCoefficient1_19_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'TC2' otherlv_21= '=' ( (lv_temperatureCoefficient2_22_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'TNOM' otherlv_24= '=' ( (lv_nominalTemperature_25_0= RULE_NUMBER ) ) ) ) ) ) )+ {...}?
            {
            // InternalXSpice.g:1535:6: ( ({...}? => ( ({...}? => (otherlv_5= 'CJ' otherlv_6= '=' ( (lv_junctionCap_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'CJSW' otherlv_9= '=' ( (lv_junctionCapSidewall_10_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'DEFW' otherlv_12= '=' ( (lv_defaultWidth_13_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'NARROW' otherlv_15= '=' ( (lv_narrow_16_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'TC1' otherlv_18= '=' ( (lv_temperatureCoefficient1_19_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'TC2' otherlv_21= '=' ( (lv_temperatureCoefficient2_22_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'TNOM' otherlv_24= '=' ( (lv_nominalTemperature_25_0= RULE_NUMBER ) ) ) ) ) ) )+
            int cnt17=0;
            loop17:
            do {
                int alt17=8;
                int LA17_0 = input.LA(1);

                if ( LA17_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getCapacitorModelAccess().getUnorderedGroup_4(), 0) ) {
                    alt17=1;
                }
                else if ( LA17_0 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getCapacitorModelAccess().getUnorderedGroup_4(), 1) ) {
                    alt17=2;
                }
                else if ( LA17_0 == 47 && getUnorderedGroupHelper().canSelect(grammarAccess.getCapacitorModelAccess().getUnorderedGroup_4(), 2) ) {
                    alt17=3;
                }
                else if ( LA17_0 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getCapacitorModelAccess().getUnorderedGroup_4(), 3) ) {
                    alt17=4;
                }
                else if ( LA17_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getCapacitorModelAccess().getUnorderedGroup_4(), 4) ) {
                    alt17=5;
                }
                else if ( LA17_0 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getCapacitorModelAccess().getUnorderedGroup_4(), 5) ) {
                    alt17=6;
                }
                else if ( LA17_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getCapacitorModelAccess().getUnorderedGroup_4(), 6) ) {
                    alt17=7;
                }


                switch (alt17) {
            	case 1 :
            	    // InternalXSpice.g:1536:4: ({...}? => ( ({...}? => (otherlv_5= 'CJ' otherlv_6= '=' ( (lv_junctionCap_7_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:1536:4: ({...}? => ( ({...}? => (otherlv_5= 'CJ' otherlv_6= '=' ( (lv_junctionCap_7_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:1537:5: {...}? => ( ({...}? => (otherlv_5= 'CJ' otherlv_6= '=' ( (lv_junctionCap_7_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getCapacitorModelAccess().getUnorderedGroup_4(), 0) ) {
            	        throw new FailedPredicateException(input, "ruleCapacitorModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getCapacitorModelAccess().getUnorderedGroup_4(), 0)");
            	    }
            	    // InternalXSpice.g:1537:111: ( ({...}? => (otherlv_5= 'CJ' otherlv_6= '=' ( (lv_junctionCap_7_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:1538:6: ({...}? => (otherlv_5= 'CJ' otherlv_6= '=' ( (lv_junctionCap_7_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getCapacitorModelAccess().getUnorderedGroup_4(), 0);
            	    					
            	    // InternalXSpice.g:1541:9: ({...}? => (otherlv_5= 'CJ' otherlv_6= '=' ( (lv_junctionCap_7_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:1541:10: {...}? => (otherlv_5= 'CJ' otherlv_6= '=' ( (lv_junctionCap_7_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleCapacitorModel", "true");
            	    }
            	    // InternalXSpice.g:1541:19: (otherlv_5= 'CJ' otherlv_6= '=' ( (lv_junctionCap_7_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:1541:20: otherlv_5= 'CJ' otherlv_6= '=' ( (lv_junctionCap_7_0= RULE_NUMBER ) )
            	    {
            	    otherlv_5=(Token)match(input,55,FOLLOW_11); 

            	    									newLeafNode(otherlv_5, grammarAccess.getCapacitorModelAccess().getCJKeyword_4_0_0());
            	    								
            	    otherlv_6=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_6, grammarAccess.getCapacitorModelAccess().getEqualsSignKeyword_4_0_1());
            	    								
            	    // InternalXSpice.g:1549:9: ( (lv_junctionCap_7_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:1550:10: (lv_junctionCap_7_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:1550:10: (lv_junctionCap_7_0= RULE_NUMBER )
            	    // InternalXSpice.g:1551:11: lv_junctionCap_7_0= RULE_NUMBER
            	    {
            	    lv_junctionCap_7_0=(Token)match(input,RULE_NUMBER,FOLLOW_22); 

            	    											newLeafNode(lv_junctionCap_7_0, grammarAccess.getCapacitorModelAccess().getJunctionCapNUMBERTerminalRuleCall_4_0_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getCapacitorModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"junctionCap",
            	    												lv_junctionCap_7_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getCapacitorModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalXSpice.g:1573:4: ({...}? => ( ({...}? => (otherlv_8= 'CJSW' otherlv_9= '=' ( (lv_junctionCapSidewall_10_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:1573:4: ({...}? => ( ({...}? => (otherlv_8= 'CJSW' otherlv_9= '=' ( (lv_junctionCapSidewall_10_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:1574:5: {...}? => ( ({...}? => (otherlv_8= 'CJSW' otherlv_9= '=' ( (lv_junctionCapSidewall_10_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getCapacitorModelAccess().getUnorderedGroup_4(), 1) ) {
            	        throw new FailedPredicateException(input, "ruleCapacitorModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getCapacitorModelAccess().getUnorderedGroup_4(), 1)");
            	    }
            	    // InternalXSpice.g:1574:111: ( ({...}? => (otherlv_8= 'CJSW' otherlv_9= '=' ( (lv_junctionCapSidewall_10_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:1575:6: ({...}? => (otherlv_8= 'CJSW' otherlv_9= '=' ( (lv_junctionCapSidewall_10_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getCapacitorModelAccess().getUnorderedGroup_4(), 1);
            	    					
            	    // InternalXSpice.g:1578:9: ({...}? => (otherlv_8= 'CJSW' otherlv_9= '=' ( (lv_junctionCapSidewall_10_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:1578:10: {...}? => (otherlv_8= 'CJSW' otherlv_9= '=' ( (lv_junctionCapSidewall_10_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleCapacitorModel", "true");
            	    }
            	    // InternalXSpice.g:1578:19: (otherlv_8= 'CJSW' otherlv_9= '=' ( (lv_junctionCapSidewall_10_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:1578:20: otherlv_8= 'CJSW' otherlv_9= '=' ( (lv_junctionCapSidewall_10_0= RULE_NUMBER ) )
            	    {
            	    otherlv_8=(Token)match(input,56,FOLLOW_11); 

            	    									newLeafNode(otherlv_8, grammarAccess.getCapacitorModelAccess().getCJSWKeyword_4_1_0());
            	    								
            	    otherlv_9=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_9, grammarAccess.getCapacitorModelAccess().getEqualsSignKeyword_4_1_1());
            	    								
            	    // InternalXSpice.g:1586:9: ( (lv_junctionCapSidewall_10_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:1587:10: (lv_junctionCapSidewall_10_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:1587:10: (lv_junctionCapSidewall_10_0= RULE_NUMBER )
            	    // InternalXSpice.g:1588:11: lv_junctionCapSidewall_10_0= RULE_NUMBER
            	    {
            	    lv_junctionCapSidewall_10_0=(Token)match(input,RULE_NUMBER,FOLLOW_22); 

            	    											newLeafNode(lv_junctionCapSidewall_10_0, grammarAccess.getCapacitorModelAccess().getJunctionCapSidewallNUMBERTerminalRuleCall_4_1_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getCapacitorModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"junctionCapSidewall",
            	    												lv_junctionCapSidewall_10_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getCapacitorModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalXSpice.g:1610:4: ({...}? => ( ({...}? => (otherlv_11= 'DEFW' otherlv_12= '=' ( (lv_defaultWidth_13_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:1610:4: ({...}? => ( ({...}? => (otherlv_11= 'DEFW' otherlv_12= '=' ( (lv_defaultWidth_13_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:1611:5: {...}? => ( ({...}? => (otherlv_11= 'DEFW' otherlv_12= '=' ( (lv_defaultWidth_13_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getCapacitorModelAccess().getUnorderedGroup_4(), 2) ) {
            	        throw new FailedPredicateException(input, "ruleCapacitorModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getCapacitorModelAccess().getUnorderedGroup_4(), 2)");
            	    }
            	    // InternalXSpice.g:1611:111: ( ({...}? => (otherlv_11= 'DEFW' otherlv_12= '=' ( (lv_defaultWidth_13_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:1612:6: ({...}? => (otherlv_11= 'DEFW' otherlv_12= '=' ( (lv_defaultWidth_13_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getCapacitorModelAccess().getUnorderedGroup_4(), 2);
            	    					
            	    // InternalXSpice.g:1615:9: ({...}? => (otherlv_11= 'DEFW' otherlv_12= '=' ( (lv_defaultWidth_13_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:1615:10: {...}? => (otherlv_11= 'DEFW' otherlv_12= '=' ( (lv_defaultWidth_13_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleCapacitorModel", "true");
            	    }
            	    // InternalXSpice.g:1615:19: (otherlv_11= 'DEFW' otherlv_12= '=' ( (lv_defaultWidth_13_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:1615:20: otherlv_11= 'DEFW' otherlv_12= '=' ( (lv_defaultWidth_13_0= RULE_NUMBER ) )
            	    {
            	    otherlv_11=(Token)match(input,47,FOLLOW_11); 

            	    									newLeafNode(otherlv_11, grammarAccess.getCapacitorModelAccess().getDEFWKeyword_4_2_0());
            	    								
            	    otherlv_12=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_12, grammarAccess.getCapacitorModelAccess().getEqualsSignKeyword_4_2_1());
            	    								
            	    // InternalXSpice.g:1623:9: ( (lv_defaultWidth_13_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:1624:10: (lv_defaultWidth_13_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:1624:10: (lv_defaultWidth_13_0= RULE_NUMBER )
            	    // InternalXSpice.g:1625:11: lv_defaultWidth_13_0= RULE_NUMBER
            	    {
            	    lv_defaultWidth_13_0=(Token)match(input,RULE_NUMBER,FOLLOW_22); 

            	    											newLeafNode(lv_defaultWidth_13_0, grammarAccess.getCapacitorModelAccess().getDefaultWidthNUMBERTerminalRuleCall_4_2_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getCapacitorModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"defaultWidth",
            	    												lv_defaultWidth_13_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getCapacitorModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalXSpice.g:1647:4: ({...}? => ( ({...}? => (otherlv_14= 'NARROW' otherlv_15= '=' ( (lv_narrow_16_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:1647:4: ({...}? => ( ({...}? => (otherlv_14= 'NARROW' otherlv_15= '=' ( (lv_narrow_16_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:1648:5: {...}? => ( ({...}? => (otherlv_14= 'NARROW' otherlv_15= '=' ( (lv_narrow_16_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getCapacitorModelAccess().getUnorderedGroup_4(), 3) ) {
            	        throw new FailedPredicateException(input, "ruleCapacitorModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getCapacitorModelAccess().getUnorderedGroup_4(), 3)");
            	    }
            	    // InternalXSpice.g:1648:111: ( ({...}? => (otherlv_14= 'NARROW' otherlv_15= '=' ( (lv_narrow_16_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:1649:6: ({...}? => (otherlv_14= 'NARROW' otherlv_15= '=' ( (lv_narrow_16_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getCapacitorModelAccess().getUnorderedGroup_4(), 3);
            	    					
            	    // InternalXSpice.g:1652:9: ({...}? => (otherlv_14= 'NARROW' otherlv_15= '=' ( (lv_narrow_16_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:1652:10: {...}? => (otherlv_14= 'NARROW' otherlv_15= '=' ( (lv_narrow_16_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleCapacitorModel", "true");
            	    }
            	    // InternalXSpice.g:1652:19: (otherlv_14= 'NARROW' otherlv_15= '=' ( (lv_narrow_16_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:1652:20: otherlv_14= 'NARROW' otherlv_15= '=' ( (lv_narrow_16_0= RULE_NUMBER ) )
            	    {
            	    otherlv_14=(Token)match(input,48,FOLLOW_11); 

            	    									newLeafNode(otherlv_14, grammarAccess.getCapacitorModelAccess().getNARROWKeyword_4_3_0());
            	    								
            	    otherlv_15=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_15, grammarAccess.getCapacitorModelAccess().getEqualsSignKeyword_4_3_1());
            	    								
            	    // InternalXSpice.g:1660:9: ( (lv_narrow_16_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:1661:10: (lv_narrow_16_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:1661:10: (lv_narrow_16_0= RULE_NUMBER )
            	    // InternalXSpice.g:1662:11: lv_narrow_16_0= RULE_NUMBER
            	    {
            	    lv_narrow_16_0=(Token)match(input,RULE_NUMBER,FOLLOW_22); 

            	    											newLeafNode(lv_narrow_16_0, grammarAccess.getCapacitorModelAccess().getNarrowNUMBERTerminalRuleCall_4_3_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getCapacitorModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"narrow",
            	    												lv_narrow_16_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getCapacitorModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalXSpice.g:1684:4: ({...}? => ( ({...}? => (otherlv_17= 'TC1' otherlv_18= '=' ( (lv_temperatureCoefficient1_19_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:1684:4: ({...}? => ( ({...}? => (otherlv_17= 'TC1' otherlv_18= '=' ( (lv_temperatureCoefficient1_19_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:1685:5: {...}? => ( ({...}? => (otherlv_17= 'TC1' otherlv_18= '=' ( (lv_temperatureCoefficient1_19_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getCapacitorModelAccess().getUnorderedGroup_4(), 4) ) {
            	        throw new FailedPredicateException(input, "ruleCapacitorModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getCapacitorModelAccess().getUnorderedGroup_4(), 4)");
            	    }
            	    // InternalXSpice.g:1685:111: ( ({...}? => (otherlv_17= 'TC1' otherlv_18= '=' ( (lv_temperatureCoefficient1_19_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:1686:6: ({...}? => (otherlv_17= 'TC1' otherlv_18= '=' ( (lv_temperatureCoefficient1_19_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getCapacitorModelAccess().getUnorderedGroup_4(), 4);
            	    					
            	    // InternalXSpice.g:1689:9: ({...}? => (otherlv_17= 'TC1' otherlv_18= '=' ( (lv_temperatureCoefficient1_19_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:1689:10: {...}? => (otherlv_17= 'TC1' otherlv_18= '=' ( (lv_temperatureCoefficient1_19_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleCapacitorModel", "true");
            	    }
            	    // InternalXSpice.g:1689:19: (otherlv_17= 'TC1' otherlv_18= '=' ( (lv_temperatureCoefficient1_19_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:1689:20: otherlv_17= 'TC1' otherlv_18= '=' ( (lv_temperatureCoefficient1_19_0= RULE_NUMBER ) )
            	    {
            	    otherlv_17=(Token)match(input,49,FOLLOW_11); 

            	    									newLeafNode(otherlv_17, grammarAccess.getCapacitorModelAccess().getTC1Keyword_4_4_0());
            	    								
            	    otherlv_18=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_18, grammarAccess.getCapacitorModelAccess().getEqualsSignKeyword_4_4_1());
            	    								
            	    // InternalXSpice.g:1697:9: ( (lv_temperatureCoefficient1_19_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:1698:10: (lv_temperatureCoefficient1_19_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:1698:10: (lv_temperatureCoefficient1_19_0= RULE_NUMBER )
            	    // InternalXSpice.g:1699:11: lv_temperatureCoefficient1_19_0= RULE_NUMBER
            	    {
            	    lv_temperatureCoefficient1_19_0=(Token)match(input,RULE_NUMBER,FOLLOW_22); 

            	    											newLeafNode(lv_temperatureCoefficient1_19_0, grammarAccess.getCapacitorModelAccess().getTemperatureCoefficient1NUMBERTerminalRuleCall_4_4_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getCapacitorModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"temperatureCoefficient1",
            	    												lv_temperatureCoefficient1_19_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getCapacitorModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalXSpice.g:1721:4: ({...}? => ( ({...}? => (otherlv_20= 'TC2' otherlv_21= '=' ( (lv_temperatureCoefficient2_22_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:1721:4: ({...}? => ( ({...}? => (otherlv_20= 'TC2' otherlv_21= '=' ( (lv_temperatureCoefficient2_22_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:1722:5: {...}? => ( ({...}? => (otherlv_20= 'TC2' otherlv_21= '=' ( (lv_temperatureCoefficient2_22_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getCapacitorModelAccess().getUnorderedGroup_4(), 5) ) {
            	        throw new FailedPredicateException(input, "ruleCapacitorModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getCapacitorModelAccess().getUnorderedGroup_4(), 5)");
            	    }
            	    // InternalXSpice.g:1722:111: ( ({...}? => (otherlv_20= 'TC2' otherlv_21= '=' ( (lv_temperatureCoefficient2_22_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:1723:6: ({...}? => (otherlv_20= 'TC2' otherlv_21= '=' ( (lv_temperatureCoefficient2_22_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getCapacitorModelAccess().getUnorderedGroup_4(), 5);
            	    					
            	    // InternalXSpice.g:1726:9: ({...}? => (otherlv_20= 'TC2' otherlv_21= '=' ( (lv_temperatureCoefficient2_22_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:1726:10: {...}? => (otherlv_20= 'TC2' otherlv_21= '=' ( (lv_temperatureCoefficient2_22_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleCapacitorModel", "true");
            	    }
            	    // InternalXSpice.g:1726:19: (otherlv_20= 'TC2' otherlv_21= '=' ( (lv_temperatureCoefficient2_22_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:1726:20: otherlv_20= 'TC2' otherlv_21= '=' ( (lv_temperatureCoefficient2_22_0= RULE_NUMBER ) )
            	    {
            	    otherlv_20=(Token)match(input,50,FOLLOW_11); 

            	    									newLeafNode(otherlv_20, grammarAccess.getCapacitorModelAccess().getTC2Keyword_4_5_0());
            	    								
            	    otherlv_21=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_21, grammarAccess.getCapacitorModelAccess().getEqualsSignKeyword_4_5_1());
            	    								
            	    // InternalXSpice.g:1734:9: ( (lv_temperatureCoefficient2_22_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:1735:10: (lv_temperatureCoefficient2_22_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:1735:10: (lv_temperatureCoefficient2_22_0= RULE_NUMBER )
            	    // InternalXSpice.g:1736:11: lv_temperatureCoefficient2_22_0= RULE_NUMBER
            	    {
            	    lv_temperatureCoefficient2_22_0=(Token)match(input,RULE_NUMBER,FOLLOW_22); 

            	    											newLeafNode(lv_temperatureCoefficient2_22_0, grammarAccess.getCapacitorModelAccess().getTemperatureCoefficient2NUMBERTerminalRuleCall_4_5_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getCapacitorModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"temperatureCoefficient2",
            	    												lv_temperatureCoefficient2_22_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getCapacitorModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // InternalXSpice.g:1758:4: ({...}? => ( ({...}? => (otherlv_23= 'TNOM' otherlv_24= '=' ( (lv_nominalTemperature_25_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:1758:4: ({...}? => ( ({...}? => (otherlv_23= 'TNOM' otherlv_24= '=' ( (lv_nominalTemperature_25_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:1759:5: {...}? => ( ({...}? => (otherlv_23= 'TNOM' otherlv_24= '=' ( (lv_nominalTemperature_25_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getCapacitorModelAccess().getUnorderedGroup_4(), 6) ) {
            	        throw new FailedPredicateException(input, "ruleCapacitorModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getCapacitorModelAccess().getUnorderedGroup_4(), 6)");
            	    }
            	    // InternalXSpice.g:1759:111: ( ({...}? => (otherlv_23= 'TNOM' otherlv_24= '=' ( (lv_nominalTemperature_25_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:1760:6: ({...}? => (otherlv_23= 'TNOM' otherlv_24= '=' ( (lv_nominalTemperature_25_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getCapacitorModelAccess().getUnorderedGroup_4(), 6);
            	    					
            	    // InternalXSpice.g:1763:9: ({...}? => (otherlv_23= 'TNOM' otherlv_24= '=' ( (lv_nominalTemperature_25_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:1763:10: {...}? => (otherlv_23= 'TNOM' otherlv_24= '=' ( (lv_nominalTemperature_25_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleCapacitorModel", "true");
            	    }
            	    // InternalXSpice.g:1763:19: (otherlv_23= 'TNOM' otherlv_24= '=' ( (lv_nominalTemperature_25_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:1763:20: otherlv_23= 'TNOM' otherlv_24= '=' ( (lv_nominalTemperature_25_0= RULE_NUMBER ) )
            	    {
            	    otherlv_23=(Token)match(input,51,FOLLOW_11); 

            	    									newLeafNode(otherlv_23, grammarAccess.getCapacitorModelAccess().getTNOMKeyword_4_6_0());
            	    								
            	    otherlv_24=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_24, grammarAccess.getCapacitorModelAccess().getEqualsSignKeyword_4_6_1());
            	    								
            	    // InternalXSpice.g:1771:9: ( (lv_nominalTemperature_25_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:1772:10: (lv_nominalTemperature_25_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:1772:10: (lv_nominalTemperature_25_0= RULE_NUMBER )
            	    // InternalXSpice.g:1773:11: lv_nominalTemperature_25_0= RULE_NUMBER
            	    {
            	    lv_nominalTemperature_25_0=(Token)match(input,RULE_NUMBER,FOLLOW_22); 

            	    											newLeafNode(lv_nominalTemperature_25_0, grammarAccess.getCapacitorModelAccess().getNominalTemperatureNUMBERTerminalRuleCall_4_6_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getCapacitorModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"nominalTemperature",
            	    												lv_nominalTemperature_25_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getCapacitorModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt17 >= 1 ) break loop17;
                        EarlyExitException eee =
                            new EarlyExitException(17, input);
                        throw eee;
                }
                cnt17++;
            } while (true);

            if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getCapacitorModelAccess().getUnorderedGroup_4()) ) {
                throw new FailedPredicateException(input, "ruleCapacitorModel", "getUnorderedGroupHelper().canLeave(grammarAccess.getCapacitorModelAccess().getUnorderedGroup_4())");
            }

            }


            }

             
            				  getUnorderedGroupHelper().leave(grammarAccess.getCapacitorModelAccess().getUnorderedGroup_4());
            				

            }

            otherlv_26=(Token)match(input,52,FOLLOW_2); 

            			newLeafNode(otherlv_26, grammarAccess.getCapacitorModelAccess().getRightParenthesisKeyword_5());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCapacitorModel"


    // $ANTLR start "entryRuleInductor"
    // InternalXSpice.g:1811:1: entryRuleInductor returns [EObject current=null] : iv_ruleInductor= ruleInductor EOF ;
    public final EObject entryRuleInductor() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInductor = null;


        try {
            // InternalXSpice.g:1811:49: (iv_ruleInductor= ruleInductor EOF )
            // InternalXSpice.g:1812:2: iv_ruleInductor= ruleInductor EOF
            {
             newCompositeNode(grammarAccess.getInductorRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleInductor=ruleInductor();

            state._fsp--;

             current =iv_ruleInductor; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInductor"


    // $ANTLR start "ruleInductor"
    // InternalXSpice.g:1818:1: ruleInductor returns [EObject current=null] : ( ( (lv_name_0_0= RULE_LID ) ) ( (lv_nodes_1_0= RULE_NODE ) ) ( (lv_nodes_2_0= RULE_NODE ) ) ( (lv_inductance_3_0= RULE_NUMBER ) ) (otherlv_4= 'IC' otherlv_5= '=' ( (lv_initialCondition_6_0= RULE_NUMBER ) ) )? ) ;
    public final EObject ruleInductor() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token lv_nodes_1_0=null;
        Token lv_nodes_2_0=null;
        Token lv_inductance_3_0=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token lv_initialCondition_6_0=null;


        	enterRule();

        try {
            // InternalXSpice.g:1824:2: ( ( ( (lv_name_0_0= RULE_LID ) ) ( (lv_nodes_1_0= RULE_NODE ) ) ( (lv_nodes_2_0= RULE_NODE ) ) ( (lv_inductance_3_0= RULE_NUMBER ) ) (otherlv_4= 'IC' otherlv_5= '=' ( (lv_initialCondition_6_0= RULE_NUMBER ) ) )? ) )
            // InternalXSpice.g:1825:2: ( ( (lv_name_0_0= RULE_LID ) ) ( (lv_nodes_1_0= RULE_NODE ) ) ( (lv_nodes_2_0= RULE_NODE ) ) ( (lv_inductance_3_0= RULE_NUMBER ) ) (otherlv_4= 'IC' otherlv_5= '=' ( (lv_initialCondition_6_0= RULE_NUMBER ) ) )? )
            {
            // InternalXSpice.g:1825:2: ( ( (lv_name_0_0= RULE_LID ) ) ( (lv_nodes_1_0= RULE_NODE ) ) ( (lv_nodes_2_0= RULE_NODE ) ) ( (lv_inductance_3_0= RULE_NUMBER ) ) (otherlv_4= 'IC' otherlv_5= '=' ( (lv_initialCondition_6_0= RULE_NUMBER ) ) )? )
            // InternalXSpice.g:1826:3: ( (lv_name_0_0= RULE_LID ) ) ( (lv_nodes_1_0= RULE_NODE ) ) ( (lv_nodes_2_0= RULE_NODE ) ) ( (lv_inductance_3_0= RULE_NUMBER ) ) (otherlv_4= 'IC' otherlv_5= '=' ( (lv_initialCondition_6_0= RULE_NUMBER ) ) )?
            {
            // InternalXSpice.g:1826:3: ( (lv_name_0_0= RULE_LID ) )
            // InternalXSpice.g:1827:4: (lv_name_0_0= RULE_LID )
            {
            // InternalXSpice.g:1827:4: (lv_name_0_0= RULE_LID )
            // InternalXSpice.g:1828:5: lv_name_0_0= RULE_LID
            {
            lv_name_0_0=(Token)match(input,RULE_LID,FOLLOW_5); 

            					newLeafNode(lv_name_0_0, grammarAccess.getInductorAccess().getNameLIDTerminalRuleCall_0_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getInductorRule());
            					}
            					setWithLastConsumed(
            						current,
            						"name",
            						lv_name_0_0,
            						"com.xtext.ravornyo.xspice.XSpice.LID");
            				

            }


            }

            // InternalXSpice.g:1844:3: ( (lv_nodes_1_0= RULE_NODE ) )
            // InternalXSpice.g:1845:4: (lv_nodes_1_0= RULE_NODE )
            {
            // InternalXSpice.g:1845:4: (lv_nodes_1_0= RULE_NODE )
            // InternalXSpice.g:1846:5: lv_nodes_1_0= RULE_NODE
            {
            lv_nodes_1_0=(Token)match(input,RULE_NODE,FOLLOW_5); 

            					newLeafNode(lv_nodes_1_0, grammarAccess.getInductorAccess().getNodesNODETerminalRuleCall_1_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getInductorRule());
            					}
            					addWithLastConsumed(
            						current,
            						"nodes",
            						lv_nodes_1_0,
            						"com.xtext.ravornyo.xspice.XSpice.NODE");
            				

            }


            }

            // InternalXSpice.g:1862:3: ( (lv_nodes_2_0= RULE_NODE ) )
            // InternalXSpice.g:1863:4: (lv_nodes_2_0= RULE_NODE )
            {
            // InternalXSpice.g:1863:4: (lv_nodes_2_0= RULE_NODE )
            // InternalXSpice.g:1864:5: lv_nodes_2_0= RULE_NODE
            {
            lv_nodes_2_0=(Token)match(input,RULE_NODE,FOLLOW_12); 

            					newLeafNode(lv_nodes_2_0, grammarAccess.getInductorAccess().getNodesNODETerminalRuleCall_2_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getInductorRule());
            					}
            					addWithLastConsumed(
            						current,
            						"nodes",
            						lv_nodes_2_0,
            						"com.xtext.ravornyo.xspice.XSpice.NODE");
            				

            }


            }

            // InternalXSpice.g:1880:3: ( (lv_inductance_3_0= RULE_NUMBER ) )
            // InternalXSpice.g:1881:4: (lv_inductance_3_0= RULE_NUMBER )
            {
            // InternalXSpice.g:1881:4: (lv_inductance_3_0= RULE_NUMBER )
            // InternalXSpice.g:1882:5: lv_inductance_3_0= RULE_NUMBER
            {
            lv_inductance_3_0=(Token)match(input,RULE_NUMBER,FOLLOW_23); 

            					newLeafNode(lv_inductance_3_0, grammarAccess.getInductorAccess().getInductanceNUMBERTerminalRuleCall_3_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getInductorRule());
            					}
            					setWithLastConsumed(
            						current,
            						"inductance",
            						lv_inductance_3_0,
            						"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            				

            }


            }

            // InternalXSpice.g:1898:3: (otherlv_4= 'IC' otherlv_5= '=' ( (lv_initialCondition_6_0= RULE_NUMBER ) ) )?
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==53) ) {
                alt18=1;
            }
            switch (alt18) {
                case 1 :
                    // InternalXSpice.g:1899:4: otherlv_4= 'IC' otherlv_5= '=' ( (lv_initialCondition_6_0= RULE_NUMBER ) )
                    {
                    otherlv_4=(Token)match(input,53,FOLLOW_11); 

                    				newLeafNode(otherlv_4, grammarAccess.getInductorAccess().getICKeyword_4_0());
                    			
                    otherlv_5=(Token)match(input,40,FOLLOW_12); 

                    				newLeafNode(otherlv_5, grammarAccess.getInductorAccess().getEqualsSignKeyword_4_1());
                    			
                    // InternalXSpice.g:1907:4: ( (lv_initialCondition_6_0= RULE_NUMBER ) )
                    // InternalXSpice.g:1908:5: (lv_initialCondition_6_0= RULE_NUMBER )
                    {
                    // InternalXSpice.g:1908:5: (lv_initialCondition_6_0= RULE_NUMBER )
                    // InternalXSpice.g:1909:6: lv_initialCondition_6_0= RULE_NUMBER
                    {
                    lv_initialCondition_6_0=(Token)match(input,RULE_NUMBER,FOLLOW_2); 

                    						newLeafNode(lv_initialCondition_6_0, grammarAccess.getInductorAccess().getInitialConditionNUMBERTerminalRuleCall_4_2_0());
                    					

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getInductorRule());
                    						}
                    						setWithLastConsumed(
                    							current,
                    							"initialCondition",
                    							lv_initialCondition_6_0,
                    							"com.xtext.ravornyo.xspice.XSpice.NUMBER");
                    					

                    }


                    }


                    }
                    break;

            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInductor"


    // $ANTLR start "entryRuleMutualInductance"
    // InternalXSpice.g:1930:1: entryRuleMutualInductance returns [EObject current=null] : iv_ruleMutualInductance= ruleMutualInductance EOF ;
    public final EObject entryRuleMutualInductance() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMutualInductance = null;


        try {
            // InternalXSpice.g:1930:57: (iv_ruleMutualInductance= ruleMutualInductance EOF )
            // InternalXSpice.g:1931:2: iv_ruleMutualInductance= ruleMutualInductance EOF
            {
             newCompositeNode(grammarAccess.getMutualInductanceRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleMutualInductance=ruleMutualInductance();

            state._fsp--;

             current =iv_ruleMutualInductance; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMutualInductance"


    // $ANTLR start "ruleMutualInductance"
    // InternalXSpice.g:1937:1: ruleMutualInductance returns [EObject current=null] : ( ( (lv_name_0_0= RULE_KID ) ) ( (lv_inductor1_1_0= RULE_LID ) ) ( (lv_inductor2_2_0= RULE_LID ) ) ( (lv_coupling_3_0= RULE_NUMBER ) ) ) ;
    public final EObject ruleMutualInductance() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token lv_inductor1_1_0=null;
        Token lv_inductor2_2_0=null;
        Token lv_coupling_3_0=null;


        	enterRule();

        try {
            // InternalXSpice.g:1943:2: ( ( ( (lv_name_0_0= RULE_KID ) ) ( (lv_inductor1_1_0= RULE_LID ) ) ( (lv_inductor2_2_0= RULE_LID ) ) ( (lv_coupling_3_0= RULE_NUMBER ) ) ) )
            // InternalXSpice.g:1944:2: ( ( (lv_name_0_0= RULE_KID ) ) ( (lv_inductor1_1_0= RULE_LID ) ) ( (lv_inductor2_2_0= RULE_LID ) ) ( (lv_coupling_3_0= RULE_NUMBER ) ) )
            {
            // InternalXSpice.g:1944:2: ( ( (lv_name_0_0= RULE_KID ) ) ( (lv_inductor1_1_0= RULE_LID ) ) ( (lv_inductor2_2_0= RULE_LID ) ) ( (lv_coupling_3_0= RULE_NUMBER ) ) )
            // InternalXSpice.g:1945:3: ( (lv_name_0_0= RULE_KID ) ) ( (lv_inductor1_1_0= RULE_LID ) ) ( (lv_inductor2_2_0= RULE_LID ) ) ( (lv_coupling_3_0= RULE_NUMBER ) )
            {
            // InternalXSpice.g:1945:3: ( (lv_name_0_0= RULE_KID ) )
            // InternalXSpice.g:1946:4: (lv_name_0_0= RULE_KID )
            {
            // InternalXSpice.g:1946:4: (lv_name_0_0= RULE_KID )
            // InternalXSpice.g:1947:5: lv_name_0_0= RULE_KID
            {
            lv_name_0_0=(Token)match(input,RULE_KID,FOLLOW_24); 

            					newLeafNode(lv_name_0_0, grammarAccess.getMutualInductanceAccess().getNameKIDTerminalRuleCall_0_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getMutualInductanceRule());
            					}
            					setWithLastConsumed(
            						current,
            						"name",
            						lv_name_0_0,
            						"com.xtext.ravornyo.xspice.XSpice.KID");
            				

            }


            }

            // InternalXSpice.g:1963:3: ( (lv_inductor1_1_0= RULE_LID ) )
            // InternalXSpice.g:1964:4: (lv_inductor1_1_0= RULE_LID )
            {
            // InternalXSpice.g:1964:4: (lv_inductor1_1_0= RULE_LID )
            // InternalXSpice.g:1965:5: lv_inductor1_1_0= RULE_LID
            {
            lv_inductor1_1_0=(Token)match(input,RULE_LID,FOLLOW_24); 

            					newLeafNode(lv_inductor1_1_0, grammarAccess.getMutualInductanceAccess().getInductor1LIDTerminalRuleCall_1_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getMutualInductanceRule());
            					}
            					setWithLastConsumed(
            						current,
            						"inductor1",
            						lv_inductor1_1_0,
            						"com.xtext.ravornyo.xspice.XSpice.LID");
            				

            }


            }

            // InternalXSpice.g:1981:3: ( (lv_inductor2_2_0= RULE_LID ) )
            // InternalXSpice.g:1982:4: (lv_inductor2_2_0= RULE_LID )
            {
            // InternalXSpice.g:1982:4: (lv_inductor2_2_0= RULE_LID )
            // InternalXSpice.g:1983:5: lv_inductor2_2_0= RULE_LID
            {
            lv_inductor2_2_0=(Token)match(input,RULE_LID,FOLLOW_12); 

            					newLeafNode(lv_inductor2_2_0, grammarAccess.getMutualInductanceAccess().getInductor2LIDTerminalRuleCall_2_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getMutualInductanceRule());
            					}
            					setWithLastConsumed(
            						current,
            						"inductor2",
            						lv_inductor2_2_0,
            						"com.xtext.ravornyo.xspice.XSpice.LID");
            				

            }


            }

            // InternalXSpice.g:1999:3: ( (lv_coupling_3_0= RULE_NUMBER ) )
            // InternalXSpice.g:2000:4: (lv_coupling_3_0= RULE_NUMBER )
            {
            // InternalXSpice.g:2000:4: (lv_coupling_3_0= RULE_NUMBER )
            // InternalXSpice.g:2001:5: lv_coupling_3_0= RULE_NUMBER
            {
            lv_coupling_3_0=(Token)match(input,RULE_NUMBER,FOLLOW_2); 

            					newLeafNode(lv_coupling_3_0, grammarAccess.getMutualInductanceAccess().getCouplingNUMBERTerminalRuleCall_3_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getMutualInductanceRule());
            					}
            					setWithLastConsumed(
            						current,
            						"coupling",
            						lv_coupling_3_0,
            						"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            				

            }


            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMutualInductance"


    // $ANTLR start "entryRuleVoltageSwitch"
    // InternalXSpice.g:2021:1: entryRuleVoltageSwitch returns [EObject current=null] : iv_ruleVoltageSwitch= ruleVoltageSwitch EOF ;
    public final EObject entryRuleVoltageSwitch() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVoltageSwitch = null;


        try {
            // InternalXSpice.g:2021:54: (iv_ruleVoltageSwitch= ruleVoltageSwitch EOF )
            // InternalXSpice.g:2022:2: iv_ruleVoltageSwitch= ruleVoltageSwitch EOF
            {
             newCompositeNode(grammarAccess.getVoltageSwitchRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleVoltageSwitch=ruleVoltageSwitch();

            state._fsp--;

             current =iv_ruleVoltageSwitch; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVoltageSwitch"


    // $ANTLR start "ruleVoltageSwitch"
    // InternalXSpice.g:2028:1: ruleVoltageSwitch returns [EObject current=null] : ( ( (lv_name_0_0= RULE_SID ) ) ( (lv_nodes_1_0= RULE_NODE ) ) ( (lv_nodes_2_0= RULE_NODE ) ) ( (lv_nodes_3_0= RULE_NODE ) ) ( (lv_nodes_4_0= RULE_NODE ) ) ( (lv_model_5_0= ruleLabel ) ) ( ( (lv_zeroState_6_0= 'ON' ) ) | otherlv_7= 'OFF' )? ) ;
    public final EObject ruleVoltageSwitch() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token lv_nodes_1_0=null;
        Token lv_nodes_2_0=null;
        Token lv_nodes_3_0=null;
        Token lv_nodes_4_0=null;
        Token lv_zeroState_6_0=null;
        Token otherlv_7=null;
        AntlrDatatypeRuleToken lv_model_5_0 = null;



        	enterRule();

        try {
            // InternalXSpice.g:2034:2: ( ( ( (lv_name_0_0= RULE_SID ) ) ( (lv_nodes_1_0= RULE_NODE ) ) ( (lv_nodes_2_0= RULE_NODE ) ) ( (lv_nodes_3_0= RULE_NODE ) ) ( (lv_nodes_4_0= RULE_NODE ) ) ( (lv_model_5_0= ruleLabel ) ) ( ( (lv_zeroState_6_0= 'ON' ) ) | otherlv_7= 'OFF' )? ) )
            // InternalXSpice.g:2035:2: ( ( (lv_name_0_0= RULE_SID ) ) ( (lv_nodes_1_0= RULE_NODE ) ) ( (lv_nodes_2_0= RULE_NODE ) ) ( (lv_nodes_3_0= RULE_NODE ) ) ( (lv_nodes_4_0= RULE_NODE ) ) ( (lv_model_5_0= ruleLabel ) ) ( ( (lv_zeroState_6_0= 'ON' ) ) | otherlv_7= 'OFF' )? )
            {
            // InternalXSpice.g:2035:2: ( ( (lv_name_0_0= RULE_SID ) ) ( (lv_nodes_1_0= RULE_NODE ) ) ( (lv_nodes_2_0= RULE_NODE ) ) ( (lv_nodes_3_0= RULE_NODE ) ) ( (lv_nodes_4_0= RULE_NODE ) ) ( (lv_model_5_0= ruleLabel ) ) ( ( (lv_zeroState_6_0= 'ON' ) ) | otherlv_7= 'OFF' )? )
            // InternalXSpice.g:2036:3: ( (lv_name_0_0= RULE_SID ) ) ( (lv_nodes_1_0= RULE_NODE ) ) ( (lv_nodes_2_0= RULE_NODE ) ) ( (lv_nodes_3_0= RULE_NODE ) ) ( (lv_nodes_4_0= RULE_NODE ) ) ( (lv_model_5_0= ruleLabel ) ) ( ( (lv_zeroState_6_0= 'ON' ) ) | otherlv_7= 'OFF' )?
            {
            // InternalXSpice.g:2036:3: ( (lv_name_0_0= RULE_SID ) )
            // InternalXSpice.g:2037:4: (lv_name_0_0= RULE_SID )
            {
            // InternalXSpice.g:2037:4: (lv_name_0_0= RULE_SID )
            // InternalXSpice.g:2038:5: lv_name_0_0= RULE_SID
            {
            lv_name_0_0=(Token)match(input,RULE_SID,FOLLOW_5); 

            					newLeafNode(lv_name_0_0, grammarAccess.getVoltageSwitchAccess().getNameSIDTerminalRuleCall_0_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getVoltageSwitchRule());
            					}
            					setWithLastConsumed(
            						current,
            						"name",
            						lv_name_0_0,
            						"com.xtext.ravornyo.xspice.XSpice.SID");
            				

            }


            }

            // InternalXSpice.g:2054:3: ( (lv_nodes_1_0= RULE_NODE ) )
            // InternalXSpice.g:2055:4: (lv_nodes_1_0= RULE_NODE )
            {
            // InternalXSpice.g:2055:4: (lv_nodes_1_0= RULE_NODE )
            // InternalXSpice.g:2056:5: lv_nodes_1_0= RULE_NODE
            {
            lv_nodes_1_0=(Token)match(input,RULE_NODE,FOLLOW_5); 

            					newLeafNode(lv_nodes_1_0, grammarAccess.getVoltageSwitchAccess().getNodesNODETerminalRuleCall_1_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getVoltageSwitchRule());
            					}
            					addWithLastConsumed(
            						current,
            						"nodes",
            						lv_nodes_1_0,
            						"com.xtext.ravornyo.xspice.XSpice.NODE");
            				

            }


            }

            // InternalXSpice.g:2072:3: ( (lv_nodes_2_0= RULE_NODE ) )
            // InternalXSpice.g:2073:4: (lv_nodes_2_0= RULE_NODE )
            {
            // InternalXSpice.g:2073:4: (lv_nodes_2_0= RULE_NODE )
            // InternalXSpice.g:2074:5: lv_nodes_2_0= RULE_NODE
            {
            lv_nodes_2_0=(Token)match(input,RULE_NODE,FOLLOW_5); 

            					newLeafNode(lv_nodes_2_0, grammarAccess.getVoltageSwitchAccess().getNodesNODETerminalRuleCall_2_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getVoltageSwitchRule());
            					}
            					addWithLastConsumed(
            						current,
            						"nodes",
            						lv_nodes_2_0,
            						"com.xtext.ravornyo.xspice.XSpice.NODE");
            				

            }


            }

            // InternalXSpice.g:2090:3: ( (lv_nodes_3_0= RULE_NODE ) )
            // InternalXSpice.g:2091:4: (lv_nodes_3_0= RULE_NODE )
            {
            // InternalXSpice.g:2091:4: (lv_nodes_3_0= RULE_NODE )
            // InternalXSpice.g:2092:5: lv_nodes_3_0= RULE_NODE
            {
            lv_nodes_3_0=(Token)match(input,RULE_NODE,FOLLOW_5); 

            					newLeafNode(lv_nodes_3_0, grammarAccess.getVoltageSwitchAccess().getNodesNODETerminalRuleCall_3_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getVoltageSwitchRule());
            					}
            					addWithLastConsumed(
            						current,
            						"nodes",
            						lv_nodes_3_0,
            						"com.xtext.ravornyo.xspice.XSpice.NODE");
            				

            }


            }

            // InternalXSpice.g:2108:3: ( (lv_nodes_4_0= RULE_NODE ) )
            // InternalXSpice.g:2109:4: (lv_nodes_4_0= RULE_NODE )
            {
            // InternalXSpice.g:2109:4: (lv_nodes_4_0= RULE_NODE )
            // InternalXSpice.g:2110:5: lv_nodes_4_0= RULE_NODE
            {
            lv_nodes_4_0=(Token)match(input,RULE_NODE,FOLLOW_4); 

            					newLeafNode(lv_nodes_4_0, grammarAccess.getVoltageSwitchAccess().getNodesNODETerminalRuleCall_4_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getVoltageSwitchRule());
            					}
            					addWithLastConsumed(
            						current,
            						"nodes",
            						lv_nodes_4_0,
            						"com.xtext.ravornyo.xspice.XSpice.NODE");
            				

            }


            }

            // InternalXSpice.g:2126:3: ( (lv_model_5_0= ruleLabel ) )
            // InternalXSpice.g:2127:4: (lv_model_5_0= ruleLabel )
            {
            // InternalXSpice.g:2127:4: (lv_model_5_0= ruleLabel )
            // InternalXSpice.g:2128:5: lv_model_5_0= ruleLabel
            {

            					newCompositeNode(grammarAccess.getVoltageSwitchAccess().getModelLabelParserRuleCall_5_0());
            				
            pushFollow(FOLLOW_25);
            lv_model_5_0=ruleLabel();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getVoltageSwitchRule());
            					}
            					set(
            						current,
            						"model",
            						lv_model_5_0,
            						"com.xtext.ravornyo.xspice.XSpice.Label");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            // InternalXSpice.g:2145:3: ( ( (lv_zeroState_6_0= 'ON' ) ) | otherlv_7= 'OFF' )?
            int alt19=3;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==57) ) {
                alt19=1;
            }
            else if ( (LA19_0==58) ) {
                alt19=2;
            }
            switch (alt19) {
                case 1 :
                    // InternalXSpice.g:2146:4: ( (lv_zeroState_6_0= 'ON' ) )
                    {
                    // InternalXSpice.g:2146:4: ( (lv_zeroState_6_0= 'ON' ) )
                    // InternalXSpice.g:2147:5: (lv_zeroState_6_0= 'ON' )
                    {
                    // InternalXSpice.g:2147:5: (lv_zeroState_6_0= 'ON' )
                    // InternalXSpice.g:2148:6: lv_zeroState_6_0= 'ON'
                    {
                    lv_zeroState_6_0=(Token)match(input,57,FOLLOW_2); 

                    						newLeafNode(lv_zeroState_6_0, grammarAccess.getVoltageSwitchAccess().getZeroStateONKeyword_6_0_0());
                    					

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getVoltageSwitchRule());
                    						}
                    						setWithLastConsumed(current, "zeroState", true, "ON");
                    					

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalXSpice.g:2161:4: otherlv_7= 'OFF'
                    {
                    otherlv_7=(Token)match(input,58,FOLLOW_2); 

                    				newLeafNode(otherlv_7, grammarAccess.getVoltageSwitchAccess().getOFFKeyword_6_1());
                    			

                    }
                    break;

            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVoltageSwitch"


    // $ANTLR start "entryRuleVoltageSwitchModel"
    // InternalXSpice.g:2170:1: entryRuleVoltageSwitchModel returns [EObject current=null] : iv_ruleVoltageSwitchModel= ruleVoltageSwitchModel EOF ;
    public final EObject entryRuleVoltageSwitchModel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVoltageSwitchModel = null;


        try {
            // InternalXSpice.g:2170:59: (iv_ruleVoltageSwitchModel= ruleVoltageSwitchModel EOF )
            // InternalXSpice.g:2171:2: iv_ruleVoltageSwitchModel= ruleVoltageSwitchModel EOF
            {
             newCompositeNode(grammarAccess.getVoltageSwitchModelRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleVoltageSwitchModel=ruleVoltageSwitchModel();

            state._fsp--;

             current =iv_ruleVoltageSwitchModel; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVoltageSwitchModel"


    // $ANTLR start "ruleVoltageSwitchModel"
    // InternalXSpice.g:2177:1: ruleVoltageSwitchModel returns [EObject current=null] : (otherlv_0= '.MODEL' ( (lv_name_1_0= ruleLabel ) ) otherlv_2= 'SW' otherlv_3= '(' ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'VT' otherlv_6= '=' ( (lv_threshold_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'VH' otherlv_9= '=' ( (lv_hysteresis_10_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'RON' otherlv_12= '=' ( (lv_onResistance_13_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'ROFF' otherlv_15= '=' ( (lv_offResistance_16_0= RULE_NUMBER ) ) ) ) ) ) )+ {...}?) ) ) otherlv_17= ')' ) ;
    public final EObject ruleVoltageSwitchModel() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token lv_threshold_7_0=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token lv_hysteresis_10_0=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token lv_onResistance_13_0=null;
        Token otherlv_14=null;
        Token otherlv_15=null;
        Token lv_offResistance_16_0=null;
        Token otherlv_17=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
            // InternalXSpice.g:2183:2: ( (otherlv_0= '.MODEL' ( (lv_name_1_0= ruleLabel ) ) otherlv_2= 'SW' otherlv_3= '(' ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'VT' otherlv_6= '=' ( (lv_threshold_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'VH' otherlv_9= '=' ( (lv_hysteresis_10_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'RON' otherlv_12= '=' ( (lv_onResistance_13_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'ROFF' otherlv_15= '=' ( (lv_offResistance_16_0= RULE_NUMBER ) ) ) ) ) ) )+ {...}?) ) ) otherlv_17= ')' ) )
            // InternalXSpice.g:2184:2: (otherlv_0= '.MODEL' ( (lv_name_1_0= ruleLabel ) ) otherlv_2= 'SW' otherlv_3= '(' ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'VT' otherlv_6= '=' ( (lv_threshold_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'VH' otherlv_9= '=' ( (lv_hysteresis_10_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'RON' otherlv_12= '=' ( (lv_onResistance_13_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'ROFF' otherlv_15= '=' ( (lv_offResistance_16_0= RULE_NUMBER ) ) ) ) ) ) )+ {...}?) ) ) otherlv_17= ')' )
            {
            // InternalXSpice.g:2184:2: (otherlv_0= '.MODEL' ( (lv_name_1_0= ruleLabel ) ) otherlv_2= 'SW' otherlv_3= '(' ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'VT' otherlv_6= '=' ( (lv_threshold_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'VH' otherlv_9= '=' ( (lv_hysteresis_10_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'RON' otherlv_12= '=' ( (lv_onResistance_13_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'ROFF' otherlv_15= '=' ( (lv_offResistance_16_0= RULE_NUMBER ) ) ) ) ) ) )+ {...}?) ) ) otherlv_17= ')' )
            // InternalXSpice.g:2185:3: otherlv_0= '.MODEL' ( (lv_name_1_0= ruleLabel ) ) otherlv_2= 'SW' otherlv_3= '(' ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'VT' otherlv_6= '=' ( (lv_threshold_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'VH' otherlv_9= '=' ( (lv_hysteresis_10_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'RON' otherlv_12= '=' ( (lv_onResistance_13_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'ROFF' otherlv_15= '=' ( (lv_offResistance_16_0= RULE_NUMBER ) ) ) ) ) ) )+ {...}?) ) ) otherlv_17= ')'
            {
            otherlv_0=(Token)match(input,43,FOLLOW_4); 

            			newLeafNode(otherlv_0, grammarAccess.getVoltageSwitchModelAccess().getMODELKeyword_0());
            		
            // InternalXSpice.g:2189:3: ( (lv_name_1_0= ruleLabel ) )
            // InternalXSpice.g:2190:4: (lv_name_1_0= ruleLabel )
            {
            // InternalXSpice.g:2190:4: (lv_name_1_0= ruleLabel )
            // InternalXSpice.g:2191:5: lv_name_1_0= ruleLabel
            {

            					newCompositeNode(grammarAccess.getVoltageSwitchModelAccess().getNameLabelParserRuleCall_1_0());
            				
            pushFollow(FOLLOW_26);
            lv_name_1_0=ruleLabel();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getVoltageSwitchModelRule());
            					}
            					set(
            						current,
            						"name",
            						lv_name_1_0,
            						"com.xtext.ravornyo.xspice.XSpice.Label");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            otherlv_2=(Token)match(input,59,FOLLOW_14); 

            			newLeafNode(otherlv_2, grammarAccess.getVoltageSwitchModelAccess().getSWKeyword_2());
            		
            otherlv_3=(Token)match(input,45,FOLLOW_27); 

            			newLeafNode(otherlv_3, grammarAccess.getVoltageSwitchModelAccess().getLeftParenthesisKeyword_3());
            		
            // InternalXSpice.g:2216:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'VT' otherlv_6= '=' ( (lv_threshold_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'VH' otherlv_9= '=' ( (lv_hysteresis_10_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'RON' otherlv_12= '=' ( (lv_onResistance_13_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'ROFF' otherlv_15= '=' ( (lv_offResistance_16_0= RULE_NUMBER ) ) ) ) ) ) )+ {...}?) ) )
            // InternalXSpice.g:2217:4: ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'VT' otherlv_6= '=' ( (lv_threshold_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'VH' otherlv_9= '=' ( (lv_hysteresis_10_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'RON' otherlv_12= '=' ( (lv_onResistance_13_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'ROFF' otherlv_15= '=' ( (lv_offResistance_16_0= RULE_NUMBER ) ) ) ) ) ) )+ {...}?) )
            {
            // InternalXSpice.g:2217:4: ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'VT' otherlv_6= '=' ( (lv_threshold_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'VH' otherlv_9= '=' ( (lv_hysteresis_10_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'RON' otherlv_12= '=' ( (lv_onResistance_13_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'ROFF' otherlv_15= '=' ( (lv_offResistance_16_0= RULE_NUMBER ) ) ) ) ) ) )+ {...}?) )
            // InternalXSpice.g:2218:5: ( ( ({...}? => ( ({...}? => (otherlv_5= 'VT' otherlv_6= '=' ( (lv_threshold_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'VH' otherlv_9= '=' ( (lv_hysteresis_10_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'RON' otherlv_12= '=' ( (lv_onResistance_13_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'ROFF' otherlv_15= '=' ( (lv_offResistance_16_0= RULE_NUMBER ) ) ) ) ) ) )+ {...}?)
            {
             
            				  getUnorderedGroupHelper().enter(grammarAccess.getVoltageSwitchModelAccess().getUnorderedGroup_4());
            				
            // InternalXSpice.g:2221:5: ( ( ({...}? => ( ({...}? => (otherlv_5= 'VT' otherlv_6= '=' ( (lv_threshold_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'VH' otherlv_9= '=' ( (lv_hysteresis_10_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'RON' otherlv_12= '=' ( (lv_onResistance_13_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'ROFF' otherlv_15= '=' ( (lv_offResistance_16_0= RULE_NUMBER ) ) ) ) ) ) )+ {...}?)
            // InternalXSpice.g:2222:6: ( ({...}? => ( ({...}? => (otherlv_5= 'VT' otherlv_6= '=' ( (lv_threshold_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'VH' otherlv_9= '=' ( (lv_hysteresis_10_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'RON' otherlv_12= '=' ( (lv_onResistance_13_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'ROFF' otherlv_15= '=' ( (lv_offResistance_16_0= RULE_NUMBER ) ) ) ) ) ) )+ {...}?
            {
            // InternalXSpice.g:2222:6: ( ({...}? => ( ({...}? => (otherlv_5= 'VT' otherlv_6= '=' ( (lv_threshold_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'VH' otherlv_9= '=' ( (lv_hysteresis_10_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'RON' otherlv_12= '=' ( (lv_onResistance_13_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'ROFF' otherlv_15= '=' ( (lv_offResistance_16_0= RULE_NUMBER ) ) ) ) ) ) )+
            int cnt20=0;
            loop20:
            do {
                int alt20=5;
                int LA20_0 = input.LA(1);

                if ( LA20_0 == 60 && getUnorderedGroupHelper().canSelect(grammarAccess.getVoltageSwitchModelAccess().getUnorderedGroup_4(), 0) ) {
                    alt20=1;
                }
                else if ( LA20_0 == 61 && getUnorderedGroupHelper().canSelect(grammarAccess.getVoltageSwitchModelAccess().getUnorderedGroup_4(), 1) ) {
                    alt20=2;
                }
                else if ( LA20_0 == 62 && getUnorderedGroupHelper().canSelect(grammarAccess.getVoltageSwitchModelAccess().getUnorderedGroup_4(), 2) ) {
                    alt20=3;
                }
                else if ( LA20_0 == 63 && getUnorderedGroupHelper().canSelect(grammarAccess.getVoltageSwitchModelAccess().getUnorderedGroup_4(), 3) ) {
                    alt20=4;
                }


                switch (alt20) {
            	case 1 :
            	    // InternalXSpice.g:2223:4: ({...}? => ( ({...}? => (otherlv_5= 'VT' otherlv_6= '=' ( (lv_threshold_7_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:2223:4: ({...}? => ( ({...}? => (otherlv_5= 'VT' otherlv_6= '=' ( (lv_threshold_7_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:2224:5: {...}? => ( ({...}? => (otherlv_5= 'VT' otherlv_6= '=' ( (lv_threshold_7_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getVoltageSwitchModelAccess().getUnorderedGroup_4(), 0) ) {
            	        throw new FailedPredicateException(input, "ruleVoltageSwitchModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getVoltageSwitchModelAccess().getUnorderedGroup_4(), 0)");
            	    }
            	    // InternalXSpice.g:2224:115: ( ({...}? => (otherlv_5= 'VT' otherlv_6= '=' ( (lv_threshold_7_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:2225:6: ({...}? => (otherlv_5= 'VT' otherlv_6= '=' ( (lv_threshold_7_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getVoltageSwitchModelAccess().getUnorderedGroup_4(), 0);
            	    					
            	    // InternalXSpice.g:2228:9: ({...}? => (otherlv_5= 'VT' otherlv_6= '=' ( (lv_threshold_7_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:2228:10: {...}? => (otherlv_5= 'VT' otherlv_6= '=' ( (lv_threshold_7_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleVoltageSwitchModel", "true");
            	    }
            	    // InternalXSpice.g:2228:19: (otherlv_5= 'VT' otherlv_6= '=' ( (lv_threshold_7_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:2228:20: otherlv_5= 'VT' otherlv_6= '=' ( (lv_threshold_7_0= RULE_NUMBER ) )
            	    {
            	    otherlv_5=(Token)match(input,60,FOLLOW_11); 

            	    									newLeafNode(otherlv_5, grammarAccess.getVoltageSwitchModelAccess().getVTKeyword_4_0_0());
            	    								
            	    otherlv_6=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_6, grammarAccess.getVoltageSwitchModelAccess().getEqualsSignKeyword_4_0_1());
            	    								
            	    // InternalXSpice.g:2236:9: ( (lv_threshold_7_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:2237:10: (lv_threshold_7_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:2237:10: (lv_threshold_7_0= RULE_NUMBER )
            	    // InternalXSpice.g:2238:11: lv_threshold_7_0= RULE_NUMBER
            	    {
            	    lv_threshold_7_0=(Token)match(input,RULE_NUMBER,FOLLOW_28); 

            	    											newLeafNode(lv_threshold_7_0, grammarAccess.getVoltageSwitchModelAccess().getThresholdNUMBERTerminalRuleCall_4_0_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getVoltageSwitchModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"threshold",
            	    												lv_threshold_7_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getVoltageSwitchModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalXSpice.g:2260:4: ({...}? => ( ({...}? => (otherlv_8= 'VH' otherlv_9= '=' ( (lv_hysteresis_10_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:2260:4: ({...}? => ( ({...}? => (otherlv_8= 'VH' otherlv_9= '=' ( (lv_hysteresis_10_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:2261:5: {...}? => ( ({...}? => (otherlv_8= 'VH' otherlv_9= '=' ( (lv_hysteresis_10_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getVoltageSwitchModelAccess().getUnorderedGroup_4(), 1) ) {
            	        throw new FailedPredicateException(input, "ruleVoltageSwitchModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getVoltageSwitchModelAccess().getUnorderedGroup_4(), 1)");
            	    }
            	    // InternalXSpice.g:2261:115: ( ({...}? => (otherlv_8= 'VH' otherlv_9= '=' ( (lv_hysteresis_10_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:2262:6: ({...}? => (otherlv_8= 'VH' otherlv_9= '=' ( (lv_hysteresis_10_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getVoltageSwitchModelAccess().getUnorderedGroup_4(), 1);
            	    					
            	    // InternalXSpice.g:2265:9: ({...}? => (otherlv_8= 'VH' otherlv_9= '=' ( (lv_hysteresis_10_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:2265:10: {...}? => (otherlv_8= 'VH' otherlv_9= '=' ( (lv_hysteresis_10_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleVoltageSwitchModel", "true");
            	    }
            	    // InternalXSpice.g:2265:19: (otherlv_8= 'VH' otherlv_9= '=' ( (lv_hysteresis_10_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:2265:20: otherlv_8= 'VH' otherlv_9= '=' ( (lv_hysteresis_10_0= RULE_NUMBER ) )
            	    {
            	    otherlv_8=(Token)match(input,61,FOLLOW_11); 

            	    									newLeafNode(otherlv_8, grammarAccess.getVoltageSwitchModelAccess().getVHKeyword_4_1_0());
            	    								
            	    otherlv_9=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_9, grammarAccess.getVoltageSwitchModelAccess().getEqualsSignKeyword_4_1_1());
            	    								
            	    // InternalXSpice.g:2273:9: ( (lv_hysteresis_10_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:2274:10: (lv_hysteresis_10_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:2274:10: (lv_hysteresis_10_0= RULE_NUMBER )
            	    // InternalXSpice.g:2275:11: lv_hysteresis_10_0= RULE_NUMBER
            	    {
            	    lv_hysteresis_10_0=(Token)match(input,RULE_NUMBER,FOLLOW_28); 

            	    											newLeafNode(lv_hysteresis_10_0, grammarAccess.getVoltageSwitchModelAccess().getHysteresisNUMBERTerminalRuleCall_4_1_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getVoltageSwitchModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"hysteresis",
            	    												lv_hysteresis_10_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getVoltageSwitchModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalXSpice.g:2297:4: ({...}? => ( ({...}? => (otherlv_11= 'RON' otherlv_12= '=' ( (lv_onResistance_13_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:2297:4: ({...}? => ( ({...}? => (otherlv_11= 'RON' otherlv_12= '=' ( (lv_onResistance_13_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:2298:5: {...}? => ( ({...}? => (otherlv_11= 'RON' otherlv_12= '=' ( (lv_onResistance_13_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getVoltageSwitchModelAccess().getUnorderedGroup_4(), 2) ) {
            	        throw new FailedPredicateException(input, "ruleVoltageSwitchModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getVoltageSwitchModelAccess().getUnorderedGroup_4(), 2)");
            	    }
            	    // InternalXSpice.g:2298:115: ( ({...}? => (otherlv_11= 'RON' otherlv_12= '=' ( (lv_onResistance_13_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:2299:6: ({...}? => (otherlv_11= 'RON' otherlv_12= '=' ( (lv_onResistance_13_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getVoltageSwitchModelAccess().getUnorderedGroup_4(), 2);
            	    					
            	    // InternalXSpice.g:2302:9: ({...}? => (otherlv_11= 'RON' otherlv_12= '=' ( (lv_onResistance_13_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:2302:10: {...}? => (otherlv_11= 'RON' otherlv_12= '=' ( (lv_onResistance_13_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleVoltageSwitchModel", "true");
            	    }
            	    // InternalXSpice.g:2302:19: (otherlv_11= 'RON' otherlv_12= '=' ( (lv_onResistance_13_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:2302:20: otherlv_11= 'RON' otherlv_12= '=' ( (lv_onResistance_13_0= RULE_NUMBER ) )
            	    {
            	    otherlv_11=(Token)match(input,62,FOLLOW_11); 

            	    									newLeafNode(otherlv_11, grammarAccess.getVoltageSwitchModelAccess().getRONKeyword_4_2_0());
            	    								
            	    otherlv_12=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_12, grammarAccess.getVoltageSwitchModelAccess().getEqualsSignKeyword_4_2_1());
            	    								
            	    // InternalXSpice.g:2310:9: ( (lv_onResistance_13_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:2311:10: (lv_onResistance_13_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:2311:10: (lv_onResistance_13_0= RULE_NUMBER )
            	    // InternalXSpice.g:2312:11: lv_onResistance_13_0= RULE_NUMBER
            	    {
            	    lv_onResistance_13_0=(Token)match(input,RULE_NUMBER,FOLLOW_28); 

            	    											newLeafNode(lv_onResistance_13_0, grammarAccess.getVoltageSwitchModelAccess().getOnResistanceNUMBERTerminalRuleCall_4_2_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getVoltageSwitchModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"onResistance",
            	    												lv_onResistance_13_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getVoltageSwitchModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalXSpice.g:2334:4: ({...}? => ( ({...}? => (otherlv_14= 'ROFF' otherlv_15= '=' ( (lv_offResistance_16_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:2334:4: ({...}? => ( ({...}? => (otherlv_14= 'ROFF' otherlv_15= '=' ( (lv_offResistance_16_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:2335:5: {...}? => ( ({...}? => (otherlv_14= 'ROFF' otherlv_15= '=' ( (lv_offResistance_16_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getVoltageSwitchModelAccess().getUnorderedGroup_4(), 3) ) {
            	        throw new FailedPredicateException(input, "ruleVoltageSwitchModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getVoltageSwitchModelAccess().getUnorderedGroup_4(), 3)");
            	    }
            	    // InternalXSpice.g:2335:115: ( ({...}? => (otherlv_14= 'ROFF' otherlv_15= '=' ( (lv_offResistance_16_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:2336:6: ({...}? => (otherlv_14= 'ROFF' otherlv_15= '=' ( (lv_offResistance_16_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getVoltageSwitchModelAccess().getUnorderedGroup_4(), 3);
            	    					
            	    // InternalXSpice.g:2339:9: ({...}? => (otherlv_14= 'ROFF' otherlv_15= '=' ( (lv_offResistance_16_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:2339:10: {...}? => (otherlv_14= 'ROFF' otherlv_15= '=' ( (lv_offResistance_16_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleVoltageSwitchModel", "true");
            	    }
            	    // InternalXSpice.g:2339:19: (otherlv_14= 'ROFF' otherlv_15= '=' ( (lv_offResistance_16_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:2339:20: otherlv_14= 'ROFF' otherlv_15= '=' ( (lv_offResistance_16_0= RULE_NUMBER ) )
            	    {
            	    otherlv_14=(Token)match(input,63,FOLLOW_11); 

            	    									newLeafNode(otherlv_14, grammarAccess.getVoltageSwitchModelAccess().getROFFKeyword_4_3_0());
            	    								
            	    otherlv_15=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_15, grammarAccess.getVoltageSwitchModelAccess().getEqualsSignKeyword_4_3_1());
            	    								
            	    // InternalXSpice.g:2347:9: ( (lv_offResistance_16_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:2348:10: (lv_offResistance_16_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:2348:10: (lv_offResistance_16_0= RULE_NUMBER )
            	    // InternalXSpice.g:2349:11: lv_offResistance_16_0= RULE_NUMBER
            	    {
            	    lv_offResistance_16_0=(Token)match(input,RULE_NUMBER,FOLLOW_28); 

            	    											newLeafNode(lv_offResistance_16_0, grammarAccess.getVoltageSwitchModelAccess().getOffResistanceNUMBERTerminalRuleCall_4_3_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getVoltageSwitchModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"offResistance",
            	    												lv_offResistance_16_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getVoltageSwitchModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt20 >= 1 ) break loop20;
                        EarlyExitException eee =
                            new EarlyExitException(20, input);
                        throw eee;
                }
                cnt20++;
            } while (true);

            if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getVoltageSwitchModelAccess().getUnorderedGroup_4()) ) {
                throw new FailedPredicateException(input, "ruleVoltageSwitchModel", "getUnorderedGroupHelper().canLeave(grammarAccess.getVoltageSwitchModelAccess().getUnorderedGroup_4())");
            }

            }


            }

             
            				  getUnorderedGroupHelper().leave(grammarAccess.getVoltageSwitchModelAccess().getUnorderedGroup_4());
            				

            }

            otherlv_17=(Token)match(input,52,FOLLOW_2); 

            			newLeafNode(otherlv_17, grammarAccess.getVoltageSwitchModelAccess().getRightParenthesisKeyword_5());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVoltageSwitchModel"


    // $ANTLR start "entryRuleCurrentSwitch"
    // InternalXSpice.g:2387:1: entryRuleCurrentSwitch returns [EObject current=null] : iv_ruleCurrentSwitch= ruleCurrentSwitch EOF ;
    public final EObject entryRuleCurrentSwitch() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCurrentSwitch = null;


        try {
            // InternalXSpice.g:2387:54: (iv_ruleCurrentSwitch= ruleCurrentSwitch EOF )
            // InternalXSpice.g:2388:2: iv_ruleCurrentSwitch= ruleCurrentSwitch EOF
            {
             newCompositeNode(grammarAccess.getCurrentSwitchRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleCurrentSwitch=ruleCurrentSwitch();

            state._fsp--;

             current =iv_ruleCurrentSwitch; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCurrentSwitch"


    // $ANTLR start "ruleCurrentSwitch"
    // InternalXSpice.g:2394:1: ruleCurrentSwitch returns [EObject current=null] : ( ( (lv_name_0_0= RULE_WID ) ) ( (lv_nodes_1_0= RULE_NODE ) ) ( (lv_nodes_2_0= RULE_NODE ) ) ( (lv_controllingSource_3_0= RULE_IID ) ) ( (lv_model_4_0= ruleLabel ) ) ( ( (lv_zeroState_5_0= 'ON' ) ) | otherlv_6= 'OFF' )? ) ;
    public final EObject ruleCurrentSwitch() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token lv_nodes_1_0=null;
        Token lv_nodes_2_0=null;
        Token lv_controllingSource_3_0=null;
        Token lv_zeroState_5_0=null;
        Token otherlv_6=null;
        AntlrDatatypeRuleToken lv_model_4_0 = null;



        	enterRule();

        try {
            // InternalXSpice.g:2400:2: ( ( ( (lv_name_0_0= RULE_WID ) ) ( (lv_nodes_1_0= RULE_NODE ) ) ( (lv_nodes_2_0= RULE_NODE ) ) ( (lv_controllingSource_3_0= RULE_IID ) ) ( (lv_model_4_0= ruleLabel ) ) ( ( (lv_zeroState_5_0= 'ON' ) ) | otherlv_6= 'OFF' )? ) )
            // InternalXSpice.g:2401:2: ( ( (lv_name_0_0= RULE_WID ) ) ( (lv_nodes_1_0= RULE_NODE ) ) ( (lv_nodes_2_0= RULE_NODE ) ) ( (lv_controllingSource_3_0= RULE_IID ) ) ( (lv_model_4_0= ruleLabel ) ) ( ( (lv_zeroState_5_0= 'ON' ) ) | otherlv_6= 'OFF' )? )
            {
            // InternalXSpice.g:2401:2: ( ( (lv_name_0_0= RULE_WID ) ) ( (lv_nodes_1_0= RULE_NODE ) ) ( (lv_nodes_2_0= RULE_NODE ) ) ( (lv_controllingSource_3_0= RULE_IID ) ) ( (lv_model_4_0= ruleLabel ) ) ( ( (lv_zeroState_5_0= 'ON' ) ) | otherlv_6= 'OFF' )? )
            // InternalXSpice.g:2402:3: ( (lv_name_0_0= RULE_WID ) ) ( (lv_nodes_1_0= RULE_NODE ) ) ( (lv_nodes_2_0= RULE_NODE ) ) ( (lv_controllingSource_3_0= RULE_IID ) ) ( (lv_model_4_0= ruleLabel ) ) ( ( (lv_zeroState_5_0= 'ON' ) ) | otherlv_6= 'OFF' )?
            {
            // InternalXSpice.g:2402:3: ( (lv_name_0_0= RULE_WID ) )
            // InternalXSpice.g:2403:4: (lv_name_0_0= RULE_WID )
            {
            // InternalXSpice.g:2403:4: (lv_name_0_0= RULE_WID )
            // InternalXSpice.g:2404:5: lv_name_0_0= RULE_WID
            {
            lv_name_0_0=(Token)match(input,RULE_WID,FOLLOW_5); 

            					newLeafNode(lv_name_0_0, grammarAccess.getCurrentSwitchAccess().getNameWIDTerminalRuleCall_0_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getCurrentSwitchRule());
            					}
            					setWithLastConsumed(
            						current,
            						"name",
            						lv_name_0_0,
            						"com.xtext.ravornyo.xspice.XSpice.WID");
            				

            }


            }

            // InternalXSpice.g:2420:3: ( (lv_nodes_1_0= RULE_NODE ) )
            // InternalXSpice.g:2421:4: (lv_nodes_1_0= RULE_NODE )
            {
            // InternalXSpice.g:2421:4: (lv_nodes_1_0= RULE_NODE )
            // InternalXSpice.g:2422:5: lv_nodes_1_0= RULE_NODE
            {
            lv_nodes_1_0=(Token)match(input,RULE_NODE,FOLLOW_5); 

            					newLeafNode(lv_nodes_1_0, grammarAccess.getCurrentSwitchAccess().getNodesNODETerminalRuleCall_1_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getCurrentSwitchRule());
            					}
            					addWithLastConsumed(
            						current,
            						"nodes",
            						lv_nodes_1_0,
            						"com.xtext.ravornyo.xspice.XSpice.NODE");
            				

            }


            }

            // InternalXSpice.g:2438:3: ( (lv_nodes_2_0= RULE_NODE ) )
            // InternalXSpice.g:2439:4: (lv_nodes_2_0= RULE_NODE )
            {
            // InternalXSpice.g:2439:4: (lv_nodes_2_0= RULE_NODE )
            // InternalXSpice.g:2440:5: lv_nodes_2_0= RULE_NODE
            {
            lv_nodes_2_0=(Token)match(input,RULE_NODE,FOLLOW_29); 

            					newLeafNode(lv_nodes_2_0, grammarAccess.getCurrentSwitchAccess().getNodesNODETerminalRuleCall_2_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getCurrentSwitchRule());
            					}
            					addWithLastConsumed(
            						current,
            						"nodes",
            						lv_nodes_2_0,
            						"com.xtext.ravornyo.xspice.XSpice.NODE");
            				

            }


            }

            // InternalXSpice.g:2456:3: ( (lv_controllingSource_3_0= RULE_IID ) )
            // InternalXSpice.g:2457:4: (lv_controllingSource_3_0= RULE_IID )
            {
            // InternalXSpice.g:2457:4: (lv_controllingSource_3_0= RULE_IID )
            // InternalXSpice.g:2458:5: lv_controllingSource_3_0= RULE_IID
            {
            lv_controllingSource_3_0=(Token)match(input,RULE_IID,FOLLOW_4); 

            					newLeafNode(lv_controllingSource_3_0, grammarAccess.getCurrentSwitchAccess().getControllingSourceIIDTerminalRuleCall_3_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getCurrentSwitchRule());
            					}
            					setWithLastConsumed(
            						current,
            						"controllingSource",
            						lv_controllingSource_3_0,
            						"com.xtext.ravornyo.xspice.XSpice.IID");
            				

            }


            }

            // InternalXSpice.g:2474:3: ( (lv_model_4_0= ruleLabel ) )
            // InternalXSpice.g:2475:4: (lv_model_4_0= ruleLabel )
            {
            // InternalXSpice.g:2475:4: (lv_model_4_0= ruleLabel )
            // InternalXSpice.g:2476:5: lv_model_4_0= ruleLabel
            {

            					newCompositeNode(grammarAccess.getCurrentSwitchAccess().getModelLabelParserRuleCall_4_0());
            				
            pushFollow(FOLLOW_25);
            lv_model_4_0=ruleLabel();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getCurrentSwitchRule());
            					}
            					set(
            						current,
            						"model",
            						lv_model_4_0,
            						"com.xtext.ravornyo.xspice.XSpice.Label");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            // InternalXSpice.g:2493:3: ( ( (lv_zeroState_5_0= 'ON' ) ) | otherlv_6= 'OFF' )?
            int alt21=3;
            int LA21_0 = input.LA(1);

            if ( (LA21_0==57) ) {
                alt21=1;
            }
            else if ( (LA21_0==58) ) {
                alt21=2;
            }
            switch (alt21) {
                case 1 :
                    // InternalXSpice.g:2494:4: ( (lv_zeroState_5_0= 'ON' ) )
                    {
                    // InternalXSpice.g:2494:4: ( (lv_zeroState_5_0= 'ON' ) )
                    // InternalXSpice.g:2495:5: (lv_zeroState_5_0= 'ON' )
                    {
                    // InternalXSpice.g:2495:5: (lv_zeroState_5_0= 'ON' )
                    // InternalXSpice.g:2496:6: lv_zeroState_5_0= 'ON'
                    {
                    lv_zeroState_5_0=(Token)match(input,57,FOLLOW_2); 

                    						newLeafNode(lv_zeroState_5_0, grammarAccess.getCurrentSwitchAccess().getZeroStateONKeyword_5_0_0());
                    					

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getCurrentSwitchRule());
                    						}
                    						setWithLastConsumed(current, "zeroState", true, "ON");
                    					

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalXSpice.g:2509:4: otherlv_6= 'OFF'
                    {
                    otherlv_6=(Token)match(input,58,FOLLOW_2); 

                    				newLeafNode(otherlv_6, grammarAccess.getCurrentSwitchAccess().getOFFKeyword_5_1());
                    			

                    }
                    break;

            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCurrentSwitch"


    // $ANTLR start "entryRuleCurrentSwitchModel"
    // InternalXSpice.g:2518:1: entryRuleCurrentSwitchModel returns [EObject current=null] : iv_ruleCurrentSwitchModel= ruleCurrentSwitchModel EOF ;
    public final EObject entryRuleCurrentSwitchModel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCurrentSwitchModel = null;


        try {
            // InternalXSpice.g:2518:59: (iv_ruleCurrentSwitchModel= ruleCurrentSwitchModel EOF )
            // InternalXSpice.g:2519:2: iv_ruleCurrentSwitchModel= ruleCurrentSwitchModel EOF
            {
             newCompositeNode(grammarAccess.getCurrentSwitchModelRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleCurrentSwitchModel=ruleCurrentSwitchModel();

            state._fsp--;

             current =iv_ruleCurrentSwitchModel; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCurrentSwitchModel"


    // $ANTLR start "ruleCurrentSwitchModel"
    // InternalXSpice.g:2525:1: ruleCurrentSwitchModel returns [EObject current=null] : (otherlv_0= '.MODEL' ( (lv_name_1_0= ruleLabel ) ) otherlv_2= 'CSW' otherlv_3= '(' ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'IT' otherlv_6= '=' ( (lv_threshold_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'IH' otherlv_9= '=' ( (lv_hysteresis_10_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'RON' otherlv_12= '=' ( (lv_onResistance_13_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'ROFF' otherlv_15= '=' ( (lv_offResistance_16_0= RULE_NUMBER ) ) ) ) ) ) )+ {...}?) ) ) otherlv_17= ')' ) ;
    public final EObject ruleCurrentSwitchModel() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token lv_threshold_7_0=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token lv_hysteresis_10_0=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token lv_onResistance_13_0=null;
        Token otherlv_14=null;
        Token otherlv_15=null;
        Token lv_offResistance_16_0=null;
        Token otherlv_17=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
            // InternalXSpice.g:2531:2: ( (otherlv_0= '.MODEL' ( (lv_name_1_0= ruleLabel ) ) otherlv_2= 'CSW' otherlv_3= '(' ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'IT' otherlv_6= '=' ( (lv_threshold_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'IH' otherlv_9= '=' ( (lv_hysteresis_10_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'RON' otherlv_12= '=' ( (lv_onResistance_13_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'ROFF' otherlv_15= '=' ( (lv_offResistance_16_0= RULE_NUMBER ) ) ) ) ) ) )+ {...}?) ) ) otherlv_17= ')' ) )
            // InternalXSpice.g:2532:2: (otherlv_0= '.MODEL' ( (lv_name_1_0= ruleLabel ) ) otherlv_2= 'CSW' otherlv_3= '(' ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'IT' otherlv_6= '=' ( (lv_threshold_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'IH' otherlv_9= '=' ( (lv_hysteresis_10_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'RON' otherlv_12= '=' ( (lv_onResistance_13_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'ROFF' otherlv_15= '=' ( (lv_offResistance_16_0= RULE_NUMBER ) ) ) ) ) ) )+ {...}?) ) ) otherlv_17= ')' )
            {
            // InternalXSpice.g:2532:2: (otherlv_0= '.MODEL' ( (lv_name_1_0= ruleLabel ) ) otherlv_2= 'CSW' otherlv_3= '(' ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'IT' otherlv_6= '=' ( (lv_threshold_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'IH' otherlv_9= '=' ( (lv_hysteresis_10_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'RON' otherlv_12= '=' ( (lv_onResistance_13_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'ROFF' otherlv_15= '=' ( (lv_offResistance_16_0= RULE_NUMBER ) ) ) ) ) ) )+ {...}?) ) ) otherlv_17= ')' )
            // InternalXSpice.g:2533:3: otherlv_0= '.MODEL' ( (lv_name_1_0= ruleLabel ) ) otherlv_2= 'CSW' otherlv_3= '(' ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'IT' otherlv_6= '=' ( (lv_threshold_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'IH' otherlv_9= '=' ( (lv_hysteresis_10_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'RON' otherlv_12= '=' ( (lv_onResistance_13_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'ROFF' otherlv_15= '=' ( (lv_offResistance_16_0= RULE_NUMBER ) ) ) ) ) ) )+ {...}?) ) ) otherlv_17= ')'
            {
            otherlv_0=(Token)match(input,43,FOLLOW_4); 

            			newLeafNode(otherlv_0, grammarAccess.getCurrentSwitchModelAccess().getMODELKeyword_0());
            		
            // InternalXSpice.g:2537:3: ( (lv_name_1_0= ruleLabel ) )
            // InternalXSpice.g:2538:4: (lv_name_1_0= ruleLabel )
            {
            // InternalXSpice.g:2538:4: (lv_name_1_0= ruleLabel )
            // InternalXSpice.g:2539:5: lv_name_1_0= ruleLabel
            {

            					newCompositeNode(grammarAccess.getCurrentSwitchModelAccess().getNameLabelParserRuleCall_1_0());
            				
            pushFollow(FOLLOW_30);
            lv_name_1_0=ruleLabel();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getCurrentSwitchModelRule());
            					}
            					set(
            						current,
            						"name",
            						lv_name_1_0,
            						"com.xtext.ravornyo.xspice.XSpice.Label");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            otherlv_2=(Token)match(input,64,FOLLOW_14); 

            			newLeafNode(otherlv_2, grammarAccess.getCurrentSwitchModelAccess().getCSWKeyword_2());
            		
            otherlv_3=(Token)match(input,45,FOLLOW_31); 

            			newLeafNode(otherlv_3, grammarAccess.getCurrentSwitchModelAccess().getLeftParenthesisKeyword_3());
            		
            // InternalXSpice.g:2564:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'IT' otherlv_6= '=' ( (lv_threshold_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'IH' otherlv_9= '=' ( (lv_hysteresis_10_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'RON' otherlv_12= '=' ( (lv_onResistance_13_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'ROFF' otherlv_15= '=' ( (lv_offResistance_16_0= RULE_NUMBER ) ) ) ) ) ) )+ {...}?) ) )
            // InternalXSpice.g:2565:4: ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'IT' otherlv_6= '=' ( (lv_threshold_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'IH' otherlv_9= '=' ( (lv_hysteresis_10_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'RON' otherlv_12= '=' ( (lv_onResistance_13_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'ROFF' otherlv_15= '=' ( (lv_offResistance_16_0= RULE_NUMBER ) ) ) ) ) ) )+ {...}?) )
            {
            // InternalXSpice.g:2565:4: ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'IT' otherlv_6= '=' ( (lv_threshold_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'IH' otherlv_9= '=' ( (lv_hysteresis_10_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'RON' otherlv_12= '=' ( (lv_onResistance_13_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'ROFF' otherlv_15= '=' ( (lv_offResistance_16_0= RULE_NUMBER ) ) ) ) ) ) )+ {...}?) )
            // InternalXSpice.g:2566:5: ( ( ({...}? => ( ({...}? => (otherlv_5= 'IT' otherlv_6= '=' ( (lv_threshold_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'IH' otherlv_9= '=' ( (lv_hysteresis_10_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'RON' otherlv_12= '=' ( (lv_onResistance_13_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'ROFF' otherlv_15= '=' ( (lv_offResistance_16_0= RULE_NUMBER ) ) ) ) ) ) )+ {...}?)
            {
             
            				  getUnorderedGroupHelper().enter(grammarAccess.getCurrentSwitchModelAccess().getUnorderedGroup_4());
            				
            // InternalXSpice.g:2569:5: ( ( ({...}? => ( ({...}? => (otherlv_5= 'IT' otherlv_6= '=' ( (lv_threshold_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'IH' otherlv_9= '=' ( (lv_hysteresis_10_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'RON' otherlv_12= '=' ( (lv_onResistance_13_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'ROFF' otherlv_15= '=' ( (lv_offResistance_16_0= RULE_NUMBER ) ) ) ) ) ) )+ {...}?)
            // InternalXSpice.g:2570:6: ( ({...}? => ( ({...}? => (otherlv_5= 'IT' otherlv_6= '=' ( (lv_threshold_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'IH' otherlv_9= '=' ( (lv_hysteresis_10_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'RON' otherlv_12= '=' ( (lv_onResistance_13_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'ROFF' otherlv_15= '=' ( (lv_offResistance_16_0= RULE_NUMBER ) ) ) ) ) ) )+ {...}?
            {
            // InternalXSpice.g:2570:6: ( ({...}? => ( ({...}? => (otherlv_5= 'IT' otherlv_6= '=' ( (lv_threshold_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'IH' otherlv_9= '=' ( (lv_hysteresis_10_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'RON' otherlv_12= '=' ( (lv_onResistance_13_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'ROFF' otherlv_15= '=' ( (lv_offResistance_16_0= RULE_NUMBER ) ) ) ) ) ) )+
            int cnt22=0;
            loop22:
            do {
                int alt22=5;
                int LA22_0 = input.LA(1);

                if ( LA22_0 == 65 && getUnorderedGroupHelper().canSelect(grammarAccess.getCurrentSwitchModelAccess().getUnorderedGroup_4(), 0) ) {
                    alt22=1;
                }
                else if ( LA22_0 == 66 && getUnorderedGroupHelper().canSelect(grammarAccess.getCurrentSwitchModelAccess().getUnorderedGroup_4(), 1) ) {
                    alt22=2;
                }
                else if ( LA22_0 == 62 && getUnorderedGroupHelper().canSelect(grammarAccess.getCurrentSwitchModelAccess().getUnorderedGroup_4(), 2) ) {
                    alt22=3;
                }
                else if ( LA22_0 == 63 && getUnorderedGroupHelper().canSelect(grammarAccess.getCurrentSwitchModelAccess().getUnorderedGroup_4(), 3) ) {
                    alt22=4;
                }


                switch (alt22) {
            	case 1 :
            	    // InternalXSpice.g:2571:4: ({...}? => ( ({...}? => (otherlv_5= 'IT' otherlv_6= '=' ( (lv_threshold_7_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:2571:4: ({...}? => ( ({...}? => (otherlv_5= 'IT' otherlv_6= '=' ( (lv_threshold_7_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:2572:5: {...}? => ( ({...}? => (otherlv_5= 'IT' otherlv_6= '=' ( (lv_threshold_7_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getCurrentSwitchModelAccess().getUnorderedGroup_4(), 0) ) {
            	        throw new FailedPredicateException(input, "ruleCurrentSwitchModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getCurrentSwitchModelAccess().getUnorderedGroup_4(), 0)");
            	    }
            	    // InternalXSpice.g:2572:115: ( ({...}? => (otherlv_5= 'IT' otherlv_6= '=' ( (lv_threshold_7_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:2573:6: ({...}? => (otherlv_5= 'IT' otherlv_6= '=' ( (lv_threshold_7_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getCurrentSwitchModelAccess().getUnorderedGroup_4(), 0);
            	    					
            	    // InternalXSpice.g:2576:9: ({...}? => (otherlv_5= 'IT' otherlv_6= '=' ( (lv_threshold_7_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:2576:10: {...}? => (otherlv_5= 'IT' otherlv_6= '=' ( (lv_threshold_7_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleCurrentSwitchModel", "true");
            	    }
            	    // InternalXSpice.g:2576:19: (otherlv_5= 'IT' otherlv_6= '=' ( (lv_threshold_7_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:2576:20: otherlv_5= 'IT' otherlv_6= '=' ( (lv_threshold_7_0= RULE_NUMBER ) )
            	    {
            	    otherlv_5=(Token)match(input,65,FOLLOW_11); 

            	    									newLeafNode(otherlv_5, grammarAccess.getCurrentSwitchModelAccess().getITKeyword_4_0_0());
            	    								
            	    otherlv_6=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_6, grammarAccess.getCurrentSwitchModelAccess().getEqualsSignKeyword_4_0_1());
            	    								
            	    // InternalXSpice.g:2584:9: ( (lv_threshold_7_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:2585:10: (lv_threshold_7_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:2585:10: (lv_threshold_7_0= RULE_NUMBER )
            	    // InternalXSpice.g:2586:11: lv_threshold_7_0= RULE_NUMBER
            	    {
            	    lv_threshold_7_0=(Token)match(input,RULE_NUMBER,FOLLOW_32); 

            	    											newLeafNode(lv_threshold_7_0, grammarAccess.getCurrentSwitchModelAccess().getThresholdNUMBERTerminalRuleCall_4_0_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getCurrentSwitchModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"threshold",
            	    												lv_threshold_7_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getCurrentSwitchModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalXSpice.g:2608:4: ({...}? => ( ({...}? => (otherlv_8= 'IH' otherlv_9= '=' ( (lv_hysteresis_10_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:2608:4: ({...}? => ( ({...}? => (otherlv_8= 'IH' otherlv_9= '=' ( (lv_hysteresis_10_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:2609:5: {...}? => ( ({...}? => (otherlv_8= 'IH' otherlv_9= '=' ( (lv_hysteresis_10_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getCurrentSwitchModelAccess().getUnorderedGroup_4(), 1) ) {
            	        throw new FailedPredicateException(input, "ruleCurrentSwitchModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getCurrentSwitchModelAccess().getUnorderedGroup_4(), 1)");
            	    }
            	    // InternalXSpice.g:2609:115: ( ({...}? => (otherlv_8= 'IH' otherlv_9= '=' ( (lv_hysteresis_10_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:2610:6: ({...}? => (otherlv_8= 'IH' otherlv_9= '=' ( (lv_hysteresis_10_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getCurrentSwitchModelAccess().getUnorderedGroup_4(), 1);
            	    					
            	    // InternalXSpice.g:2613:9: ({...}? => (otherlv_8= 'IH' otherlv_9= '=' ( (lv_hysteresis_10_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:2613:10: {...}? => (otherlv_8= 'IH' otherlv_9= '=' ( (lv_hysteresis_10_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleCurrentSwitchModel", "true");
            	    }
            	    // InternalXSpice.g:2613:19: (otherlv_8= 'IH' otherlv_9= '=' ( (lv_hysteresis_10_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:2613:20: otherlv_8= 'IH' otherlv_9= '=' ( (lv_hysteresis_10_0= RULE_NUMBER ) )
            	    {
            	    otherlv_8=(Token)match(input,66,FOLLOW_11); 

            	    									newLeafNode(otherlv_8, grammarAccess.getCurrentSwitchModelAccess().getIHKeyword_4_1_0());
            	    								
            	    otherlv_9=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_9, grammarAccess.getCurrentSwitchModelAccess().getEqualsSignKeyword_4_1_1());
            	    								
            	    // InternalXSpice.g:2621:9: ( (lv_hysteresis_10_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:2622:10: (lv_hysteresis_10_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:2622:10: (lv_hysteresis_10_0= RULE_NUMBER )
            	    // InternalXSpice.g:2623:11: lv_hysteresis_10_0= RULE_NUMBER
            	    {
            	    lv_hysteresis_10_0=(Token)match(input,RULE_NUMBER,FOLLOW_32); 

            	    											newLeafNode(lv_hysteresis_10_0, grammarAccess.getCurrentSwitchModelAccess().getHysteresisNUMBERTerminalRuleCall_4_1_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getCurrentSwitchModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"hysteresis",
            	    												lv_hysteresis_10_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getCurrentSwitchModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalXSpice.g:2645:4: ({...}? => ( ({...}? => (otherlv_11= 'RON' otherlv_12= '=' ( (lv_onResistance_13_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:2645:4: ({...}? => ( ({...}? => (otherlv_11= 'RON' otherlv_12= '=' ( (lv_onResistance_13_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:2646:5: {...}? => ( ({...}? => (otherlv_11= 'RON' otherlv_12= '=' ( (lv_onResistance_13_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getCurrentSwitchModelAccess().getUnorderedGroup_4(), 2) ) {
            	        throw new FailedPredicateException(input, "ruleCurrentSwitchModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getCurrentSwitchModelAccess().getUnorderedGroup_4(), 2)");
            	    }
            	    // InternalXSpice.g:2646:115: ( ({...}? => (otherlv_11= 'RON' otherlv_12= '=' ( (lv_onResistance_13_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:2647:6: ({...}? => (otherlv_11= 'RON' otherlv_12= '=' ( (lv_onResistance_13_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getCurrentSwitchModelAccess().getUnorderedGroup_4(), 2);
            	    					
            	    // InternalXSpice.g:2650:9: ({...}? => (otherlv_11= 'RON' otherlv_12= '=' ( (lv_onResistance_13_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:2650:10: {...}? => (otherlv_11= 'RON' otherlv_12= '=' ( (lv_onResistance_13_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleCurrentSwitchModel", "true");
            	    }
            	    // InternalXSpice.g:2650:19: (otherlv_11= 'RON' otherlv_12= '=' ( (lv_onResistance_13_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:2650:20: otherlv_11= 'RON' otherlv_12= '=' ( (lv_onResistance_13_0= RULE_NUMBER ) )
            	    {
            	    otherlv_11=(Token)match(input,62,FOLLOW_11); 

            	    									newLeafNode(otherlv_11, grammarAccess.getCurrentSwitchModelAccess().getRONKeyword_4_2_0());
            	    								
            	    otherlv_12=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_12, grammarAccess.getCurrentSwitchModelAccess().getEqualsSignKeyword_4_2_1());
            	    								
            	    // InternalXSpice.g:2658:9: ( (lv_onResistance_13_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:2659:10: (lv_onResistance_13_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:2659:10: (lv_onResistance_13_0= RULE_NUMBER )
            	    // InternalXSpice.g:2660:11: lv_onResistance_13_0= RULE_NUMBER
            	    {
            	    lv_onResistance_13_0=(Token)match(input,RULE_NUMBER,FOLLOW_32); 

            	    											newLeafNode(lv_onResistance_13_0, grammarAccess.getCurrentSwitchModelAccess().getOnResistanceNUMBERTerminalRuleCall_4_2_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getCurrentSwitchModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"onResistance",
            	    												lv_onResistance_13_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getCurrentSwitchModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalXSpice.g:2682:4: ({...}? => ( ({...}? => (otherlv_14= 'ROFF' otherlv_15= '=' ( (lv_offResistance_16_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:2682:4: ({...}? => ( ({...}? => (otherlv_14= 'ROFF' otherlv_15= '=' ( (lv_offResistance_16_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:2683:5: {...}? => ( ({...}? => (otherlv_14= 'ROFF' otherlv_15= '=' ( (lv_offResistance_16_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getCurrentSwitchModelAccess().getUnorderedGroup_4(), 3) ) {
            	        throw new FailedPredicateException(input, "ruleCurrentSwitchModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getCurrentSwitchModelAccess().getUnorderedGroup_4(), 3)");
            	    }
            	    // InternalXSpice.g:2683:115: ( ({...}? => (otherlv_14= 'ROFF' otherlv_15= '=' ( (lv_offResistance_16_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:2684:6: ({...}? => (otherlv_14= 'ROFF' otherlv_15= '=' ( (lv_offResistance_16_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getCurrentSwitchModelAccess().getUnorderedGroup_4(), 3);
            	    					
            	    // InternalXSpice.g:2687:9: ({...}? => (otherlv_14= 'ROFF' otherlv_15= '=' ( (lv_offResistance_16_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:2687:10: {...}? => (otherlv_14= 'ROFF' otherlv_15= '=' ( (lv_offResistance_16_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleCurrentSwitchModel", "true");
            	    }
            	    // InternalXSpice.g:2687:19: (otherlv_14= 'ROFF' otherlv_15= '=' ( (lv_offResistance_16_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:2687:20: otherlv_14= 'ROFF' otherlv_15= '=' ( (lv_offResistance_16_0= RULE_NUMBER ) )
            	    {
            	    otherlv_14=(Token)match(input,63,FOLLOW_11); 

            	    									newLeafNode(otherlv_14, grammarAccess.getCurrentSwitchModelAccess().getROFFKeyword_4_3_0());
            	    								
            	    otherlv_15=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_15, grammarAccess.getCurrentSwitchModelAccess().getEqualsSignKeyword_4_3_1());
            	    								
            	    // InternalXSpice.g:2695:9: ( (lv_offResistance_16_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:2696:10: (lv_offResistance_16_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:2696:10: (lv_offResistance_16_0= RULE_NUMBER )
            	    // InternalXSpice.g:2697:11: lv_offResistance_16_0= RULE_NUMBER
            	    {
            	    lv_offResistance_16_0=(Token)match(input,RULE_NUMBER,FOLLOW_32); 

            	    											newLeafNode(lv_offResistance_16_0, grammarAccess.getCurrentSwitchModelAccess().getOffResistanceNUMBERTerminalRuleCall_4_3_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getCurrentSwitchModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"offResistance",
            	    												lv_offResistance_16_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getCurrentSwitchModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt22 >= 1 ) break loop22;
                        EarlyExitException eee =
                            new EarlyExitException(22, input);
                        throw eee;
                }
                cnt22++;
            } while (true);

            if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getCurrentSwitchModelAccess().getUnorderedGroup_4()) ) {
                throw new FailedPredicateException(input, "ruleCurrentSwitchModel", "getUnorderedGroupHelper().canLeave(grammarAccess.getCurrentSwitchModelAccess().getUnorderedGroup_4())");
            }

            }


            }

             
            				  getUnorderedGroupHelper().leave(grammarAccess.getCurrentSwitchModelAccess().getUnorderedGroup_4());
            				

            }

            otherlv_17=(Token)match(input,52,FOLLOW_2); 

            			newLeafNode(otherlv_17, grammarAccess.getCurrentSwitchModelAccess().getRightParenthesisKeyword_5());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCurrentSwitchModel"


    // $ANTLR start "entryRuleDiode"
    // InternalXSpice.g:2735:1: entryRuleDiode returns [EObject current=null] : iv_ruleDiode= ruleDiode EOF ;
    public final EObject entryRuleDiode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDiode = null;


        try {
            // InternalXSpice.g:2735:46: (iv_ruleDiode= ruleDiode EOF )
            // InternalXSpice.g:2736:2: iv_ruleDiode= ruleDiode EOF
            {
             newCompositeNode(grammarAccess.getDiodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleDiode=ruleDiode();

            state._fsp--;

             current =iv_ruleDiode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDiode"


    // $ANTLR start "ruleDiode"
    // InternalXSpice.g:2742:1: ruleDiode returns [EObject current=null] : ( ( (lv_name_0_0= RULE_DID ) ) ( (lv_nodes_1_0= RULE_NODE ) ) ( (lv_nodes_2_0= RULE_NODE ) ) ( (lv_model_3_0= ruleLabel ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'AREA' otherlv_6= '=' ( (lv_area_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_off_8_0= 'OFF' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'IC' otherlv_10= '=' ( (lv_ic_11_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'TEMP' otherlv_13= '=' ( (lv_temp_14_0= RULE_NUMBER ) ) ) ) ) ) )* ) ) ) ) ;
    public final EObject ruleDiode() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token lv_nodes_1_0=null;
        Token lv_nodes_2_0=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token lv_area_7_0=null;
        Token lv_off_8_0=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token lv_ic_11_0=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token lv_temp_14_0=null;
        AntlrDatatypeRuleToken lv_model_3_0 = null;



        	enterRule();

        try {
            // InternalXSpice.g:2748:2: ( ( ( (lv_name_0_0= RULE_DID ) ) ( (lv_nodes_1_0= RULE_NODE ) ) ( (lv_nodes_2_0= RULE_NODE ) ) ( (lv_model_3_0= ruleLabel ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'AREA' otherlv_6= '=' ( (lv_area_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_off_8_0= 'OFF' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'IC' otherlv_10= '=' ( (lv_ic_11_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'TEMP' otherlv_13= '=' ( (lv_temp_14_0= RULE_NUMBER ) ) ) ) ) ) )* ) ) ) ) )
            // InternalXSpice.g:2749:2: ( ( (lv_name_0_0= RULE_DID ) ) ( (lv_nodes_1_0= RULE_NODE ) ) ( (lv_nodes_2_0= RULE_NODE ) ) ( (lv_model_3_0= ruleLabel ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'AREA' otherlv_6= '=' ( (lv_area_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_off_8_0= 'OFF' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'IC' otherlv_10= '=' ( (lv_ic_11_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'TEMP' otherlv_13= '=' ( (lv_temp_14_0= RULE_NUMBER ) ) ) ) ) ) )* ) ) ) )
            {
            // InternalXSpice.g:2749:2: ( ( (lv_name_0_0= RULE_DID ) ) ( (lv_nodes_1_0= RULE_NODE ) ) ( (lv_nodes_2_0= RULE_NODE ) ) ( (lv_model_3_0= ruleLabel ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'AREA' otherlv_6= '=' ( (lv_area_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_off_8_0= 'OFF' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'IC' otherlv_10= '=' ( (lv_ic_11_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'TEMP' otherlv_13= '=' ( (lv_temp_14_0= RULE_NUMBER ) ) ) ) ) ) )* ) ) ) )
            // InternalXSpice.g:2750:3: ( (lv_name_0_0= RULE_DID ) ) ( (lv_nodes_1_0= RULE_NODE ) ) ( (lv_nodes_2_0= RULE_NODE ) ) ( (lv_model_3_0= ruleLabel ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'AREA' otherlv_6= '=' ( (lv_area_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_off_8_0= 'OFF' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'IC' otherlv_10= '=' ( (lv_ic_11_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'TEMP' otherlv_13= '=' ( (lv_temp_14_0= RULE_NUMBER ) ) ) ) ) ) )* ) ) )
            {
            // InternalXSpice.g:2750:3: ( (lv_name_0_0= RULE_DID ) )
            // InternalXSpice.g:2751:4: (lv_name_0_0= RULE_DID )
            {
            // InternalXSpice.g:2751:4: (lv_name_0_0= RULE_DID )
            // InternalXSpice.g:2752:5: lv_name_0_0= RULE_DID
            {
            lv_name_0_0=(Token)match(input,RULE_DID,FOLLOW_5); 

            					newLeafNode(lv_name_0_0, grammarAccess.getDiodeAccess().getNameDIDTerminalRuleCall_0_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getDiodeRule());
            					}
            					setWithLastConsumed(
            						current,
            						"name",
            						lv_name_0_0,
            						"com.xtext.ravornyo.xspice.XSpice.DID");
            				

            }


            }

            // InternalXSpice.g:2768:3: ( (lv_nodes_1_0= RULE_NODE ) )
            // InternalXSpice.g:2769:4: (lv_nodes_1_0= RULE_NODE )
            {
            // InternalXSpice.g:2769:4: (lv_nodes_1_0= RULE_NODE )
            // InternalXSpice.g:2770:5: lv_nodes_1_0= RULE_NODE
            {
            lv_nodes_1_0=(Token)match(input,RULE_NODE,FOLLOW_5); 

            					newLeafNode(lv_nodes_1_0, grammarAccess.getDiodeAccess().getNodesNODETerminalRuleCall_1_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getDiodeRule());
            					}
            					addWithLastConsumed(
            						current,
            						"nodes",
            						lv_nodes_1_0,
            						"com.xtext.ravornyo.xspice.XSpice.NODE");
            				

            }


            }

            // InternalXSpice.g:2786:3: ( (lv_nodes_2_0= RULE_NODE ) )
            // InternalXSpice.g:2787:4: (lv_nodes_2_0= RULE_NODE )
            {
            // InternalXSpice.g:2787:4: (lv_nodes_2_0= RULE_NODE )
            // InternalXSpice.g:2788:5: lv_nodes_2_0= RULE_NODE
            {
            lv_nodes_2_0=(Token)match(input,RULE_NODE,FOLLOW_4); 

            					newLeafNode(lv_nodes_2_0, grammarAccess.getDiodeAccess().getNodesNODETerminalRuleCall_2_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getDiodeRule());
            					}
            					addWithLastConsumed(
            						current,
            						"nodes",
            						lv_nodes_2_0,
            						"com.xtext.ravornyo.xspice.XSpice.NODE");
            				

            }


            }

            // InternalXSpice.g:2804:3: ( (lv_model_3_0= ruleLabel ) )
            // InternalXSpice.g:2805:4: (lv_model_3_0= ruleLabel )
            {
            // InternalXSpice.g:2805:4: (lv_model_3_0= ruleLabel )
            // InternalXSpice.g:2806:5: lv_model_3_0= ruleLabel
            {

            					newCompositeNode(grammarAccess.getDiodeAccess().getModelLabelParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_33);
            lv_model_3_0=ruleLabel();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getDiodeRule());
            					}
            					set(
            						current,
            						"model",
            						lv_model_3_0,
            						"com.xtext.ravornyo.xspice.XSpice.Label");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            // InternalXSpice.g:2823:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'AREA' otherlv_6= '=' ( (lv_area_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_off_8_0= 'OFF' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'IC' otherlv_10= '=' ( (lv_ic_11_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'TEMP' otherlv_13= '=' ( (lv_temp_14_0= RULE_NUMBER ) ) ) ) ) ) )* ) ) )
            // InternalXSpice.g:2824:4: ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'AREA' otherlv_6= '=' ( (lv_area_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_off_8_0= 'OFF' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'IC' otherlv_10= '=' ( (lv_ic_11_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'TEMP' otherlv_13= '=' ( (lv_temp_14_0= RULE_NUMBER ) ) ) ) ) ) )* ) )
            {
            // InternalXSpice.g:2824:4: ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'AREA' otherlv_6= '=' ( (lv_area_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_off_8_0= 'OFF' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'IC' otherlv_10= '=' ( (lv_ic_11_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'TEMP' otherlv_13= '=' ( (lv_temp_14_0= RULE_NUMBER ) ) ) ) ) ) )* ) )
            // InternalXSpice.g:2825:5: ( ( ({...}? => ( ({...}? => (otherlv_5= 'AREA' otherlv_6= '=' ( (lv_area_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_off_8_0= 'OFF' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'IC' otherlv_10= '=' ( (lv_ic_11_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'TEMP' otherlv_13= '=' ( (lv_temp_14_0= RULE_NUMBER ) ) ) ) ) ) )* )
            {
             
            				  getUnorderedGroupHelper().enter(grammarAccess.getDiodeAccess().getUnorderedGroup_4());
            				
            // InternalXSpice.g:2828:5: ( ( ({...}? => ( ({...}? => (otherlv_5= 'AREA' otherlv_6= '=' ( (lv_area_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_off_8_0= 'OFF' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'IC' otherlv_10= '=' ( (lv_ic_11_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'TEMP' otherlv_13= '=' ( (lv_temp_14_0= RULE_NUMBER ) ) ) ) ) ) )* )
            // InternalXSpice.g:2829:6: ( ({...}? => ( ({...}? => (otherlv_5= 'AREA' otherlv_6= '=' ( (lv_area_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_off_8_0= 'OFF' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'IC' otherlv_10= '=' ( (lv_ic_11_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'TEMP' otherlv_13= '=' ( (lv_temp_14_0= RULE_NUMBER ) ) ) ) ) ) )*
            {
            // InternalXSpice.g:2829:6: ( ({...}? => ( ({...}? => (otherlv_5= 'AREA' otherlv_6= '=' ( (lv_area_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_off_8_0= 'OFF' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'IC' otherlv_10= '=' ( (lv_ic_11_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'TEMP' otherlv_13= '=' ( (lv_temp_14_0= RULE_NUMBER ) ) ) ) ) ) )*
            loop23:
            do {
                int alt23=5;
                int LA23_0 = input.LA(1);

                if ( LA23_0 == 67 && getUnorderedGroupHelper().canSelect(grammarAccess.getDiodeAccess().getUnorderedGroup_4(), 0) ) {
                    alt23=1;
                }
                else if ( LA23_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getDiodeAccess().getUnorderedGroup_4(), 1) ) {
                    alt23=2;
                }
                else if ( LA23_0 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getDiodeAccess().getUnorderedGroup_4(), 2) ) {
                    alt23=3;
                }
                else if ( LA23_0 == 42 && getUnorderedGroupHelper().canSelect(grammarAccess.getDiodeAccess().getUnorderedGroup_4(), 3) ) {
                    alt23=4;
                }


                switch (alt23) {
            	case 1 :
            	    // InternalXSpice.g:2830:4: ({...}? => ( ({...}? => (otherlv_5= 'AREA' otherlv_6= '=' ( (lv_area_7_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:2830:4: ({...}? => ( ({...}? => (otherlv_5= 'AREA' otherlv_6= '=' ( (lv_area_7_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:2831:5: {...}? => ( ({...}? => (otherlv_5= 'AREA' otherlv_6= '=' ( (lv_area_7_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDiodeAccess().getUnorderedGroup_4(), 0) ) {
            	        throw new FailedPredicateException(input, "ruleDiode", "getUnorderedGroupHelper().canSelect(grammarAccess.getDiodeAccess().getUnorderedGroup_4(), 0)");
            	    }
            	    // InternalXSpice.g:2831:102: ( ({...}? => (otherlv_5= 'AREA' otherlv_6= '=' ( (lv_area_7_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:2832:6: ({...}? => (otherlv_5= 'AREA' otherlv_6= '=' ( (lv_area_7_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getDiodeAccess().getUnorderedGroup_4(), 0);
            	    					
            	    // InternalXSpice.g:2835:9: ({...}? => (otherlv_5= 'AREA' otherlv_6= '=' ( (lv_area_7_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:2835:10: {...}? => (otherlv_5= 'AREA' otherlv_6= '=' ( (lv_area_7_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleDiode", "true");
            	    }
            	    // InternalXSpice.g:2835:19: (otherlv_5= 'AREA' otherlv_6= '=' ( (lv_area_7_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:2835:20: otherlv_5= 'AREA' otherlv_6= '=' ( (lv_area_7_0= RULE_NUMBER ) )
            	    {
            	    otherlv_5=(Token)match(input,67,FOLLOW_11); 

            	    									newLeafNode(otherlv_5, grammarAccess.getDiodeAccess().getAREAKeyword_4_0_0());
            	    								
            	    otherlv_6=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_6, grammarAccess.getDiodeAccess().getEqualsSignKeyword_4_0_1());
            	    								
            	    // InternalXSpice.g:2843:9: ( (lv_area_7_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:2844:10: (lv_area_7_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:2844:10: (lv_area_7_0= RULE_NUMBER )
            	    // InternalXSpice.g:2845:11: lv_area_7_0= RULE_NUMBER
            	    {
            	    lv_area_7_0=(Token)match(input,RULE_NUMBER,FOLLOW_33); 

            	    											newLeafNode(lv_area_7_0, grammarAccess.getDiodeAccess().getAreaNUMBERTerminalRuleCall_4_0_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getDiodeRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"area",
            	    												lv_area_7_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDiodeAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalXSpice.g:2867:4: ({...}? => ( ({...}? => ( (lv_off_8_0= 'OFF' ) ) ) ) )
            	    {
            	    // InternalXSpice.g:2867:4: ({...}? => ( ({...}? => ( (lv_off_8_0= 'OFF' ) ) ) ) )
            	    // InternalXSpice.g:2868:5: {...}? => ( ({...}? => ( (lv_off_8_0= 'OFF' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDiodeAccess().getUnorderedGroup_4(), 1) ) {
            	        throw new FailedPredicateException(input, "ruleDiode", "getUnorderedGroupHelper().canSelect(grammarAccess.getDiodeAccess().getUnorderedGroup_4(), 1)");
            	    }
            	    // InternalXSpice.g:2868:102: ( ({...}? => ( (lv_off_8_0= 'OFF' ) ) ) )
            	    // InternalXSpice.g:2869:6: ({...}? => ( (lv_off_8_0= 'OFF' ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getDiodeAccess().getUnorderedGroup_4(), 1);
            	    					
            	    // InternalXSpice.g:2872:9: ({...}? => ( (lv_off_8_0= 'OFF' ) ) )
            	    // InternalXSpice.g:2872:10: {...}? => ( (lv_off_8_0= 'OFF' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleDiode", "true");
            	    }
            	    // InternalXSpice.g:2872:19: ( (lv_off_8_0= 'OFF' ) )
            	    // InternalXSpice.g:2872:20: (lv_off_8_0= 'OFF' )
            	    {
            	    // InternalXSpice.g:2872:20: (lv_off_8_0= 'OFF' )
            	    // InternalXSpice.g:2873:10: lv_off_8_0= 'OFF'
            	    {
            	    lv_off_8_0=(Token)match(input,58,FOLLOW_33); 

            	    										newLeafNode(lv_off_8_0, grammarAccess.getDiodeAccess().getOffOFFKeyword_4_1_0());
            	    									

            	    										if (current==null) {
            	    											current = createModelElement(grammarAccess.getDiodeRule());
            	    										}
            	    										setWithLastConsumed(current, "off", true, "OFF");
            	    									

            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDiodeAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalXSpice.g:2890:4: ({...}? => ( ({...}? => (otherlv_9= 'IC' otherlv_10= '=' ( (lv_ic_11_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:2890:4: ({...}? => ( ({...}? => (otherlv_9= 'IC' otherlv_10= '=' ( (lv_ic_11_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:2891:5: {...}? => ( ({...}? => (otherlv_9= 'IC' otherlv_10= '=' ( (lv_ic_11_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDiodeAccess().getUnorderedGroup_4(), 2) ) {
            	        throw new FailedPredicateException(input, "ruleDiode", "getUnorderedGroupHelper().canSelect(grammarAccess.getDiodeAccess().getUnorderedGroup_4(), 2)");
            	    }
            	    // InternalXSpice.g:2891:102: ( ({...}? => (otherlv_9= 'IC' otherlv_10= '=' ( (lv_ic_11_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:2892:6: ({...}? => (otherlv_9= 'IC' otherlv_10= '=' ( (lv_ic_11_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getDiodeAccess().getUnorderedGroup_4(), 2);
            	    					
            	    // InternalXSpice.g:2895:9: ({...}? => (otherlv_9= 'IC' otherlv_10= '=' ( (lv_ic_11_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:2895:10: {...}? => (otherlv_9= 'IC' otherlv_10= '=' ( (lv_ic_11_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleDiode", "true");
            	    }
            	    // InternalXSpice.g:2895:19: (otherlv_9= 'IC' otherlv_10= '=' ( (lv_ic_11_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:2895:20: otherlv_9= 'IC' otherlv_10= '=' ( (lv_ic_11_0= RULE_NUMBER ) )
            	    {
            	    otherlv_9=(Token)match(input,53,FOLLOW_11); 

            	    									newLeafNode(otherlv_9, grammarAccess.getDiodeAccess().getICKeyword_4_2_0());
            	    								
            	    otherlv_10=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_10, grammarAccess.getDiodeAccess().getEqualsSignKeyword_4_2_1());
            	    								
            	    // InternalXSpice.g:2903:9: ( (lv_ic_11_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:2904:10: (lv_ic_11_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:2904:10: (lv_ic_11_0= RULE_NUMBER )
            	    // InternalXSpice.g:2905:11: lv_ic_11_0= RULE_NUMBER
            	    {
            	    lv_ic_11_0=(Token)match(input,RULE_NUMBER,FOLLOW_33); 

            	    											newLeafNode(lv_ic_11_0, grammarAccess.getDiodeAccess().getIcNUMBERTerminalRuleCall_4_2_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getDiodeRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"ic",
            	    												lv_ic_11_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDiodeAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalXSpice.g:2927:4: ({...}? => ( ({...}? => (otherlv_12= 'TEMP' otherlv_13= '=' ( (lv_temp_14_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:2927:4: ({...}? => ( ({...}? => (otherlv_12= 'TEMP' otherlv_13= '=' ( (lv_temp_14_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:2928:5: {...}? => ( ({...}? => (otherlv_12= 'TEMP' otherlv_13= '=' ( (lv_temp_14_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDiodeAccess().getUnorderedGroup_4(), 3) ) {
            	        throw new FailedPredicateException(input, "ruleDiode", "getUnorderedGroupHelper().canSelect(grammarAccess.getDiodeAccess().getUnorderedGroup_4(), 3)");
            	    }
            	    // InternalXSpice.g:2928:102: ( ({...}? => (otherlv_12= 'TEMP' otherlv_13= '=' ( (lv_temp_14_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:2929:6: ({...}? => (otherlv_12= 'TEMP' otherlv_13= '=' ( (lv_temp_14_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getDiodeAccess().getUnorderedGroup_4(), 3);
            	    					
            	    // InternalXSpice.g:2932:9: ({...}? => (otherlv_12= 'TEMP' otherlv_13= '=' ( (lv_temp_14_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:2932:10: {...}? => (otherlv_12= 'TEMP' otherlv_13= '=' ( (lv_temp_14_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleDiode", "true");
            	    }
            	    // InternalXSpice.g:2932:19: (otherlv_12= 'TEMP' otherlv_13= '=' ( (lv_temp_14_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:2932:20: otherlv_12= 'TEMP' otherlv_13= '=' ( (lv_temp_14_0= RULE_NUMBER ) )
            	    {
            	    otherlv_12=(Token)match(input,42,FOLLOW_11); 

            	    									newLeafNode(otherlv_12, grammarAccess.getDiodeAccess().getTEMPKeyword_4_3_0());
            	    								
            	    otherlv_13=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_13, grammarAccess.getDiodeAccess().getEqualsSignKeyword_4_3_1());
            	    								
            	    // InternalXSpice.g:2940:9: ( (lv_temp_14_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:2941:10: (lv_temp_14_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:2941:10: (lv_temp_14_0= RULE_NUMBER )
            	    // InternalXSpice.g:2942:11: lv_temp_14_0= RULE_NUMBER
            	    {
            	    lv_temp_14_0=(Token)match(input,RULE_NUMBER,FOLLOW_33); 

            	    											newLeafNode(lv_temp_14_0, grammarAccess.getDiodeAccess().getTempNUMBERTerminalRuleCall_4_3_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getDiodeRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"temp",
            	    												lv_temp_14_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDiodeAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop23;
                }
            } while (true);


            }


            }

             
            				  getUnorderedGroupHelper().leave(grammarAccess.getDiodeAccess().getUnorderedGroup_4());
            				

            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDiode"


    // $ANTLR start "entryRuleDiodeModel"
    // InternalXSpice.g:2975:1: entryRuleDiodeModel returns [EObject current=null] : iv_ruleDiodeModel= ruleDiodeModel EOF ;
    public final EObject entryRuleDiodeModel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDiodeModel = null;


        try {
            // InternalXSpice.g:2975:51: (iv_ruleDiodeModel= ruleDiodeModel EOF )
            // InternalXSpice.g:2976:2: iv_ruleDiodeModel= ruleDiodeModel EOF
            {
             newCompositeNode(grammarAccess.getDiodeModelRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleDiodeModel=ruleDiodeModel();

            state._fsp--;

             current =iv_ruleDiodeModel; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDiodeModel"


    // $ANTLR start "ruleDiodeModel"
    // InternalXSpice.g:2982:1: ruleDiodeModel returns [EObject current=null] : (otherlv_0= '.MODEL' ( (lv_name_1_0= ruleLabel ) ) otherlv_2= 'D' otherlv_3= '(' ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'IS' otherlv_6= '=' ( (lv_saturationCurrent_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'RS' otherlv_9= '=' ( (lv_resistance_10_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'N' otherlv_12= '=' ( (lv_emissionCoefficient_13_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'TT' otherlv_15= '=' ( (lv_transitTime_16_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'CJO' otherlv_18= '=' ( (lv_junctionCap_19_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'VJ' otherlv_21= '=' ( (lv_junctionPotential_22_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'M' otherlv_24= '=' ( (lv_gradingCoefficient_25_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'EG' otherlv_27= '=' ( (lv_activationEnergy_28_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'XTI' otherlv_30= '=' ( (lv_saturationCurrentExp_31_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= 'KF' otherlv_33= '=' ( (lv_flickerNoiseCoefficient_34_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'AF' otherlv_36= '=' ( (lv_flickerNoiseExponent_37_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'FC' otherlv_39= '=' ( (lv_depletionCapCoefficient_40_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_41= 'BV' otherlv_42= '=' ( (lv_breakdownVoltage_43_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'IBV' otherlv_45= '=' ( (lv_breakdownCurrent_46_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'TNOM' otherlv_48= '=' ( (lv_nominalTemperature_49_0= RULE_NUMBER ) ) ) ) ) ) )* ) ) ) otherlv_50= ')' ) ;
    public final EObject ruleDiodeModel() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token lv_saturationCurrent_7_0=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token lv_resistance_10_0=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token lv_emissionCoefficient_13_0=null;
        Token otherlv_14=null;
        Token otherlv_15=null;
        Token lv_transitTime_16_0=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token lv_junctionCap_19_0=null;
        Token otherlv_20=null;
        Token otherlv_21=null;
        Token lv_junctionPotential_22_0=null;
        Token otherlv_23=null;
        Token otherlv_24=null;
        Token lv_gradingCoefficient_25_0=null;
        Token otherlv_26=null;
        Token otherlv_27=null;
        Token lv_activationEnergy_28_0=null;
        Token otherlv_29=null;
        Token otherlv_30=null;
        Token lv_saturationCurrentExp_31_0=null;
        Token otherlv_32=null;
        Token otherlv_33=null;
        Token lv_flickerNoiseCoefficient_34_0=null;
        Token otherlv_35=null;
        Token otherlv_36=null;
        Token lv_flickerNoiseExponent_37_0=null;
        Token otherlv_38=null;
        Token otherlv_39=null;
        Token lv_depletionCapCoefficient_40_0=null;
        Token otherlv_41=null;
        Token otherlv_42=null;
        Token lv_breakdownVoltage_43_0=null;
        Token otherlv_44=null;
        Token otherlv_45=null;
        Token lv_breakdownCurrent_46_0=null;
        Token otherlv_47=null;
        Token otherlv_48=null;
        Token lv_nominalTemperature_49_0=null;
        Token otherlv_50=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
            // InternalXSpice.g:2988:2: ( (otherlv_0= '.MODEL' ( (lv_name_1_0= ruleLabel ) ) otherlv_2= 'D' otherlv_3= '(' ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'IS' otherlv_6= '=' ( (lv_saturationCurrent_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'RS' otherlv_9= '=' ( (lv_resistance_10_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'N' otherlv_12= '=' ( (lv_emissionCoefficient_13_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'TT' otherlv_15= '=' ( (lv_transitTime_16_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'CJO' otherlv_18= '=' ( (lv_junctionCap_19_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'VJ' otherlv_21= '=' ( (lv_junctionPotential_22_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'M' otherlv_24= '=' ( (lv_gradingCoefficient_25_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'EG' otherlv_27= '=' ( (lv_activationEnergy_28_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'XTI' otherlv_30= '=' ( (lv_saturationCurrentExp_31_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= 'KF' otherlv_33= '=' ( (lv_flickerNoiseCoefficient_34_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'AF' otherlv_36= '=' ( (lv_flickerNoiseExponent_37_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'FC' otherlv_39= '=' ( (lv_depletionCapCoefficient_40_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_41= 'BV' otherlv_42= '=' ( (lv_breakdownVoltage_43_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'IBV' otherlv_45= '=' ( (lv_breakdownCurrent_46_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'TNOM' otherlv_48= '=' ( (lv_nominalTemperature_49_0= RULE_NUMBER ) ) ) ) ) ) )* ) ) ) otherlv_50= ')' ) )
            // InternalXSpice.g:2989:2: (otherlv_0= '.MODEL' ( (lv_name_1_0= ruleLabel ) ) otherlv_2= 'D' otherlv_3= '(' ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'IS' otherlv_6= '=' ( (lv_saturationCurrent_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'RS' otherlv_9= '=' ( (lv_resistance_10_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'N' otherlv_12= '=' ( (lv_emissionCoefficient_13_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'TT' otherlv_15= '=' ( (lv_transitTime_16_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'CJO' otherlv_18= '=' ( (lv_junctionCap_19_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'VJ' otherlv_21= '=' ( (lv_junctionPotential_22_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'M' otherlv_24= '=' ( (lv_gradingCoefficient_25_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'EG' otherlv_27= '=' ( (lv_activationEnergy_28_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'XTI' otherlv_30= '=' ( (lv_saturationCurrentExp_31_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= 'KF' otherlv_33= '=' ( (lv_flickerNoiseCoefficient_34_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'AF' otherlv_36= '=' ( (lv_flickerNoiseExponent_37_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'FC' otherlv_39= '=' ( (lv_depletionCapCoefficient_40_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_41= 'BV' otherlv_42= '=' ( (lv_breakdownVoltage_43_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'IBV' otherlv_45= '=' ( (lv_breakdownCurrent_46_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'TNOM' otherlv_48= '=' ( (lv_nominalTemperature_49_0= RULE_NUMBER ) ) ) ) ) ) )* ) ) ) otherlv_50= ')' )
            {
            // InternalXSpice.g:2989:2: (otherlv_0= '.MODEL' ( (lv_name_1_0= ruleLabel ) ) otherlv_2= 'D' otherlv_3= '(' ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'IS' otherlv_6= '=' ( (lv_saturationCurrent_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'RS' otherlv_9= '=' ( (lv_resistance_10_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'N' otherlv_12= '=' ( (lv_emissionCoefficient_13_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'TT' otherlv_15= '=' ( (lv_transitTime_16_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'CJO' otherlv_18= '=' ( (lv_junctionCap_19_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'VJ' otherlv_21= '=' ( (lv_junctionPotential_22_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'M' otherlv_24= '=' ( (lv_gradingCoefficient_25_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'EG' otherlv_27= '=' ( (lv_activationEnergy_28_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'XTI' otherlv_30= '=' ( (lv_saturationCurrentExp_31_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= 'KF' otherlv_33= '=' ( (lv_flickerNoiseCoefficient_34_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'AF' otherlv_36= '=' ( (lv_flickerNoiseExponent_37_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'FC' otherlv_39= '=' ( (lv_depletionCapCoefficient_40_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_41= 'BV' otherlv_42= '=' ( (lv_breakdownVoltage_43_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'IBV' otherlv_45= '=' ( (lv_breakdownCurrent_46_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'TNOM' otherlv_48= '=' ( (lv_nominalTemperature_49_0= RULE_NUMBER ) ) ) ) ) ) )* ) ) ) otherlv_50= ')' )
            // InternalXSpice.g:2990:3: otherlv_0= '.MODEL' ( (lv_name_1_0= ruleLabel ) ) otherlv_2= 'D' otherlv_3= '(' ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'IS' otherlv_6= '=' ( (lv_saturationCurrent_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'RS' otherlv_9= '=' ( (lv_resistance_10_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'N' otherlv_12= '=' ( (lv_emissionCoefficient_13_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'TT' otherlv_15= '=' ( (lv_transitTime_16_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'CJO' otherlv_18= '=' ( (lv_junctionCap_19_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'VJ' otherlv_21= '=' ( (lv_junctionPotential_22_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'M' otherlv_24= '=' ( (lv_gradingCoefficient_25_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'EG' otherlv_27= '=' ( (lv_activationEnergy_28_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'XTI' otherlv_30= '=' ( (lv_saturationCurrentExp_31_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= 'KF' otherlv_33= '=' ( (lv_flickerNoiseCoefficient_34_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'AF' otherlv_36= '=' ( (lv_flickerNoiseExponent_37_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'FC' otherlv_39= '=' ( (lv_depletionCapCoefficient_40_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_41= 'BV' otherlv_42= '=' ( (lv_breakdownVoltage_43_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'IBV' otherlv_45= '=' ( (lv_breakdownCurrent_46_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'TNOM' otherlv_48= '=' ( (lv_nominalTemperature_49_0= RULE_NUMBER ) ) ) ) ) ) )* ) ) ) otherlv_50= ')'
            {
            otherlv_0=(Token)match(input,43,FOLLOW_4); 

            			newLeafNode(otherlv_0, grammarAccess.getDiodeModelAccess().getMODELKeyword_0());
            		
            // InternalXSpice.g:2994:3: ( (lv_name_1_0= ruleLabel ) )
            // InternalXSpice.g:2995:4: (lv_name_1_0= ruleLabel )
            {
            // InternalXSpice.g:2995:4: (lv_name_1_0= ruleLabel )
            // InternalXSpice.g:2996:5: lv_name_1_0= ruleLabel
            {

            					newCompositeNode(grammarAccess.getDiodeModelAccess().getNameLabelParserRuleCall_1_0());
            				
            pushFollow(FOLLOW_34);
            lv_name_1_0=ruleLabel();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getDiodeModelRule());
            					}
            					set(
            						current,
            						"name",
            						lv_name_1_0,
            						"com.xtext.ravornyo.xspice.XSpice.Label");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            otherlv_2=(Token)match(input,68,FOLLOW_14); 

            			newLeafNode(otherlv_2, grammarAccess.getDiodeModelAccess().getDKeyword_2());
            		
            otherlv_3=(Token)match(input,45,FOLLOW_35); 

            			newLeafNode(otherlv_3, grammarAccess.getDiodeModelAccess().getLeftParenthesisKeyword_3());
            		
            // InternalXSpice.g:3021:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'IS' otherlv_6= '=' ( (lv_saturationCurrent_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'RS' otherlv_9= '=' ( (lv_resistance_10_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'N' otherlv_12= '=' ( (lv_emissionCoefficient_13_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'TT' otherlv_15= '=' ( (lv_transitTime_16_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'CJO' otherlv_18= '=' ( (lv_junctionCap_19_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'VJ' otherlv_21= '=' ( (lv_junctionPotential_22_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'M' otherlv_24= '=' ( (lv_gradingCoefficient_25_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'EG' otherlv_27= '=' ( (lv_activationEnergy_28_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'XTI' otherlv_30= '=' ( (lv_saturationCurrentExp_31_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= 'KF' otherlv_33= '=' ( (lv_flickerNoiseCoefficient_34_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'AF' otherlv_36= '=' ( (lv_flickerNoiseExponent_37_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'FC' otherlv_39= '=' ( (lv_depletionCapCoefficient_40_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_41= 'BV' otherlv_42= '=' ( (lv_breakdownVoltage_43_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'IBV' otherlv_45= '=' ( (lv_breakdownCurrent_46_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'TNOM' otherlv_48= '=' ( (lv_nominalTemperature_49_0= RULE_NUMBER ) ) ) ) ) ) )* ) ) )
            // InternalXSpice.g:3022:4: ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'IS' otherlv_6= '=' ( (lv_saturationCurrent_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'RS' otherlv_9= '=' ( (lv_resistance_10_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'N' otherlv_12= '=' ( (lv_emissionCoefficient_13_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'TT' otherlv_15= '=' ( (lv_transitTime_16_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'CJO' otherlv_18= '=' ( (lv_junctionCap_19_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'VJ' otherlv_21= '=' ( (lv_junctionPotential_22_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'M' otherlv_24= '=' ( (lv_gradingCoefficient_25_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'EG' otherlv_27= '=' ( (lv_activationEnergy_28_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'XTI' otherlv_30= '=' ( (lv_saturationCurrentExp_31_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= 'KF' otherlv_33= '=' ( (lv_flickerNoiseCoefficient_34_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'AF' otherlv_36= '=' ( (lv_flickerNoiseExponent_37_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'FC' otherlv_39= '=' ( (lv_depletionCapCoefficient_40_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_41= 'BV' otherlv_42= '=' ( (lv_breakdownVoltage_43_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'IBV' otherlv_45= '=' ( (lv_breakdownCurrent_46_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'TNOM' otherlv_48= '=' ( (lv_nominalTemperature_49_0= RULE_NUMBER ) ) ) ) ) ) )* ) )
            {
            // InternalXSpice.g:3022:4: ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'IS' otherlv_6= '=' ( (lv_saturationCurrent_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'RS' otherlv_9= '=' ( (lv_resistance_10_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'N' otherlv_12= '=' ( (lv_emissionCoefficient_13_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'TT' otherlv_15= '=' ( (lv_transitTime_16_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'CJO' otherlv_18= '=' ( (lv_junctionCap_19_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'VJ' otherlv_21= '=' ( (lv_junctionPotential_22_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'M' otherlv_24= '=' ( (lv_gradingCoefficient_25_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'EG' otherlv_27= '=' ( (lv_activationEnergy_28_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'XTI' otherlv_30= '=' ( (lv_saturationCurrentExp_31_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= 'KF' otherlv_33= '=' ( (lv_flickerNoiseCoefficient_34_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'AF' otherlv_36= '=' ( (lv_flickerNoiseExponent_37_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'FC' otherlv_39= '=' ( (lv_depletionCapCoefficient_40_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_41= 'BV' otherlv_42= '=' ( (lv_breakdownVoltage_43_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'IBV' otherlv_45= '=' ( (lv_breakdownCurrent_46_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'TNOM' otherlv_48= '=' ( (lv_nominalTemperature_49_0= RULE_NUMBER ) ) ) ) ) ) )* ) )
            // InternalXSpice.g:3023:5: ( ( ({...}? => ( ({...}? => (otherlv_5= 'IS' otherlv_6= '=' ( (lv_saturationCurrent_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'RS' otherlv_9= '=' ( (lv_resistance_10_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'N' otherlv_12= '=' ( (lv_emissionCoefficient_13_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'TT' otherlv_15= '=' ( (lv_transitTime_16_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'CJO' otherlv_18= '=' ( (lv_junctionCap_19_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'VJ' otherlv_21= '=' ( (lv_junctionPotential_22_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'M' otherlv_24= '=' ( (lv_gradingCoefficient_25_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'EG' otherlv_27= '=' ( (lv_activationEnergy_28_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'XTI' otherlv_30= '=' ( (lv_saturationCurrentExp_31_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= 'KF' otherlv_33= '=' ( (lv_flickerNoiseCoefficient_34_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'AF' otherlv_36= '=' ( (lv_flickerNoiseExponent_37_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'FC' otherlv_39= '=' ( (lv_depletionCapCoefficient_40_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_41= 'BV' otherlv_42= '=' ( (lv_breakdownVoltage_43_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'IBV' otherlv_45= '=' ( (lv_breakdownCurrent_46_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'TNOM' otherlv_48= '=' ( (lv_nominalTemperature_49_0= RULE_NUMBER ) ) ) ) ) ) )* )
            {
             
            				  getUnorderedGroupHelper().enter(grammarAccess.getDiodeModelAccess().getUnorderedGroup_4());
            				
            // InternalXSpice.g:3026:5: ( ( ({...}? => ( ({...}? => (otherlv_5= 'IS' otherlv_6= '=' ( (lv_saturationCurrent_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'RS' otherlv_9= '=' ( (lv_resistance_10_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'N' otherlv_12= '=' ( (lv_emissionCoefficient_13_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'TT' otherlv_15= '=' ( (lv_transitTime_16_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'CJO' otherlv_18= '=' ( (lv_junctionCap_19_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'VJ' otherlv_21= '=' ( (lv_junctionPotential_22_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'M' otherlv_24= '=' ( (lv_gradingCoefficient_25_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'EG' otherlv_27= '=' ( (lv_activationEnergy_28_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'XTI' otherlv_30= '=' ( (lv_saturationCurrentExp_31_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= 'KF' otherlv_33= '=' ( (lv_flickerNoiseCoefficient_34_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'AF' otherlv_36= '=' ( (lv_flickerNoiseExponent_37_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'FC' otherlv_39= '=' ( (lv_depletionCapCoefficient_40_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_41= 'BV' otherlv_42= '=' ( (lv_breakdownVoltage_43_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'IBV' otherlv_45= '=' ( (lv_breakdownCurrent_46_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'TNOM' otherlv_48= '=' ( (lv_nominalTemperature_49_0= RULE_NUMBER ) ) ) ) ) ) )* )
            // InternalXSpice.g:3027:6: ( ({...}? => ( ({...}? => (otherlv_5= 'IS' otherlv_6= '=' ( (lv_saturationCurrent_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'RS' otherlv_9= '=' ( (lv_resistance_10_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'N' otherlv_12= '=' ( (lv_emissionCoefficient_13_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'TT' otherlv_15= '=' ( (lv_transitTime_16_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'CJO' otherlv_18= '=' ( (lv_junctionCap_19_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'VJ' otherlv_21= '=' ( (lv_junctionPotential_22_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'M' otherlv_24= '=' ( (lv_gradingCoefficient_25_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'EG' otherlv_27= '=' ( (lv_activationEnergy_28_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'XTI' otherlv_30= '=' ( (lv_saturationCurrentExp_31_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= 'KF' otherlv_33= '=' ( (lv_flickerNoiseCoefficient_34_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'AF' otherlv_36= '=' ( (lv_flickerNoiseExponent_37_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'FC' otherlv_39= '=' ( (lv_depletionCapCoefficient_40_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_41= 'BV' otherlv_42= '=' ( (lv_breakdownVoltage_43_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'IBV' otherlv_45= '=' ( (lv_breakdownCurrent_46_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'TNOM' otherlv_48= '=' ( (lv_nominalTemperature_49_0= RULE_NUMBER ) ) ) ) ) ) )*
            {
            // InternalXSpice.g:3027:6: ( ({...}? => ( ({...}? => (otherlv_5= 'IS' otherlv_6= '=' ( (lv_saturationCurrent_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'RS' otherlv_9= '=' ( (lv_resistance_10_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'N' otherlv_12= '=' ( (lv_emissionCoefficient_13_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'TT' otherlv_15= '=' ( (lv_transitTime_16_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'CJO' otherlv_18= '=' ( (lv_junctionCap_19_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'VJ' otherlv_21= '=' ( (lv_junctionPotential_22_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'M' otherlv_24= '=' ( (lv_gradingCoefficient_25_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'EG' otherlv_27= '=' ( (lv_activationEnergy_28_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'XTI' otherlv_30= '=' ( (lv_saturationCurrentExp_31_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= 'KF' otherlv_33= '=' ( (lv_flickerNoiseCoefficient_34_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'AF' otherlv_36= '=' ( (lv_flickerNoiseExponent_37_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'FC' otherlv_39= '=' ( (lv_depletionCapCoefficient_40_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_41= 'BV' otherlv_42= '=' ( (lv_breakdownVoltage_43_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'IBV' otherlv_45= '=' ( (lv_breakdownCurrent_46_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'TNOM' otherlv_48= '=' ( (lv_nominalTemperature_49_0= RULE_NUMBER ) ) ) ) ) ) )*
            loop24:
            do {
                int alt24=16;
                alt24 = dfa24.predict(input);
                switch (alt24) {
            	case 1 :
            	    // InternalXSpice.g:3028:4: ({...}? => ( ({...}? => (otherlv_5= 'IS' otherlv_6= '=' ( (lv_saturationCurrent_7_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:3028:4: ({...}? => ( ({...}? => (otherlv_5= 'IS' otherlv_6= '=' ( (lv_saturationCurrent_7_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:3029:5: {...}? => ( ({...}? => (otherlv_5= 'IS' otherlv_6= '=' ( (lv_saturationCurrent_7_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDiodeModelAccess().getUnorderedGroup_4(), 0) ) {
            	        throw new FailedPredicateException(input, "ruleDiodeModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getDiodeModelAccess().getUnorderedGroup_4(), 0)");
            	    }
            	    // InternalXSpice.g:3029:107: ( ({...}? => (otherlv_5= 'IS' otherlv_6= '=' ( (lv_saturationCurrent_7_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:3030:6: ({...}? => (otherlv_5= 'IS' otherlv_6= '=' ( (lv_saturationCurrent_7_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getDiodeModelAccess().getUnorderedGroup_4(), 0);
            	    					
            	    // InternalXSpice.g:3033:9: ({...}? => (otherlv_5= 'IS' otherlv_6= '=' ( (lv_saturationCurrent_7_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:3033:10: {...}? => (otherlv_5= 'IS' otherlv_6= '=' ( (lv_saturationCurrent_7_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleDiodeModel", "true");
            	    }
            	    // InternalXSpice.g:3033:19: (otherlv_5= 'IS' otherlv_6= '=' ( (lv_saturationCurrent_7_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:3033:20: otherlv_5= 'IS' otherlv_6= '=' ( (lv_saturationCurrent_7_0= RULE_NUMBER ) )
            	    {
            	    otherlv_5=(Token)match(input,69,FOLLOW_11); 

            	    									newLeafNode(otherlv_5, grammarAccess.getDiodeModelAccess().getISKeyword_4_0_0());
            	    								
            	    otherlv_6=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_6, grammarAccess.getDiodeModelAccess().getEqualsSignKeyword_4_0_1());
            	    								
            	    // InternalXSpice.g:3041:9: ( (lv_saturationCurrent_7_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:3042:10: (lv_saturationCurrent_7_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:3042:10: (lv_saturationCurrent_7_0= RULE_NUMBER )
            	    // InternalXSpice.g:3043:11: lv_saturationCurrent_7_0= RULE_NUMBER
            	    {
            	    lv_saturationCurrent_7_0=(Token)match(input,RULE_NUMBER,FOLLOW_35); 

            	    											newLeafNode(lv_saturationCurrent_7_0, grammarAccess.getDiodeModelAccess().getSaturationCurrentNUMBERTerminalRuleCall_4_0_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getDiodeModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"saturationCurrent",
            	    												lv_saturationCurrent_7_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDiodeModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalXSpice.g:3065:4: ({...}? => ( ({...}? => (otherlv_8= 'RS' otherlv_9= '=' ( (lv_resistance_10_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:3065:4: ({...}? => ( ({...}? => (otherlv_8= 'RS' otherlv_9= '=' ( (lv_resistance_10_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:3066:5: {...}? => ( ({...}? => (otherlv_8= 'RS' otherlv_9= '=' ( (lv_resistance_10_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDiodeModelAccess().getUnorderedGroup_4(), 1) ) {
            	        throw new FailedPredicateException(input, "ruleDiodeModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getDiodeModelAccess().getUnorderedGroup_4(), 1)");
            	    }
            	    // InternalXSpice.g:3066:107: ( ({...}? => (otherlv_8= 'RS' otherlv_9= '=' ( (lv_resistance_10_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:3067:6: ({...}? => (otherlv_8= 'RS' otherlv_9= '=' ( (lv_resistance_10_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getDiodeModelAccess().getUnorderedGroup_4(), 1);
            	    					
            	    // InternalXSpice.g:3070:9: ({...}? => (otherlv_8= 'RS' otherlv_9= '=' ( (lv_resistance_10_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:3070:10: {...}? => (otherlv_8= 'RS' otherlv_9= '=' ( (lv_resistance_10_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleDiodeModel", "true");
            	    }
            	    // InternalXSpice.g:3070:19: (otherlv_8= 'RS' otherlv_9= '=' ( (lv_resistance_10_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:3070:20: otherlv_8= 'RS' otherlv_9= '=' ( (lv_resistance_10_0= RULE_NUMBER ) )
            	    {
            	    otherlv_8=(Token)match(input,70,FOLLOW_11); 

            	    									newLeafNode(otherlv_8, grammarAccess.getDiodeModelAccess().getRSKeyword_4_1_0());
            	    								
            	    otherlv_9=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_9, grammarAccess.getDiodeModelAccess().getEqualsSignKeyword_4_1_1());
            	    								
            	    // InternalXSpice.g:3078:9: ( (lv_resistance_10_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:3079:10: (lv_resistance_10_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:3079:10: (lv_resistance_10_0= RULE_NUMBER )
            	    // InternalXSpice.g:3080:11: lv_resistance_10_0= RULE_NUMBER
            	    {
            	    lv_resistance_10_0=(Token)match(input,RULE_NUMBER,FOLLOW_35); 

            	    											newLeafNode(lv_resistance_10_0, grammarAccess.getDiodeModelAccess().getResistanceNUMBERTerminalRuleCall_4_1_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getDiodeModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"resistance",
            	    												lv_resistance_10_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDiodeModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalXSpice.g:3102:4: ({...}? => ( ({...}? => (otherlv_11= 'N' otherlv_12= '=' ( (lv_emissionCoefficient_13_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:3102:4: ({...}? => ( ({...}? => (otherlv_11= 'N' otherlv_12= '=' ( (lv_emissionCoefficient_13_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:3103:5: {...}? => ( ({...}? => (otherlv_11= 'N' otherlv_12= '=' ( (lv_emissionCoefficient_13_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDiodeModelAccess().getUnorderedGroup_4(), 2) ) {
            	        throw new FailedPredicateException(input, "ruleDiodeModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getDiodeModelAccess().getUnorderedGroup_4(), 2)");
            	    }
            	    // InternalXSpice.g:3103:107: ( ({...}? => (otherlv_11= 'N' otherlv_12= '=' ( (lv_emissionCoefficient_13_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:3104:6: ({...}? => (otherlv_11= 'N' otherlv_12= '=' ( (lv_emissionCoefficient_13_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getDiodeModelAccess().getUnorderedGroup_4(), 2);
            	    					
            	    // InternalXSpice.g:3107:9: ({...}? => (otherlv_11= 'N' otherlv_12= '=' ( (lv_emissionCoefficient_13_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:3107:10: {...}? => (otherlv_11= 'N' otherlv_12= '=' ( (lv_emissionCoefficient_13_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleDiodeModel", "true");
            	    }
            	    // InternalXSpice.g:3107:19: (otherlv_11= 'N' otherlv_12= '=' ( (lv_emissionCoefficient_13_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:3107:20: otherlv_11= 'N' otherlv_12= '=' ( (lv_emissionCoefficient_13_0= RULE_NUMBER ) )
            	    {
            	    otherlv_11=(Token)match(input,71,FOLLOW_11); 

            	    									newLeafNode(otherlv_11, grammarAccess.getDiodeModelAccess().getNKeyword_4_2_0());
            	    								
            	    otherlv_12=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_12, grammarAccess.getDiodeModelAccess().getEqualsSignKeyword_4_2_1());
            	    								
            	    // InternalXSpice.g:3115:9: ( (lv_emissionCoefficient_13_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:3116:10: (lv_emissionCoefficient_13_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:3116:10: (lv_emissionCoefficient_13_0= RULE_NUMBER )
            	    // InternalXSpice.g:3117:11: lv_emissionCoefficient_13_0= RULE_NUMBER
            	    {
            	    lv_emissionCoefficient_13_0=(Token)match(input,RULE_NUMBER,FOLLOW_35); 

            	    											newLeafNode(lv_emissionCoefficient_13_0, grammarAccess.getDiodeModelAccess().getEmissionCoefficientNUMBERTerminalRuleCall_4_2_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getDiodeModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"emissionCoefficient",
            	    												lv_emissionCoefficient_13_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDiodeModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalXSpice.g:3139:4: ({...}? => ( ({...}? => (otherlv_14= 'TT' otherlv_15= '=' ( (lv_transitTime_16_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:3139:4: ({...}? => ( ({...}? => (otherlv_14= 'TT' otherlv_15= '=' ( (lv_transitTime_16_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:3140:5: {...}? => ( ({...}? => (otherlv_14= 'TT' otherlv_15= '=' ( (lv_transitTime_16_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDiodeModelAccess().getUnorderedGroup_4(), 3) ) {
            	        throw new FailedPredicateException(input, "ruleDiodeModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getDiodeModelAccess().getUnorderedGroup_4(), 3)");
            	    }
            	    // InternalXSpice.g:3140:107: ( ({...}? => (otherlv_14= 'TT' otherlv_15= '=' ( (lv_transitTime_16_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:3141:6: ({...}? => (otherlv_14= 'TT' otherlv_15= '=' ( (lv_transitTime_16_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getDiodeModelAccess().getUnorderedGroup_4(), 3);
            	    					
            	    // InternalXSpice.g:3144:9: ({...}? => (otherlv_14= 'TT' otherlv_15= '=' ( (lv_transitTime_16_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:3144:10: {...}? => (otherlv_14= 'TT' otherlv_15= '=' ( (lv_transitTime_16_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleDiodeModel", "true");
            	    }
            	    // InternalXSpice.g:3144:19: (otherlv_14= 'TT' otherlv_15= '=' ( (lv_transitTime_16_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:3144:20: otherlv_14= 'TT' otherlv_15= '=' ( (lv_transitTime_16_0= RULE_NUMBER ) )
            	    {
            	    otherlv_14=(Token)match(input,72,FOLLOW_11); 

            	    									newLeafNode(otherlv_14, grammarAccess.getDiodeModelAccess().getTTKeyword_4_3_0());
            	    								
            	    otherlv_15=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_15, grammarAccess.getDiodeModelAccess().getEqualsSignKeyword_4_3_1());
            	    								
            	    // InternalXSpice.g:3152:9: ( (lv_transitTime_16_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:3153:10: (lv_transitTime_16_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:3153:10: (lv_transitTime_16_0= RULE_NUMBER )
            	    // InternalXSpice.g:3154:11: lv_transitTime_16_0= RULE_NUMBER
            	    {
            	    lv_transitTime_16_0=(Token)match(input,RULE_NUMBER,FOLLOW_35); 

            	    											newLeafNode(lv_transitTime_16_0, grammarAccess.getDiodeModelAccess().getTransitTimeNUMBERTerminalRuleCall_4_3_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getDiodeModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"transitTime",
            	    												lv_transitTime_16_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDiodeModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalXSpice.g:3176:4: ({...}? => ( ({...}? => (otherlv_17= 'CJO' otherlv_18= '=' ( (lv_junctionCap_19_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:3176:4: ({...}? => ( ({...}? => (otherlv_17= 'CJO' otherlv_18= '=' ( (lv_junctionCap_19_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:3177:5: {...}? => ( ({...}? => (otherlv_17= 'CJO' otherlv_18= '=' ( (lv_junctionCap_19_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDiodeModelAccess().getUnorderedGroup_4(), 4) ) {
            	        throw new FailedPredicateException(input, "ruleDiodeModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getDiodeModelAccess().getUnorderedGroup_4(), 4)");
            	    }
            	    // InternalXSpice.g:3177:107: ( ({...}? => (otherlv_17= 'CJO' otherlv_18= '=' ( (lv_junctionCap_19_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:3178:6: ({...}? => (otherlv_17= 'CJO' otherlv_18= '=' ( (lv_junctionCap_19_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getDiodeModelAccess().getUnorderedGroup_4(), 4);
            	    					
            	    // InternalXSpice.g:3181:9: ({...}? => (otherlv_17= 'CJO' otherlv_18= '=' ( (lv_junctionCap_19_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:3181:10: {...}? => (otherlv_17= 'CJO' otherlv_18= '=' ( (lv_junctionCap_19_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleDiodeModel", "true");
            	    }
            	    // InternalXSpice.g:3181:19: (otherlv_17= 'CJO' otherlv_18= '=' ( (lv_junctionCap_19_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:3181:20: otherlv_17= 'CJO' otherlv_18= '=' ( (lv_junctionCap_19_0= RULE_NUMBER ) )
            	    {
            	    otherlv_17=(Token)match(input,73,FOLLOW_11); 

            	    									newLeafNode(otherlv_17, grammarAccess.getDiodeModelAccess().getCJOKeyword_4_4_0());
            	    								
            	    otherlv_18=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_18, grammarAccess.getDiodeModelAccess().getEqualsSignKeyword_4_4_1());
            	    								
            	    // InternalXSpice.g:3189:9: ( (lv_junctionCap_19_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:3190:10: (lv_junctionCap_19_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:3190:10: (lv_junctionCap_19_0= RULE_NUMBER )
            	    // InternalXSpice.g:3191:11: lv_junctionCap_19_0= RULE_NUMBER
            	    {
            	    lv_junctionCap_19_0=(Token)match(input,RULE_NUMBER,FOLLOW_35); 

            	    											newLeafNode(lv_junctionCap_19_0, grammarAccess.getDiodeModelAccess().getJunctionCapNUMBERTerminalRuleCall_4_4_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getDiodeModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"junctionCap",
            	    												lv_junctionCap_19_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDiodeModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalXSpice.g:3213:4: ({...}? => ( ({...}? => (otherlv_20= 'VJ' otherlv_21= '=' ( (lv_junctionPotential_22_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:3213:4: ({...}? => ( ({...}? => (otherlv_20= 'VJ' otherlv_21= '=' ( (lv_junctionPotential_22_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:3214:5: {...}? => ( ({...}? => (otherlv_20= 'VJ' otherlv_21= '=' ( (lv_junctionPotential_22_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDiodeModelAccess().getUnorderedGroup_4(), 5) ) {
            	        throw new FailedPredicateException(input, "ruleDiodeModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getDiodeModelAccess().getUnorderedGroup_4(), 5)");
            	    }
            	    // InternalXSpice.g:3214:107: ( ({...}? => (otherlv_20= 'VJ' otherlv_21= '=' ( (lv_junctionPotential_22_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:3215:6: ({...}? => (otherlv_20= 'VJ' otherlv_21= '=' ( (lv_junctionPotential_22_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getDiodeModelAccess().getUnorderedGroup_4(), 5);
            	    					
            	    // InternalXSpice.g:3218:9: ({...}? => (otherlv_20= 'VJ' otherlv_21= '=' ( (lv_junctionPotential_22_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:3218:10: {...}? => (otherlv_20= 'VJ' otherlv_21= '=' ( (lv_junctionPotential_22_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleDiodeModel", "true");
            	    }
            	    // InternalXSpice.g:3218:19: (otherlv_20= 'VJ' otherlv_21= '=' ( (lv_junctionPotential_22_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:3218:20: otherlv_20= 'VJ' otherlv_21= '=' ( (lv_junctionPotential_22_0= RULE_NUMBER ) )
            	    {
            	    otherlv_20=(Token)match(input,74,FOLLOW_11); 

            	    									newLeafNode(otherlv_20, grammarAccess.getDiodeModelAccess().getVJKeyword_4_5_0());
            	    								
            	    otherlv_21=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_21, grammarAccess.getDiodeModelAccess().getEqualsSignKeyword_4_5_1());
            	    								
            	    // InternalXSpice.g:3226:9: ( (lv_junctionPotential_22_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:3227:10: (lv_junctionPotential_22_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:3227:10: (lv_junctionPotential_22_0= RULE_NUMBER )
            	    // InternalXSpice.g:3228:11: lv_junctionPotential_22_0= RULE_NUMBER
            	    {
            	    lv_junctionPotential_22_0=(Token)match(input,RULE_NUMBER,FOLLOW_35); 

            	    											newLeafNode(lv_junctionPotential_22_0, grammarAccess.getDiodeModelAccess().getJunctionPotentialNUMBERTerminalRuleCall_4_5_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getDiodeModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"junctionPotential",
            	    												lv_junctionPotential_22_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDiodeModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // InternalXSpice.g:3250:4: ({...}? => ( ({...}? => (otherlv_23= 'M' otherlv_24= '=' ( (lv_gradingCoefficient_25_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:3250:4: ({...}? => ( ({...}? => (otherlv_23= 'M' otherlv_24= '=' ( (lv_gradingCoefficient_25_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:3251:5: {...}? => ( ({...}? => (otherlv_23= 'M' otherlv_24= '=' ( (lv_gradingCoefficient_25_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDiodeModelAccess().getUnorderedGroup_4(), 6) ) {
            	        throw new FailedPredicateException(input, "ruleDiodeModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getDiodeModelAccess().getUnorderedGroup_4(), 6)");
            	    }
            	    // InternalXSpice.g:3251:107: ( ({...}? => (otherlv_23= 'M' otherlv_24= '=' ( (lv_gradingCoefficient_25_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:3252:6: ({...}? => (otherlv_23= 'M' otherlv_24= '=' ( (lv_gradingCoefficient_25_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getDiodeModelAccess().getUnorderedGroup_4(), 6);
            	    					
            	    // InternalXSpice.g:3255:9: ({...}? => (otherlv_23= 'M' otherlv_24= '=' ( (lv_gradingCoefficient_25_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:3255:10: {...}? => (otherlv_23= 'M' otherlv_24= '=' ( (lv_gradingCoefficient_25_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleDiodeModel", "true");
            	    }
            	    // InternalXSpice.g:3255:19: (otherlv_23= 'M' otherlv_24= '=' ( (lv_gradingCoefficient_25_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:3255:20: otherlv_23= 'M' otherlv_24= '=' ( (lv_gradingCoefficient_25_0= RULE_NUMBER ) )
            	    {
            	    otherlv_23=(Token)match(input,75,FOLLOW_11); 

            	    									newLeafNode(otherlv_23, grammarAccess.getDiodeModelAccess().getMKeyword_4_6_0());
            	    								
            	    otherlv_24=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_24, grammarAccess.getDiodeModelAccess().getEqualsSignKeyword_4_6_1());
            	    								
            	    // InternalXSpice.g:3263:9: ( (lv_gradingCoefficient_25_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:3264:10: (lv_gradingCoefficient_25_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:3264:10: (lv_gradingCoefficient_25_0= RULE_NUMBER )
            	    // InternalXSpice.g:3265:11: lv_gradingCoefficient_25_0= RULE_NUMBER
            	    {
            	    lv_gradingCoefficient_25_0=(Token)match(input,RULE_NUMBER,FOLLOW_35); 

            	    											newLeafNode(lv_gradingCoefficient_25_0, grammarAccess.getDiodeModelAccess().getGradingCoefficientNUMBERTerminalRuleCall_4_6_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getDiodeModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"gradingCoefficient",
            	    												lv_gradingCoefficient_25_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDiodeModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 8 :
            	    // InternalXSpice.g:3287:4: ({...}? => ( ({...}? => (otherlv_26= 'EG' otherlv_27= '=' ( (lv_activationEnergy_28_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:3287:4: ({...}? => ( ({...}? => (otherlv_26= 'EG' otherlv_27= '=' ( (lv_activationEnergy_28_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:3288:5: {...}? => ( ({...}? => (otherlv_26= 'EG' otherlv_27= '=' ( (lv_activationEnergy_28_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDiodeModelAccess().getUnorderedGroup_4(), 7) ) {
            	        throw new FailedPredicateException(input, "ruleDiodeModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getDiodeModelAccess().getUnorderedGroup_4(), 7)");
            	    }
            	    // InternalXSpice.g:3288:107: ( ({...}? => (otherlv_26= 'EG' otherlv_27= '=' ( (lv_activationEnergy_28_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:3289:6: ({...}? => (otherlv_26= 'EG' otherlv_27= '=' ( (lv_activationEnergy_28_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getDiodeModelAccess().getUnorderedGroup_4(), 7);
            	    					
            	    // InternalXSpice.g:3292:9: ({...}? => (otherlv_26= 'EG' otherlv_27= '=' ( (lv_activationEnergy_28_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:3292:10: {...}? => (otherlv_26= 'EG' otherlv_27= '=' ( (lv_activationEnergy_28_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleDiodeModel", "true");
            	    }
            	    // InternalXSpice.g:3292:19: (otherlv_26= 'EG' otherlv_27= '=' ( (lv_activationEnergy_28_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:3292:20: otherlv_26= 'EG' otherlv_27= '=' ( (lv_activationEnergy_28_0= RULE_NUMBER ) )
            	    {
            	    otherlv_26=(Token)match(input,76,FOLLOW_11); 

            	    									newLeafNode(otherlv_26, grammarAccess.getDiodeModelAccess().getEGKeyword_4_7_0());
            	    								
            	    otherlv_27=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_27, grammarAccess.getDiodeModelAccess().getEqualsSignKeyword_4_7_1());
            	    								
            	    // InternalXSpice.g:3300:9: ( (lv_activationEnergy_28_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:3301:10: (lv_activationEnergy_28_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:3301:10: (lv_activationEnergy_28_0= RULE_NUMBER )
            	    // InternalXSpice.g:3302:11: lv_activationEnergy_28_0= RULE_NUMBER
            	    {
            	    lv_activationEnergy_28_0=(Token)match(input,RULE_NUMBER,FOLLOW_35); 

            	    											newLeafNode(lv_activationEnergy_28_0, grammarAccess.getDiodeModelAccess().getActivationEnergyNUMBERTerminalRuleCall_4_7_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getDiodeModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"activationEnergy",
            	    												lv_activationEnergy_28_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDiodeModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 9 :
            	    // InternalXSpice.g:3324:4: ({...}? => ( ({...}? => (otherlv_29= 'XTI' otherlv_30= '=' ( (lv_saturationCurrentExp_31_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:3324:4: ({...}? => ( ({...}? => (otherlv_29= 'XTI' otherlv_30= '=' ( (lv_saturationCurrentExp_31_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:3325:5: {...}? => ( ({...}? => (otherlv_29= 'XTI' otherlv_30= '=' ( (lv_saturationCurrentExp_31_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDiodeModelAccess().getUnorderedGroup_4(), 8) ) {
            	        throw new FailedPredicateException(input, "ruleDiodeModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getDiodeModelAccess().getUnorderedGroup_4(), 8)");
            	    }
            	    // InternalXSpice.g:3325:107: ( ({...}? => (otherlv_29= 'XTI' otherlv_30= '=' ( (lv_saturationCurrentExp_31_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:3326:6: ({...}? => (otherlv_29= 'XTI' otherlv_30= '=' ( (lv_saturationCurrentExp_31_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getDiodeModelAccess().getUnorderedGroup_4(), 8);
            	    					
            	    // InternalXSpice.g:3329:9: ({...}? => (otherlv_29= 'XTI' otherlv_30= '=' ( (lv_saturationCurrentExp_31_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:3329:10: {...}? => (otherlv_29= 'XTI' otherlv_30= '=' ( (lv_saturationCurrentExp_31_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleDiodeModel", "true");
            	    }
            	    // InternalXSpice.g:3329:19: (otherlv_29= 'XTI' otherlv_30= '=' ( (lv_saturationCurrentExp_31_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:3329:20: otherlv_29= 'XTI' otherlv_30= '=' ( (lv_saturationCurrentExp_31_0= RULE_NUMBER ) )
            	    {
            	    otherlv_29=(Token)match(input,77,FOLLOW_11); 

            	    									newLeafNode(otherlv_29, grammarAccess.getDiodeModelAccess().getXTIKeyword_4_8_0());
            	    								
            	    otherlv_30=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_30, grammarAccess.getDiodeModelAccess().getEqualsSignKeyword_4_8_1());
            	    								
            	    // InternalXSpice.g:3337:9: ( (lv_saturationCurrentExp_31_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:3338:10: (lv_saturationCurrentExp_31_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:3338:10: (lv_saturationCurrentExp_31_0= RULE_NUMBER )
            	    // InternalXSpice.g:3339:11: lv_saturationCurrentExp_31_0= RULE_NUMBER
            	    {
            	    lv_saturationCurrentExp_31_0=(Token)match(input,RULE_NUMBER,FOLLOW_35); 

            	    											newLeafNode(lv_saturationCurrentExp_31_0, grammarAccess.getDiodeModelAccess().getSaturationCurrentExpNUMBERTerminalRuleCall_4_8_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getDiodeModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"saturationCurrentExp",
            	    												lv_saturationCurrentExp_31_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDiodeModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 10 :
            	    // InternalXSpice.g:3361:4: ({...}? => ( ({...}? => (otherlv_32= 'KF' otherlv_33= '=' ( (lv_flickerNoiseCoefficient_34_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:3361:4: ({...}? => ( ({...}? => (otherlv_32= 'KF' otherlv_33= '=' ( (lv_flickerNoiseCoefficient_34_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:3362:5: {...}? => ( ({...}? => (otherlv_32= 'KF' otherlv_33= '=' ( (lv_flickerNoiseCoefficient_34_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDiodeModelAccess().getUnorderedGroup_4(), 9) ) {
            	        throw new FailedPredicateException(input, "ruleDiodeModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getDiodeModelAccess().getUnorderedGroup_4(), 9)");
            	    }
            	    // InternalXSpice.g:3362:107: ( ({...}? => (otherlv_32= 'KF' otherlv_33= '=' ( (lv_flickerNoiseCoefficient_34_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:3363:6: ({...}? => (otherlv_32= 'KF' otherlv_33= '=' ( (lv_flickerNoiseCoefficient_34_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getDiodeModelAccess().getUnorderedGroup_4(), 9);
            	    					
            	    // InternalXSpice.g:3366:9: ({...}? => (otherlv_32= 'KF' otherlv_33= '=' ( (lv_flickerNoiseCoefficient_34_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:3366:10: {...}? => (otherlv_32= 'KF' otherlv_33= '=' ( (lv_flickerNoiseCoefficient_34_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleDiodeModel", "true");
            	    }
            	    // InternalXSpice.g:3366:19: (otherlv_32= 'KF' otherlv_33= '=' ( (lv_flickerNoiseCoefficient_34_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:3366:20: otherlv_32= 'KF' otherlv_33= '=' ( (lv_flickerNoiseCoefficient_34_0= RULE_NUMBER ) )
            	    {
            	    otherlv_32=(Token)match(input,78,FOLLOW_11); 

            	    									newLeafNode(otherlv_32, grammarAccess.getDiodeModelAccess().getKFKeyword_4_9_0());
            	    								
            	    otherlv_33=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_33, grammarAccess.getDiodeModelAccess().getEqualsSignKeyword_4_9_1());
            	    								
            	    // InternalXSpice.g:3374:9: ( (lv_flickerNoiseCoefficient_34_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:3375:10: (lv_flickerNoiseCoefficient_34_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:3375:10: (lv_flickerNoiseCoefficient_34_0= RULE_NUMBER )
            	    // InternalXSpice.g:3376:11: lv_flickerNoiseCoefficient_34_0= RULE_NUMBER
            	    {
            	    lv_flickerNoiseCoefficient_34_0=(Token)match(input,RULE_NUMBER,FOLLOW_35); 

            	    											newLeafNode(lv_flickerNoiseCoefficient_34_0, grammarAccess.getDiodeModelAccess().getFlickerNoiseCoefficientNUMBERTerminalRuleCall_4_9_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getDiodeModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"flickerNoiseCoefficient",
            	    												lv_flickerNoiseCoefficient_34_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDiodeModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 11 :
            	    // InternalXSpice.g:3398:4: ({...}? => ( ({...}? => (otherlv_35= 'AF' otherlv_36= '=' ( (lv_flickerNoiseExponent_37_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:3398:4: ({...}? => ( ({...}? => (otherlv_35= 'AF' otherlv_36= '=' ( (lv_flickerNoiseExponent_37_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:3399:5: {...}? => ( ({...}? => (otherlv_35= 'AF' otherlv_36= '=' ( (lv_flickerNoiseExponent_37_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDiodeModelAccess().getUnorderedGroup_4(), 10) ) {
            	        throw new FailedPredicateException(input, "ruleDiodeModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getDiodeModelAccess().getUnorderedGroup_4(), 10)");
            	    }
            	    // InternalXSpice.g:3399:108: ( ({...}? => (otherlv_35= 'AF' otherlv_36= '=' ( (lv_flickerNoiseExponent_37_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:3400:6: ({...}? => (otherlv_35= 'AF' otherlv_36= '=' ( (lv_flickerNoiseExponent_37_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getDiodeModelAccess().getUnorderedGroup_4(), 10);
            	    					
            	    // InternalXSpice.g:3403:9: ({...}? => (otherlv_35= 'AF' otherlv_36= '=' ( (lv_flickerNoiseExponent_37_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:3403:10: {...}? => (otherlv_35= 'AF' otherlv_36= '=' ( (lv_flickerNoiseExponent_37_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleDiodeModel", "true");
            	    }
            	    // InternalXSpice.g:3403:19: (otherlv_35= 'AF' otherlv_36= '=' ( (lv_flickerNoiseExponent_37_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:3403:20: otherlv_35= 'AF' otherlv_36= '=' ( (lv_flickerNoiseExponent_37_0= RULE_NUMBER ) )
            	    {
            	    otherlv_35=(Token)match(input,79,FOLLOW_11); 

            	    									newLeafNode(otherlv_35, grammarAccess.getDiodeModelAccess().getAFKeyword_4_10_0());
            	    								
            	    otherlv_36=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_36, grammarAccess.getDiodeModelAccess().getEqualsSignKeyword_4_10_1());
            	    								
            	    // InternalXSpice.g:3411:9: ( (lv_flickerNoiseExponent_37_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:3412:10: (lv_flickerNoiseExponent_37_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:3412:10: (lv_flickerNoiseExponent_37_0= RULE_NUMBER )
            	    // InternalXSpice.g:3413:11: lv_flickerNoiseExponent_37_0= RULE_NUMBER
            	    {
            	    lv_flickerNoiseExponent_37_0=(Token)match(input,RULE_NUMBER,FOLLOW_35); 

            	    											newLeafNode(lv_flickerNoiseExponent_37_0, grammarAccess.getDiodeModelAccess().getFlickerNoiseExponentNUMBERTerminalRuleCall_4_10_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getDiodeModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"flickerNoiseExponent",
            	    												lv_flickerNoiseExponent_37_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDiodeModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 12 :
            	    // InternalXSpice.g:3435:4: ({...}? => ( ({...}? => (otherlv_38= 'FC' otherlv_39= '=' ( (lv_depletionCapCoefficient_40_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:3435:4: ({...}? => ( ({...}? => (otherlv_38= 'FC' otherlv_39= '=' ( (lv_depletionCapCoefficient_40_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:3436:5: {...}? => ( ({...}? => (otherlv_38= 'FC' otherlv_39= '=' ( (lv_depletionCapCoefficient_40_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDiodeModelAccess().getUnorderedGroup_4(), 11) ) {
            	        throw new FailedPredicateException(input, "ruleDiodeModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getDiodeModelAccess().getUnorderedGroup_4(), 11)");
            	    }
            	    // InternalXSpice.g:3436:108: ( ({...}? => (otherlv_38= 'FC' otherlv_39= '=' ( (lv_depletionCapCoefficient_40_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:3437:6: ({...}? => (otherlv_38= 'FC' otherlv_39= '=' ( (lv_depletionCapCoefficient_40_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getDiodeModelAccess().getUnorderedGroup_4(), 11);
            	    					
            	    // InternalXSpice.g:3440:9: ({...}? => (otherlv_38= 'FC' otherlv_39= '=' ( (lv_depletionCapCoefficient_40_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:3440:10: {...}? => (otherlv_38= 'FC' otherlv_39= '=' ( (lv_depletionCapCoefficient_40_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleDiodeModel", "true");
            	    }
            	    // InternalXSpice.g:3440:19: (otherlv_38= 'FC' otherlv_39= '=' ( (lv_depletionCapCoefficient_40_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:3440:20: otherlv_38= 'FC' otherlv_39= '=' ( (lv_depletionCapCoefficient_40_0= RULE_NUMBER ) )
            	    {
            	    otherlv_38=(Token)match(input,80,FOLLOW_11); 

            	    									newLeafNode(otherlv_38, grammarAccess.getDiodeModelAccess().getFCKeyword_4_11_0());
            	    								
            	    otherlv_39=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_39, grammarAccess.getDiodeModelAccess().getEqualsSignKeyword_4_11_1());
            	    								
            	    // InternalXSpice.g:3448:9: ( (lv_depletionCapCoefficient_40_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:3449:10: (lv_depletionCapCoefficient_40_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:3449:10: (lv_depletionCapCoefficient_40_0= RULE_NUMBER )
            	    // InternalXSpice.g:3450:11: lv_depletionCapCoefficient_40_0= RULE_NUMBER
            	    {
            	    lv_depletionCapCoefficient_40_0=(Token)match(input,RULE_NUMBER,FOLLOW_35); 

            	    											newLeafNode(lv_depletionCapCoefficient_40_0, grammarAccess.getDiodeModelAccess().getDepletionCapCoefficientNUMBERTerminalRuleCall_4_11_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getDiodeModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"depletionCapCoefficient",
            	    												lv_depletionCapCoefficient_40_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDiodeModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 13 :
            	    // InternalXSpice.g:3472:4: ({...}? => ( ({...}? => (otherlv_41= 'BV' otherlv_42= '=' ( (lv_breakdownVoltage_43_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:3472:4: ({...}? => ( ({...}? => (otherlv_41= 'BV' otherlv_42= '=' ( (lv_breakdownVoltage_43_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:3473:5: {...}? => ( ({...}? => (otherlv_41= 'BV' otherlv_42= '=' ( (lv_breakdownVoltage_43_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDiodeModelAccess().getUnorderedGroup_4(), 12) ) {
            	        throw new FailedPredicateException(input, "ruleDiodeModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getDiodeModelAccess().getUnorderedGroup_4(), 12)");
            	    }
            	    // InternalXSpice.g:3473:108: ( ({...}? => (otherlv_41= 'BV' otherlv_42= '=' ( (lv_breakdownVoltage_43_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:3474:6: ({...}? => (otherlv_41= 'BV' otherlv_42= '=' ( (lv_breakdownVoltage_43_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getDiodeModelAccess().getUnorderedGroup_4(), 12);
            	    					
            	    // InternalXSpice.g:3477:9: ({...}? => (otherlv_41= 'BV' otherlv_42= '=' ( (lv_breakdownVoltage_43_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:3477:10: {...}? => (otherlv_41= 'BV' otherlv_42= '=' ( (lv_breakdownVoltage_43_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleDiodeModel", "true");
            	    }
            	    // InternalXSpice.g:3477:19: (otherlv_41= 'BV' otherlv_42= '=' ( (lv_breakdownVoltage_43_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:3477:20: otherlv_41= 'BV' otherlv_42= '=' ( (lv_breakdownVoltage_43_0= RULE_NUMBER ) )
            	    {
            	    otherlv_41=(Token)match(input,81,FOLLOW_11); 

            	    									newLeafNode(otherlv_41, grammarAccess.getDiodeModelAccess().getBVKeyword_4_12_0());
            	    								
            	    otherlv_42=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_42, grammarAccess.getDiodeModelAccess().getEqualsSignKeyword_4_12_1());
            	    								
            	    // InternalXSpice.g:3485:9: ( (lv_breakdownVoltage_43_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:3486:10: (lv_breakdownVoltage_43_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:3486:10: (lv_breakdownVoltage_43_0= RULE_NUMBER )
            	    // InternalXSpice.g:3487:11: lv_breakdownVoltage_43_0= RULE_NUMBER
            	    {
            	    lv_breakdownVoltage_43_0=(Token)match(input,RULE_NUMBER,FOLLOW_35); 

            	    											newLeafNode(lv_breakdownVoltage_43_0, grammarAccess.getDiodeModelAccess().getBreakdownVoltageNUMBERTerminalRuleCall_4_12_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getDiodeModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"breakdownVoltage",
            	    												lv_breakdownVoltage_43_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDiodeModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 14 :
            	    // InternalXSpice.g:3509:4: ({...}? => ( ({...}? => (otherlv_44= 'IBV' otherlv_45= '=' ( (lv_breakdownCurrent_46_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:3509:4: ({...}? => ( ({...}? => (otherlv_44= 'IBV' otherlv_45= '=' ( (lv_breakdownCurrent_46_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:3510:5: {...}? => ( ({...}? => (otherlv_44= 'IBV' otherlv_45= '=' ( (lv_breakdownCurrent_46_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDiodeModelAccess().getUnorderedGroup_4(), 13) ) {
            	        throw new FailedPredicateException(input, "ruleDiodeModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getDiodeModelAccess().getUnorderedGroup_4(), 13)");
            	    }
            	    // InternalXSpice.g:3510:108: ( ({...}? => (otherlv_44= 'IBV' otherlv_45= '=' ( (lv_breakdownCurrent_46_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:3511:6: ({...}? => (otherlv_44= 'IBV' otherlv_45= '=' ( (lv_breakdownCurrent_46_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getDiodeModelAccess().getUnorderedGroup_4(), 13);
            	    					
            	    // InternalXSpice.g:3514:9: ({...}? => (otherlv_44= 'IBV' otherlv_45= '=' ( (lv_breakdownCurrent_46_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:3514:10: {...}? => (otherlv_44= 'IBV' otherlv_45= '=' ( (lv_breakdownCurrent_46_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleDiodeModel", "true");
            	    }
            	    // InternalXSpice.g:3514:19: (otherlv_44= 'IBV' otherlv_45= '=' ( (lv_breakdownCurrent_46_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:3514:20: otherlv_44= 'IBV' otherlv_45= '=' ( (lv_breakdownCurrent_46_0= RULE_NUMBER ) )
            	    {
            	    otherlv_44=(Token)match(input,82,FOLLOW_11); 

            	    									newLeafNode(otherlv_44, grammarAccess.getDiodeModelAccess().getIBVKeyword_4_13_0());
            	    								
            	    otherlv_45=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_45, grammarAccess.getDiodeModelAccess().getEqualsSignKeyword_4_13_1());
            	    								
            	    // InternalXSpice.g:3522:9: ( (lv_breakdownCurrent_46_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:3523:10: (lv_breakdownCurrent_46_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:3523:10: (lv_breakdownCurrent_46_0= RULE_NUMBER )
            	    // InternalXSpice.g:3524:11: lv_breakdownCurrent_46_0= RULE_NUMBER
            	    {
            	    lv_breakdownCurrent_46_0=(Token)match(input,RULE_NUMBER,FOLLOW_35); 

            	    											newLeafNode(lv_breakdownCurrent_46_0, grammarAccess.getDiodeModelAccess().getBreakdownCurrentNUMBERTerminalRuleCall_4_13_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getDiodeModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"breakdownCurrent",
            	    												lv_breakdownCurrent_46_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDiodeModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 15 :
            	    // InternalXSpice.g:3546:4: ({...}? => ( ({...}? => (otherlv_47= 'TNOM' otherlv_48= '=' ( (lv_nominalTemperature_49_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:3546:4: ({...}? => ( ({...}? => (otherlv_47= 'TNOM' otherlv_48= '=' ( (lv_nominalTemperature_49_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:3547:5: {...}? => ( ({...}? => (otherlv_47= 'TNOM' otherlv_48= '=' ( (lv_nominalTemperature_49_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDiodeModelAccess().getUnorderedGroup_4(), 14) ) {
            	        throw new FailedPredicateException(input, "ruleDiodeModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getDiodeModelAccess().getUnorderedGroup_4(), 14)");
            	    }
            	    // InternalXSpice.g:3547:108: ( ({...}? => (otherlv_47= 'TNOM' otherlv_48= '=' ( (lv_nominalTemperature_49_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:3548:6: ({...}? => (otherlv_47= 'TNOM' otherlv_48= '=' ( (lv_nominalTemperature_49_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getDiodeModelAccess().getUnorderedGroup_4(), 14);
            	    					
            	    // InternalXSpice.g:3551:9: ({...}? => (otherlv_47= 'TNOM' otherlv_48= '=' ( (lv_nominalTemperature_49_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:3551:10: {...}? => (otherlv_47= 'TNOM' otherlv_48= '=' ( (lv_nominalTemperature_49_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleDiodeModel", "true");
            	    }
            	    // InternalXSpice.g:3551:19: (otherlv_47= 'TNOM' otherlv_48= '=' ( (lv_nominalTemperature_49_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:3551:20: otherlv_47= 'TNOM' otherlv_48= '=' ( (lv_nominalTemperature_49_0= RULE_NUMBER ) )
            	    {
            	    otherlv_47=(Token)match(input,51,FOLLOW_11); 

            	    									newLeafNode(otherlv_47, grammarAccess.getDiodeModelAccess().getTNOMKeyword_4_14_0());
            	    								
            	    otherlv_48=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_48, grammarAccess.getDiodeModelAccess().getEqualsSignKeyword_4_14_1());
            	    								
            	    // InternalXSpice.g:3559:9: ( (lv_nominalTemperature_49_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:3560:10: (lv_nominalTemperature_49_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:3560:10: (lv_nominalTemperature_49_0= RULE_NUMBER )
            	    // InternalXSpice.g:3561:11: lv_nominalTemperature_49_0= RULE_NUMBER
            	    {
            	    lv_nominalTemperature_49_0=(Token)match(input,RULE_NUMBER,FOLLOW_35); 

            	    											newLeafNode(lv_nominalTemperature_49_0, grammarAccess.getDiodeModelAccess().getNominalTemperatureNUMBERTerminalRuleCall_4_14_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getDiodeModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"nominalTemperature",
            	    												lv_nominalTemperature_49_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDiodeModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop24;
                }
            } while (true);


            }


            }

             
            				  getUnorderedGroupHelper().leave(grammarAccess.getDiodeModelAccess().getUnorderedGroup_4());
            				

            }

            otherlv_50=(Token)match(input,52,FOLLOW_2); 

            			newLeafNode(otherlv_50, grammarAccess.getDiodeModelAccess().getRightParenthesisKeyword_5());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDiodeModel"


    // $ANTLR start "entryRuleMOSFET"
    // InternalXSpice.g:3598:1: entryRuleMOSFET returns [EObject current=null] : iv_ruleMOSFET= ruleMOSFET EOF ;
    public final EObject entryRuleMOSFET() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMOSFET = null;


        try {
            // InternalXSpice.g:3598:47: (iv_ruleMOSFET= ruleMOSFET EOF )
            // InternalXSpice.g:3599:2: iv_ruleMOSFET= ruleMOSFET EOF
            {
             newCompositeNode(grammarAccess.getMOSFETRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleMOSFET=ruleMOSFET();

            state._fsp--;

             current =iv_ruleMOSFET; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMOSFET"


    // $ANTLR start "ruleMOSFET"
    // InternalXSpice.g:3605:1: ruleMOSFET returns [EObject current=null] : ( ( ( (lv_name_0_1= RULE_MNID | lv_name_0_2= RULE_MPID ) ) ) ( (lv_nodes_1_0= RULE_NODE ) ) ( (lv_nodes_2_0= RULE_NODE ) ) ( (lv_nodes_3_0= RULE_NODE ) ) ( (lv_nodes_4_0= RULE_NODE ) ) ( (lv_model_5_0= ruleLabel ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_7= 'L' otherlv_8= '=' ( (lv_length_9_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'W' otherlv_11= '=' ( (lv_width_12_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'AD' otherlv_14= '=' ( (lv_drainArea_15_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'AS' otherlv_17= '=' ( (lv_sourceArea_18_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'PD' otherlv_20= '=' ( (lv_drainPerimeter_21_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'PS' otherlv_23= '=' ( (lv_sourcePerimeter_24_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'NRD' otherlv_26= '=' ( (lv_drainSquares_27_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'NRS' otherlv_29= '=' ( (lv_sourceSquares_30_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_off_31_0= 'OFF' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= 'IC' otherlv_33= '=' ( (lv_ic_34_0= RULE_NUMBER ) ) otherlv_35= ',' ( (lv_ic_36_0= RULE_NUMBER ) ) otherlv_37= ',' ( (lv_ic_38_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'TEMP' otherlv_40= '=' ( (lv_temp_41_0= RULE_NUMBER ) ) ) ) ) ) )* ) ) ) ) ;
    public final EObject ruleMOSFET() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_1=null;
        Token lv_name_0_2=null;
        Token lv_nodes_1_0=null;
        Token lv_nodes_2_0=null;
        Token lv_nodes_3_0=null;
        Token lv_nodes_4_0=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token lv_length_9_0=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token lv_width_12_0=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        Token lv_drainArea_15_0=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        Token lv_sourceArea_18_0=null;
        Token otherlv_19=null;
        Token otherlv_20=null;
        Token lv_drainPerimeter_21_0=null;
        Token otherlv_22=null;
        Token otherlv_23=null;
        Token lv_sourcePerimeter_24_0=null;
        Token otherlv_25=null;
        Token otherlv_26=null;
        Token lv_drainSquares_27_0=null;
        Token otherlv_28=null;
        Token otherlv_29=null;
        Token lv_sourceSquares_30_0=null;
        Token lv_off_31_0=null;
        Token otherlv_32=null;
        Token otherlv_33=null;
        Token lv_ic_34_0=null;
        Token otherlv_35=null;
        Token lv_ic_36_0=null;
        Token otherlv_37=null;
        Token lv_ic_38_0=null;
        Token otherlv_39=null;
        Token otherlv_40=null;
        Token lv_temp_41_0=null;
        AntlrDatatypeRuleToken lv_model_5_0 = null;



        	enterRule();

        try {
            // InternalXSpice.g:3611:2: ( ( ( ( (lv_name_0_1= RULE_MNID | lv_name_0_2= RULE_MPID ) ) ) ( (lv_nodes_1_0= RULE_NODE ) ) ( (lv_nodes_2_0= RULE_NODE ) ) ( (lv_nodes_3_0= RULE_NODE ) ) ( (lv_nodes_4_0= RULE_NODE ) ) ( (lv_model_5_0= ruleLabel ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_7= 'L' otherlv_8= '=' ( (lv_length_9_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'W' otherlv_11= '=' ( (lv_width_12_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'AD' otherlv_14= '=' ( (lv_drainArea_15_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'AS' otherlv_17= '=' ( (lv_sourceArea_18_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'PD' otherlv_20= '=' ( (lv_drainPerimeter_21_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'PS' otherlv_23= '=' ( (lv_sourcePerimeter_24_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'NRD' otherlv_26= '=' ( (lv_drainSquares_27_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'NRS' otherlv_29= '=' ( (lv_sourceSquares_30_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_off_31_0= 'OFF' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= 'IC' otherlv_33= '=' ( (lv_ic_34_0= RULE_NUMBER ) ) otherlv_35= ',' ( (lv_ic_36_0= RULE_NUMBER ) ) otherlv_37= ',' ( (lv_ic_38_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'TEMP' otherlv_40= '=' ( (lv_temp_41_0= RULE_NUMBER ) ) ) ) ) ) )* ) ) ) ) )
            // InternalXSpice.g:3612:2: ( ( ( (lv_name_0_1= RULE_MNID | lv_name_0_2= RULE_MPID ) ) ) ( (lv_nodes_1_0= RULE_NODE ) ) ( (lv_nodes_2_0= RULE_NODE ) ) ( (lv_nodes_3_0= RULE_NODE ) ) ( (lv_nodes_4_0= RULE_NODE ) ) ( (lv_model_5_0= ruleLabel ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_7= 'L' otherlv_8= '=' ( (lv_length_9_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'W' otherlv_11= '=' ( (lv_width_12_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'AD' otherlv_14= '=' ( (lv_drainArea_15_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'AS' otherlv_17= '=' ( (lv_sourceArea_18_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'PD' otherlv_20= '=' ( (lv_drainPerimeter_21_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'PS' otherlv_23= '=' ( (lv_sourcePerimeter_24_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'NRD' otherlv_26= '=' ( (lv_drainSquares_27_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'NRS' otherlv_29= '=' ( (lv_sourceSquares_30_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_off_31_0= 'OFF' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= 'IC' otherlv_33= '=' ( (lv_ic_34_0= RULE_NUMBER ) ) otherlv_35= ',' ( (lv_ic_36_0= RULE_NUMBER ) ) otherlv_37= ',' ( (lv_ic_38_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'TEMP' otherlv_40= '=' ( (lv_temp_41_0= RULE_NUMBER ) ) ) ) ) ) )* ) ) ) )
            {
            // InternalXSpice.g:3612:2: ( ( ( (lv_name_0_1= RULE_MNID | lv_name_0_2= RULE_MPID ) ) ) ( (lv_nodes_1_0= RULE_NODE ) ) ( (lv_nodes_2_0= RULE_NODE ) ) ( (lv_nodes_3_0= RULE_NODE ) ) ( (lv_nodes_4_0= RULE_NODE ) ) ( (lv_model_5_0= ruleLabel ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_7= 'L' otherlv_8= '=' ( (lv_length_9_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'W' otherlv_11= '=' ( (lv_width_12_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'AD' otherlv_14= '=' ( (lv_drainArea_15_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'AS' otherlv_17= '=' ( (lv_sourceArea_18_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'PD' otherlv_20= '=' ( (lv_drainPerimeter_21_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'PS' otherlv_23= '=' ( (lv_sourcePerimeter_24_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'NRD' otherlv_26= '=' ( (lv_drainSquares_27_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'NRS' otherlv_29= '=' ( (lv_sourceSquares_30_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_off_31_0= 'OFF' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= 'IC' otherlv_33= '=' ( (lv_ic_34_0= RULE_NUMBER ) ) otherlv_35= ',' ( (lv_ic_36_0= RULE_NUMBER ) ) otherlv_37= ',' ( (lv_ic_38_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'TEMP' otherlv_40= '=' ( (lv_temp_41_0= RULE_NUMBER ) ) ) ) ) ) )* ) ) ) )
            // InternalXSpice.g:3613:3: ( ( (lv_name_0_1= RULE_MNID | lv_name_0_2= RULE_MPID ) ) ) ( (lv_nodes_1_0= RULE_NODE ) ) ( (lv_nodes_2_0= RULE_NODE ) ) ( (lv_nodes_3_0= RULE_NODE ) ) ( (lv_nodes_4_0= RULE_NODE ) ) ( (lv_model_5_0= ruleLabel ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_7= 'L' otherlv_8= '=' ( (lv_length_9_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'W' otherlv_11= '=' ( (lv_width_12_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'AD' otherlv_14= '=' ( (lv_drainArea_15_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'AS' otherlv_17= '=' ( (lv_sourceArea_18_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'PD' otherlv_20= '=' ( (lv_drainPerimeter_21_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'PS' otherlv_23= '=' ( (lv_sourcePerimeter_24_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'NRD' otherlv_26= '=' ( (lv_drainSquares_27_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'NRS' otherlv_29= '=' ( (lv_sourceSquares_30_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_off_31_0= 'OFF' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= 'IC' otherlv_33= '=' ( (lv_ic_34_0= RULE_NUMBER ) ) otherlv_35= ',' ( (lv_ic_36_0= RULE_NUMBER ) ) otherlv_37= ',' ( (lv_ic_38_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'TEMP' otherlv_40= '=' ( (lv_temp_41_0= RULE_NUMBER ) ) ) ) ) ) )* ) ) )
            {
            // InternalXSpice.g:3613:3: ( ( (lv_name_0_1= RULE_MNID | lv_name_0_2= RULE_MPID ) ) )
            // InternalXSpice.g:3614:4: ( (lv_name_0_1= RULE_MNID | lv_name_0_2= RULE_MPID ) )
            {
            // InternalXSpice.g:3614:4: ( (lv_name_0_1= RULE_MNID | lv_name_0_2= RULE_MPID ) )
            // InternalXSpice.g:3615:5: (lv_name_0_1= RULE_MNID | lv_name_0_2= RULE_MPID )
            {
            // InternalXSpice.g:3615:5: (lv_name_0_1= RULE_MNID | lv_name_0_2= RULE_MPID )
            int alt25=2;
            int LA25_0 = input.LA(1);

            if ( (LA25_0==RULE_MNID) ) {
                alt25=1;
            }
            else if ( (LA25_0==RULE_MPID) ) {
                alt25=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 25, 0, input);

                throw nvae;
            }
            switch (alt25) {
                case 1 :
                    // InternalXSpice.g:3616:6: lv_name_0_1= RULE_MNID
                    {
                    lv_name_0_1=(Token)match(input,RULE_MNID,FOLLOW_5); 

                    						newLeafNode(lv_name_0_1, grammarAccess.getMOSFETAccess().getNameMNIDTerminalRuleCall_0_0_0());
                    					

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getMOSFETRule());
                    						}
                    						setWithLastConsumed(
                    							current,
                    							"name",
                    							lv_name_0_1,
                    							"com.xtext.ravornyo.xspice.XSpice.MNID");
                    					

                    }
                    break;
                case 2 :
                    // InternalXSpice.g:3631:6: lv_name_0_2= RULE_MPID
                    {
                    lv_name_0_2=(Token)match(input,RULE_MPID,FOLLOW_5); 

                    						newLeafNode(lv_name_0_2, grammarAccess.getMOSFETAccess().getNameMPIDTerminalRuleCall_0_0_1());
                    					

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getMOSFETRule());
                    						}
                    						setWithLastConsumed(
                    							current,
                    							"name",
                    							lv_name_0_2,
                    							"com.xtext.ravornyo.xspice.XSpice.MPID");
                    					

                    }
                    break;

            }


            }


            }

            // InternalXSpice.g:3648:3: ( (lv_nodes_1_0= RULE_NODE ) )
            // InternalXSpice.g:3649:4: (lv_nodes_1_0= RULE_NODE )
            {
            // InternalXSpice.g:3649:4: (lv_nodes_1_0= RULE_NODE )
            // InternalXSpice.g:3650:5: lv_nodes_1_0= RULE_NODE
            {
            lv_nodes_1_0=(Token)match(input,RULE_NODE,FOLLOW_5); 

            					newLeafNode(lv_nodes_1_0, grammarAccess.getMOSFETAccess().getNodesNODETerminalRuleCall_1_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getMOSFETRule());
            					}
            					addWithLastConsumed(
            						current,
            						"nodes",
            						lv_nodes_1_0,
            						"com.xtext.ravornyo.xspice.XSpice.NODE");
            				

            }


            }

            // InternalXSpice.g:3666:3: ( (lv_nodes_2_0= RULE_NODE ) )
            // InternalXSpice.g:3667:4: (lv_nodes_2_0= RULE_NODE )
            {
            // InternalXSpice.g:3667:4: (lv_nodes_2_0= RULE_NODE )
            // InternalXSpice.g:3668:5: lv_nodes_2_0= RULE_NODE
            {
            lv_nodes_2_0=(Token)match(input,RULE_NODE,FOLLOW_5); 

            					newLeafNode(lv_nodes_2_0, grammarAccess.getMOSFETAccess().getNodesNODETerminalRuleCall_2_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getMOSFETRule());
            					}
            					addWithLastConsumed(
            						current,
            						"nodes",
            						lv_nodes_2_0,
            						"com.xtext.ravornyo.xspice.XSpice.NODE");
            				

            }


            }

            // InternalXSpice.g:3684:3: ( (lv_nodes_3_0= RULE_NODE ) )
            // InternalXSpice.g:3685:4: (lv_nodes_3_0= RULE_NODE )
            {
            // InternalXSpice.g:3685:4: (lv_nodes_3_0= RULE_NODE )
            // InternalXSpice.g:3686:5: lv_nodes_3_0= RULE_NODE
            {
            lv_nodes_3_0=(Token)match(input,RULE_NODE,FOLLOW_5); 

            					newLeafNode(lv_nodes_3_0, grammarAccess.getMOSFETAccess().getNodesNODETerminalRuleCall_3_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getMOSFETRule());
            					}
            					addWithLastConsumed(
            						current,
            						"nodes",
            						lv_nodes_3_0,
            						"com.xtext.ravornyo.xspice.XSpice.NODE");
            				

            }


            }

            // InternalXSpice.g:3702:3: ( (lv_nodes_4_0= RULE_NODE ) )
            // InternalXSpice.g:3703:4: (lv_nodes_4_0= RULE_NODE )
            {
            // InternalXSpice.g:3703:4: (lv_nodes_4_0= RULE_NODE )
            // InternalXSpice.g:3704:5: lv_nodes_4_0= RULE_NODE
            {
            lv_nodes_4_0=(Token)match(input,RULE_NODE,FOLLOW_4); 

            					newLeafNode(lv_nodes_4_0, grammarAccess.getMOSFETAccess().getNodesNODETerminalRuleCall_4_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getMOSFETRule());
            					}
            					addWithLastConsumed(
            						current,
            						"nodes",
            						lv_nodes_4_0,
            						"com.xtext.ravornyo.xspice.XSpice.NODE");
            				

            }


            }

            // InternalXSpice.g:3720:3: ( (lv_model_5_0= ruleLabel ) )
            // InternalXSpice.g:3721:4: (lv_model_5_0= ruleLabel )
            {
            // InternalXSpice.g:3721:4: (lv_model_5_0= ruleLabel )
            // InternalXSpice.g:3722:5: lv_model_5_0= ruleLabel
            {

            					newCompositeNode(grammarAccess.getMOSFETAccess().getModelLabelParserRuleCall_5_0());
            				
            pushFollow(FOLLOW_36);
            lv_model_5_0=ruleLabel();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getMOSFETRule());
            					}
            					set(
            						current,
            						"model",
            						lv_model_5_0,
            						"com.xtext.ravornyo.xspice.XSpice.Label");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            // InternalXSpice.g:3739:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_7= 'L' otherlv_8= '=' ( (lv_length_9_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'W' otherlv_11= '=' ( (lv_width_12_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'AD' otherlv_14= '=' ( (lv_drainArea_15_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'AS' otherlv_17= '=' ( (lv_sourceArea_18_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'PD' otherlv_20= '=' ( (lv_drainPerimeter_21_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'PS' otherlv_23= '=' ( (lv_sourcePerimeter_24_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'NRD' otherlv_26= '=' ( (lv_drainSquares_27_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'NRS' otherlv_29= '=' ( (lv_sourceSquares_30_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_off_31_0= 'OFF' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= 'IC' otherlv_33= '=' ( (lv_ic_34_0= RULE_NUMBER ) ) otherlv_35= ',' ( (lv_ic_36_0= RULE_NUMBER ) ) otherlv_37= ',' ( (lv_ic_38_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'TEMP' otherlv_40= '=' ( (lv_temp_41_0= RULE_NUMBER ) ) ) ) ) ) )* ) ) )
            // InternalXSpice.g:3740:4: ( ( ( ({...}? => ( ({...}? => (otherlv_7= 'L' otherlv_8= '=' ( (lv_length_9_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'W' otherlv_11= '=' ( (lv_width_12_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'AD' otherlv_14= '=' ( (lv_drainArea_15_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'AS' otherlv_17= '=' ( (lv_sourceArea_18_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'PD' otherlv_20= '=' ( (lv_drainPerimeter_21_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'PS' otherlv_23= '=' ( (lv_sourcePerimeter_24_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'NRD' otherlv_26= '=' ( (lv_drainSquares_27_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'NRS' otherlv_29= '=' ( (lv_sourceSquares_30_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_off_31_0= 'OFF' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= 'IC' otherlv_33= '=' ( (lv_ic_34_0= RULE_NUMBER ) ) otherlv_35= ',' ( (lv_ic_36_0= RULE_NUMBER ) ) otherlv_37= ',' ( (lv_ic_38_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'TEMP' otherlv_40= '=' ( (lv_temp_41_0= RULE_NUMBER ) ) ) ) ) ) )* ) )
            {
            // InternalXSpice.g:3740:4: ( ( ( ({...}? => ( ({...}? => (otherlv_7= 'L' otherlv_8= '=' ( (lv_length_9_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'W' otherlv_11= '=' ( (lv_width_12_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'AD' otherlv_14= '=' ( (lv_drainArea_15_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'AS' otherlv_17= '=' ( (lv_sourceArea_18_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'PD' otherlv_20= '=' ( (lv_drainPerimeter_21_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'PS' otherlv_23= '=' ( (lv_sourcePerimeter_24_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'NRD' otherlv_26= '=' ( (lv_drainSquares_27_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'NRS' otherlv_29= '=' ( (lv_sourceSquares_30_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_off_31_0= 'OFF' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= 'IC' otherlv_33= '=' ( (lv_ic_34_0= RULE_NUMBER ) ) otherlv_35= ',' ( (lv_ic_36_0= RULE_NUMBER ) ) otherlv_37= ',' ( (lv_ic_38_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'TEMP' otherlv_40= '=' ( (lv_temp_41_0= RULE_NUMBER ) ) ) ) ) ) )* ) )
            // InternalXSpice.g:3741:5: ( ( ({...}? => ( ({...}? => (otherlv_7= 'L' otherlv_8= '=' ( (lv_length_9_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'W' otherlv_11= '=' ( (lv_width_12_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'AD' otherlv_14= '=' ( (lv_drainArea_15_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'AS' otherlv_17= '=' ( (lv_sourceArea_18_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'PD' otherlv_20= '=' ( (lv_drainPerimeter_21_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'PS' otherlv_23= '=' ( (lv_sourcePerimeter_24_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'NRD' otherlv_26= '=' ( (lv_drainSquares_27_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'NRS' otherlv_29= '=' ( (lv_sourceSquares_30_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_off_31_0= 'OFF' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= 'IC' otherlv_33= '=' ( (lv_ic_34_0= RULE_NUMBER ) ) otherlv_35= ',' ( (lv_ic_36_0= RULE_NUMBER ) ) otherlv_37= ',' ( (lv_ic_38_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'TEMP' otherlv_40= '=' ( (lv_temp_41_0= RULE_NUMBER ) ) ) ) ) ) )* )
            {
             
            				  getUnorderedGroupHelper().enter(grammarAccess.getMOSFETAccess().getUnorderedGroup_6());
            				
            // InternalXSpice.g:3744:5: ( ( ({...}? => ( ({...}? => (otherlv_7= 'L' otherlv_8= '=' ( (lv_length_9_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'W' otherlv_11= '=' ( (lv_width_12_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'AD' otherlv_14= '=' ( (lv_drainArea_15_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'AS' otherlv_17= '=' ( (lv_sourceArea_18_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'PD' otherlv_20= '=' ( (lv_drainPerimeter_21_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'PS' otherlv_23= '=' ( (lv_sourcePerimeter_24_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'NRD' otherlv_26= '=' ( (lv_drainSquares_27_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'NRS' otherlv_29= '=' ( (lv_sourceSquares_30_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_off_31_0= 'OFF' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= 'IC' otherlv_33= '=' ( (lv_ic_34_0= RULE_NUMBER ) ) otherlv_35= ',' ( (lv_ic_36_0= RULE_NUMBER ) ) otherlv_37= ',' ( (lv_ic_38_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'TEMP' otherlv_40= '=' ( (lv_temp_41_0= RULE_NUMBER ) ) ) ) ) ) )* )
            // InternalXSpice.g:3745:6: ( ({...}? => ( ({...}? => (otherlv_7= 'L' otherlv_8= '=' ( (lv_length_9_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'W' otherlv_11= '=' ( (lv_width_12_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'AD' otherlv_14= '=' ( (lv_drainArea_15_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'AS' otherlv_17= '=' ( (lv_sourceArea_18_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'PD' otherlv_20= '=' ( (lv_drainPerimeter_21_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'PS' otherlv_23= '=' ( (lv_sourcePerimeter_24_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'NRD' otherlv_26= '=' ( (lv_drainSquares_27_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'NRS' otherlv_29= '=' ( (lv_sourceSquares_30_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_off_31_0= 'OFF' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= 'IC' otherlv_33= '=' ( (lv_ic_34_0= RULE_NUMBER ) ) otherlv_35= ',' ( (lv_ic_36_0= RULE_NUMBER ) ) otherlv_37= ',' ( (lv_ic_38_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'TEMP' otherlv_40= '=' ( (lv_temp_41_0= RULE_NUMBER ) ) ) ) ) ) )*
            {
            // InternalXSpice.g:3745:6: ( ({...}? => ( ({...}? => (otherlv_7= 'L' otherlv_8= '=' ( (lv_length_9_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'W' otherlv_11= '=' ( (lv_width_12_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'AD' otherlv_14= '=' ( (lv_drainArea_15_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'AS' otherlv_17= '=' ( (lv_sourceArea_18_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'PD' otherlv_20= '=' ( (lv_drainPerimeter_21_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'PS' otherlv_23= '=' ( (lv_sourcePerimeter_24_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'NRD' otherlv_26= '=' ( (lv_drainSquares_27_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'NRS' otherlv_29= '=' ( (lv_sourceSquares_30_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_off_31_0= 'OFF' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= 'IC' otherlv_33= '=' ( (lv_ic_34_0= RULE_NUMBER ) ) otherlv_35= ',' ( (lv_ic_36_0= RULE_NUMBER ) ) otherlv_37= ',' ( (lv_ic_38_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'TEMP' otherlv_40= '=' ( (lv_temp_41_0= RULE_NUMBER ) ) ) ) ) ) )*
            loop26:
            do {
                int alt26=12;
                alt26 = dfa26.predict(input);
                switch (alt26) {
            	case 1 :
            	    // InternalXSpice.g:3746:4: ({...}? => ( ({...}? => (otherlv_7= 'L' otherlv_8= '=' ( (lv_length_9_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:3746:4: ({...}? => ( ({...}? => (otherlv_7= 'L' otherlv_8= '=' ( (lv_length_9_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:3747:5: {...}? => ( ({...}? => (otherlv_7= 'L' otherlv_8= '=' ( (lv_length_9_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETAccess().getUnorderedGroup_6(), 0) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFET", "getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETAccess().getUnorderedGroup_6(), 0)");
            	    }
            	    // InternalXSpice.g:3747:103: ( ({...}? => (otherlv_7= 'L' otherlv_8= '=' ( (lv_length_9_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:3748:6: ({...}? => (otherlv_7= 'L' otherlv_8= '=' ( (lv_length_9_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getMOSFETAccess().getUnorderedGroup_6(), 0);
            	    					
            	    // InternalXSpice.g:3751:9: ({...}? => (otherlv_7= 'L' otherlv_8= '=' ( (lv_length_9_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:3751:10: {...}? => (otherlv_7= 'L' otherlv_8= '=' ( (lv_length_9_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFET", "true");
            	    }
            	    // InternalXSpice.g:3751:19: (otherlv_7= 'L' otherlv_8= '=' ( (lv_length_9_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:3751:20: otherlv_7= 'L' otherlv_8= '=' ( (lv_length_9_0= RULE_NUMBER ) )
            	    {
            	    otherlv_7=(Token)match(input,39,FOLLOW_11); 

            	    									newLeafNode(otherlv_7, grammarAccess.getMOSFETAccess().getLKeyword_6_0_0());
            	    								
            	    otherlv_8=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_8, grammarAccess.getMOSFETAccess().getEqualsSignKeyword_6_0_1());
            	    								
            	    // InternalXSpice.g:3759:9: ( (lv_length_9_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:3760:10: (lv_length_9_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:3760:10: (lv_length_9_0= RULE_NUMBER )
            	    // InternalXSpice.g:3761:11: lv_length_9_0= RULE_NUMBER
            	    {
            	    lv_length_9_0=(Token)match(input,RULE_NUMBER,FOLLOW_36); 

            	    											newLeafNode(lv_length_9_0, grammarAccess.getMOSFETAccess().getLengthNUMBERTerminalRuleCall_6_0_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getMOSFETRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"length",
            	    												lv_length_9_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMOSFETAccess().getUnorderedGroup_6());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalXSpice.g:3783:4: ({...}? => ( ({...}? => (otherlv_10= 'W' otherlv_11= '=' ( (lv_width_12_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:3783:4: ({...}? => ( ({...}? => (otherlv_10= 'W' otherlv_11= '=' ( (lv_width_12_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:3784:5: {...}? => ( ({...}? => (otherlv_10= 'W' otherlv_11= '=' ( (lv_width_12_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETAccess().getUnorderedGroup_6(), 1) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFET", "getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETAccess().getUnorderedGroup_6(), 1)");
            	    }
            	    // InternalXSpice.g:3784:103: ( ({...}? => (otherlv_10= 'W' otherlv_11= '=' ( (lv_width_12_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:3785:6: ({...}? => (otherlv_10= 'W' otherlv_11= '=' ( (lv_width_12_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getMOSFETAccess().getUnorderedGroup_6(), 1);
            	    					
            	    // InternalXSpice.g:3788:9: ({...}? => (otherlv_10= 'W' otherlv_11= '=' ( (lv_width_12_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:3788:10: {...}? => (otherlv_10= 'W' otherlv_11= '=' ( (lv_width_12_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFET", "true");
            	    }
            	    // InternalXSpice.g:3788:19: (otherlv_10= 'W' otherlv_11= '=' ( (lv_width_12_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:3788:20: otherlv_10= 'W' otherlv_11= '=' ( (lv_width_12_0= RULE_NUMBER ) )
            	    {
            	    otherlv_10=(Token)match(input,41,FOLLOW_11); 

            	    									newLeafNode(otherlv_10, grammarAccess.getMOSFETAccess().getWKeyword_6_1_0());
            	    								
            	    otherlv_11=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_11, grammarAccess.getMOSFETAccess().getEqualsSignKeyword_6_1_1());
            	    								
            	    // InternalXSpice.g:3796:9: ( (lv_width_12_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:3797:10: (lv_width_12_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:3797:10: (lv_width_12_0= RULE_NUMBER )
            	    // InternalXSpice.g:3798:11: lv_width_12_0= RULE_NUMBER
            	    {
            	    lv_width_12_0=(Token)match(input,RULE_NUMBER,FOLLOW_36); 

            	    											newLeafNode(lv_width_12_0, grammarAccess.getMOSFETAccess().getWidthNUMBERTerminalRuleCall_6_1_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getMOSFETRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"width",
            	    												lv_width_12_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMOSFETAccess().getUnorderedGroup_6());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalXSpice.g:3820:4: ({...}? => ( ({...}? => (otherlv_13= 'AD' otherlv_14= '=' ( (lv_drainArea_15_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:3820:4: ({...}? => ( ({...}? => (otherlv_13= 'AD' otherlv_14= '=' ( (lv_drainArea_15_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:3821:5: {...}? => ( ({...}? => (otherlv_13= 'AD' otherlv_14= '=' ( (lv_drainArea_15_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETAccess().getUnorderedGroup_6(), 2) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFET", "getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETAccess().getUnorderedGroup_6(), 2)");
            	    }
            	    // InternalXSpice.g:3821:103: ( ({...}? => (otherlv_13= 'AD' otherlv_14= '=' ( (lv_drainArea_15_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:3822:6: ({...}? => (otherlv_13= 'AD' otherlv_14= '=' ( (lv_drainArea_15_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getMOSFETAccess().getUnorderedGroup_6(), 2);
            	    					
            	    // InternalXSpice.g:3825:9: ({...}? => (otherlv_13= 'AD' otherlv_14= '=' ( (lv_drainArea_15_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:3825:10: {...}? => (otherlv_13= 'AD' otherlv_14= '=' ( (lv_drainArea_15_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFET", "true");
            	    }
            	    // InternalXSpice.g:3825:19: (otherlv_13= 'AD' otherlv_14= '=' ( (lv_drainArea_15_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:3825:20: otherlv_13= 'AD' otherlv_14= '=' ( (lv_drainArea_15_0= RULE_NUMBER ) )
            	    {
            	    otherlv_13=(Token)match(input,83,FOLLOW_11); 

            	    									newLeafNode(otherlv_13, grammarAccess.getMOSFETAccess().getADKeyword_6_2_0());
            	    								
            	    otherlv_14=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_14, grammarAccess.getMOSFETAccess().getEqualsSignKeyword_6_2_1());
            	    								
            	    // InternalXSpice.g:3833:9: ( (lv_drainArea_15_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:3834:10: (lv_drainArea_15_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:3834:10: (lv_drainArea_15_0= RULE_NUMBER )
            	    // InternalXSpice.g:3835:11: lv_drainArea_15_0= RULE_NUMBER
            	    {
            	    lv_drainArea_15_0=(Token)match(input,RULE_NUMBER,FOLLOW_36); 

            	    											newLeafNode(lv_drainArea_15_0, grammarAccess.getMOSFETAccess().getDrainAreaNUMBERTerminalRuleCall_6_2_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getMOSFETRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"drainArea",
            	    												lv_drainArea_15_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMOSFETAccess().getUnorderedGroup_6());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalXSpice.g:3857:4: ({...}? => ( ({...}? => (otherlv_16= 'AS' otherlv_17= '=' ( (lv_sourceArea_18_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:3857:4: ({...}? => ( ({...}? => (otherlv_16= 'AS' otherlv_17= '=' ( (lv_sourceArea_18_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:3858:5: {...}? => ( ({...}? => (otherlv_16= 'AS' otherlv_17= '=' ( (lv_sourceArea_18_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETAccess().getUnorderedGroup_6(), 3) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFET", "getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETAccess().getUnorderedGroup_6(), 3)");
            	    }
            	    // InternalXSpice.g:3858:103: ( ({...}? => (otherlv_16= 'AS' otherlv_17= '=' ( (lv_sourceArea_18_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:3859:6: ({...}? => (otherlv_16= 'AS' otherlv_17= '=' ( (lv_sourceArea_18_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getMOSFETAccess().getUnorderedGroup_6(), 3);
            	    					
            	    // InternalXSpice.g:3862:9: ({...}? => (otherlv_16= 'AS' otherlv_17= '=' ( (lv_sourceArea_18_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:3862:10: {...}? => (otherlv_16= 'AS' otherlv_17= '=' ( (lv_sourceArea_18_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFET", "true");
            	    }
            	    // InternalXSpice.g:3862:19: (otherlv_16= 'AS' otherlv_17= '=' ( (lv_sourceArea_18_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:3862:20: otherlv_16= 'AS' otherlv_17= '=' ( (lv_sourceArea_18_0= RULE_NUMBER ) )
            	    {
            	    otherlv_16=(Token)match(input,84,FOLLOW_11); 

            	    									newLeafNode(otherlv_16, grammarAccess.getMOSFETAccess().getASKeyword_6_3_0());
            	    								
            	    otherlv_17=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_17, grammarAccess.getMOSFETAccess().getEqualsSignKeyword_6_3_1());
            	    								
            	    // InternalXSpice.g:3870:9: ( (lv_sourceArea_18_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:3871:10: (lv_sourceArea_18_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:3871:10: (lv_sourceArea_18_0= RULE_NUMBER )
            	    // InternalXSpice.g:3872:11: lv_sourceArea_18_0= RULE_NUMBER
            	    {
            	    lv_sourceArea_18_0=(Token)match(input,RULE_NUMBER,FOLLOW_36); 

            	    											newLeafNode(lv_sourceArea_18_0, grammarAccess.getMOSFETAccess().getSourceAreaNUMBERTerminalRuleCall_6_3_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getMOSFETRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"sourceArea",
            	    												lv_sourceArea_18_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMOSFETAccess().getUnorderedGroup_6());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalXSpice.g:3894:4: ({...}? => ( ({...}? => (otherlv_19= 'PD' otherlv_20= '=' ( (lv_drainPerimeter_21_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:3894:4: ({...}? => ( ({...}? => (otherlv_19= 'PD' otherlv_20= '=' ( (lv_drainPerimeter_21_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:3895:5: {...}? => ( ({...}? => (otherlv_19= 'PD' otherlv_20= '=' ( (lv_drainPerimeter_21_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETAccess().getUnorderedGroup_6(), 4) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFET", "getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETAccess().getUnorderedGroup_6(), 4)");
            	    }
            	    // InternalXSpice.g:3895:103: ( ({...}? => (otherlv_19= 'PD' otherlv_20= '=' ( (lv_drainPerimeter_21_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:3896:6: ({...}? => (otherlv_19= 'PD' otherlv_20= '=' ( (lv_drainPerimeter_21_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getMOSFETAccess().getUnorderedGroup_6(), 4);
            	    					
            	    // InternalXSpice.g:3899:9: ({...}? => (otherlv_19= 'PD' otherlv_20= '=' ( (lv_drainPerimeter_21_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:3899:10: {...}? => (otherlv_19= 'PD' otherlv_20= '=' ( (lv_drainPerimeter_21_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFET", "true");
            	    }
            	    // InternalXSpice.g:3899:19: (otherlv_19= 'PD' otherlv_20= '=' ( (lv_drainPerimeter_21_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:3899:20: otherlv_19= 'PD' otherlv_20= '=' ( (lv_drainPerimeter_21_0= RULE_NUMBER ) )
            	    {
            	    otherlv_19=(Token)match(input,85,FOLLOW_11); 

            	    									newLeafNode(otherlv_19, grammarAccess.getMOSFETAccess().getPDKeyword_6_4_0());
            	    								
            	    otherlv_20=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_20, grammarAccess.getMOSFETAccess().getEqualsSignKeyword_6_4_1());
            	    								
            	    // InternalXSpice.g:3907:9: ( (lv_drainPerimeter_21_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:3908:10: (lv_drainPerimeter_21_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:3908:10: (lv_drainPerimeter_21_0= RULE_NUMBER )
            	    // InternalXSpice.g:3909:11: lv_drainPerimeter_21_0= RULE_NUMBER
            	    {
            	    lv_drainPerimeter_21_0=(Token)match(input,RULE_NUMBER,FOLLOW_36); 

            	    											newLeafNode(lv_drainPerimeter_21_0, grammarAccess.getMOSFETAccess().getDrainPerimeterNUMBERTerminalRuleCall_6_4_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getMOSFETRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"drainPerimeter",
            	    												lv_drainPerimeter_21_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMOSFETAccess().getUnorderedGroup_6());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalXSpice.g:3931:4: ({...}? => ( ({...}? => (otherlv_22= 'PS' otherlv_23= '=' ( (lv_sourcePerimeter_24_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:3931:4: ({...}? => ( ({...}? => (otherlv_22= 'PS' otherlv_23= '=' ( (lv_sourcePerimeter_24_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:3932:5: {...}? => ( ({...}? => (otherlv_22= 'PS' otherlv_23= '=' ( (lv_sourcePerimeter_24_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETAccess().getUnorderedGroup_6(), 5) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFET", "getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETAccess().getUnorderedGroup_6(), 5)");
            	    }
            	    // InternalXSpice.g:3932:103: ( ({...}? => (otherlv_22= 'PS' otherlv_23= '=' ( (lv_sourcePerimeter_24_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:3933:6: ({...}? => (otherlv_22= 'PS' otherlv_23= '=' ( (lv_sourcePerimeter_24_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getMOSFETAccess().getUnorderedGroup_6(), 5);
            	    					
            	    // InternalXSpice.g:3936:9: ({...}? => (otherlv_22= 'PS' otherlv_23= '=' ( (lv_sourcePerimeter_24_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:3936:10: {...}? => (otherlv_22= 'PS' otherlv_23= '=' ( (lv_sourcePerimeter_24_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFET", "true");
            	    }
            	    // InternalXSpice.g:3936:19: (otherlv_22= 'PS' otherlv_23= '=' ( (lv_sourcePerimeter_24_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:3936:20: otherlv_22= 'PS' otherlv_23= '=' ( (lv_sourcePerimeter_24_0= RULE_NUMBER ) )
            	    {
            	    otherlv_22=(Token)match(input,86,FOLLOW_11); 

            	    									newLeafNode(otherlv_22, grammarAccess.getMOSFETAccess().getPSKeyword_6_5_0());
            	    								
            	    otherlv_23=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_23, grammarAccess.getMOSFETAccess().getEqualsSignKeyword_6_5_1());
            	    								
            	    // InternalXSpice.g:3944:9: ( (lv_sourcePerimeter_24_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:3945:10: (lv_sourcePerimeter_24_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:3945:10: (lv_sourcePerimeter_24_0= RULE_NUMBER )
            	    // InternalXSpice.g:3946:11: lv_sourcePerimeter_24_0= RULE_NUMBER
            	    {
            	    lv_sourcePerimeter_24_0=(Token)match(input,RULE_NUMBER,FOLLOW_36); 

            	    											newLeafNode(lv_sourcePerimeter_24_0, grammarAccess.getMOSFETAccess().getSourcePerimeterNUMBERTerminalRuleCall_6_5_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getMOSFETRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"sourcePerimeter",
            	    												lv_sourcePerimeter_24_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMOSFETAccess().getUnorderedGroup_6());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // InternalXSpice.g:3968:4: ({...}? => ( ({...}? => (otherlv_25= 'NRD' otherlv_26= '=' ( (lv_drainSquares_27_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:3968:4: ({...}? => ( ({...}? => (otherlv_25= 'NRD' otherlv_26= '=' ( (lv_drainSquares_27_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:3969:5: {...}? => ( ({...}? => (otherlv_25= 'NRD' otherlv_26= '=' ( (lv_drainSquares_27_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETAccess().getUnorderedGroup_6(), 6) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFET", "getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETAccess().getUnorderedGroup_6(), 6)");
            	    }
            	    // InternalXSpice.g:3969:103: ( ({...}? => (otherlv_25= 'NRD' otherlv_26= '=' ( (lv_drainSquares_27_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:3970:6: ({...}? => (otherlv_25= 'NRD' otherlv_26= '=' ( (lv_drainSquares_27_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getMOSFETAccess().getUnorderedGroup_6(), 6);
            	    					
            	    // InternalXSpice.g:3973:9: ({...}? => (otherlv_25= 'NRD' otherlv_26= '=' ( (lv_drainSquares_27_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:3973:10: {...}? => (otherlv_25= 'NRD' otherlv_26= '=' ( (lv_drainSquares_27_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFET", "true");
            	    }
            	    // InternalXSpice.g:3973:19: (otherlv_25= 'NRD' otherlv_26= '=' ( (lv_drainSquares_27_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:3973:20: otherlv_25= 'NRD' otherlv_26= '=' ( (lv_drainSquares_27_0= RULE_NUMBER ) )
            	    {
            	    otherlv_25=(Token)match(input,87,FOLLOW_11); 

            	    									newLeafNode(otherlv_25, grammarAccess.getMOSFETAccess().getNRDKeyword_6_6_0());
            	    								
            	    otherlv_26=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_26, grammarAccess.getMOSFETAccess().getEqualsSignKeyword_6_6_1());
            	    								
            	    // InternalXSpice.g:3981:9: ( (lv_drainSquares_27_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:3982:10: (lv_drainSquares_27_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:3982:10: (lv_drainSquares_27_0= RULE_NUMBER )
            	    // InternalXSpice.g:3983:11: lv_drainSquares_27_0= RULE_NUMBER
            	    {
            	    lv_drainSquares_27_0=(Token)match(input,RULE_NUMBER,FOLLOW_36); 

            	    											newLeafNode(lv_drainSquares_27_0, grammarAccess.getMOSFETAccess().getDrainSquaresNUMBERTerminalRuleCall_6_6_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getMOSFETRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"drainSquares",
            	    												lv_drainSquares_27_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMOSFETAccess().getUnorderedGroup_6());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 8 :
            	    // InternalXSpice.g:4005:4: ({...}? => ( ({...}? => (otherlv_28= 'NRS' otherlv_29= '=' ( (lv_sourceSquares_30_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:4005:4: ({...}? => ( ({...}? => (otherlv_28= 'NRS' otherlv_29= '=' ( (lv_sourceSquares_30_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:4006:5: {...}? => ( ({...}? => (otherlv_28= 'NRS' otherlv_29= '=' ( (lv_sourceSquares_30_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETAccess().getUnorderedGroup_6(), 7) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFET", "getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETAccess().getUnorderedGroup_6(), 7)");
            	    }
            	    // InternalXSpice.g:4006:103: ( ({...}? => (otherlv_28= 'NRS' otherlv_29= '=' ( (lv_sourceSquares_30_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:4007:6: ({...}? => (otherlv_28= 'NRS' otherlv_29= '=' ( (lv_sourceSquares_30_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getMOSFETAccess().getUnorderedGroup_6(), 7);
            	    					
            	    // InternalXSpice.g:4010:9: ({...}? => (otherlv_28= 'NRS' otherlv_29= '=' ( (lv_sourceSquares_30_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:4010:10: {...}? => (otherlv_28= 'NRS' otherlv_29= '=' ( (lv_sourceSquares_30_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFET", "true");
            	    }
            	    // InternalXSpice.g:4010:19: (otherlv_28= 'NRS' otherlv_29= '=' ( (lv_sourceSquares_30_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:4010:20: otherlv_28= 'NRS' otherlv_29= '=' ( (lv_sourceSquares_30_0= RULE_NUMBER ) )
            	    {
            	    otherlv_28=(Token)match(input,88,FOLLOW_11); 

            	    									newLeafNode(otherlv_28, grammarAccess.getMOSFETAccess().getNRSKeyword_6_7_0());
            	    								
            	    otherlv_29=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_29, grammarAccess.getMOSFETAccess().getEqualsSignKeyword_6_7_1());
            	    								
            	    // InternalXSpice.g:4018:9: ( (lv_sourceSquares_30_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:4019:10: (lv_sourceSquares_30_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:4019:10: (lv_sourceSquares_30_0= RULE_NUMBER )
            	    // InternalXSpice.g:4020:11: lv_sourceSquares_30_0= RULE_NUMBER
            	    {
            	    lv_sourceSquares_30_0=(Token)match(input,RULE_NUMBER,FOLLOW_36); 

            	    											newLeafNode(lv_sourceSquares_30_0, grammarAccess.getMOSFETAccess().getSourceSquaresNUMBERTerminalRuleCall_6_7_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getMOSFETRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"sourceSquares",
            	    												lv_sourceSquares_30_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMOSFETAccess().getUnorderedGroup_6());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 9 :
            	    // InternalXSpice.g:4042:4: ({...}? => ( ({...}? => ( (lv_off_31_0= 'OFF' ) ) ) ) )
            	    {
            	    // InternalXSpice.g:4042:4: ({...}? => ( ({...}? => ( (lv_off_31_0= 'OFF' ) ) ) ) )
            	    // InternalXSpice.g:4043:5: {...}? => ( ({...}? => ( (lv_off_31_0= 'OFF' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETAccess().getUnorderedGroup_6(), 8) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFET", "getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETAccess().getUnorderedGroup_6(), 8)");
            	    }
            	    // InternalXSpice.g:4043:103: ( ({...}? => ( (lv_off_31_0= 'OFF' ) ) ) )
            	    // InternalXSpice.g:4044:6: ({...}? => ( (lv_off_31_0= 'OFF' ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getMOSFETAccess().getUnorderedGroup_6(), 8);
            	    					
            	    // InternalXSpice.g:4047:9: ({...}? => ( (lv_off_31_0= 'OFF' ) ) )
            	    // InternalXSpice.g:4047:10: {...}? => ( (lv_off_31_0= 'OFF' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFET", "true");
            	    }
            	    // InternalXSpice.g:4047:19: ( (lv_off_31_0= 'OFF' ) )
            	    // InternalXSpice.g:4047:20: (lv_off_31_0= 'OFF' )
            	    {
            	    // InternalXSpice.g:4047:20: (lv_off_31_0= 'OFF' )
            	    // InternalXSpice.g:4048:10: lv_off_31_0= 'OFF'
            	    {
            	    lv_off_31_0=(Token)match(input,58,FOLLOW_36); 

            	    										newLeafNode(lv_off_31_0, grammarAccess.getMOSFETAccess().getOffOFFKeyword_6_8_0());
            	    									

            	    										if (current==null) {
            	    											current = createModelElement(grammarAccess.getMOSFETRule());
            	    										}
            	    										setWithLastConsumed(current, "off", true, "OFF");
            	    									

            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMOSFETAccess().getUnorderedGroup_6());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 10 :
            	    // InternalXSpice.g:4065:4: ({...}? => ( ({...}? => (otherlv_32= 'IC' otherlv_33= '=' ( (lv_ic_34_0= RULE_NUMBER ) ) otherlv_35= ',' ( (lv_ic_36_0= RULE_NUMBER ) ) otherlv_37= ',' ( (lv_ic_38_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:4065:4: ({...}? => ( ({...}? => (otherlv_32= 'IC' otherlv_33= '=' ( (lv_ic_34_0= RULE_NUMBER ) ) otherlv_35= ',' ( (lv_ic_36_0= RULE_NUMBER ) ) otherlv_37= ',' ( (lv_ic_38_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:4066:5: {...}? => ( ({...}? => (otherlv_32= 'IC' otherlv_33= '=' ( (lv_ic_34_0= RULE_NUMBER ) ) otherlv_35= ',' ( (lv_ic_36_0= RULE_NUMBER ) ) otherlv_37= ',' ( (lv_ic_38_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETAccess().getUnorderedGroup_6(), 9) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFET", "getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETAccess().getUnorderedGroup_6(), 9)");
            	    }
            	    // InternalXSpice.g:4066:103: ( ({...}? => (otherlv_32= 'IC' otherlv_33= '=' ( (lv_ic_34_0= RULE_NUMBER ) ) otherlv_35= ',' ( (lv_ic_36_0= RULE_NUMBER ) ) otherlv_37= ',' ( (lv_ic_38_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:4067:6: ({...}? => (otherlv_32= 'IC' otherlv_33= '=' ( (lv_ic_34_0= RULE_NUMBER ) ) otherlv_35= ',' ( (lv_ic_36_0= RULE_NUMBER ) ) otherlv_37= ',' ( (lv_ic_38_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getMOSFETAccess().getUnorderedGroup_6(), 9);
            	    					
            	    // InternalXSpice.g:4070:9: ({...}? => (otherlv_32= 'IC' otherlv_33= '=' ( (lv_ic_34_0= RULE_NUMBER ) ) otherlv_35= ',' ( (lv_ic_36_0= RULE_NUMBER ) ) otherlv_37= ',' ( (lv_ic_38_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:4070:10: {...}? => (otherlv_32= 'IC' otherlv_33= '=' ( (lv_ic_34_0= RULE_NUMBER ) ) otherlv_35= ',' ( (lv_ic_36_0= RULE_NUMBER ) ) otherlv_37= ',' ( (lv_ic_38_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFET", "true");
            	    }
            	    // InternalXSpice.g:4070:19: (otherlv_32= 'IC' otherlv_33= '=' ( (lv_ic_34_0= RULE_NUMBER ) ) otherlv_35= ',' ( (lv_ic_36_0= RULE_NUMBER ) ) otherlv_37= ',' ( (lv_ic_38_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:4070:20: otherlv_32= 'IC' otherlv_33= '=' ( (lv_ic_34_0= RULE_NUMBER ) ) otherlv_35= ',' ( (lv_ic_36_0= RULE_NUMBER ) ) otherlv_37= ',' ( (lv_ic_38_0= RULE_NUMBER ) )
            	    {
            	    otherlv_32=(Token)match(input,53,FOLLOW_11); 

            	    									newLeafNode(otherlv_32, grammarAccess.getMOSFETAccess().getICKeyword_6_9_0());
            	    								
            	    otherlv_33=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_33, grammarAccess.getMOSFETAccess().getEqualsSignKeyword_6_9_1());
            	    								
            	    // InternalXSpice.g:4078:9: ( (lv_ic_34_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:4079:10: (lv_ic_34_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:4079:10: (lv_ic_34_0= RULE_NUMBER )
            	    // InternalXSpice.g:4080:11: lv_ic_34_0= RULE_NUMBER
            	    {
            	    lv_ic_34_0=(Token)match(input,RULE_NUMBER,FOLLOW_37); 

            	    											newLeafNode(lv_ic_34_0, grammarAccess.getMOSFETAccess().getIcNUMBERTerminalRuleCall_6_9_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getMOSFETRule());
            	    											}
            	    											addWithLastConsumed(
            	    												current,
            	    												"ic",
            	    												lv_ic_34_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }

            	    otherlv_35=(Token)match(input,89,FOLLOW_12); 

            	    									newLeafNode(otherlv_35, grammarAccess.getMOSFETAccess().getCommaKeyword_6_9_3());
            	    								
            	    // InternalXSpice.g:4100:9: ( (lv_ic_36_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:4101:10: (lv_ic_36_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:4101:10: (lv_ic_36_0= RULE_NUMBER )
            	    // InternalXSpice.g:4102:11: lv_ic_36_0= RULE_NUMBER
            	    {
            	    lv_ic_36_0=(Token)match(input,RULE_NUMBER,FOLLOW_37); 

            	    											newLeafNode(lv_ic_36_0, grammarAccess.getMOSFETAccess().getIcNUMBERTerminalRuleCall_6_9_4_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getMOSFETRule());
            	    											}
            	    											addWithLastConsumed(
            	    												current,
            	    												"ic",
            	    												lv_ic_36_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }

            	    otherlv_37=(Token)match(input,89,FOLLOW_12); 

            	    									newLeafNode(otherlv_37, grammarAccess.getMOSFETAccess().getCommaKeyword_6_9_5());
            	    								
            	    // InternalXSpice.g:4122:9: ( (lv_ic_38_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:4123:10: (lv_ic_38_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:4123:10: (lv_ic_38_0= RULE_NUMBER )
            	    // InternalXSpice.g:4124:11: lv_ic_38_0= RULE_NUMBER
            	    {
            	    lv_ic_38_0=(Token)match(input,RULE_NUMBER,FOLLOW_36); 

            	    											newLeafNode(lv_ic_38_0, grammarAccess.getMOSFETAccess().getIcNUMBERTerminalRuleCall_6_9_6_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getMOSFETRule());
            	    											}
            	    											addWithLastConsumed(
            	    												current,
            	    												"ic",
            	    												lv_ic_38_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMOSFETAccess().getUnorderedGroup_6());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 11 :
            	    // InternalXSpice.g:4146:4: ({...}? => ( ({...}? => (otherlv_39= 'TEMP' otherlv_40= '=' ( (lv_temp_41_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:4146:4: ({...}? => ( ({...}? => (otherlv_39= 'TEMP' otherlv_40= '=' ( (lv_temp_41_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:4147:5: {...}? => ( ({...}? => (otherlv_39= 'TEMP' otherlv_40= '=' ( (lv_temp_41_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETAccess().getUnorderedGroup_6(), 10) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFET", "getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETAccess().getUnorderedGroup_6(), 10)");
            	    }
            	    // InternalXSpice.g:4147:104: ( ({...}? => (otherlv_39= 'TEMP' otherlv_40= '=' ( (lv_temp_41_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:4148:6: ({...}? => (otherlv_39= 'TEMP' otherlv_40= '=' ( (lv_temp_41_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getMOSFETAccess().getUnorderedGroup_6(), 10);
            	    					
            	    // InternalXSpice.g:4151:9: ({...}? => (otherlv_39= 'TEMP' otherlv_40= '=' ( (lv_temp_41_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:4151:10: {...}? => (otherlv_39= 'TEMP' otherlv_40= '=' ( (lv_temp_41_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFET", "true");
            	    }
            	    // InternalXSpice.g:4151:19: (otherlv_39= 'TEMP' otherlv_40= '=' ( (lv_temp_41_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:4151:20: otherlv_39= 'TEMP' otherlv_40= '=' ( (lv_temp_41_0= RULE_NUMBER ) )
            	    {
            	    otherlv_39=(Token)match(input,42,FOLLOW_11); 

            	    									newLeafNode(otherlv_39, grammarAccess.getMOSFETAccess().getTEMPKeyword_6_10_0());
            	    								
            	    otherlv_40=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_40, grammarAccess.getMOSFETAccess().getEqualsSignKeyword_6_10_1());
            	    								
            	    // InternalXSpice.g:4159:9: ( (lv_temp_41_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:4160:10: (lv_temp_41_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:4160:10: (lv_temp_41_0= RULE_NUMBER )
            	    // InternalXSpice.g:4161:11: lv_temp_41_0= RULE_NUMBER
            	    {
            	    lv_temp_41_0=(Token)match(input,RULE_NUMBER,FOLLOW_36); 

            	    											newLeafNode(lv_temp_41_0, grammarAccess.getMOSFETAccess().getTempNUMBERTerminalRuleCall_6_10_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getMOSFETRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"temp",
            	    												lv_temp_41_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMOSFETAccess().getUnorderedGroup_6());
            	    					

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop26;
                }
            } while (true);


            }


            }

             
            				  getUnorderedGroupHelper().leave(grammarAccess.getMOSFETAccess().getUnorderedGroup_6());
            				

            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMOSFET"


    // $ANTLR start "entryRuleMOSFETModel"
    // InternalXSpice.g:4194:1: entryRuleMOSFETModel returns [EObject current=null] : iv_ruleMOSFETModel= ruleMOSFETModel EOF ;
    public final EObject entryRuleMOSFETModel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMOSFETModel = null;


        try {
            // InternalXSpice.g:4194:52: (iv_ruleMOSFETModel= ruleMOSFETModel EOF )
            // InternalXSpice.g:4195:2: iv_ruleMOSFETModel= ruleMOSFETModel EOF
            {
             newCompositeNode(grammarAccess.getMOSFETModelRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleMOSFETModel=ruleMOSFETModel();

            state._fsp--;

             current =iv_ruleMOSFETModel; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMOSFETModel"


    // $ANTLR start "ruleMOSFETModel"
    // InternalXSpice.g:4201:1: ruleMOSFETModel returns [EObject current=null] : (otherlv_0= '.MODEL' ( (lv_name_1_0= ruleLabel ) ) (otherlv_2= 'NMOS' | otherlv_3= 'PMOS' ) otherlv_4= '(' ( ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'LEVEL' otherlv_7= '=' ( (lv_level_8_0= RULE_DIGIT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'VTO' | (otherlv_10= 'VT0' otherlv_11= '=' ( (lv_vt0_12_0= RULE_NUMBER ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'KP' otherlv_14= '=' ( (lv_transconductance_15_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'GAMMA' otherlv_17= '=' ( (lv_gamma_18_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'PHI' otherlv_20= '=' ( (lv_phi_21_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'LAMBDA' otherlv_23= '=' ( (lv_lambda_24_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'RD' otherlv_26= '=' ( (lv_drainResistance_27_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'RS' otherlv_29= '=' ( (lv_sourceResistance_30_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'CBD' otherlv_32= '=' ( (lv_capBd_33_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_34= 'CBS' otherlv_35= '=' ( (lv_capBs_36_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'IS' otherlv_38= '=' ( (lv_junctionSatCur_39_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'PB' otherlv_41= '=' ( (lv_bulkJunctionPotential_42_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'CGSO' otherlv_44= '=' ( (lv_gateSourceOverlapCapFactor_45_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_46= 'CGDO' otherlv_47= '=' ( (lv_gateDrainOverlapCapFactor_48_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'CGBO' otherlv_50= '=' ( (lv_gateBulkOverlapCapFactor_51_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_52= 'RSH' otherlv_53= '=' ( (lv_sheetResistance_54_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_55= 'CJ' otherlv_56= '=' ( (lv_bulkCapFactor_57_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_58= 'MJ' otherlv_59= '=' ( (lv_bulkJunctionBotGradingCoefficient_60_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_61= 'CJSW' otherlv_62= '=' ( (lv_sidewallCapFactor_63_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_64= 'MJSW' otherlv_65= '=' ( (lv_bulkJunctionSideGradingCoefficient_66_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_67= 'JS' otherlv_68= '=' ( (lv_junctionSatCurDensity_69_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= 'TOX' otherlv_71= '=' ( (lv_oxideThickness_72_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_73= 'NSUB' otherlv_74= '=' ( (lv_substrateDoping_75_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_76= 'NSS' otherlv_77= '=' ( (lv_surfaceStateDensity_78_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'NFS' otherlv_80= '=' ( (lv_nfs_81_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_82= 'TPG' otherlv_83= '=' ( ( (lv_gateType_84_1= '1' | lv_gateType_84_2= '0' | lv_gateType_84_3= '-1' ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_85= 'XJ' otherlv_86= '=' ( (lv_xj_87_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'LD' otherlv_89= '=' ( (lv_lateralDiffusion_90_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_91= 'UO' | (otherlv_92= 'U0' otherlv_93= '=' ( (lv_surfaceMobility_94_0= RULE_NUMBER ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_95= 'KF' otherlv_96= '=' ( (lv_flickerNoiseCoefficient_97_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_98= 'AF' otherlv_99= '=' ( (lv_flickerNoiseExponent_100_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_101= 'FC' otherlv_102= '=' ( (lv_forwardCapDepletionCoefficient_103_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_104= 'TNOM' otherlv_105= '=' ( (lv_nominalTemperature_106_0= RULE_NUMBER ) ) ) ) ) ) )* ) ) ) otherlv_107= ')' ) ;
    public final EObject ruleMOSFETModel() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token lv_level_8_0=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token lv_vt0_12_0=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        Token lv_transconductance_15_0=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        Token lv_gamma_18_0=null;
        Token otherlv_19=null;
        Token otherlv_20=null;
        Token lv_phi_21_0=null;
        Token otherlv_22=null;
        Token otherlv_23=null;
        Token lv_lambda_24_0=null;
        Token otherlv_25=null;
        Token otherlv_26=null;
        Token lv_drainResistance_27_0=null;
        Token otherlv_28=null;
        Token otherlv_29=null;
        Token lv_sourceResistance_30_0=null;
        Token otherlv_31=null;
        Token otherlv_32=null;
        Token lv_capBd_33_0=null;
        Token otherlv_34=null;
        Token otherlv_35=null;
        Token lv_capBs_36_0=null;
        Token otherlv_37=null;
        Token otherlv_38=null;
        Token lv_junctionSatCur_39_0=null;
        Token otherlv_40=null;
        Token otherlv_41=null;
        Token lv_bulkJunctionPotential_42_0=null;
        Token otherlv_43=null;
        Token otherlv_44=null;
        Token lv_gateSourceOverlapCapFactor_45_0=null;
        Token otherlv_46=null;
        Token otherlv_47=null;
        Token lv_gateDrainOverlapCapFactor_48_0=null;
        Token otherlv_49=null;
        Token otherlv_50=null;
        Token lv_gateBulkOverlapCapFactor_51_0=null;
        Token otherlv_52=null;
        Token otherlv_53=null;
        Token lv_sheetResistance_54_0=null;
        Token otherlv_55=null;
        Token otherlv_56=null;
        Token lv_bulkCapFactor_57_0=null;
        Token otherlv_58=null;
        Token otherlv_59=null;
        Token lv_bulkJunctionBotGradingCoefficient_60_0=null;
        Token otherlv_61=null;
        Token otherlv_62=null;
        Token lv_sidewallCapFactor_63_0=null;
        Token otherlv_64=null;
        Token otherlv_65=null;
        Token lv_bulkJunctionSideGradingCoefficient_66_0=null;
        Token otherlv_67=null;
        Token otherlv_68=null;
        Token lv_junctionSatCurDensity_69_0=null;
        Token otherlv_70=null;
        Token otherlv_71=null;
        Token lv_oxideThickness_72_0=null;
        Token otherlv_73=null;
        Token otherlv_74=null;
        Token lv_substrateDoping_75_0=null;
        Token otherlv_76=null;
        Token otherlv_77=null;
        Token lv_surfaceStateDensity_78_0=null;
        Token otherlv_79=null;
        Token otherlv_80=null;
        Token lv_nfs_81_0=null;
        Token otherlv_82=null;
        Token otherlv_83=null;
        Token lv_gateType_84_1=null;
        Token lv_gateType_84_2=null;
        Token lv_gateType_84_3=null;
        Token otherlv_85=null;
        Token otherlv_86=null;
        Token lv_xj_87_0=null;
        Token otherlv_88=null;
        Token otherlv_89=null;
        Token lv_lateralDiffusion_90_0=null;
        Token otherlv_91=null;
        Token otherlv_92=null;
        Token otherlv_93=null;
        Token lv_surfaceMobility_94_0=null;
        Token otherlv_95=null;
        Token otherlv_96=null;
        Token lv_flickerNoiseCoefficient_97_0=null;
        Token otherlv_98=null;
        Token otherlv_99=null;
        Token lv_flickerNoiseExponent_100_0=null;
        Token otherlv_101=null;
        Token otherlv_102=null;
        Token lv_forwardCapDepletionCoefficient_103_0=null;
        Token otherlv_104=null;
        Token otherlv_105=null;
        Token lv_nominalTemperature_106_0=null;
        Token otherlv_107=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
            // InternalXSpice.g:4207:2: ( (otherlv_0= '.MODEL' ( (lv_name_1_0= ruleLabel ) ) (otherlv_2= 'NMOS' | otherlv_3= 'PMOS' ) otherlv_4= '(' ( ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'LEVEL' otherlv_7= '=' ( (lv_level_8_0= RULE_DIGIT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'VTO' | (otherlv_10= 'VT0' otherlv_11= '=' ( (lv_vt0_12_0= RULE_NUMBER ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'KP' otherlv_14= '=' ( (lv_transconductance_15_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'GAMMA' otherlv_17= '=' ( (lv_gamma_18_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'PHI' otherlv_20= '=' ( (lv_phi_21_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'LAMBDA' otherlv_23= '=' ( (lv_lambda_24_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'RD' otherlv_26= '=' ( (lv_drainResistance_27_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'RS' otherlv_29= '=' ( (lv_sourceResistance_30_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'CBD' otherlv_32= '=' ( (lv_capBd_33_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_34= 'CBS' otherlv_35= '=' ( (lv_capBs_36_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'IS' otherlv_38= '=' ( (lv_junctionSatCur_39_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'PB' otherlv_41= '=' ( (lv_bulkJunctionPotential_42_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'CGSO' otherlv_44= '=' ( (lv_gateSourceOverlapCapFactor_45_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_46= 'CGDO' otherlv_47= '=' ( (lv_gateDrainOverlapCapFactor_48_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'CGBO' otherlv_50= '=' ( (lv_gateBulkOverlapCapFactor_51_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_52= 'RSH' otherlv_53= '=' ( (lv_sheetResistance_54_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_55= 'CJ' otherlv_56= '=' ( (lv_bulkCapFactor_57_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_58= 'MJ' otherlv_59= '=' ( (lv_bulkJunctionBotGradingCoefficient_60_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_61= 'CJSW' otherlv_62= '=' ( (lv_sidewallCapFactor_63_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_64= 'MJSW' otherlv_65= '=' ( (lv_bulkJunctionSideGradingCoefficient_66_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_67= 'JS' otherlv_68= '=' ( (lv_junctionSatCurDensity_69_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= 'TOX' otherlv_71= '=' ( (lv_oxideThickness_72_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_73= 'NSUB' otherlv_74= '=' ( (lv_substrateDoping_75_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_76= 'NSS' otherlv_77= '=' ( (lv_surfaceStateDensity_78_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'NFS' otherlv_80= '=' ( (lv_nfs_81_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_82= 'TPG' otherlv_83= '=' ( ( (lv_gateType_84_1= '1' | lv_gateType_84_2= '0' | lv_gateType_84_3= '-1' ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_85= 'XJ' otherlv_86= '=' ( (lv_xj_87_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'LD' otherlv_89= '=' ( (lv_lateralDiffusion_90_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_91= 'UO' | (otherlv_92= 'U0' otherlv_93= '=' ( (lv_surfaceMobility_94_0= RULE_NUMBER ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_95= 'KF' otherlv_96= '=' ( (lv_flickerNoiseCoefficient_97_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_98= 'AF' otherlv_99= '=' ( (lv_flickerNoiseExponent_100_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_101= 'FC' otherlv_102= '=' ( (lv_forwardCapDepletionCoefficient_103_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_104= 'TNOM' otherlv_105= '=' ( (lv_nominalTemperature_106_0= RULE_NUMBER ) ) ) ) ) ) )* ) ) ) otherlv_107= ')' ) )
            // InternalXSpice.g:4208:2: (otherlv_0= '.MODEL' ( (lv_name_1_0= ruleLabel ) ) (otherlv_2= 'NMOS' | otherlv_3= 'PMOS' ) otherlv_4= '(' ( ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'LEVEL' otherlv_7= '=' ( (lv_level_8_0= RULE_DIGIT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'VTO' | (otherlv_10= 'VT0' otherlv_11= '=' ( (lv_vt0_12_0= RULE_NUMBER ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'KP' otherlv_14= '=' ( (lv_transconductance_15_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'GAMMA' otherlv_17= '=' ( (lv_gamma_18_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'PHI' otherlv_20= '=' ( (lv_phi_21_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'LAMBDA' otherlv_23= '=' ( (lv_lambda_24_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'RD' otherlv_26= '=' ( (lv_drainResistance_27_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'RS' otherlv_29= '=' ( (lv_sourceResistance_30_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'CBD' otherlv_32= '=' ( (lv_capBd_33_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_34= 'CBS' otherlv_35= '=' ( (lv_capBs_36_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'IS' otherlv_38= '=' ( (lv_junctionSatCur_39_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'PB' otherlv_41= '=' ( (lv_bulkJunctionPotential_42_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'CGSO' otherlv_44= '=' ( (lv_gateSourceOverlapCapFactor_45_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_46= 'CGDO' otherlv_47= '=' ( (lv_gateDrainOverlapCapFactor_48_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'CGBO' otherlv_50= '=' ( (lv_gateBulkOverlapCapFactor_51_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_52= 'RSH' otherlv_53= '=' ( (lv_sheetResistance_54_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_55= 'CJ' otherlv_56= '=' ( (lv_bulkCapFactor_57_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_58= 'MJ' otherlv_59= '=' ( (lv_bulkJunctionBotGradingCoefficient_60_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_61= 'CJSW' otherlv_62= '=' ( (lv_sidewallCapFactor_63_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_64= 'MJSW' otherlv_65= '=' ( (lv_bulkJunctionSideGradingCoefficient_66_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_67= 'JS' otherlv_68= '=' ( (lv_junctionSatCurDensity_69_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= 'TOX' otherlv_71= '=' ( (lv_oxideThickness_72_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_73= 'NSUB' otherlv_74= '=' ( (lv_substrateDoping_75_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_76= 'NSS' otherlv_77= '=' ( (lv_surfaceStateDensity_78_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'NFS' otherlv_80= '=' ( (lv_nfs_81_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_82= 'TPG' otherlv_83= '=' ( ( (lv_gateType_84_1= '1' | lv_gateType_84_2= '0' | lv_gateType_84_3= '-1' ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_85= 'XJ' otherlv_86= '=' ( (lv_xj_87_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'LD' otherlv_89= '=' ( (lv_lateralDiffusion_90_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_91= 'UO' | (otherlv_92= 'U0' otherlv_93= '=' ( (lv_surfaceMobility_94_0= RULE_NUMBER ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_95= 'KF' otherlv_96= '=' ( (lv_flickerNoiseCoefficient_97_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_98= 'AF' otherlv_99= '=' ( (lv_flickerNoiseExponent_100_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_101= 'FC' otherlv_102= '=' ( (lv_forwardCapDepletionCoefficient_103_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_104= 'TNOM' otherlv_105= '=' ( (lv_nominalTemperature_106_0= RULE_NUMBER ) ) ) ) ) ) )* ) ) ) otherlv_107= ')' )
            {
            // InternalXSpice.g:4208:2: (otherlv_0= '.MODEL' ( (lv_name_1_0= ruleLabel ) ) (otherlv_2= 'NMOS' | otherlv_3= 'PMOS' ) otherlv_4= '(' ( ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'LEVEL' otherlv_7= '=' ( (lv_level_8_0= RULE_DIGIT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'VTO' | (otherlv_10= 'VT0' otherlv_11= '=' ( (lv_vt0_12_0= RULE_NUMBER ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'KP' otherlv_14= '=' ( (lv_transconductance_15_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'GAMMA' otherlv_17= '=' ( (lv_gamma_18_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'PHI' otherlv_20= '=' ( (lv_phi_21_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'LAMBDA' otherlv_23= '=' ( (lv_lambda_24_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'RD' otherlv_26= '=' ( (lv_drainResistance_27_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'RS' otherlv_29= '=' ( (lv_sourceResistance_30_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'CBD' otherlv_32= '=' ( (lv_capBd_33_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_34= 'CBS' otherlv_35= '=' ( (lv_capBs_36_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'IS' otherlv_38= '=' ( (lv_junctionSatCur_39_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'PB' otherlv_41= '=' ( (lv_bulkJunctionPotential_42_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'CGSO' otherlv_44= '=' ( (lv_gateSourceOverlapCapFactor_45_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_46= 'CGDO' otherlv_47= '=' ( (lv_gateDrainOverlapCapFactor_48_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'CGBO' otherlv_50= '=' ( (lv_gateBulkOverlapCapFactor_51_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_52= 'RSH' otherlv_53= '=' ( (lv_sheetResistance_54_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_55= 'CJ' otherlv_56= '=' ( (lv_bulkCapFactor_57_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_58= 'MJ' otherlv_59= '=' ( (lv_bulkJunctionBotGradingCoefficient_60_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_61= 'CJSW' otherlv_62= '=' ( (lv_sidewallCapFactor_63_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_64= 'MJSW' otherlv_65= '=' ( (lv_bulkJunctionSideGradingCoefficient_66_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_67= 'JS' otherlv_68= '=' ( (lv_junctionSatCurDensity_69_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= 'TOX' otherlv_71= '=' ( (lv_oxideThickness_72_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_73= 'NSUB' otherlv_74= '=' ( (lv_substrateDoping_75_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_76= 'NSS' otherlv_77= '=' ( (lv_surfaceStateDensity_78_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'NFS' otherlv_80= '=' ( (lv_nfs_81_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_82= 'TPG' otherlv_83= '=' ( ( (lv_gateType_84_1= '1' | lv_gateType_84_2= '0' | lv_gateType_84_3= '-1' ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_85= 'XJ' otherlv_86= '=' ( (lv_xj_87_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'LD' otherlv_89= '=' ( (lv_lateralDiffusion_90_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_91= 'UO' | (otherlv_92= 'U0' otherlv_93= '=' ( (lv_surfaceMobility_94_0= RULE_NUMBER ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_95= 'KF' otherlv_96= '=' ( (lv_flickerNoiseCoefficient_97_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_98= 'AF' otherlv_99= '=' ( (lv_flickerNoiseExponent_100_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_101= 'FC' otherlv_102= '=' ( (lv_forwardCapDepletionCoefficient_103_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_104= 'TNOM' otherlv_105= '=' ( (lv_nominalTemperature_106_0= RULE_NUMBER ) ) ) ) ) ) )* ) ) ) otherlv_107= ')' )
            // InternalXSpice.g:4209:3: otherlv_0= '.MODEL' ( (lv_name_1_0= ruleLabel ) ) (otherlv_2= 'NMOS' | otherlv_3= 'PMOS' ) otherlv_4= '(' ( ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'LEVEL' otherlv_7= '=' ( (lv_level_8_0= RULE_DIGIT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'VTO' | (otherlv_10= 'VT0' otherlv_11= '=' ( (lv_vt0_12_0= RULE_NUMBER ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'KP' otherlv_14= '=' ( (lv_transconductance_15_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'GAMMA' otherlv_17= '=' ( (lv_gamma_18_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'PHI' otherlv_20= '=' ( (lv_phi_21_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'LAMBDA' otherlv_23= '=' ( (lv_lambda_24_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'RD' otherlv_26= '=' ( (lv_drainResistance_27_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'RS' otherlv_29= '=' ( (lv_sourceResistance_30_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'CBD' otherlv_32= '=' ( (lv_capBd_33_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_34= 'CBS' otherlv_35= '=' ( (lv_capBs_36_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'IS' otherlv_38= '=' ( (lv_junctionSatCur_39_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'PB' otherlv_41= '=' ( (lv_bulkJunctionPotential_42_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'CGSO' otherlv_44= '=' ( (lv_gateSourceOverlapCapFactor_45_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_46= 'CGDO' otherlv_47= '=' ( (lv_gateDrainOverlapCapFactor_48_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'CGBO' otherlv_50= '=' ( (lv_gateBulkOverlapCapFactor_51_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_52= 'RSH' otherlv_53= '=' ( (lv_sheetResistance_54_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_55= 'CJ' otherlv_56= '=' ( (lv_bulkCapFactor_57_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_58= 'MJ' otherlv_59= '=' ( (lv_bulkJunctionBotGradingCoefficient_60_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_61= 'CJSW' otherlv_62= '=' ( (lv_sidewallCapFactor_63_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_64= 'MJSW' otherlv_65= '=' ( (lv_bulkJunctionSideGradingCoefficient_66_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_67= 'JS' otherlv_68= '=' ( (lv_junctionSatCurDensity_69_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= 'TOX' otherlv_71= '=' ( (lv_oxideThickness_72_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_73= 'NSUB' otherlv_74= '=' ( (lv_substrateDoping_75_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_76= 'NSS' otherlv_77= '=' ( (lv_surfaceStateDensity_78_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'NFS' otherlv_80= '=' ( (lv_nfs_81_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_82= 'TPG' otherlv_83= '=' ( ( (lv_gateType_84_1= '1' | lv_gateType_84_2= '0' | lv_gateType_84_3= '-1' ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_85= 'XJ' otherlv_86= '=' ( (lv_xj_87_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'LD' otherlv_89= '=' ( (lv_lateralDiffusion_90_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_91= 'UO' | (otherlv_92= 'U0' otherlv_93= '=' ( (lv_surfaceMobility_94_0= RULE_NUMBER ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_95= 'KF' otherlv_96= '=' ( (lv_flickerNoiseCoefficient_97_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_98= 'AF' otherlv_99= '=' ( (lv_flickerNoiseExponent_100_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_101= 'FC' otherlv_102= '=' ( (lv_forwardCapDepletionCoefficient_103_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_104= 'TNOM' otherlv_105= '=' ( (lv_nominalTemperature_106_0= RULE_NUMBER ) ) ) ) ) ) )* ) ) ) otherlv_107= ')'
            {
            otherlv_0=(Token)match(input,43,FOLLOW_4); 

            			newLeafNode(otherlv_0, grammarAccess.getMOSFETModelAccess().getMODELKeyword_0());
            		
            // InternalXSpice.g:4213:3: ( (lv_name_1_0= ruleLabel ) )
            // InternalXSpice.g:4214:4: (lv_name_1_0= ruleLabel )
            {
            // InternalXSpice.g:4214:4: (lv_name_1_0= ruleLabel )
            // InternalXSpice.g:4215:5: lv_name_1_0= ruleLabel
            {

            					newCompositeNode(grammarAccess.getMOSFETModelAccess().getNameLabelParserRuleCall_1_0());
            				
            pushFollow(FOLLOW_38);
            lv_name_1_0=ruleLabel();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getMOSFETModelRule());
            					}
            					set(
            						current,
            						"name",
            						lv_name_1_0,
            						"com.xtext.ravornyo.xspice.XSpice.Label");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            // InternalXSpice.g:4232:3: (otherlv_2= 'NMOS' | otherlv_3= 'PMOS' )
            int alt27=2;
            int LA27_0 = input.LA(1);

            if ( (LA27_0==90) ) {
                alt27=1;
            }
            else if ( (LA27_0==91) ) {
                alt27=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 27, 0, input);

                throw nvae;
            }
            switch (alt27) {
                case 1 :
                    // InternalXSpice.g:4233:4: otherlv_2= 'NMOS'
                    {
                    otherlv_2=(Token)match(input,90,FOLLOW_14); 

                    				newLeafNode(otherlv_2, grammarAccess.getMOSFETModelAccess().getNMOSKeyword_2_0());
                    			

                    }
                    break;
                case 2 :
                    // InternalXSpice.g:4238:4: otherlv_3= 'PMOS'
                    {
                    otherlv_3=(Token)match(input,91,FOLLOW_14); 

                    				newLeafNode(otherlv_3, grammarAccess.getMOSFETModelAccess().getPMOSKeyword_2_1());
                    			

                    }
                    break;

            }

            otherlv_4=(Token)match(input,45,FOLLOW_39); 

            			newLeafNode(otherlv_4, grammarAccess.getMOSFETModelAccess().getLeftParenthesisKeyword_3());
            		
            // InternalXSpice.g:4247:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'LEVEL' otherlv_7= '=' ( (lv_level_8_0= RULE_DIGIT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'VTO' | (otherlv_10= 'VT0' otherlv_11= '=' ( (lv_vt0_12_0= RULE_NUMBER ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'KP' otherlv_14= '=' ( (lv_transconductance_15_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'GAMMA' otherlv_17= '=' ( (lv_gamma_18_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'PHI' otherlv_20= '=' ( (lv_phi_21_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'LAMBDA' otherlv_23= '=' ( (lv_lambda_24_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'RD' otherlv_26= '=' ( (lv_drainResistance_27_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'RS' otherlv_29= '=' ( (lv_sourceResistance_30_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'CBD' otherlv_32= '=' ( (lv_capBd_33_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_34= 'CBS' otherlv_35= '=' ( (lv_capBs_36_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'IS' otherlv_38= '=' ( (lv_junctionSatCur_39_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'PB' otherlv_41= '=' ( (lv_bulkJunctionPotential_42_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'CGSO' otherlv_44= '=' ( (lv_gateSourceOverlapCapFactor_45_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_46= 'CGDO' otherlv_47= '=' ( (lv_gateDrainOverlapCapFactor_48_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'CGBO' otherlv_50= '=' ( (lv_gateBulkOverlapCapFactor_51_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_52= 'RSH' otherlv_53= '=' ( (lv_sheetResistance_54_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_55= 'CJ' otherlv_56= '=' ( (lv_bulkCapFactor_57_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_58= 'MJ' otherlv_59= '=' ( (lv_bulkJunctionBotGradingCoefficient_60_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_61= 'CJSW' otherlv_62= '=' ( (lv_sidewallCapFactor_63_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_64= 'MJSW' otherlv_65= '=' ( (lv_bulkJunctionSideGradingCoefficient_66_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_67= 'JS' otherlv_68= '=' ( (lv_junctionSatCurDensity_69_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= 'TOX' otherlv_71= '=' ( (lv_oxideThickness_72_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_73= 'NSUB' otherlv_74= '=' ( (lv_substrateDoping_75_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_76= 'NSS' otherlv_77= '=' ( (lv_surfaceStateDensity_78_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'NFS' otherlv_80= '=' ( (lv_nfs_81_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_82= 'TPG' otherlv_83= '=' ( ( (lv_gateType_84_1= '1' | lv_gateType_84_2= '0' | lv_gateType_84_3= '-1' ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_85= 'XJ' otherlv_86= '=' ( (lv_xj_87_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'LD' otherlv_89= '=' ( (lv_lateralDiffusion_90_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_91= 'UO' | (otherlv_92= 'U0' otherlv_93= '=' ( (lv_surfaceMobility_94_0= RULE_NUMBER ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_95= 'KF' otherlv_96= '=' ( (lv_flickerNoiseCoefficient_97_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_98= 'AF' otherlv_99= '=' ( (lv_flickerNoiseExponent_100_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_101= 'FC' otherlv_102= '=' ( (lv_forwardCapDepletionCoefficient_103_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_104= 'TNOM' otherlv_105= '=' ( (lv_nominalTemperature_106_0= RULE_NUMBER ) ) ) ) ) ) )* ) ) )
            // InternalXSpice.g:4248:4: ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'LEVEL' otherlv_7= '=' ( (lv_level_8_0= RULE_DIGIT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'VTO' | (otherlv_10= 'VT0' otherlv_11= '=' ( (lv_vt0_12_0= RULE_NUMBER ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'KP' otherlv_14= '=' ( (lv_transconductance_15_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'GAMMA' otherlv_17= '=' ( (lv_gamma_18_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'PHI' otherlv_20= '=' ( (lv_phi_21_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'LAMBDA' otherlv_23= '=' ( (lv_lambda_24_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'RD' otherlv_26= '=' ( (lv_drainResistance_27_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'RS' otherlv_29= '=' ( (lv_sourceResistance_30_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'CBD' otherlv_32= '=' ( (lv_capBd_33_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_34= 'CBS' otherlv_35= '=' ( (lv_capBs_36_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'IS' otherlv_38= '=' ( (lv_junctionSatCur_39_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'PB' otherlv_41= '=' ( (lv_bulkJunctionPotential_42_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'CGSO' otherlv_44= '=' ( (lv_gateSourceOverlapCapFactor_45_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_46= 'CGDO' otherlv_47= '=' ( (lv_gateDrainOverlapCapFactor_48_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'CGBO' otherlv_50= '=' ( (lv_gateBulkOverlapCapFactor_51_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_52= 'RSH' otherlv_53= '=' ( (lv_sheetResistance_54_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_55= 'CJ' otherlv_56= '=' ( (lv_bulkCapFactor_57_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_58= 'MJ' otherlv_59= '=' ( (lv_bulkJunctionBotGradingCoefficient_60_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_61= 'CJSW' otherlv_62= '=' ( (lv_sidewallCapFactor_63_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_64= 'MJSW' otherlv_65= '=' ( (lv_bulkJunctionSideGradingCoefficient_66_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_67= 'JS' otherlv_68= '=' ( (lv_junctionSatCurDensity_69_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= 'TOX' otherlv_71= '=' ( (lv_oxideThickness_72_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_73= 'NSUB' otherlv_74= '=' ( (lv_substrateDoping_75_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_76= 'NSS' otherlv_77= '=' ( (lv_surfaceStateDensity_78_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'NFS' otherlv_80= '=' ( (lv_nfs_81_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_82= 'TPG' otherlv_83= '=' ( ( (lv_gateType_84_1= '1' | lv_gateType_84_2= '0' | lv_gateType_84_3= '-1' ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_85= 'XJ' otherlv_86= '=' ( (lv_xj_87_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'LD' otherlv_89= '=' ( (lv_lateralDiffusion_90_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_91= 'UO' | (otherlv_92= 'U0' otherlv_93= '=' ( (lv_surfaceMobility_94_0= RULE_NUMBER ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_95= 'KF' otherlv_96= '=' ( (lv_flickerNoiseCoefficient_97_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_98= 'AF' otherlv_99= '=' ( (lv_flickerNoiseExponent_100_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_101= 'FC' otherlv_102= '=' ( (lv_forwardCapDepletionCoefficient_103_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_104= 'TNOM' otherlv_105= '=' ( (lv_nominalTemperature_106_0= RULE_NUMBER ) ) ) ) ) ) )* ) )
            {
            // InternalXSpice.g:4248:4: ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'LEVEL' otherlv_7= '=' ( (lv_level_8_0= RULE_DIGIT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'VTO' | (otherlv_10= 'VT0' otherlv_11= '=' ( (lv_vt0_12_0= RULE_NUMBER ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'KP' otherlv_14= '=' ( (lv_transconductance_15_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'GAMMA' otherlv_17= '=' ( (lv_gamma_18_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'PHI' otherlv_20= '=' ( (lv_phi_21_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'LAMBDA' otherlv_23= '=' ( (lv_lambda_24_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'RD' otherlv_26= '=' ( (lv_drainResistance_27_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'RS' otherlv_29= '=' ( (lv_sourceResistance_30_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'CBD' otherlv_32= '=' ( (lv_capBd_33_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_34= 'CBS' otherlv_35= '=' ( (lv_capBs_36_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'IS' otherlv_38= '=' ( (lv_junctionSatCur_39_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'PB' otherlv_41= '=' ( (lv_bulkJunctionPotential_42_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'CGSO' otherlv_44= '=' ( (lv_gateSourceOverlapCapFactor_45_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_46= 'CGDO' otherlv_47= '=' ( (lv_gateDrainOverlapCapFactor_48_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'CGBO' otherlv_50= '=' ( (lv_gateBulkOverlapCapFactor_51_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_52= 'RSH' otherlv_53= '=' ( (lv_sheetResistance_54_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_55= 'CJ' otherlv_56= '=' ( (lv_bulkCapFactor_57_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_58= 'MJ' otherlv_59= '=' ( (lv_bulkJunctionBotGradingCoefficient_60_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_61= 'CJSW' otherlv_62= '=' ( (lv_sidewallCapFactor_63_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_64= 'MJSW' otherlv_65= '=' ( (lv_bulkJunctionSideGradingCoefficient_66_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_67= 'JS' otherlv_68= '=' ( (lv_junctionSatCurDensity_69_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= 'TOX' otherlv_71= '=' ( (lv_oxideThickness_72_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_73= 'NSUB' otherlv_74= '=' ( (lv_substrateDoping_75_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_76= 'NSS' otherlv_77= '=' ( (lv_surfaceStateDensity_78_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'NFS' otherlv_80= '=' ( (lv_nfs_81_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_82= 'TPG' otherlv_83= '=' ( ( (lv_gateType_84_1= '1' | lv_gateType_84_2= '0' | lv_gateType_84_3= '-1' ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_85= 'XJ' otherlv_86= '=' ( (lv_xj_87_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'LD' otherlv_89= '=' ( (lv_lateralDiffusion_90_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_91= 'UO' | (otherlv_92= 'U0' otherlv_93= '=' ( (lv_surfaceMobility_94_0= RULE_NUMBER ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_95= 'KF' otherlv_96= '=' ( (lv_flickerNoiseCoefficient_97_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_98= 'AF' otherlv_99= '=' ( (lv_flickerNoiseExponent_100_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_101= 'FC' otherlv_102= '=' ( (lv_forwardCapDepletionCoefficient_103_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_104= 'TNOM' otherlv_105= '=' ( (lv_nominalTemperature_106_0= RULE_NUMBER ) ) ) ) ) ) )* ) )
            // InternalXSpice.g:4249:5: ( ( ({...}? => ( ({...}? => (otherlv_6= 'LEVEL' otherlv_7= '=' ( (lv_level_8_0= RULE_DIGIT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'VTO' | (otherlv_10= 'VT0' otherlv_11= '=' ( (lv_vt0_12_0= RULE_NUMBER ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'KP' otherlv_14= '=' ( (lv_transconductance_15_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'GAMMA' otherlv_17= '=' ( (lv_gamma_18_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'PHI' otherlv_20= '=' ( (lv_phi_21_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'LAMBDA' otherlv_23= '=' ( (lv_lambda_24_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'RD' otherlv_26= '=' ( (lv_drainResistance_27_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'RS' otherlv_29= '=' ( (lv_sourceResistance_30_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'CBD' otherlv_32= '=' ( (lv_capBd_33_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_34= 'CBS' otherlv_35= '=' ( (lv_capBs_36_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'IS' otherlv_38= '=' ( (lv_junctionSatCur_39_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'PB' otherlv_41= '=' ( (lv_bulkJunctionPotential_42_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'CGSO' otherlv_44= '=' ( (lv_gateSourceOverlapCapFactor_45_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_46= 'CGDO' otherlv_47= '=' ( (lv_gateDrainOverlapCapFactor_48_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'CGBO' otherlv_50= '=' ( (lv_gateBulkOverlapCapFactor_51_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_52= 'RSH' otherlv_53= '=' ( (lv_sheetResistance_54_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_55= 'CJ' otherlv_56= '=' ( (lv_bulkCapFactor_57_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_58= 'MJ' otherlv_59= '=' ( (lv_bulkJunctionBotGradingCoefficient_60_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_61= 'CJSW' otherlv_62= '=' ( (lv_sidewallCapFactor_63_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_64= 'MJSW' otherlv_65= '=' ( (lv_bulkJunctionSideGradingCoefficient_66_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_67= 'JS' otherlv_68= '=' ( (lv_junctionSatCurDensity_69_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= 'TOX' otherlv_71= '=' ( (lv_oxideThickness_72_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_73= 'NSUB' otherlv_74= '=' ( (lv_substrateDoping_75_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_76= 'NSS' otherlv_77= '=' ( (lv_surfaceStateDensity_78_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'NFS' otherlv_80= '=' ( (lv_nfs_81_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_82= 'TPG' otherlv_83= '=' ( ( (lv_gateType_84_1= '1' | lv_gateType_84_2= '0' | lv_gateType_84_3= '-1' ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_85= 'XJ' otherlv_86= '=' ( (lv_xj_87_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'LD' otherlv_89= '=' ( (lv_lateralDiffusion_90_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_91= 'UO' | (otherlv_92= 'U0' otherlv_93= '=' ( (lv_surfaceMobility_94_0= RULE_NUMBER ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_95= 'KF' otherlv_96= '=' ( (lv_flickerNoiseCoefficient_97_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_98= 'AF' otherlv_99= '=' ( (lv_flickerNoiseExponent_100_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_101= 'FC' otherlv_102= '=' ( (lv_forwardCapDepletionCoefficient_103_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_104= 'TNOM' otherlv_105= '=' ( (lv_nominalTemperature_106_0= RULE_NUMBER ) ) ) ) ) ) )* )
            {
             
            				  getUnorderedGroupHelper().enter(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4());
            				
            // InternalXSpice.g:4252:5: ( ( ({...}? => ( ({...}? => (otherlv_6= 'LEVEL' otherlv_7= '=' ( (lv_level_8_0= RULE_DIGIT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'VTO' | (otherlv_10= 'VT0' otherlv_11= '=' ( (lv_vt0_12_0= RULE_NUMBER ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'KP' otherlv_14= '=' ( (lv_transconductance_15_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'GAMMA' otherlv_17= '=' ( (lv_gamma_18_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'PHI' otherlv_20= '=' ( (lv_phi_21_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'LAMBDA' otherlv_23= '=' ( (lv_lambda_24_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'RD' otherlv_26= '=' ( (lv_drainResistance_27_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'RS' otherlv_29= '=' ( (lv_sourceResistance_30_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'CBD' otherlv_32= '=' ( (lv_capBd_33_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_34= 'CBS' otherlv_35= '=' ( (lv_capBs_36_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'IS' otherlv_38= '=' ( (lv_junctionSatCur_39_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'PB' otherlv_41= '=' ( (lv_bulkJunctionPotential_42_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'CGSO' otherlv_44= '=' ( (lv_gateSourceOverlapCapFactor_45_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_46= 'CGDO' otherlv_47= '=' ( (lv_gateDrainOverlapCapFactor_48_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'CGBO' otherlv_50= '=' ( (lv_gateBulkOverlapCapFactor_51_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_52= 'RSH' otherlv_53= '=' ( (lv_sheetResistance_54_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_55= 'CJ' otherlv_56= '=' ( (lv_bulkCapFactor_57_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_58= 'MJ' otherlv_59= '=' ( (lv_bulkJunctionBotGradingCoefficient_60_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_61= 'CJSW' otherlv_62= '=' ( (lv_sidewallCapFactor_63_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_64= 'MJSW' otherlv_65= '=' ( (lv_bulkJunctionSideGradingCoefficient_66_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_67= 'JS' otherlv_68= '=' ( (lv_junctionSatCurDensity_69_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= 'TOX' otherlv_71= '=' ( (lv_oxideThickness_72_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_73= 'NSUB' otherlv_74= '=' ( (lv_substrateDoping_75_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_76= 'NSS' otherlv_77= '=' ( (lv_surfaceStateDensity_78_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'NFS' otherlv_80= '=' ( (lv_nfs_81_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_82= 'TPG' otherlv_83= '=' ( ( (lv_gateType_84_1= '1' | lv_gateType_84_2= '0' | lv_gateType_84_3= '-1' ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_85= 'XJ' otherlv_86= '=' ( (lv_xj_87_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'LD' otherlv_89= '=' ( (lv_lateralDiffusion_90_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_91= 'UO' | (otherlv_92= 'U0' otherlv_93= '=' ( (lv_surfaceMobility_94_0= RULE_NUMBER ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_95= 'KF' otherlv_96= '=' ( (lv_flickerNoiseCoefficient_97_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_98= 'AF' otherlv_99= '=' ( (lv_flickerNoiseExponent_100_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_101= 'FC' otherlv_102= '=' ( (lv_forwardCapDepletionCoefficient_103_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_104= 'TNOM' otherlv_105= '=' ( (lv_nominalTemperature_106_0= RULE_NUMBER ) ) ) ) ) ) )* )
            // InternalXSpice.g:4253:6: ( ({...}? => ( ({...}? => (otherlv_6= 'LEVEL' otherlv_7= '=' ( (lv_level_8_0= RULE_DIGIT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'VTO' | (otherlv_10= 'VT0' otherlv_11= '=' ( (lv_vt0_12_0= RULE_NUMBER ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'KP' otherlv_14= '=' ( (lv_transconductance_15_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'GAMMA' otherlv_17= '=' ( (lv_gamma_18_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'PHI' otherlv_20= '=' ( (lv_phi_21_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'LAMBDA' otherlv_23= '=' ( (lv_lambda_24_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'RD' otherlv_26= '=' ( (lv_drainResistance_27_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'RS' otherlv_29= '=' ( (lv_sourceResistance_30_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'CBD' otherlv_32= '=' ( (lv_capBd_33_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_34= 'CBS' otherlv_35= '=' ( (lv_capBs_36_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'IS' otherlv_38= '=' ( (lv_junctionSatCur_39_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'PB' otherlv_41= '=' ( (lv_bulkJunctionPotential_42_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'CGSO' otherlv_44= '=' ( (lv_gateSourceOverlapCapFactor_45_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_46= 'CGDO' otherlv_47= '=' ( (lv_gateDrainOverlapCapFactor_48_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'CGBO' otherlv_50= '=' ( (lv_gateBulkOverlapCapFactor_51_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_52= 'RSH' otherlv_53= '=' ( (lv_sheetResistance_54_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_55= 'CJ' otherlv_56= '=' ( (lv_bulkCapFactor_57_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_58= 'MJ' otherlv_59= '=' ( (lv_bulkJunctionBotGradingCoefficient_60_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_61= 'CJSW' otherlv_62= '=' ( (lv_sidewallCapFactor_63_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_64= 'MJSW' otherlv_65= '=' ( (lv_bulkJunctionSideGradingCoefficient_66_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_67= 'JS' otherlv_68= '=' ( (lv_junctionSatCurDensity_69_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= 'TOX' otherlv_71= '=' ( (lv_oxideThickness_72_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_73= 'NSUB' otherlv_74= '=' ( (lv_substrateDoping_75_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_76= 'NSS' otherlv_77= '=' ( (lv_surfaceStateDensity_78_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'NFS' otherlv_80= '=' ( (lv_nfs_81_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_82= 'TPG' otherlv_83= '=' ( ( (lv_gateType_84_1= '1' | lv_gateType_84_2= '0' | lv_gateType_84_3= '-1' ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_85= 'XJ' otherlv_86= '=' ( (lv_xj_87_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'LD' otherlv_89= '=' ( (lv_lateralDiffusion_90_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_91= 'UO' | (otherlv_92= 'U0' otherlv_93= '=' ( (lv_surfaceMobility_94_0= RULE_NUMBER ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_95= 'KF' otherlv_96= '=' ( (lv_flickerNoiseCoefficient_97_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_98= 'AF' otherlv_99= '=' ( (lv_flickerNoiseExponent_100_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_101= 'FC' otherlv_102= '=' ( (lv_forwardCapDepletionCoefficient_103_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_104= 'TNOM' otherlv_105= '=' ( (lv_nominalTemperature_106_0= RULE_NUMBER ) ) ) ) ) ) )*
            {
            // InternalXSpice.g:4253:6: ( ({...}? => ( ({...}? => (otherlv_6= 'LEVEL' otherlv_7= '=' ( (lv_level_8_0= RULE_DIGIT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'VTO' | (otherlv_10= 'VT0' otherlv_11= '=' ( (lv_vt0_12_0= RULE_NUMBER ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'KP' otherlv_14= '=' ( (lv_transconductance_15_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'GAMMA' otherlv_17= '=' ( (lv_gamma_18_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'PHI' otherlv_20= '=' ( (lv_phi_21_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'LAMBDA' otherlv_23= '=' ( (lv_lambda_24_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'RD' otherlv_26= '=' ( (lv_drainResistance_27_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'RS' otherlv_29= '=' ( (lv_sourceResistance_30_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'CBD' otherlv_32= '=' ( (lv_capBd_33_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_34= 'CBS' otherlv_35= '=' ( (lv_capBs_36_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'IS' otherlv_38= '=' ( (lv_junctionSatCur_39_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'PB' otherlv_41= '=' ( (lv_bulkJunctionPotential_42_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'CGSO' otherlv_44= '=' ( (lv_gateSourceOverlapCapFactor_45_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_46= 'CGDO' otherlv_47= '=' ( (lv_gateDrainOverlapCapFactor_48_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'CGBO' otherlv_50= '=' ( (lv_gateBulkOverlapCapFactor_51_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_52= 'RSH' otherlv_53= '=' ( (lv_sheetResistance_54_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_55= 'CJ' otherlv_56= '=' ( (lv_bulkCapFactor_57_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_58= 'MJ' otherlv_59= '=' ( (lv_bulkJunctionBotGradingCoefficient_60_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_61= 'CJSW' otherlv_62= '=' ( (lv_sidewallCapFactor_63_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_64= 'MJSW' otherlv_65= '=' ( (lv_bulkJunctionSideGradingCoefficient_66_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_67= 'JS' otherlv_68= '=' ( (lv_junctionSatCurDensity_69_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= 'TOX' otherlv_71= '=' ( (lv_oxideThickness_72_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_73= 'NSUB' otherlv_74= '=' ( (lv_substrateDoping_75_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_76= 'NSS' otherlv_77= '=' ( (lv_surfaceStateDensity_78_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'NFS' otherlv_80= '=' ( (lv_nfs_81_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_82= 'TPG' otherlv_83= '=' ( ( (lv_gateType_84_1= '1' | lv_gateType_84_2= '0' | lv_gateType_84_3= '-1' ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_85= 'XJ' otherlv_86= '=' ( (lv_xj_87_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'LD' otherlv_89= '=' ( (lv_lateralDiffusion_90_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_91= 'UO' | (otherlv_92= 'U0' otherlv_93= '=' ( (lv_surfaceMobility_94_0= RULE_NUMBER ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_95= 'KF' otherlv_96= '=' ( (lv_flickerNoiseCoefficient_97_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_98= 'AF' otherlv_99= '=' ( (lv_flickerNoiseExponent_100_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_101= 'FC' otherlv_102= '=' ( (lv_forwardCapDepletionCoefficient_103_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_104= 'TNOM' otherlv_105= '=' ( (lv_nominalTemperature_106_0= RULE_NUMBER ) ) ) ) ) ) )*
            loop31:
            do {
                int alt31=34;
                alt31 = dfa31.predict(input);
                switch (alt31) {
            	case 1 :
            	    // InternalXSpice.g:4254:4: ({...}? => ( ({...}? => (otherlv_6= 'LEVEL' otherlv_7= '=' ( (lv_level_8_0= RULE_DIGIT ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:4254:4: ({...}? => ( ({...}? => (otherlv_6= 'LEVEL' otherlv_7= '=' ( (lv_level_8_0= RULE_DIGIT ) ) ) ) ) )
            	    // InternalXSpice.g:4255:5: {...}? => ( ({...}? => (otherlv_6= 'LEVEL' otherlv_7= '=' ( (lv_level_8_0= RULE_DIGIT ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 0) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFETModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 0)");
            	    }
            	    // InternalXSpice.g:4255:108: ( ({...}? => (otherlv_6= 'LEVEL' otherlv_7= '=' ( (lv_level_8_0= RULE_DIGIT ) ) ) ) )
            	    // InternalXSpice.g:4256:6: ({...}? => (otherlv_6= 'LEVEL' otherlv_7= '=' ( (lv_level_8_0= RULE_DIGIT ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 0);
            	    					
            	    // InternalXSpice.g:4259:9: ({...}? => (otherlv_6= 'LEVEL' otherlv_7= '=' ( (lv_level_8_0= RULE_DIGIT ) ) ) )
            	    // InternalXSpice.g:4259:10: {...}? => (otherlv_6= 'LEVEL' otherlv_7= '=' ( (lv_level_8_0= RULE_DIGIT ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFETModel", "true");
            	    }
            	    // InternalXSpice.g:4259:19: (otherlv_6= 'LEVEL' otherlv_7= '=' ( (lv_level_8_0= RULE_DIGIT ) ) )
            	    // InternalXSpice.g:4259:20: otherlv_6= 'LEVEL' otherlv_7= '=' ( (lv_level_8_0= RULE_DIGIT ) )
            	    {
            	    otherlv_6=(Token)match(input,92,FOLLOW_11); 

            	    									newLeafNode(otherlv_6, grammarAccess.getMOSFETModelAccess().getLEVELKeyword_4_0_0());
            	    								
            	    otherlv_7=(Token)match(input,40,FOLLOW_40); 

            	    									newLeafNode(otherlv_7, grammarAccess.getMOSFETModelAccess().getEqualsSignKeyword_4_0_1());
            	    								
            	    // InternalXSpice.g:4267:9: ( (lv_level_8_0= RULE_DIGIT ) )
            	    // InternalXSpice.g:4268:10: (lv_level_8_0= RULE_DIGIT )
            	    {
            	    // InternalXSpice.g:4268:10: (lv_level_8_0= RULE_DIGIT )
            	    // InternalXSpice.g:4269:11: lv_level_8_0= RULE_DIGIT
            	    {
            	    lv_level_8_0=(Token)match(input,RULE_DIGIT,FOLLOW_39); 

            	    											newLeafNode(lv_level_8_0, grammarAccess.getMOSFETModelAccess().getLevelDIGITTerminalRuleCall_4_0_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getMOSFETModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"level",
            	    												lv_level_8_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.DIGIT");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalXSpice.g:4291:4: ({...}? => ( ({...}? => (otherlv_9= 'VTO' | (otherlv_10= 'VT0' otherlv_11= '=' ( (lv_vt0_12_0= RULE_NUMBER ) ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:4291:4: ({...}? => ( ({...}? => (otherlv_9= 'VTO' | (otherlv_10= 'VT0' otherlv_11= '=' ( (lv_vt0_12_0= RULE_NUMBER ) ) ) ) ) ) )
            	    // InternalXSpice.g:4292:5: {...}? => ( ({...}? => (otherlv_9= 'VTO' | (otherlv_10= 'VT0' otherlv_11= '=' ( (lv_vt0_12_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 1) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFETModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 1)");
            	    }
            	    // InternalXSpice.g:4292:108: ( ({...}? => (otherlv_9= 'VTO' | (otherlv_10= 'VT0' otherlv_11= '=' ( (lv_vt0_12_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:4293:6: ({...}? => (otherlv_9= 'VTO' | (otherlv_10= 'VT0' otherlv_11= '=' ( (lv_vt0_12_0= RULE_NUMBER ) ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 1);
            	    					
            	    // InternalXSpice.g:4296:9: ({...}? => (otherlv_9= 'VTO' | (otherlv_10= 'VT0' otherlv_11= '=' ( (lv_vt0_12_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:4296:10: {...}? => (otherlv_9= 'VTO' | (otherlv_10= 'VT0' otherlv_11= '=' ( (lv_vt0_12_0= RULE_NUMBER ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFETModel", "true");
            	    }
            	    // InternalXSpice.g:4296:19: (otherlv_9= 'VTO' | (otherlv_10= 'VT0' otherlv_11= '=' ( (lv_vt0_12_0= RULE_NUMBER ) ) ) )
            	    int alt28=2;
            	    int LA28_0 = input.LA(1);

            	    if ( (LA28_0==93) ) {
            	        alt28=1;
            	    }
            	    else if ( (LA28_0==94) ) {
            	        alt28=2;
            	    }
            	    else {
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 28, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt28) {
            	        case 1 :
            	            // InternalXSpice.g:4296:20: otherlv_9= 'VTO'
            	            {
            	            otherlv_9=(Token)match(input,93,FOLLOW_39); 

            	            									newLeafNode(otherlv_9, grammarAccess.getMOSFETModelAccess().getVTOKeyword_4_1_0());
            	            								

            	            }
            	            break;
            	        case 2 :
            	            // InternalXSpice.g:4301:9: (otherlv_10= 'VT0' otherlv_11= '=' ( (lv_vt0_12_0= RULE_NUMBER ) ) )
            	            {
            	            // InternalXSpice.g:4301:9: (otherlv_10= 'VT0' otherlv_11= '=' ( (lv_vt0_12_0= RULE_NUMBER ) ) )
            	            // InternalXSpice.g:4302:10: otherlv_10= 'VT0' otherlv_11= '=' ( (lv_vt0_12_0= RULE_NUMBER ) )
            	            {
            	            otherlv_10=(Token)match(input,94,FOLLOW_11); 

            	            										newLeafNode(otherlv_10, grammarAccess.getMOSFETModelAccess().getVT0Keyword_4_1_1_0());
            	            									
            	            otherlv_11=(Token)match(input,40,FOLLOW_12); 

            	            										newLeafNode(otherlv_11, grammarAccess.getMOSFETModelAccess().getEqualsSignKeyword_4_1_1_1());
            	            									
            	            // InternalXSpice.g:4310:10: ( (lv_vt0_12_0= RULE_NUMBER ) )
            	            // InternalXSpice.g:4311:11: (lv_vt0_12_0= RULE_NUMBER )
            	            {
            	            // InternalXSpice.g:4311:11: (lv_vt0_12_0= RULE_NUMBER )
            	            // InternalXSpice.g:4312:12: lv_vt0_12_0= RULE_NUMBER
            	            {
            	            lv_vt0_12_0=(Token)match(input,RULE_NUMBER,FOLLOW_39); 

            	            												newLeafNode(lv_vt0_12_0, grammarAccess.getMOSFETModelAccess().getVt0NUMBERTerminalRuleCall_4_1_1_2_0());
            	            											

            	            												if (current==null) {
            	            													current = createModelElement(grammarAccess.getMOSFETModelRule());
            	            												}
            	            												setWithLastConsumed(
            	            													current,
            	            													"vt0",
            	            													lv_vt0_12_0,
            	            													"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	            											

            	            }


            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalXSpice.g:4335:4: ({...}? => ( ({...}? => (otherlv_13= 'KP' otherlv_14= '=' ( (lv_transconductance_15_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:4335:4: ({...}? => ( ({...}? => (otherlv_13= 'KP' otherlv_14= '=' ( (lv_transconductance_15_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:4336:5: {...}? => ( ({...}? => (otherlv_13= 'KP' otherlv_14= '=' ( (lv_transconductance_15_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 2) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFETModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 2)");
            	    }
            	    // InternalXSpice.g:4336:108: ( ({...}? => (otherlv_13= 'KP' otherlv_14= '=' ( (lv_transconductance_15_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:4337:6: ({...}? => (otherlv_13= 'KP' otherlv_14= '=' ( (lv_transconductance_15_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 2);
            	    					
            	    // InternalXSpice.g:4340:9: ({...}? => (otherlv_13= 'KP' otherlv_14= '=' ( (lv_transconductance_15_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:4340:10: {...}? => (otherlv_13= 'KP' otherlv_14= '=' ( (lv_transconductance_15_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFETModel", "true");
            	    }
            	    // InternalXSpice.g:4340:19: (otherlv_13= 'KP' otherlv_14= '=' ( (lv_transconductance_15_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:4340:20: otherlv_13= 'KP' otherlv_14= '=' ( (lv_transconductance_15_0= RULE_NUMBER ) )
            	    {
            	    otherlv_13=(Token)match(input,95,FOLLOW_11); 

            	    									newLeafNode(otherlv_13, grammarAccess.getMOSFETModelAccess().getKPKeyword_4_2_0());
            	    								
            	    otherlv_14=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_14, grammarAccess.getMOSFETModelAccess().getEqualsSignKeyword_4_2_1());
            	    								
            	    // InternalXSpice.g:4348:9: ( (lv_transconductance_15_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:4349:10: (lv_transconductance_15_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:4349:10: (lv_transconductance_15_0= RULE_NUMBER )
            	    // InternalXSpice.g:4350:11: lv_transconductance_15_0= RULE_NUMBER
            	    {
            	    lv_transconductance_15_0=(Token)match(input,RULE_NUMBER,FOLLOW_39); 

            	    											newLeafNode(lv_transconductance_15_0, grammarAccess.getMOSFETModelAccess().getTransconductanceNUMBERTerminalRuleCall_4_2_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getMOSFETModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"transconductance",
            	    												lv_transconductance_15_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalXSpice.g:4372:4: ({...}? => ( ({...}? => (otherlv_16= 'GAMMA' otherlv_17= '=' ( (lv_gamma_18_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:4372:4: ({...}? => ( ({...}? => (otherlv_16= 'GAMMA' otherlv_17= '=' ( (lv_gamma_18_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:4373:5: {...}? => ( ({...}? => (otherlv_16= 'GAMMA' otherlv_17= '=' ( (lv_gamma_18_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 3) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFETModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 3)");
            	    }
            	    // InternalXSpice.g:4373:108: ( ({...}? => (otherlv_16= 'GAMMA' otherlv_17= '=' ( (lv_gamma_18_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:4374:6: ({...}? => (otherlv_16= 'GAMMA' otherlv_17= '=' ( (lv_gamma_18_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 3);
            	    					
            	    // InternalXSpice.g:4377:9: ({...}? => (otherlv_16= 'GAMMA' otherlv_17= '=' ( (lv_gamma_18_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:4377:10: {...}? => (otherlv_16= 'GAMMA' otherlv_17= '=' ( (lv_gamma_18_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFETModel", "true");
            	    }
            	    // InternalXSpice.g:4377:19: (otherlv_16= 'GAMMA' otherlv_17= '=' ( (lv_gamma_18_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:4377:20: otherlv_16= 'GAMMA' otherlv_17= '=' ( (lv_gamma_18_0= RULE_NUMBER ) )
            	    {
            	    otherlv_16=(Token)match(input,96,FOLLOW_11); 

            	    									newLeafNode(otherlv_16, grammarAccess.getMOSFETModelAccess().getGAMMAKeyword_4_3_0());
            	    								
            	    otherlv_17=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_17, grammarAccess.getMOSFETModelAccess().getEqualsSignKeyword_4_3_1());
            	    								
            	    // InternalXSpice.g:4385:9: ( (lv_gamma_18_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:4386:10: (lv_gamma_18_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:4386:10: (lv_gamma_18_0= RULE_NUMBER )
            	    // InternalXSpice.g:4387:11: lv_gamma_18_0= RULE_NUMBER
            	    {
            	    lv_gamma_18_0=(Token)match(input,RULE_NUMBER,FOLLOW_39); 

            	    											newLeafNode(lv_gamma_18_0, grammarAccess.getMOSFETModelAccess().getGammaNUMBERTerminalRuleCall_4_3_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getMOSFETModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"gamma",
            	    												lv_gamma_18_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalXSpice.g:4409:4: ({...}? => ( ({...}? => (otherlv_19= 'PHI' otherlv_20= '=' ( (lv_phi_21_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:4409:4: ({...}? => ( ({...}? => (otherlv_19= 'PHI' otherlv_20= '=' ( (lv_phi_21_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:4410:5: {...}? => ( ({...}? => (otherlv_19= 'PHI' otherlv_20= '=' ( (lv_phi_21_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 4) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFETModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 4)");
            	    }
            	    // InternalXSpice.g:4410:108: ( ({...}? => (otherlv_19= 'PHI' otherlv_20= '=' ( (lv_phi_21_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:4411:6: ({...}? => (otherlv_19= 'PHI' otherlv_20= '=' ( (lv_phi_21_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 4);
            	    					
            	    // InternalXSpice.g:4414:9: ({...}? => (otherlv_19= 'PHI' otherlv_20= '=' ( (lv_phi_21_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:4414:10: {...}? => (otherlv_19= 'PHI' otherlv_20= '=' ( (lv_phi_21_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFETModel", "true");
            	    }
            	    // InternalXSpice.g:4414:19: (otherlv_19= 'PHI' otherlv_20= '=' ( (lv_phi_21_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:4414:20: otherlv_19= 'PHI' otherlv_20= '=' ( (lv_phi_21_0= RULE_NUMBER ) )
            	    {
            	    otherlv_19=(Token)match(input,97,FOLLOW_11); 

            	    									newLeafNode(otherlv_19, grammarAccess.getMOSFETModelAccess().getPHIKeyword_4_4_0());
            	    								
            	    otherlv_20=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_20, grammarAccess.getMOSFETModelAccess().getEqualsSignKeyword_4_4_1());
            	    								
            	    // InternalXSpice.g:4422:9: ( (lv_phi_21_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:4423:10: (lv_phi_21_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:4423:10: (lv_phi_21_0= RULE_NUMBER )
            	    // InternalXSpice.g:4424:11: lv_phi_21_0= RULE_NUMBER
            	    {
            	    lv_phi_21_0=(Token)match(input,RULE_NUMBER,FOLLOW_39); 

            	    											newLeafNode(lv_phi_21_0, grammarAccess.getMOSFETModelAccess().getPhiNUMBERTerminalRuleCall_4_4_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getMOSFETModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"phi",
            	    												lv_phi_21_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalXSpice.g:4446:4: ({...}? => ( ({...}? => (otherlv_22= 'LAMBDA' otherlv_23= '=' ( (lv_lambda_24_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:4446:4: ({...}? => ( ({...}? => (otherlv_22= 'LAMBDA' otherlv_23= '=' ( (lv_lambda_24_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:4447:5: {...}? => ( ({...}? => (otherlv_22= 'LAMBDA' otherlv_23= '=' ( (lv_lambda_24_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 5) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFETModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 5)");
            	    }
            	    // InternalXSpice.g:4447:108: ( ({...}? => (otherlv_22= 'LAMBDA' otherlv_23= '=' ( (lv_lambda_24_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:4448:6: ({...}? => (otherlv_22= 'LAMBDA' otherlv_23= '=' ( (lv_lambda_24_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 5);
            	    					
            	    // InternalXSpice.g:4451:9: ({...}? => (otherlv_22= 'LAMBDA' otherlv_23= '=' ( (lv_lambda_24_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:4451:10: {...}? => (otherlv_22= 'LAMBDA' otherlv_23= '=' ( (lv_lambda_24_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFETModel", "true");
            	    }
            	    // InternalXSpice.g:4451:19: (otherlv_22= 'LAMBDA' otherlv_23= '=' ( (lv_lambda_24_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:4451:20: otherlv_22= 'LAMBDA' otherlv_23= '=' ( (lv_lambda_24_0= RULE_NUMBER ) )
            	    {
            	    otherlv_22=(Token)match(input,98,FOLLOW_11); 

            	    									newLeafNode(otherlv_22, grammarAccess.getMOSFETModelAccess().getLAMBDAKeyword_4_5_0());
            	    								
            	    otherlv_23=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_23, grammarAccess.getMOSFETModelAccess().getEqualsSignKeyword_4_5_1());
            	    								
            	    // InternalXSpice.g:4459:9: ( (lv_lambda_24_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:4460:10: (lv_lambda_24_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:4460:10: (lv_lambda_24_0= RULE_NUMBER )
            	    // InternalXSpice.g:4461:11: lv_lambda_24_0= RULE_NUMBER
            	    {
            	    lv_lambda_24_0=(Token)match(input,RULE_NUMBER,FOLLOW_39); 

            	    											newLeafNode(lv_lambda_24_0, grammarAccess.getMOSFETModelAccess().getLambdaNUMBERTerminalRuleCall_4_5_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getMOSFETModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"lambda",
            	    												lv_lambda_24_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // InternalXSpice.g:4483:4: ({...}? => ( ({...}? => (otherlv_25= 'RD' otherlv_26= '=' ( (lv_drainResistance_27_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:4483:4: ({...}? => ( ({...}? => (otherlv_25= 'RD' otherlv_26= '=' ( (lv_drainResistance_27_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:4484:5: {...}? => ( ({...}? => (otherlv_25= 'RD' otherlv_26= '=' ( (lv_drainResistance_27_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 6) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFETModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 6)");
            	    }
            	    // InternalXSpice.g:4484:108: ( ({...}? => (otherlv_25= 'RD' otherlv_26= '=' ( (lv_drainResistance_27_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:4485:6: ({...}? => (otherlv_25= 'RD' otherlv_26= '=' ( (lv_drainResistance_27_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 6);
            	    					
            	    // InternalXSpice.g:4488:9: ({...}? => (otherlv_25= 'RD' otherlv_26= '=' ( (lv_drainResistance_27_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:4488:10: {...}? => (otherlv_25= 'RD' otherlv_26= '=' ( (lv_drainResistance_27_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFETModel", "true");
            	    }
            	    // InternalXSpice.g:4488:19: (otherlv_25= 'RD' otherlv_26= '=' ( (lv_drainResistance_27_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:4488:20: otherlv_25= 'RD' otherlv_26= '=' ( (lv_drainResistance_27_0= RULE_NUMBER ) )
            	    {
            	    otherlv_25=(Token)match(input,99,FOLLOW_11); 

            	    									newLeafNode(otherlv_25, grammarAccess.getMOSFETModelAccess().getRDKeyword_4_6_0());
            	    								
            	    otherlv_26=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_26, grammarAccess.getMOSFETModelAccess().getEqualsSignKeyword_4_6_1());
            	    								
            	    // InternalXSpice.g:4496:9: ( (lv_drainResistance_27_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:4497:10: (lv_drainResistance_27_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:4497:10: (lv_drainResistance_27_0= RULE_NUMBER )
            	    // InternalXSpice.g:4498:11: lv_drainResistance_27_0= RULE_NUMBER
            	    {
            	    lv_drainResistance_27_0=(Token)match(input,RULE_NUMBER,FOLLOW_39); 

            	    											newLeafNode(lv_drainResistance_27_0, grammarAccess.getMOSFETModelAccess().getDrainResistanceNUMBERTerminalRuleCall_4_6_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getMOSFETModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"drainResistance",
            	    												lv_drainResistance_27_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 8 :
            	    // InternalXSpice.g:4520:4: ({...}? => ( ({...}? => (otherlv_28= 'RS' otherlv_29= '=' ( (lv_sourceResistance_30_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:4520:4: ({...}? => ( ({...}? => (otherlv_28= 'RS' otherlv_29= '=' ( (lv_sourceResistance_30_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:4521:5: {...}? => ( ({...}? => (otherlv_28= 'RS' otherlv_29= '=' ( (lv_sourceResistance_30_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 7) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFETModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 7)");
            	    }
            	    // InternalXSpice.g:4521:108: ( ({...}? => (otherlv_28= 'RS' otherlv_29= '=' ( (lv_sourceResistance_30_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:4522:6: ({...}? => (otherlv_28= 'RS' otherlv_29= '=' ( (lv_sourceResistance_30_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 7);
            	    					
            	    // InternalXSpice.g:4525:9: ({...}? => (otherlv_28= 'RS' otherlv_29= '=' ( (lv_sourceResistance_30_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:4525:10: {...}? => (otherlv_28= 'RS' otherlv_29= '=' ( (lv_sourceResistance_30_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFETModel", "true");
            	    }
            	    // InternalXSpice.g:4525:19: (otherlv_28= 'RS' otherlv_29= '=' ( (lv_sourceResistance_30_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:4525:20: otherlv_28= 'RS' otherlv_29= '=' ( (lv_sourceResistance_30_0= RULE_NUMBER ) )
            	    {
            	    otherlv_28=(Token)match(input,70,FOLLOW_11); 

            	    									newLeafNode(otherlv_28, grammarAccess.getMOSFETModelAccess().getRSKeyword_4_7_0());
            	    								
            	    otherlv_29=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_29, grammarAccess.getMOSFETModelAccess().getEqualsSignKeyword_4_7_1());
            	    								
            	    // InternalXSpice.g:4533:9: ( (lv_sourceResistance_30_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:4534:10: (lv_sourceResistance_30_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:4534:10: (lv_sourceResistance_30_0= RULE_NUMBER )
            	    // InternalXSpice.g:4535:11: lv_sourceResistance_30_0= RULE_NUMBER
            	    {
            	    lv_sourceResistance_30_0=(Token)match(input,RULE_NUMBER,FOLLOW_39); 

            	    											newLeafNode(lv_sourceResistance_30_0, grammarAccess.getMOSFETModelAccess().getSourceResistanceNUMBERTerminalRuleCall_4_7_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getMOSFETModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"sourceResistance",
            	    												lv_sourceResistance_30_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 9 :
            	    // InternalXSpice.g:4557:4: ({...}? => ( ({...}? => (otherlv_31= 'CBD' otherlv_32= '=' ( (lv_capBd_33_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:4557:4: ({...}? => ( ({...}? => (otherlv_31= 'CBD' otherlv_32= '=' ( (lv_capBd_33_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:4558:5: {...}? => ( ({...}? => (otherlv_31= 'CBD' otherlv_32= '=' ( (lv_capBd_33_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 8) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFETModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 8)");
            	    }
            	    // InternalXSpice.g:4558:108: ( ({...}? => (otherlv_31= 'CBD' otherlv_32= '=' ( (lv_capBd_33_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:4559:6: ({...}? => (otherlv_31= 'CBD' otherlv_32= '=' ( (lv_capBd_33_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 8);
            	    					
            	    // InternalXSpice.g:4562:9: ({...}? => (otherlv_31= 'CBD' otherlv_32= '=' ( (lv_capBd_33_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:4562:10: {...}? => (otherlv_31= 'CBD' otherlv_32= '=' ( (lv_capBd_33_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFETModel", "true");
            	    }
            	    // InternalXSpice.g:4562:19: (otherlv_31= 'CBD' otherlv_32= '=' ( (lv_capBd_33_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:4562:20: otherlv_31= 'CBD' otherlv_32= '=' ( (lv_capBd_33_0= RULE_NUMBER ) )
            	    {
            	    otherlv_31=(Token)match(input,100,FOLLOW_11); 

            	    									newLeafNode(otherlv_31, grammarAccess.getMOSFETModelAccess().getCBDKeyword_4_8_0());
            	    								
            	    otherlv_32=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_32, grammarAccess.getMOSFETModelAccess().getEqualsSignKeyword_4_8_1());
            	    								
            	    // InternalXSpice.g:4570:9: ( (lv_capBd_33_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:4571:10: (lv_capBd_33_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:4571:10: (lv_capBd_33_0= RULE_NUMBER )
            	    // InternalXSpice.g:4572:11: lv_capBd_33_0= RULE_NUMBER
            	    {
            	    lv_capBd_33_0=(Token)match(input,RULE_NUMBER,FOLLOW_39); 

            	    											newLeafNode(lv_capBd_33_0, grammarAccess.getMOSFETModelAccess().getCapBdNUMBERTerminalRuleCall_4_8_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getMOSFETModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"capBd",
            	    												lv_capBd_33_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 10 :
            	    // InternalXSpice.g:4594:4: ({...}? => ( ({...}? => (otherlv_34= 'CBS' otherlv_35= '=' ( (lv_capBs_36_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:4594:4: ({...}? => ( ({...}? => (otherlv_34= 'CBS' otherlv_35= '=' ( (lv_capBs_36_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:4595:5: {...}? => ( ({...}? => (otherlv_34= 'CBS' otherlv_35= '=' ( (lv_capBs_36_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 9) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFETModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 9)");
            	    }
            	    // InternalXSpice.g:4595:108: ( ({...}? => (otherlv_34= 'CBS' otherlv_35= '=' ( (lv_capBs_36_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:4596:6: ({...}? => (otherlv_34= 'CBS' otherlv_35= '=' ( (lv_capBs_36_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 9);
            	    					
            	    // InternalXSpice.g:4599:9: ({...}? => (otherlv_34= 'CBS' otherlv_35= '=' ( (lv_capBs_36_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:4599:10: {...}? => (otherlv_34= 'CBS' otherlv_35= '=' ( (lv_capBs_36_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFETModel", "true");
            	    }
            	    // InternalXSpice.g:4599:19: (otherlv_34= 'CBS' otherlv_35= '=' ( (lv_capBs_36_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:4599:20: otherlv_34= 'CBS' otherlv_35= '=' ( (lv_capBs_36_0= RULE_NUMBER ) )
            	    {
            	    otherlv_34=(Token)match(input,101,FOLLOW_11); 

            	    									newLeafNode(otherlv_34, grammarAccess.getMOSFETModelAccess().getCBSKeyword_4_9_0());
            	    								
            	    otherlv_35=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_35, grammarAccess.getMOSFETModelAccess().getEqualsSignKeyword_4_9_1());
            	    								
            	    // InternalXSpice.g:4607:9: ( (lv_capBs_36_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:4608:10: (lv_capBs_36_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:4608:10: (lv_capBs_36_0= RULE_NUMBER )
            	    // InternalXSpice.g:4609:11: lv_capBs_36_0= RULE_NUMBER
            	    {
            	    lv_capBs_36_0=(Token)match(input,RULE_NUMBER,FOLLOW_39); 

            	    											newLeafNode(lv_capBs_36_0, grammarAccess.getMOSFETModelAccess().getCapBsNUMBERTerminalRuleCall_4_9_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getMOSFETModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"capBs",
            	    												lv_capBs_36_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 11 :
            	    // InternalXSpice.g:4631:4: ({...}? => ( ({...}? => (otherlv_37= 'IS' otherlv_38= '=' ( (lv_junctionSatCur_39_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:4631:4: ({...}? => ( ({...}? => (otherlv_37= 'IS' otherlv_38= '=' ( (lv_junctionSatCur_39_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:4632:5: {...}? => ( ({...}? => (otherlv_37= 'IS' otherlv_38= '=' ( (lv_junctionSatCur_39_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 10) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFETModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 10)");
            	    }
            	    // InternalXSpice.g:4632:109: ( ({...}? => (otherlv_37= 'IS' otherlv_38= '=' ( (lv_junctionSatCur_39_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:4633:6: ({...}? => (otherlv_37= 'IS' otherlv_38= '=' ( (lv_junctionSatCur_39_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 10);
            	    					
            	    // InternalXSpice.g:4636:9: ({...}? => (otherlv_37= 'IS' otherlv_38= '=' ( (lv_junctionSatCur_39_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:4636:10: {...}? => (otherlv_37= 'IS' otherlv_38= '=' ( (lv_junctionSatCur_39_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFETModel", "true");
            	    }
            	    // InternalXSpice.g:4636:19: (otherlv_37= 'IS' otherlv_38= '=' ( (lv_junctionSatCur_39_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:4636:20: otherlv_37= 'IS' otherlv_38= '=' ( (lv_junctionSatCur_39_0= RULE_NUMBER ) )
            	    {
            	    otherlv_37=(Token)match(input,69,FOLLOW_11); 

            	    									newLeafNode(otherlv_37, grammarAccess.getMOSFETModelAccess().getISKeyword_4_10_0());
            	    								
            	    otherlv_38=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_38, grammarAccess.getMOSFETModelAccess().getEqualsSignKeyword_4_10_1());
            	    								
            	    // InternalXSpice.g:4644:9: ( (lv_junctionSatCur_39_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:4645:10: (lv_junctionSatCur_39_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:4645:10: (lv_junctionSatCur_39_0= RULE_NUMBER )
            	    // InternalXSpice.g:4646:11: lv_junctionSatCur_39_0= RULE_NUMBER
            	    {
            	    lv_junctionSatCur_39_0=(Token)match(input,RULE_NUMBER,FOLLOW_39); 

            	    											newLeafNode(lv_junctionSatCur_39_0, grammarAccess.getMOSFETModelAccess().getJunctionSatCurNUMBERTerminalRuleCall_4_10_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getMOSFETModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"junctionSatCur",
            	    												lv_junctionSatCur_39_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 12 :
            	    // InternalXSpice.g:4668:4: ({...}? => ( ({...}? => (otherlv_40= 'PB' otherlv_41= '=' ( (lv_bulkJunctionPotential_42_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:4668:4: ({...}? => ( ({...}? => (otherlv_40= 'PB' otherlv_41= '=' ( (lv_bulkJunctionPotential_42_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:4669:5: {...}? => ( ({...}? => (otherlv_40= 'PB' otherlv_41= '=' ( (lv_bulkJunctionPotential_42_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 11) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFETModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 11)");
            	    }
            	    // InternalXSpice.g:4669:109: ( ({...}? => (otherlv_40= 'PB' otherlv_41= '=' ( (lv_bulkJunctionPotential_42_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:4670:6: ({...}? => (otherlv_40= 'PB' otherlv_41= '=' ( (lv_bulkJunctionPotential_42_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 11);
            	    					
            	    // InternalXSpice.g:4673:9: ({...}? => (otherlv_40= 'PB' otherlv_41= '=' ( (lv_bulkJunctionPotential_42_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:4673:10: {...}? => (otherlv_40= 'PB' otherlv_41= '=' ( (lv_bulkJunctionPotential_42_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFETModel", "true");
            	    }
            	    // InternalXSpice.g:4673:19: (otherlv_40= 'PB' otherlv_41= '=' ( (lv_bulkJunctionPotential_42_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:4673:20: otherlv_40= 'PB' otherlv_41= '=' ( (lv_bulkJunctionPotential_42_0= RULE_NUMBER ) )
            	    {
            	    otherlv_40=(Token)match(input,102,FOLLOW_11); 

            	    									newLeafNode(otherlv_40, grammarAccess.getMOSFETModelAccess().getPBKeyword_4_11_0());
            	    								
            	    otherlv_41=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_41, grammarAccess.getMOSFETModelAccess().getEqualsSignKeyword_4_11_1());
            	    								
            	    // InternalXSpice.g:4681:9: ( (lv_bulkJunctionPotential_42_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:4682:10: (lv_bulkJunctionPotential_42_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:4682:10: (lv_bulkJunctionPotential_42_0= RULE_NUMBER )
            	    // InternalXSpice.g:4683:11: lv_bulkJunctionPotential_42_0= RULE_NUMBER
            	    {
            	    lv_bulkJunctionPotential_42_0=(Token)match(input,RULE_NUMBER,FOLLOW_39); 

            	    											newLeafNode(lv_bulkJunctionPotential_42_0, grammarAccess.getMOSFETModelAccess().getBulkJunctionPotentialNUMBERTerminalRuleCall_4_11_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getMOSFETModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"bulkJunctionPotential",
            	    												lv_bulkJunctionPotential_42_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 13 :
            	    // InternalXSpice.g:4705:4: ({...}? => ( ({...}? => (otherlv_43= 'CGSO' otherlv_44= '=' ( (lv_gateSourceOverlapCapFactor_45_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:4705:4: ({...}? => ( ({...}? => (otherlv_43= 'CGSO' otherlv_44= '=' ( (lv_gateSourceOverlapCapFactor_45_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:4706:5: {...}? => ( ({...}? => (otherlv_43= 'CGSO' otherlv_44= '=' ( (lv_gateSourceOverlapCapFactor_45_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 12) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFETModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 12)");
            	    }
            	    // InternalXSpice.g:4706:109: ( ({...}? => (otherlv_43= 'CGSO' otherlv_44= '=' ( (lv_gateSourceOverlapCapFactor_45_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:4707:6: ({...}? => (otherlv_43= 'CGSO' otherlv_44= '=' ( (lv_gateSourceOverlapCapFactor_45_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 12);
            	    					
            	    // InternalXSpice.g:4710:9: ({...}? => (otherlv_43= 'CGSO' otherlv_44= '=' ( (lv_gateSourceOverlapCapFactor_45_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:4710:10: {...}? => (otherlv_43= 'CGSO' otherlv_44= '=' ( (lv_gateSourceOverlapCapFactor_45_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFETModel", "true");
            	    }
            	    // InternalXSpice.g:4710:19: (otherlv_43= 'CGSO' otherlv_44= '=' ( (lv_gateSourceOverlapCapFactor_45_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:4710:20: otherlv_43= 'CGSO' otherlv_44= '=' ( (lv_gateSourceOverlapCapFactor_45_0= RULE_NUMBER ) )
            	    {
            	    otherlv_43=(Token)match(input,103,FOLLOW_11); 

            	    									newLeafNode(otherlv_43, grammarAccess.getMOSFETModelAccess().getCGSOKeyword_4_12_0());
            	    								
            	    otherlv_44=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_44, grammarAccess.getMOSFETModelAccess().getEqualsSignKeyword_4_12_1());
            	    								
            	    // InternalXSpice.g:4718:9: ( (lv_gateSourceOverlapCapFactor_45_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:4719:10: (lv_gateSourceOverlapCapFactor_45_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:4719:10: (lv_gateSourceOverlapCapFactor_45_0= RULE_NUMBER )
            	    // InternalXSpice.g:4720:11: lv_gateSourceOverlapCapFactor_45_0= RULE_NUMBER
            	    {
            	    lv_gateSourceOverlapCapFactor_45_0=(Token)match(input,RULE_NUMBER,FOLLOW_39); 

            	    											newLeafNode(lv_gateSourceOverlapCapFactor_45_0, grammarAccess.getMOSFETModelAccess().getGateSourceOverlapCapFactorNUMBERTerminalRuleCall_4_12_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getMOSFETModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"gateSourceOverlapCapFactor",
            	    												lv_gateSourceOverlapCapFactor_45_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 14 :
            	    // InternalXSpice.g:4742:4: ({...}? => ( ({...}? => (otherlv_46= 'CGDO' otherlv_47= '=' ( (lv_gateDrainOverlapCapFactor_48_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:4742:4: ({...}? => ( ({...}? => (otherlv_46= 'CGDO' otherlv_47= '=' ( (lv_gateDrainOverlapCapFactor_48_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:4743:5: {...}? => ( ({...}? => (otherlv_46= 'CGDO' otherlv_47= '=' ( (lv_gateDrainOverlapCapFactor_48_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 13) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFETModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 13)");
            	    }
            	    // InternalXSpice.g:4743:109: ( ({...}? => (otherlv_46= 'CGDO' otherlv_47= '=' ( (lv_gateDrainOverlapCapFactor_48_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:4744:6: ({...}? => (otherlv_46= 'CGDO' otherlv_47= '=' ( (lv_gateDrainOverlapCapFactor_48_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 13);
            	    					
            	    // InternalXSpice.g:4747:9: ({...}? => (otherlv_46= 'CGDO' otherlv_47= '=' ( (lv_gateDrainOverlapCapFactor_48_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:4747:10: {...}? => (otherlv_46= 'CGDO' otherlv_47= '=' ( (lv_gateDrainOverlapCapFactor_48_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFETModel", "true");
            	    }
            	    // InternalXSpice.g:4747:19: (otherlv_46= 'CGDO' otherlv_47= '=' ( (lv_gateDrainOverlapCapFactor_48_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:4747:20: otherlv_46= 'CGDO' otherlv_47= '=' ( (lv_gateDrainOverlapCapFactor_48_0= RULE_NUMBER ) )
            	    {
            	    otherlv_46=(Token)match(input,104,FOLLOW_11); 

            	    									newLeafNode(otherlv_46, grammarAccess.getMOSFETModelAccess().getCGDOKeyword_4_13_0());
            	    								
            	    otherlv_47=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_47, grammarAccess.getMOSFETModelAccess().getEqualsSignKeyword_4_13_1());
            	    								
            	    // InternalXSpice.g:4755:9: ( (lv_gateDrainOverlapCapFactor_48_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:4756:10: (lv_gateDrainOverlapCapFactor_48_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:4756:10: (lv_gateDrainOverlapCapFactor_48_0= RULE_NUMBER )
            	    // InternalXSpice.g:4757:11: lv_gateDrainOverlapCapFactor_48_0= RULE_NUMBER
            	    {
            	    lv_gateDrainOverlapCapFactor_48_0=(Token)match(input,RULE_NUMBER,FOLLOW_39); 

            	    											newLeafNode(lv_gateDrainOverlapCapFactor_48_0, grammarAccess.getMOSFETModelAccess().getGateDrainOverlapCapFactorNUMBERTerminalRuleCall_4_13_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getMOSFETModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"gateDrainOverlapCapFactor",
            	    												lv_gateDrainOverlapCapFactor_48_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 15 :
            	    // InternalXSpice.g:4779:4: ({...}? => ( ({...}? => (otherlv_49= 'CGBO' otherlv_50= '=' ( (lv_gateBulkOverlapCapFactor_51_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:4779:4: ({...}? => ( ({...}? => (otherlv_49= 'CGBO' otherlv_50= '=' ( (lv_gateBulkOverlapCapFactor_51_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:4780:5: {...}? => ( ({...}? => (otherlv_49= 'CGBO' otherlv_50= '=' ( (lv_gateBulkOverlapCapFactor_51_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 14) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFETModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 14)");
            	    }
            	    // InternalXSpice.g:4780:109: ( ({...}? => (otherlv_49= 'CGBO' otherlv_50= '=' ( (lv_gateBulkOverlapCapFactor_51_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:4781:6: ({...}? => (otherlv_49= 'CGBO' otherlv_50= '=' ( (lv_gateBulkOverlapCapFactor_51_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 14);
            	    					
            	    // InternalXSpice.g:4784:9: ({...}? => (otherlv_49= 'CGBO' otherlv_50= '=' ( (lv_gateBulkOverlapCapFactor_51_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:4784:10: {...}? => (otherlv_49= 'CGBO' otherlv_50= '=' ( (lv_gateBulkOverlapCapFactor_51_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFETModel", "true");
            	    }
            	    // InternalXSpice.g:4784:19: (otherlv_49= 'CGBO' otherlv_50= '=' ( (lv_gateBulkOverlapCapFactor_51_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:4784:20: otherlv_49= 'CGBO' otherlv_50= '=' ( (lv_gateBulkOverlapCapFactor_51_0= RULE_NUMBER ) )
            	    {
            	    otherlv_49=(Token)match(input,105,FOLLOW_11); 

            	    									newLeafNode(otherlv_49, grammarAccess.getMOSFETModelAccess().getCGBOKeyword_4_14_0());
            	    								
            	    otherlv_50=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_50, grammarAccess.getMOSFETModelAccess().getEqualsSignKeyword_4_14_1());
            	    								
            	    // InternalXSpice.g:4792:9: ( (lv_gateBulkOverlapCapFactor_51_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:4793:10: (lv_gateBulkOverlapCapFactor_51_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:4793:10: (lv_gateBulkOverlapCapFactor_51_0= RULE_NUMBER )
            	    // InternalXSpice.g:4794:11: lv_gateBulkOverlapCapFactor_51_0= RULE_NUMBER
            	    {
            	    lv_gateBulkOverlapCapFactor_51_0=(Token)match(input,RULE_NUMBER,FOLLOW_39); 

            	    											newLeafNode(lv_gateBulkOverlapCapFactor_51_0, grammarAccess.getMOSFETModelAccess().getGateBulkOverlapCapFactorNUMBERTerminalRuleCall_4_14_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getMOSFETModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"gateBulkOverlapCapFactor",
            	    												lv_gateBulkOverlapCapFactor_51_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 16 :
            	    // InternalXSpice.g:4816:4: ({...}? => ( ({...}? => (otherlv_52= 'RSH' otherlv_53= '=' ( (lv_sheetResistance_54_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:4816:4: ({...}? => ( ({...}? => (otherlv_52= 'RSH' otherlv_53= '=' ( (lv_sheetResistance_54_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:4817:5: {...}? => ( ({...}? => (otherlv_52= 'RSH' otherlv_53= '=' ( (lv_sheetResistance_54_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 15) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFETModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 15)");
            	    }
            	    // InternalXSpice.g:4817:109: ( ({...}? => (otherlv_52= 'RSH' otherlv_53= '=' ( (lv_sheetResistance_54_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:4818:6: ({...}? => (otherlv_52= 'RSH' otherlv_53= '=' ( (lv_sheetResistance_54_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 15);
            	    					
            	    // InternalXSpice.g:4821:9: ({...}? => (otherlv_52= 'RSH' otherlv_53= '=' ( (lv_sheetResistance_54_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:4821:10: {...}? => (otherlv_52= 'RSH' otherlv_53= '=' ( (lv_sheetResistance_54_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFETModel", "true");
            	    }
            	    // InternalXSpice.g:4821:19: (otherlv_52= 'RSH' otherlv_53= '=' ( (lv_sheetResistance_54_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:4821:20: otherlv_52= 'RSH' otherlv_53= '=' ( (lv_sheetResistance_54_0= RULE_NUMBER ) )
            	    {
            	    otherlv_52=(Token)match(input,46,FOLLOW_11); 

            	    									newLeafNode(otherlv_52, grammarAccess.getMOSFETModelAccess().getRSHKeyword_4_15_0());
            	    								
            	    otherlv_53=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_53, grammarAccess.getMOSFETModelAccess().getEqualsSignKeyword_4_15_1());
            	    								
            	    // InternalXSpice.g:4829:9: ( (lv_sheetResistance_54_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:4830:10: (lv_sheetResistance_54_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:4830:10: (lv_sheetResistance_54_0= RULE_NUMBER )
            	    // InternalXSpice.g:4831:11: lv_sheetResistance_54_0= RULE_NUMBER
            	    {
            	    lv_sheetResistance_54_0=(Token)match(input,RULE_NUMBER,FOLLOW_39); 

            	    											newLeafNode(lv_sheetResistance_54_0, grammarAccess.getMOSFETModelAccess().getSheetResistanceNUMBERTerminalRuleCall_4_15_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getMOSFETModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"sheetResistance",
            	    												lv_sheetResistance_54_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 17 :
            	    // InternalXSpice.g:4853:4: ({...}? => ( ({...}? => (otherlv_55= 'CJ' otherlv_56= '=' ( (lv_bulkCapFactor_57_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:4853:4: ({...}? => ( ({...}? => (otherlv_55= 'CJ' otherlv_56= '=' ( (lv_bulkCapFactor_57_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:4854:5: {...}? => ( ({...}? => (otherlv_55= 'CJ' otherlv_56= '=' ( (lv_bulkCapFactor_57_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 16) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFETModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 16)");
            	    }
            	    // InternalXSpice.g:4854:109: ( ({...}? => (otherlv_55= 'CJ' otherlv_56= '=' ( (lv_bulkCapFactor_57_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:4855:6: ({...}? => (otherlv_55= 'CJ' otherlv_56= '=' ( (lv_bulkCapFactor_57_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 16);
            	    					
            	    // InternalXSpice.g:4858:9: ({...}? => (otherlv_55= 'CJ' otherlv_56= '=' ( (lv_bulkCapFactor_57_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:4858:10: {...}? => (otherlv_55= 'CJ' otherlv_56= '=' ( (lv_bulkCapFactor_57_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFETModel", "true");
            	    }
            	    // InternalXSpice.g:4858:19: (otherlv_55= 'CJ' otherlv_56= '=' ( (lv_bulkCapFactor_57_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:4858:20: otherlv_55= 'CJ' otherlv_56= '=' ( (lv_bulkCapFactor_57_0= RULE_NUMBER ) )
            	    {
            	    otherlv_55=(Token)match(input,55,FOLLOW_11); 

            	    									newLeafNode(otherlv_55, grammarAccess.getMOSFETModelAccess().getCJKeyword_4_16_0());
            	    								
            	    otherlv_56=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_56, grammarAccess.getMOSFETModelAccess().getEqualsSignKeyword_4_16_1());
            	    								
            	    // InternalXSpice.g:4866:9: ( (lv_bulkCapFactor_57_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:4867:10: (lv_bulkCapFactor_57_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:4867:10: (lv_bulkCapFactor_57_0= RULE_NUMBER )
            	    // InternalXSpice.g:4868:11: lv_bulkCapFactor_57_0= RULE_NUMBER
            	    {
            	    lv_bulkCapFactor_57_0=(Token)match(input,RULE_NUMBER,FOLLOW_39); 

            	    											newLeafNode(lv_bulkCapFactor_57_0, grammarAccess.getMOSFETModelAccess().getBulkCapFactorNUMBERTerminalRuleCall_4_16_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getMOSFETModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"bulkCapFactor",
            	    												lv_bulkCapFactor_57_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 18 :
            	    // InternalXSpice.g:4890:4: ({...}? => ( ({...}? => (otherlv_58= 'MJ' otherlv_59= '=' ( (lv_bulkJunctionBotGradingCoefficient_60_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:4890:4: ({...}? => ( ({...}? => (otherlv_58= 'MJ' otherlv_59= '=' ( (lv_bulkJunctionBotGradingCoefficient_60_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:4891:5: {...}? => ( ({...}? => (otherlv_58= 'MJ' otherlv_59= '=' ( (lv_bulkJunctionBotGradingCoefficient_60_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 17) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFETModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 17)");
            	    }
            	    // InternalXSpice.g:4891:109: ( ({...}? => (otherlv_58= 'MJ' otherlv_59= '=' ( (lv_bulkJunctionBotGradingCoefficient_60_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:4892:6: ({...}? => (otherlv_58= 'MJ' otherlv_59= '=' ( (lv_bulkJunctionBotGradingCoefficient_60_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 17);
            	    					
            	    // InternalXSpice.g:4895:9: ({...}? => (otherlv_58= 'MJ' otherlv_59= '=' ( (lv_bulkJunctionBotGradingCoefficient_60_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:4895:10: {...}? => (otherlv_58= 'MJ' otherlv_59= '=' ( (lv_bulkJunctionBotGradingCoefficient_60_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFETModel", "true");
            	    }
            	    // InternalXSpice.g:4895:19: (otherlv_58= 'MJ' otherlv_59= '=' ( (lv_bulkJunctionBotGradingCoefficient_60_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:4895:20: otherlv_58= 'MJ' otherlv_59= '=' ( (lv_bulkJunctionBotGradingCoefficient_60_0= RULE_NUMBER ) )
            	    {
            	    otherlv_58=(Token)match(input,106,FOLLOW_11); 

            	    									newLeafNode(otherlv_58, grammarAccess.getMOSFETModelAccess().getMJKeyword_4_17_0());
            	    								
            	    otherlv_59=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_59, grammarAccess.getMOSFETModelAccess().getEqualsSignKeyword_4_17_1());
            	    								
            	    // InternalXSpice.g:4903:9: ( (lv_bulkJunctionBotGradingCoefficient_60_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:4904:10: (lv_bulkJunctionBotGradingCoefficient_60_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:4904:10: (lv_bulkJunctionBotGradingCoefficient_60_0= RULE_NUMBER )
            	    // InternalXSpice.g:4905:11: lv_bulkJunctionBotGradingCoefficient_60_0= RULE_NUMBER
            	    {
            	    lv_bulkJunctionBotGradingCoefficient_60_0=(Token)match(input,RULE_NUMBER,FOLLOW_39); 

            	    											newLeafNode(lv_bulkJunctionBotGradingCoefficient_60_0, grammarAccess.getMOSFETModelAccess().getBulkJunctionBotGradingCoefficientNUMBERTerminalRuleCall_4_17_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getMOSFETModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"bulkJunctionBotGradingCoefficient",
            	    												lv_bulkJunctionBotGradingCoefficient_60_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 19 :
            	    // InternalXSpice.g:4927:4: ({...}? => ( ({...}? => (otherlv_61= 'CJSW' otherlv_62= '=' ( (lv_sidewallCapFactor_63_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:4927:4: ({...}? => ( ({...}? => (otherlv_61= 'CJSW' otherlv_62= '=' ( (lv_sidewallCapFactor_63_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:4928:5: {...}? => ( ({...}? => (otherlv_61= 'CJSW' otherlv_62= '=' ( (lv_sidewallCapFactor_63_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 18) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFETModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 18)");
            	    }
            	    // InternalXSpice.g:4928:109: ( ({...}? => (otherlv_61= 'CJSW' otherlv_62= '=' ( (lv_sidewallCapFactor_63_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:4929:6: ({...}? => (otherlv_61= 'CJSW' otherlv_62= '=' ( (lv_sidewallCapFactor_63_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 18);
            	    					
            	    // InternalXSpice.g:4932:9: ({...}? => (otherlv_61= 'CJSW' otherlv_62= '=' ( (lv_sidewallCapFactor_63_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:4932:10: {...}? => (otherlv_61= 'CJSW' otherlv_62= '=' ( (lv_sidewallCapFactor_63_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFETModel", "true");
            	    }
            	    // InternalXSpice.g:4932:19: (otherlv_61= 'CJSW' otherlv_62= '=' ( (lv_sidewallCapFactor_63_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:4932:20: otherlv_61= 'CJSW' otherlv_62= '=' ( (lv_sidewallCapFactor_63_0= RULE_NUMBER ) )
            	    {
            	    otherlv_61=(Token)match(input,56,FOLLOW_11); 

            	    									newLeafNode(otherlv_61, grammarAccess.getMOSFETModelAccess().getCJSWKeyword_4_18_0());
            	    								
            	    otherlv_62=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_62, grammarAccess.getMOSFETModelAccess().getEqualsSignKeyword_4_18_1());
            	    								
            	    // InternalXSpice.g:4940:9: ( (lv_sidewallCapFactor_63_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:4941:10: (lv_sidewallCapFactor_63_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:4941:10: (lv_sidewallCapFactor_63_0= RULE_NUMBER )
            	    // InternalXSpice.g:4942:11: lv_sidewallCapFactor_63_0= RULE_NUMBER
            	    {
            	    lv_sidewallCapFactor_63_0=(Token)match(input,RULE_NUMBER,FOLLOW_39); 

            	    											newLeafNode(lv_sidewallCapFactor_63_0, grammarAccess.getMOSFETModelAccess().getSidewallCapFactorNUMBERTerminalRuleCall_4_18_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getMOSFETModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"sidewallCapFactor",
            	    												lv_sidewallCapFactor_63_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 20 :
            	    // InternalXSpice.g:4964:4: ({...}? => ( ({...}? => (otherlv_64= 'MJSW' otherlv_65= '=' ( (lv_bulkJunctionSideGradingCoefficient_66_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:4964:4: ({...}? => ( ({...}? => (otherlv_64= 'MJSW' otherlv_65= '=' ( (lv_bulkJunctionSideGradingCoefficient_66_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:4965:5: {...}? => ( ({...}? => (otherlv_64= 'MJSW' otherlv_65= '=' ( (lv_bulkJunctionSideGradingCoefficient_66_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 19) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFETModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 19)");
            	    }
            	    // InternalXSpice.g:4965:109: ( ({...}? => (otherlv_64= 'MJSW' otherlv_65= '=' ( (lv_bulkJunctionSideGradingCoefficient_66_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:4966:6: ({...}? => (otherlv_64= 'MJSW' otherlv_65= '=' ( (lv_bulkJunctionSideGradingCoefficient_66_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 19);
            	    					
            	    // InternalXSpice.g:4969:9: ({...}? => (otherlv_64= 'MJSW' otherlv_65= '=' ( (lv_bulkJunctionSideGradingCoefficient_66_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:4969:10: {...}? => (otherlv_64= 'MJSW' otherlv_65= '=' ( (lv_bulkJunctionSideGradingCoefficient_66_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFETModel", "true");
            	    }
            	    // InternalXSpice.g:4969:19: (otherlv_64= 'MJSW' otherlv_65= '=' ( (lv_bulkJunctionSideGradingCoefficient_66_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:4969:20: otherlv_64= 'MJSW' otherlv_65= '=' ( (lv_bulkJunctionSideGradingCoefficient_66_0= RULE_NUMBER ) )
            	    {
            	    otherlv_64=(Token)match(input,107,FOLLOW_11); 

            	    									newLeafNode(otherlv_64, grammarAccess.getMOSFETModelAccess().getMJSWKeyword_4_19_0());
            	    								
            	    otherlv_65=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_65, grammarAccess.getMOSFETModelAccess().getEqualsSignKeyword_4_19_1());
            	    								
            	    // InternalXSpice.g:4977:9: ( (lv_bulkJunctionSideGradingCoefficient_66_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:4978:10: (lv_bulkJunctionSideGradingCoefficient_66_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:4978:10: (lv_bulkJunctionSideGradingCoefficient_66_0= RULE_NUMBER )
            	    // InternalXSpice.g:4979:11: lv_bulkJunctionSideGradingCoefficient_66_0= RULE_NUMBER
            	    {
            	    lv_bulkJunctionSideGradingCoefficient_66_0=(Token)match(input,RULE_NUMBER,FOLLOW_39); 

            	    											newLeafNode(lv_bulkJunctionSideGradingCoefficient_66_0, grammarAccess.getMOSFETModelAccess().getBulkJunctionSideGradingCoefficientNUMBERTerminalRuleCall_4_19_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getMOSFETModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"bulkJunctionSideGradingCoefficient",
            	    												lv_bulkJunctionSideGradingCoefficient_66_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 21 :
            	    // InternalXSpice.g:5001:4: ({...}? => ( ({...}? => (otherlv_67= 'JS' otherlv_68= '=' ( (lv_junctionSatCurDensity_69_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:5001:4: ({...}? => ( ({...}? => (otherlv_67= 'JS' otherlv_68= '=' ( (lv_junctionSatCurDensity_69_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:5002:5: {...}? => ( ({...}? => (otherlv_67= 'JS' otherlv_68= '=' ( (lv_junctionSatCurDensity_69_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 20) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFETModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 20)");
            	    }
            	    // InternalXSpice.g:5002:109: ( ({...}? => (otherlv_67= 'JS' otherlv_68= '=' ( (lv_junctionSatCurDensity_69_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:5003:6: ({...}? => (otherlv_67= 'JS' otherlv_68= '=' ( (lv_junctionSatCurDensity_69_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 20);
            	    					
            	    // InternalXSpice.g:5006:9: ({...}? => (otherlv_67= 'JS' otherlv_68= '=' ( (lv_junctionSatCurDensity_69_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:5006:10: {...}? => (otherlv_67= 'JS' otherlv_68= '=' ( (lv_junctionSatCurDensity_69_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFETModel", "true");
            	    }
            	    // InternalXSpice.g:5006:19: (otherlv_67= 'JS' otherlv_68= '=' ( (lv_junctionSatCurDensity_69_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:5006:20: otherlv_67= 'JS' otherlv_68= '=' ( (lv_junctionSatCurDensity_69_0= RULE_NUMBER ) )
            	    {
            	    otherlv_67=(Token)match(input,108,FOLLOW_11); 

            	    									newLeafNode(otherlv_67, grammarAccess.getMOSFETModelAccess().getJSKeyword_4_20_0());
            	    								
            	    otherlv_68=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_68, grammarAccess.getMOSFETModelAccess().getEqualsSignKeyword_4_20_1());
            	    								
            	    // InternalXSpice.g:5014:9: ( (lv_junctionSatCurDensity_69_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:5015:10: (lv_junctionSatCurDensity_69_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:5015:10: (lv_junctionSatCurDensity_69_0= RULE_NUMBER )
            	    // InternalXSpice.g:5016:11: lv_junctionSatCurDensity_69_0= RULE_NUMBER
            	    {
            	    lv_junctionSatCurDensity_69_0=(Token)match(input,RULE_NUMBER,FOLLOW_39); 

            	    											newLeafNode(lv_junctionSatCurDensity_69_0, grammarAccess.getMOSFETModelAccess().getJunctionSatCurDensityNUMBERTerminalRuleCall_4_20_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getMOSFETModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"junctionSatCurDensity",
            	    												lv_junctionSatCurDensity_69_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 22 :
            	    // InternalXSpice.g:5038:4: ({...}? => ( ({...}? => (otherlv_70= 'TOX' otherlv_71= '=' ( (lv_oxideThickness_72_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:5038:4: ({...}? => ( ({...}? => (otherlv_70= 'TOX' otherlv_71= '=' ( (lv_oxideThickness_72_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:5039:5: {...}? => ( ({...}? => (otherlv_70= 'TOX' otherlv_71= '=' ( (lv_oxideThickness_72_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 21) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFETModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 21)");
            	    }
            	    // InternalXSpice.g:5039:109: ( ({...}? => (otherlv_70= 'TOX' otherlv_71= '=' ( (lv_oxideThickness_72_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:5040:6: ({...}? => (otherlv_70= 'TOX' otherlv_71= '=' ( (lv_oxideThickness_72_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 21);
            	    					
            	    // InternalXSpice.g:5043:9: ({...}? => (otherlv_70= 'TOX' otherlv_71= '=' ( (lv_oxideThickness_72_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:5043:10: {...}? => (otherlv_70= 'TOX' otherlv_71= '=' ( (lv_oxideThickness_72_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFETModel", "true");
            	    }
            	    // InternalXSpice.g:5043:19: (otherlv_70= 'TOX' otherlv_71= '=' ( (lv_oxideThickness_72_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:5043:20: otherlv_70= 'TOX' otherlv_71= '=' ( (lv_oxideThickness_72_0= RULE_NUMBER ) )
            	    {
            	    otherlv_70=(Token)match(input,109,FOLLOW_11); 

            	    									newLeafNode(otherlv_70, grammarAccess.getMOSFETModelAccess().getTOXKeyword_4_21_0());
            	    								
            	    otherlv_71=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_71, grammarAccess.getMOSFETModelAccess().getEqualsSignKeyword_4_21_1());
            	    								
            	    // InternalXSpice.g:5051:9: ( (lv_oxideThickness_72_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:5052:10: (lv_oxideThickness_72_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:5052:10: (lv_oxideThickness_72_0= RULE_NUMBER )
            	    // InternalXSpice.g:5053:11: lv_oxideThickness_72_0= RULE_NUMBER
            	    {
            	    lv_oxideThickness_72_0=(Token)match(input,RULE_NUMBER,FOLLOW_39); 

            	    											newLeafNode(lv_oxideThickness_72_0, grammarAccess.getMOSFETModelAccess().getOxideThicknessNUMBERTerminalRuleCall_4_21_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getMOSFETModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"oxideThickness",
            	    												lv_oxideThickness_72_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 23 :
            	    // InternalXSpice.g:5075:4: ({...}? => ( ({...}? => (otherlv_73= 'NSUB' otherlv_74= '=' ( (lv_substrateDoping_75_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:5075:4: ({...}? => ( ({...}? => (otherlv_73= 'NSUB' otherlv_74= '=' ( (lv_substrateDoping_75_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:5076:5: {...}? => ( ({...}? => (otherlv_73= 'NSUB' otherlv_74= '=' ( (lv_substrateDoping_75_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 22) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFETModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 22)");
            	    }
            	    // InternalXSpice.g:5076:109: ( ({...}? => (otherlv_73= 'NSUB' otherlv_74= '=' ( (lv_substrateDoping_75_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:5077:6: ({...}? => (otherlv_73= 'NSUB' otherlv_74= '=' ( (lv_substrateDoping_75_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 22);
            	    					
            	    // InternalXSpice.g:5080:9: ({...}? => (otherlv_73= 'NSUB' otherlv_74= '=' ( (lv_substrateDoping_75_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:5080:10: {...}? => (otherlv_73= 'NSUB' otherlv_74= '=' ( (lv_substrateDoping_75_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFETModel", "true");
            	    }
            	    // InternalXSpice.g:5080:19: (otherlv_73= 'NSUB' otherlv_74= '=' ( (lv_substrateDoping_75_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:5080:20: otherlv_73= 'NSUB' otherlv_74= '=' ( (lv_substrateDoping_75_0= RULE_NUMBER ) )
            	    {
            	    otherlv_73=(Token)match(input,110,FOLLOW_11); 

            	    									newLeafNode(otherlv_73, grammarAccess.getMOSFETModelAccess().getNSUBKeyword_4_22_0());
            	    								
            	    otherlv_74=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_74, grammarAccess.getMOSFETModelAccess().getEqualsSignKeyword_4_22_1());
            	    								
            	    // InternalXSpice.g:5088:9: ( (lv_substrateDoping_75_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:5089:10: (lv_substrateDoping_75_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:5089:10: (lv_substrateDoping_75_0= RULE_NUMBER )
            	    // InternalXSpice.g:5090:11: lv_substrateDoping_75_0= RULE_NUMBER
            	    {
            	    lv_substrateDoping_75_0=(Token)match(input,RULE_NUMBER,FOLLOW_39); 

            	    											newLeafNode(lv_substrateDoping_75_0, grammarAccess.getMOSFETModelAccess().getSubstrateDopingNUMBERTerminalRuleCall_4_22_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getMOSFETModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"substrateDoping",
            	    												lv_substrateDoping_75_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 24 :
            	    // InternalXSpice.g:5112:4: ({...}? => ( ({...}? => (otherlv_76= 'NSS' otherlv_77= '=' ( (lv_surfaceStateDensity_78_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:5112:4: ({...}? => ( ({...}? => (otherlv_76= 'NSS' otherlv_77= '=' ( (lv_surfaceStateDensity_78_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:5113:5: {...}? => ( ({...}? => (otherlv_76= 'NSS' otherlv_77= '=' ( (lv_surfaceStateDensity_78_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 23) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFETModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 23)");
            	    }
            	    // InternalXSpice.g:5113:109: ( ({...}? => (otherlv_76= 'NSS' otherlv_77= '=' ( (lv_surfaceStateDensity_78_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:5114:6: ({...}? => (otherlv_76= 'NSS' otherlv_77= '=' ( (lv_surfaceStateDensity_78_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 23);
            	    					
            	    // InternalXSpice.g:5117:9: ({...}? => (otherlv_76= 'NSS' otherlv_77= '=' ( (lv_surfaceStateDensity_78_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:5117:10: {...}? => (otherlv_76= 'NSS' otherlv_77= '=' ( (lv_surfaceStateDensity_78_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFETModel", "true");
            	    }
            	    // InternalXSpice.g:5117:19: (otherlv_76= 'NSS' otherlv_77= '=' ( (lv_surfaceStateDensity_78_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:5117:20: otherlv_76= 'NSS' otherlv_77= '=' ( (lv_surfaceStateDensity_78_0= RULE_NUMBER ) )
            	    {
            	    otherlv_76=(Token)match(input,111,FOLLOW_11); 

            	    									newLeafNode(otherlv_76, grammarAccess.getMOSFETModelAccess().getNSSKeyword_4_23_0());
            	    								
            	    otherlv_77=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_77, grammarAccess.getMOSFETModelAccess().getEqualsSignKeyword_4_23_1());
            	    								
            	    // InternalXSpice.g:5125:9: ( (lv_surfaceStateDensity_78_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:5126:10: (lv_surfaceStateDensity_78_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:5126:10: (lv_surfaceStateDensity_78_0= RULE_NUMBER )
            	    // InternalXSpice.g:5127:11: lv_surfaceStateDensity_78_0= RULE_NUMBER
            	    {
            	    lv_surfaceStateDensity_78_0=(Token)match(input,RULE_NUMBER,FOLLOW_39); 

            	    											newLeafNode(lv_surfaceStateDensity_78_0, grammarAccess.getMOSFETModelAccess().getSurfaceStateDensityNUMBERTerminalRuleCall_4_23_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getMOSFETModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"surfaceStateDensity",
            	    												lv_surfaceStateDensity_78_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 25 :
            	    // InternalXSpice.g:5149:4: ({...}? => ( ({...}? => (otherlv_79= 'NFS' otherlv_80= '=' ( (lv_nfs_81_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:5149:4: ({...}? => ( ({...}? => (otherlv_79= 'NFS' otherlv_80= '=' ( (lv_nfs_81_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:5150:5: {...}? => ( ({...}? => (otherlv_79= 'NFS' otherlv_80= '=' ( (lv_nfs_81_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 24) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFETModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 24)");
            	    }
            	    // InternalXSpice.g:5150:109: ( ({...}? => (otherlv_79= 'NFS' otherlv_80= '=' ( (lv_nfs_81_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:5151:6: ({...}? => (otherlv_79= 'NFS' otherlv_80= '=' ( (lv_nfs_81_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 24);
            	    					
            	    // InternalXSpice.g:5154:9: ({...}? => (otherlv_79= 'NFS' otherlv_80= '=' ( (lv_nfs_81_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:5154:10: {...}? => (otherlv_79= 'NFS' otherlv_80= '=' ( (lv_nfs_81_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFETModel", "true");
            	    }
            	    // InternalXSpice.g:5154:19: (otherlv_79= 'NFS' otherlv_80= '=' ( (lv_nfs_81_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:5154:20: otherlv_79= 'NFS' otherlv_80= '=' ( (lv_nfs_81_0= RULE_NUMBER ) )
            	    {
            	    otherlv_79=(Token)match(input,112,FOLLOW_11); 

            	    									newLeafNode(otherlv_79, grammarAccess.getMOSFETModelAccess().getNFSKeyword_4_24_0());
            	    								
            	    otherlv_80=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_80, grammarAccess.getMOSFETModelAccess().getEqualsSignKeyword_4_24_1());
            	    								
            	    // InternalXSpice.g:5162:9: ( (lv_nfs_81_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:5163:10: (lv_nfs_81_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:5163:10: (lv_nfs_81_0= RULE_NUMBER )
            	    // InternalXSpice.g:5164:11: lv_nfs_81_0= RULE_NUMBER
            	    {
            	    lv_nfs_81_0=(Token)match(input,RULE_NUMBER,FOLLOW_39); 

            	    											newLeafNode(lv_nfs_81_0, grammarAccess.getMOSFETModelAccess().getNfsNUMBERTerminalRuleCall_4_24_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getMOSFETModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"nfs",
            	    												lv_nfs_81_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 26 :
            	    // InternalXSpice.g:5186:4: ({...}? => ( ({...}? => (otherlv_82= 'TPG' otherlv_83= '=' ( ( (lv_gateType_84_1= '1' | lv_gateType_84_2= '0' | lv_gateType_84_3= '-1' ) ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:5186:4: ({...}? => ( ({...}? => (otherlv_82= 'TPG' otherlv_83= '=' ( ( (lv_gateType_84_1= '1' | lv_gateType_84_2= '0' | lv_gateType_84_3= '-1' ) ) ) ) ) ) )
            	    // InternalXSpice.g:5187:5: {...}? => ( ({...}? => (otherlv_82= 'TPG' otherlv_83= '=' ( ( (lv_gateType_84_1= '1' | lv_gateType_84_2= '0' | lv_gateType_84_3= '-1' ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 25) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFETModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 25)");
            	    }
            	    // InternalXSpice.g:5187:109: ( ({...}? => (otherlv_82= 'TPG' otherlv_83= '=' ( ( (lv_gateType_84_1= '1' | lv_gateType_84_2= '0' | lv_gateType_84_3= '-1' ) ) ) ) ) )
            	    // InternalXSpice.g:5188:6: ({...}? => (otherlv_82= 'TPG' otherlv_83= '=' ( ( (lv_gateType_84_1= '1' | lv_gateType_84_2= '0' | lv_gateType_84_3= '-1' ) ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 25);
            	    					
            	    // InternalXSpice.g:5191:9: ({...}? => (otherlv_82= 'TPG' otherlv_83= '=' ( ( (lv_gateType_84_1= '1' | lv_gateType_84_2= '0' | lv_gateType_84_3= '-1' ) ) ) ) )
            	    // InternalXSpice.g:5191:10: {...}? => (otherlv_82= 'TPG' otherlv_83= '=' ( ( (lv_gateType_84_1= '1' | lv_gateType_84_2= '0' | lv_gateType_84_3= '-1' ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFETModel", "true");
            	    }
            	    // InternalXSpice.g:5191:19: (otherlv_82= 'TPG' otherlv_83= '=' ( ( (lv_gateType_84_1= '1' | lv_gateType_84_2= '0' | lv_gateType_84_3= '-1' ) ) ) )
            	    // InternalXSpice.g:5191:20: otherlv_82= 'TPG' otherlv_83= '=' ( ( (lv_gateType_84_1= '1' | lv_gateType_84_2= '0' | lv_gateType_84_3= '-1' ) ) )
            	    {
            	    otherlv_82=(Token)match(input,113,FOLLOW_11); 

            	    									newLeafNode(otherlv_82, grammarAccess.getMOSFETModelAccess().getTPGKeyword_4_25_0());
            	    								
            	    otherlv_83=(Token)match(input,40,FOLLOW_41); 

            	    									newLeafNode(otherlv_83, grammarAccess.getMOSFETModelAccess().getEqualsSignKeyword_4_25_1());
            	    								
            	    // InternalXSpice.g:5199:9: ( ( (lv_gateType_84_1= '1' | lv_gateType_84_2= '0' | lv_gateType_84_3= '-1' ) ) )
            	    // InternalXSpice.g:5200:10: ( (lv_gateType_84_1= '1' | lv_gateType_84_2= '0' | lv_gateType_84_3= '-1' ) )
            	    {
            	    // InternalXSpice.g:5200:10: ( (lv_gateType_84_1= '1' | lv_gateType_84_2= '0' | lv_gateType_84_3= '-1' ) )
            	    // InternalXSpice.g:5201:11: (lv_gateType_84_1= '1' | lv_gateType_84_2= '0' | lv_gateType_84_3= '-1' )
            	    {
            	    // InternalXSpice.g:5201:11: (lv_gateType_84_1= '1' | lv_gateType_84_2= '0' | lv_gateType_84_3= '-1' )
            	    int alt29=3;
            	    switch ( input.LA(1) ) {
            	    case 114:
            	        {
            	        alt29=1;
            	        }
            	        break;
            	    case 115:
            	        {
            	        alt29=2;
            	        }
            	        break;
            	    case 116:
            	        {
            	        alt29=3;
            	        }
            	        break;
            	    default:
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 29, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt29) {
            	        case 1 :
            	            // InternalXSpice.g:5202:12: lv_gateType_84_1= '1'
            	            {
            	            lv_gateType_84_1=(Token)match(input,114,FOLLOW_39); 

            	            												newLeafNode(lv_gateType_84_1, grammarAccess.getMOSFETModelAccess().getGateType1Keyword_4_25_2_0_0());
            	            											

            	            												if (current==null) {
            	            													current = createModelElement(grammarAccess.getMOSFETModelRule());
            	            												}
            	            												setWithLastConsumed(current, "gateType", lv_gateType_84_1, null);
            	            											

            	            }
            	            break;
            	        case 2 :
            	            // InternalXSpice.g:5213:12: lv_gateType_84_2= '0'
            	            {
            	            lv_gateType_84_2=(Token)match(input,115,FOLLOW_39); 

            	            												newLeafNode(lv_gateType_84_2, grammarAccess.getMOSFETModelAccess().getGateType0Keyword_4_25_2_0_1());
            	            											

            	            												if (current==null) {
            	            													current = createModelElement(grammarAccess.getMOSFETModelRule());
            	            												}
            	            												setWithLastConsumed(current, "gateType", lv_gateType_84_2, null);
            	            											

            	            }
            	            break;
            	        case 3 :
            	            // InternalXSpice.g:5224:12: lv_gateType_84_3= '-1'
            	            {
            	            lv_gateType_84_3=(Token)match(input,116,FOLLOW_39); 

            	            												newLeafNode(lv_gateType_84_3, grammarAccess.getMOSFETModelAccess().getGateType1Keyword_4_25_2_0_2());
            	            											

            	            												if (current==null) {
            	            													current = createModelElement(grammarAccess.getMOSFETModelRule());
            	            												}
            	            												setWithLastConsumed(current, "gateType", lv_gateType_84_3, null);
            	            											

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 27 :
            	    // InternalXSpice.g:5243:4: ({...}? => ( ({...}? => (otherlv_85= 'XJ' otherlv_86= '=' ( (lv_xj_87_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:5243:4: ({...}? => ( ({...}? => (otherlv_85= 'XJ' otherlv_86= '=' ( (lv_xj_87_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:5244:5: {...}? => ( ({...}? => (otherlv_85= 'XJ' otherlv_86= '=' ( (lv_xj_87_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 26) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFETModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 26)");
            	    }
            	    // InternalXSpice.g:5244:109: ( ({...}? => (otherlv_85= 'XJ' otherlv_86= '=' ( (lv_xj_87_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:5245:6: ({...}? => (otherlv_85= 'XJ' otherlv_86= '=' ( (lv_xj_87_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 26);
            	    					
            	    // InternalXSpice.g:5248:9: ({...}? => (otherlv_85= 'XJ' otherlv_86= '=' ( (lv_xj_87_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:5248:10: {...}? => (otherlv_85= 'XJ' otherlv_86= '=' ( (lv_xj_87_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFETModel", "true");
            	    }
            	    // InternalXSpice.g:5248:19: (otherlv_85= 'XJ' otherlv_86= '=' ( (lv_xj_87_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:5248:20: otherlv_85= 'XJ' otherlv_86= '=' ( (lv_xj_87_0= RULE_NUMBER ) )
            	    {
            	    otherlv_85=(Token)match(input,117,FOLLOW_11); 

            	    									newLeafNode(otherlv_85, grammarAccess.getMOSFETModelAccess().getXJKeyword_4_26_0());
            	    								
            	    otherlv_86=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_86, grammarAccess.getMOSFETModelAccess().getEqualsSignKeyword_4_26_1());
            	    								
            	    // InternalXSpice.g:5256:9: ( (lv_xj_87_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:5257:10: (lv_xj_87_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:5257:10: (lv_xj_87_0= RULE_NUMBER )
            	    // InternalXSpice.g:5258:11: lv_xj_87_0= RULE_NUMBER
            	    {
            	    lv_xj_87_0=(Token)match(input,RULE_NUMBER,FOLLOW_39); 

            	    											newLeafNode(lv_xj_87_0, grammarAccess.getMOSFETModelAccess().getXjNUMBERTerminalRuleCall_4_26_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getMOSFETModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"xj",
            	    												lv_xj_87_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 28 :
            	    // InternalXSpice.g:5280:4: ({...}? => ( ({...}? => (otherlv_88= 'LD' otherlv_89= '=' ( (lv_lateralDiffusion_90_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:5280:4: ({...}? => ( ({...}? => (otherlv_88= 'LD' otherlv_89= '=' ( (lv_lateralDiffusion_90_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:5281:5: {...}? => ( ({...}? => (otherlv_88= 'LD' otherlv_89= '=' ( (lv_lateralDiffusion_90_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 27) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFETModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 27)");
            	    }
            	    // InternalXSpice.g:5281:109: ( ({...}? => (otherlv_88= 'LD' otherlv_89= '=' ( (lv_lateralDiffusion_90_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:5282:6: ({...}? => (otherlv_88= 'LD' otherlv_89= '=' ( (lv_lateralDiffusion_90_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 27);
            	    					
            	    // InternalXSpice.g:5285:9: ({...}? => (otherlv_88= 'LD' otherlv_89= '=' ( (lv_lateralDiffusion_90_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:5285:10: {...}? => (otherlv_88= 'LD' otherlv_89= '=' ( (lv_lateralDiffusion_90_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFETModel", "true");
            	    }
            	    // InternalXSpice.g:5285:19: (otherlv_88= 'LD' otherlv_89= '=' ( (lv_lateralDiffusion_90_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:5285:20: otherlv_88= 'LD' otherlv_89= '=' ( (lv_lateralDiffusion_90_0= RULE_NUMBER ) )
            	    {
            	    otherlv_88=(Token)match(input,118,FOLLOW_11); 

            	    									newLeafNode(otherlv_88, grammarAccess.getMOSFETModelAccess().getLDKeyword_4_27_0());
            	    								
            	    otherlv_89=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_89, grammarAccess.getMOSFETModelAccess().getEqualsSignKeyword_4_27_1());
            	    								
            	    // InternalXSpice.g:5293:9: ( (lv_lateralDiffusion_90_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:5294:10: (lv_lateralDiffusion_90_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:5294:10: (lv_lateralDiffusion_90_0= RULE_NUMBER )
            	    // InternalXSpice.g:5295:11: lv_lateralDiffusion_90_0= RULE_NUMBER
            	    {
            	    lv_lateralDiffusion_90_0=(Token)match(input,RULE_NUMBER,FOLLOW_39); 

            	    											newLeafNode(lv_lateralDiffusion_90_0, grammarAccess.getMOSFETModelAccess().getLateralDiffusionNUMBERTerminalRuleCall_4_27_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getMOSFETModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"lateralDiffusion",
            	    												lv_lateralDiffusion_90_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 29 :
            	    // InternalXSpice.g:5317:4: ({...}? => ( ({...}? => (otherlv_91= 'UO' | (otherlv_92= 'U0' otherlv_93= '=' ( (lv_surfaceMobility_94_0= RULE_NUMBER ) ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:5317:4: ({...}? => ( ({...}? => (otherlv_91= 'UO' | (otherlv_92= 'U0' otherlv_93= '=' ( (lv_surfaceMobility_94_0= RULE_NUMBER ) ) ) ) ) ) )
            	    // InternalXSpice.g:5318:5: {...}? => ( ({...}? => (otherlv_91= 'UO' | (otherlv_92= 'U0' otherlv_93= '=' ( (lv_surfaceMobility_94_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 28) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFETModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 28)");
            	    }
            	    // InternalXSpice.g:5318:109: ( ({...}? => (otherlv_91= 'UO' | (otherlv_92= 'U0' otherlv_93= '=' ( (lv_surfaceMobility_94_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:5319:6: ({...}? => (otherlv_91= 'UO' | (otherlv_92= 'U0' otherlv_93= '=' ( (lv_surfaceMobility_94_0= RULE_NUMBER ) ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 28);
            	    					
            	    // InternalXSpice.g:5322:9: ({...}? => (otherlv_91= 'UO' | (otherlv_92= 'U0' otherlv_93= '=' ( (lv_surfaceMobility_94_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:5322:10: {...}? => (otherlv_91= 'UO' | (otherlv_92= 'U0' otherlv_93= '=' ( (lv_surfaceMobility_94_0= RULE_NUMBER ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFETModel", "true");
            	    }
            	    // InternalXSpice.g:5322:19: (otherlv_91= 'UO' | (otherlv_92= 'U0' otherlv_93= '=' ( (lv_surfaceMobility_94_0= RULE_NUMBER ) ) ) )
            	    int alt30=2;
            	    int LA30_0 = input.LA(1);

            	    if ( (LA30_0==119) ) {
            	        alt30=1;
            	    }
            	    else if ( (LA30_0==120) ) {
            	        alt30=2;
            	    }
            	    else {
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 30, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt30) {
            	        case 1 :
            	            // InternalXSpice.g:5322:20: otherlv_91= 'UO'
            	            {
            	            otherlv_91=(Token)match(input,119,FOLLOW_39); 

            	            									newLeafNode(otherlv_91, grammarAccess.getMOSFETModelAccess().getUOKeyword_4_28_0());
            	            								

            	            }
            	            break;
            	        case 2 :
            	            // InternalXSpice.g:5327:9: (otherlv_92= 'U0' otherlv_93= '=' ( (lv_surfaceMobility_94_0= RULE_NUMBER ) ) )
            	            {
            	            // InternalXSpice.g:5327:9: (otherlv_92= 'U0' otherlv_93= '=' ( (lv_surfaceMobility_94_0= RULE_NUMBER ) ) )
            	            // InternalXSpice.g:5328:10: otherlv_92= 'U0' otherlv_93= '=' ( (lv_surfaceMobility_94_0= RULE_NUMBER ) )
            	            {
            	            otherlv_92=(Token)match(input,120,FOLLOW_11); 

            	            										newLeafNode(otherlv_92, grammarAccess.getMOSFETModelAccess().getU0Keyword_4_28_1_0());
            	            									
            	            otherlv_93=(Token)match(input,40,FOLLOW_12); 

            	            										newLeafNode(otherlv_93, grammarAccess.getMOSFETModelAccess().getEqualsSignKeyword_4_28_1_1());
            	            									
            	            // InternalXSpice.g:5336:10: ( (lv_surfaceMobility_94_0= RULE_NUMBER ) )
            	            // InternalXSpice.g:5337:11: (lv_surfaceMobility_94_0= RULE_NUMBER )
            	            {
            	            // InternalXSpice.g:5337:11: (lv_surfaceMobility_94_0= RULE_NUMBER )
            	            // InternalXSpice.g:5338:12: lv_surfaceMobility_94_0= RULE_NUMBER
            	            {
            	            lv_surfaceMobility_94_0=(Token)match(input,RULE_NUMBER,FOLLOW_39); 

            	            												newLeafNode(lv_surfaceMobility_94_0, grammarAccess.getMOSFETModelAccess().getSurfaceMobilityNUMBERTerminalRuleCall_4_28_1_2_0());
            	            											

            	            												if (current==null) {
            	            													current = createModelElement(grammarAccess.getMOSFETModelRule());
            	            												}
            	            												setWithLastConsumed(
            	            													current,
            	            													"surfaceMobility",
            	            													lv_surfaceMobility_94_0,
            	            													"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	            											

            	            }


            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 30 :
            	    // InternalXSpice.g:5361:4: ({...}? => ( ({...}? => (otherlv_95= 'KF' otherlv_96= '=' ( (lv_flickerNoiseCoefficient_97_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:5361:4: ({...}? => ( ({...}? => (otherlv_95= 'KF' otherlv_96= '=' ( (lv_flickerNoiseCoefficient_97_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:5362:5: {...}? => ( ({...}? => (otherlv_95= 'KF' otherlv_96= '=' ( (lv_flickerNoiseCoefficient_97_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 29) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFETModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 29)");
            	    }
            	    // InternalXSpice.g:5362:109: ( ({...}? => (otherlv_95= 'KF' otherlv_96= '=' ( (lv_flickerNoiseCoefficient_97_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:5363:6: ({...}? => (otherlv_95= 'KF' otherlv_96= '=' ( (lv_flickerNoiseCoefficient_97_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 29);
            	    					
            	    // InternalXSpice.g:5366:9: ({...}? => (otherlv_95= 'KF' otherlv_96= '=' ( (lv_flickerNoiseCoefficient_97_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:5366:10: {...}? => (otherlv_95= 'KF' otherlv_96= '=' ( (lv_flickerNoiseCoefficient_97_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFETModel", "true");
            	    }
            	    // InternalXSpice.g:5366:19: (otherlv_95= 'KF' otherlv_96= '=' ( (lv_flickerNoiseCoefficient_97_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:5366:20: otherlv_95= 'KF' otherlv_96= '=' ( (lv_flickerNoiseCoefficient_97_0= RULE_NUMBER ) )
            	    {
            	    otherlv_95=(Token)match(input,78,FOLLOW_11); 

            	    									newLeafNode(otherlv_95, grammarAccess.getMOSFETModelAccess().getKFKeyword_4_29_0());
            	    								
            	    otherlv_96=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_96, grammarAccess.getMOSFETModelAccess().getEqualsSignKeyword_4_29_1());
            	    								
            	    // InternalXSpice.g:5374:9: ( (lv_flickerNoiseCoefficient_97_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:5375:10: (lv_flickerNoiseCoefficient_97_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:5375:10: (lv_flickerNoiseCoefficient_97_0= RULE_NUMBER )
            	    // InternalXSpice.g:5376:11: lv_flickerNoiseCoefficient_97_0= RULE_NUMBER
            	    {
            	    lv_flickerNoiseCoefficient_97_0=(Token)match(input,RULE_NUMBER,FOLLOW_39); 

            	    											newLeafNode(lv_flickerNoiseCoefficient_97_0, grammarAccess.getMOSFETModelAccess().getFlickerNoiseCoefficientNUMBERTerminalRuleCall_4_29_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getMOSFETModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"flickerNoiseCoefficient",
            	    												lv_flickerNoiseCoefficient_97_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 31 :
            	    // InternalXSpice.g:5398:4: ({...}? => ( ({...}? => (otherlv_98= 'AF' otherlv_99= '=' ( (lv_flickerNoiseExponent_100_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:5398:4: ({...}? => ( ({...}? => (otherlv_98= 'AF' otherlv_99= '=' ( (lv_flickerNoiseExponent_100_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:5399:5: {...}? => ( ({...}? => (otherlv_98= 'AF' otherlv_99= '=' ( (lv_flickerNoiseExponent_100_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 30) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFETModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 30)");
            	    }
            	    // InternalXSpice.g:5399:109: ( ({...}? => (otherlv_98= 'AF' otherlv_99= '=' ( (lv_flickerNoiseExponent_100_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:5400:6: ({...}? => (otherlv_98= 'AF' otherlv_99= '=' ( (lv_flickerNoiseExponent_100_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 30);
            	    					
            	    // InternalXSpice.g:5403:9: ({...}? => (otherlv_98= 'AF' otherlv_99= '=' ( (lv_flickerNoiseExponent_100_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:5403:10: {...}? => (otherlv_98= 'AF' otherlv_99= '=' ( (lv_flickerNoiseExponent_100_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFETModel", "true");
            	    }
            	    // InternalXSpice.g:5403:19: (otherlv_98= 'AF' otherlv_99= '=' ( (lv_flickerNoiseExponent_100_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:5403:20: otherlv_98= 'AF' otherlv_99= '=' ( (lv_flickerNoiseExponent_100_0= RULE_NUMBER ) )
            	    {
            	    otherlv_98=(Token)match(input,79,FOLLOW_11); 

            	    									newLeafNode(otherlv_98, grammarAccess.getMOSFETModelAccess().getAFKeyword_4_30_0());
            	    								
            	    otherlv_99=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_99, grammarAccess.getMOSFETModelAccess().getEqualsSignKeyword_4_30_1());
            	    								
            	    // InternalXSpice.g:5411:9: ( (lv_flickerNoiseExponent_100_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:5412:10: (lv_flickerNoiseExponent_100_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:5412:10: (lv_flickerNoiseExponent_100_0= RULE_NUMBER )
            	    // InternalXSpice.g:5413:11: lv_flickerNoiseExponent_100_0= RULE_NUMBER
            	    {
            	    lv_flickerNoiseExponent_100_0=(Token)match(input,RULE_NUMBER,FOLLOW_39); 

            	    											newLeafNode(lv_flickerNoiseExponent_100_0, grammarAccess.getMOSFETModelAccess().getFlickerNoiseExponentNUMBERTerminalRuleCall_4_30_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getMOSFETModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"flickerNoiseExponent",
            	    												lv_flickerNoiseExponent_100_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 32 :
            	    // InternalXSpice.g:5435:4: ({...}? => ( ({...}? => (otherlv_101= 'FC' otherlv_102= '=' ( (lv_forwardCapDepletionCoefficient_103_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:5435:4: ({...}? => ( ({...}? => (otherlv_101= 'FC' otherlv_102= '=' ( (lv_forwardCapDepletionCoefficient_103_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:5436:5: {...}? => ( ({...}? => (otherlv_101= 'FC' otherlv_102= '=' ( (lv_forwardCapDepletionCoefficient_103_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 31) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFETModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 31)");
            	    }
            	    // InternalXSpice.g:5436:109: ( ({...}? => (otherlv_101= 'FC' otherlv_102= '=' ( (lv_forwardCapDepletionCoefficient_103_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:5437:6: ({...}? => (otherlv_101= 'FC' otherlv_102= '=' ( (lv_forwardCapDepletionCoefficient_103_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 31);
            	    					
            	    // InternalXSpice.g:5440:9: ({...}? => (otherlv_101= 'FC' otherlv_102= '=' ( (lv_forwardCapDepletionCoefficient_103_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:5440:10: {...}? => (otherlv_101= 'FC' otherlv_102= '=' ( (lv_forwardCapDepletionCoefficient_103_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFETModel", "true");
            	    }
            	    // InternalXSpice.g:5440:19: (otherlv_101= 'FC' otherlv_102= '=' ( (lv_forwardCapDepletionCoefficient_103_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:5440:20: otherlv_101= 'FC' otherlv_102= '=' ( (lv_forwardCapDepletionCoefficient_103_0= RULE_NUMBER ) )
            	    {
            	    otherlv_101=(Token)match(input,80,FOLLOW_11); 

            	    									newLeafNode(otherlv_101, grammarAccess.getMOSFETModelAccess().getFCKeyword_4_31_0());
            	    								
            	    otherlv_102=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_102, grammarAccess.getMOSFETModelAccess().getEqualsSignKeyword_4_31_1());
            	    								
            	    // InternalXSpice.g:5448:9: ( (lv_forwardCapDepletionCoefficient_103_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:5449:10: (lv_forwardCapDepletionCoefficient_103_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:5449:10: (lv_forwardCapDepletionCoefficient_103_0= RULE_NUMBER )
            	    // InternalXSpice.g:5450:11: lv_forwardCapDepletionCoefficient_103_0= RULE_NUMBER
            	    {
            	    lv_forwardCapDepletionCoefficient_103_0=(Token)match(input,RULE_NUMBER,FOLLOW_39); 

            	    											newLeafNode(lv_forwardCapDepletionCoefficient_103_0, grammarAccess.getMOSFETModelAccess().getForwardCapDepletionCoefficientNUMBERTerminalRuleCall_4_31_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getMOSFETModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"forwardCapDepletionCoefficient",
            	    												lv_forwardCapDepletionCoefficient_103_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 33 :
            	    // InternalXSpice.g:5472:4: ({...}? => ( ({...}? => (otherlv_104= 'TNOM' otherlv_105= '=' ( (lv_nominalTemperature_106_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:5472:4: ({...}? => ( ({...}? => (otherlv_104= 'TNOM' otherlv_105= '=' ( (lv_nominalTemperature_106_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:5473:5: {...}? => ( ({...}? => (otherlv_104= 'TNOM' otherlv_105= '=' ( (lv_nominalTemperature_106_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 32) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFETModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 32)");
            	    }
            	    // InternalXSpice.g:5473:109: ( ({...}? => (otherlv_104= 'TNOM' otherlv_105= '=' ( (lv_nominalTemperature_106_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:5474:6: ({...}? => (otherlv_104= 'TNOM' otherlv_105= '=' ( (lv_nominalTemperature_106_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 32);
            	    					
            	    // InternalXSpice.g:5477:9: ({...}? => (otherlv_104= 'TNOM' otherlv_105= '=' ( (lv_nominalTemperature_106_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:5477:10: {...}? => (otherlv_104= 'TNOM' otherlv_105= '=' ( (lv_nominalTemperature_106_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleMOSFETModel", "true");
            	    }
            	    // InternalXSpice.g:5477:19: (otherlv_104= 'TNOM' otherlv_105= '=' ( (lv_nominalTemperature_106_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:5477:20: otherlv_104= 'TNOM' otherlv_105= '=' ( (lv_nominalTemperature_106_0= RULE_NUMBER ) )
            	    {
            	    otherlv_104=(Token)match(input,51,FOLLOW_11); 

            	    									newLeafNode(otherlv_104, grammarAccess.getMOSFETModelAccess().getTNOMKeyword_4_32_0());
            	    								
            	    otherlv_105=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_105, grammarAccess.getMOSFETModelAccess().getEqualsSignKeyword_4_32_1());
            	    								
            	    // InternalXSpice.g:5485:9: ( (lv_nominalTemperature_106_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:5486:10: (lv_nominalTemperature_106_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:5486:10: (lv_nominalTemperature_106_0= RULE_NUMBER )
            	    // InternalXSpice.g:5487:11: lv_nominalTemperature_106_0= RULE_NUMBER
            	    {
            	    lv_nominalTemperature_106_0=(Token)match(input,RULE_NUMBER,FOLLOW_39); 

            	    											newLeafNode(lv_nominalTemperature_106_0, grammarAccess.getMOSFETModelAccess().getNominalTemperatureNUMBERTerminalRuleCall_4_32_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getMOSFETModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"nominalTemperature",
            	    												lv_nominalTemperature_106_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop31;
                }
            } while (true);


            }


            }

             
            				  getUnorderedGroupHelper().leave(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4());
            				

            }

            otherlv_107=(Token)match(input,52,FOLLOW_2); 

            			newLeafNode(otherlv_107, grammarAccess.getMOSFETModelAccess().getRightParenthesisKeyword_5());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMOSFETModel"


    // $ANTLR start "entryRuleBJT"
    // InternalXSpice.g:5524:1: entryRuleBJT returns [EObject current=null] : iv_ruleBJT= ruleBJT EOF ;
    public final EObject entryRuleBJT() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBJT = null;


        try {
            // InternalXSpice.g:5524:44: (iv_ruleBJT= ruleBJT EOF )
            // InternalXSpice.g:5525:2: iv_ruleBJT= ruleBJT EOF
            {
             newCompositeNode(grammarAccess.getBJTRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleBJT=ruleBJT();

            state._fsp--;

             current =iv_ruleBJT; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBJT"


    // $ANTLR start "ruleBJT"
    // InternalXSpice.g:5531:1: ruleBJT returns [EObject current=null] : ( ( ( (lv_name_0_1= RULE_QNID | lv_name_0_2= RULE_QPID ) ) ) ( (lv_nodes_1_0= RULE_NODE ) ) ( (lv_nodes_2_0= RULE_NODE ) ) ( (lv_nodes_3_0= RULE_NODE ) ) ( (lv_nodes_4_0= RULE_NODE ) )? ( (lv_model_5_0= ruleLabel ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_7= 'AREA' otherlv_8= '=' ( (lv_area_9_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_off_10_0= 'OFF' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'IC' otherlv_12= '=' ( (lv_ic_13_0= RULE_NUMBER ) ) otherlv_14= ',' ( (lv_ic_15_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'TEMP' otherlv_17= '=' ( (lv_temp_18_0= RULE_NUMBER ) ) ) ) ) ) )* ) ) ) ) ;
    public final EObject ruleBJT() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_1=null;
        Token lv_name_0_2=null;
        Token lv_nodes_1_0=null;
        Token lv_nodes_2_0=null;
        Token lv_nodes_3_0=null;
        Token lv_nodes_4_0=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token lv_area_9_0=null;
        Token lv_off_10_0=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token lv_ic_13_0=null;
        Token otherlv_14=null;
        Token lv_ic_15_0=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        Token lv_temp_18_0=null;
        AntlrDatatypeRuleToken lv_model_5_0 = null;



        	enterRule();

        try {
            // InternalXSpice.g:5537:2: ( ( ( ( (lv_name_0_1= RULE_QNID | lv_name_0_2= RULE_QPID ) ) ) ( (lv_nodes_1_0= RULE_NODE ) ) ( (lv_nodes_2_0= RULE_NODE ) ) ( (lv_nodes_3_0= RULE_NODE ) ) ( (lv_nodes_4_0= RULE_NODE ) )? ( (lv_model_5_0= ruleLabel ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_7= 'AREA' otherlv_8= '=' ( (lv_area_9_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_off_10_0= 'OFF' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'IC' otherlv_12= '=' ( (lv_ic_13_0= RULE_NUMBER ) ) otherlv_14= ',' ( (lv_ic_15_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'TEMP' otherlv_17= '=' ( (lv_temp_18_0= RULE_NUMBER ) ) ) ) ) ) )* ) ) ) ) )
            // InternalXSpice.g:5538:2: ( ( ( (lv_name_0_1= RULE_QNID | lv_name_0_2= RULE_QPID ) ) ) ( (lv_nodes_1_0= RULE_NODE ) ) ( (lv_nodes_2_0= RULE_NODE ) ) ( (lv_nodes_3_0= RULE_NODE ) ) ( (lv_nodes_4_0= RULE_NODE ) )? ( (lv_model_5_0= ruleLabel ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_7= 'AREA' otherlv_8= '=' ( (lv_area_9_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_off_10_0= 'OFF' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'IC' otherlv_12= '=' ( (lv_ic_13_0= RULE_NUMBER ) ) otherlv_14= ',' ( (lv_ic_15_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'TEMP' otherlv_17= '=' ( (lv_temp_18_0= RULE_NUMBER ) ) ) ) ) ) )* ) ) ) )
            {
            // InternalXSpice.g:5538:2: ( ( ( (lv_name_0_1= RULE_QNID | lv_name_0_2= RULE_QPID ) ) ) ( (lv_nodes_1_0= RULE_NODE ) ) ( (lv_nodes_2_0= RULE_NODE ) ) ( (lv_nodes_3_0= RULE_NODE ) ) ( (lv_nodes_4_0= RULE_NODE ) )? ( (lv_model_5_0= ruleLabel ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_7= 'AREA' otherlv_8= '=' ( (lv_area_9_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_off_10_0= 'OFF' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'IC' otherlv_12= '=' ( (lv_ic_13_0= RULE_NUMBER ) ) otherlv_14= ',' ( (lv_ic_15_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'TEMP' otherlv_17= '=' ( (lv_temp_18_0= RULE_NUMBER ) ) ) ) ) ) )* ) ) ) )
            // InternalXSpice.g:5539:3: ( ( (lv_name_0_1= RULE_QNID | lv_name_0_2= RULE_QPID ) ) ) ( (lv_nodes_1_0= RULE_NODE ) ) ( (lv_nodes_2_0= RULE_NODE ) ) ( (lv_nodes_3_0= RULE_NODE ) ) ( (lv_nodes_4_0= RULE_NODE ) )? ( (lv_model_5_0= ruleLabel ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_7= 'AREA' otherlv_8= '=' ( (lv_area_9_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_off_10_0= 'OFF' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'IC' otherlv_12= '=' ( (lv_ic_13_0= RULE_NUMBER ) ) otherlv_14= ',' ( (lv_ic_15_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'TEMP' otherlv_17= '=' ( (lv_temp_18_0= RULE_NUMBER ) ) ) ) ) ) )* ) ) )
            {
            // InternalXSpice.g:5539:3: ( ( (lv_name_0_1= RULE_QNID | lv_name_0_2= RULE_QPID ) ) )
            // InternalXSpice.g:5540:4: ( (lv_name_0_1= RULE_QNID | lv_name_0_2= RULE_QPID ) )
            {
            // InternalXSpice.g:5540:4: ( (lv_name_0_1= RULE_QNID | lv_name_0_2= RULE_QPID ) )
            // InternalXSpice.g:5541:5: (lv_name_0_1= RULE_QNID | lv_name_0_2= RULE_QPID )
            {
            // InternalXSpice.g:5541:5: (lv_name_0_1= RULE_QNID | lv_name_0_2= RULE_QPID )
            int alt32=2;
            int LA32_0 = input.LA(1);

            if ( (LA32_0==RULE_QNID) ) {
                alt32=1;
            }
            else if ( (LA32_0==RULE_QPID) ) {
                alt32=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 32, 0, input);

                throw nvae;
            }
            switch (alt32) {
                case 1 :
                    // InternalXSpice.g:5542:6: lv_name_0_1= RULE_QNID
                    {
                    lv_name_0_1=(Token)match(input,RULE_QNID,FOLLOW_5); 

                    						newLeafNode(lv_name_0_1, grammarAccess.getBJTAccess().getNameQNIDTerminalRuleCall_0_0_0());
                    					

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getBJTRule());
                    						}
                    						setWithLastConsumed(
                    							current,
                    							"name",
                    							lv_name_0_1,
                    							"com.xtext.ravornyo.xspice.XSpice.QNID");
                    					

                    }
                    break;
                case 2 :
                    // InternalXSpice.g:5557:6: lv_name_0_2= RULE_QPID
                    {
                    lv_name_0_2=(Token)match(input,RULE_QPID,FOLLOW_5); 

                    						newLeafNode(lv_name_0_2, grammarAccess.getBJTAccess().getNameQPIDTerminalRuleCall_0_0_1());
                    					

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getBJTRule());
                    						}
                    						setWithLastConsumed(
                    							current,
                    							"name",
                    							lv_name_0_2,
                    							"com.xtext.ravornyo.xspice.XSpice.QPID");
                    					

                    }
                    break;

            }


            }


            }

            // InternalXSpice.g:5574:3: ( (lv_nodes_1_0= RULE_NODE ) )
            // InternalXSpice.g:5575:4: (lv_nodes_1_0= RULE_NODE )
            {
            // InternalXSpice.g:5575:4: (lv_nodes_1_0= RULE_NODE )
            // InternalXSpice.g:5576:5: lv_nodes_1_0= RULE_NODE
            {
            lv_nodes_1_0=(Token)match(input,RULE_NODE,FOLLOW_5); 

            					newLeafNode(lv_nodes_1_0, grammarAccess.getBJTAccess().getNodesNODETerminalRuleCall_1_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getBJTRule());
            					}
            					addWithLastConsumed(
            						current,
            						"nodes",
            						lv_nodes_1_0,
            						"com.xtext.ravornyo.xspice.XSpice.NODE");
            				

            }


            }

            // InternalXSpice.g:5592:3: ( (lv_nodes_2_0= RULE_NODE ) )
            // InternalXSpice.g:5593:4: (lv_nodes_2_0= RULE_NODE )
            {
            // InternalXSpice.g:5593:4: (lv_nodes_2_0= RULE_NODE )
            // InternalXSpice.g:5594:5: lv_nodes_2_0= RULE_NODE
            {
            lv_nodes_2_0=(Token)match(input,RULE_NODE,FOLLOW_5); 

            					newLeafNode(lv_nodes_2_0, grammarAccess.getBJTAccess().getNodesNODETerminalRuleCall_2_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getBJTRule());
            					}
            					addWithLastConsumed(
            						current,
            						"nodes",
            						lv_nodes_2_0,
            						"com.xtext.ravornyo.xspice.XSpice.NODE");
            				

            }


            }

            // InternalXSpice.g:5610:3: ( (lv_nodes_3_0= RULE_NODE ) )
            // InternalXSpice.g:5611:4: (lv_nodes_3_0= RULE_NODE )
            {
            // InternalXSpice.g:5611:4: (lv_nodes_3_0= RULE_NODE )
            // InternalXSpice.g:5612:5: lv_nodes_3_0= RULE_NODE
            {
            lv_nodes_3_0=(Token)match(input,RULE_NODE,FOLLOW_4); 

            					newLeafNode(lv_nodes_3_0, grammarAccess.getBJTAccess().getNodesNODETerminalRuleCall_3_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getBJTRule());
            					}
            					addWithLastConsumed(
            						current,
            						"nodes",
            						lv_nodes_3_0,
            						"com.xtext.ravornyo.xspice.XSpice.NODE");
            				

            }


            }

            // InternalXSpice.g:5628:3: ( (lv_nodes_4_0= RULE_NODE ) )?
            int alt33=2;
            alt33 = dfa33.predict(input);
            switch (alt33) {
                case 1 :
                    // InternalXSpice.g:5629:4: (lv_nodes_4_0= RULE_NODE )
                    {
                    // InternalXSpice.g:5629:4: (lv_nodes_4_0= RULE_NODE )
                    // InternalXSpice.g:5630:5: lv_nodes_4_0= RULE_NODE
                    {
                    lv_nodes_4_0=(Token)match(input,RULE_NODE,FOLLOW_4); 

                    					newLeafNode(lv_nodes_4_0, grammarAccess.getBJTAccess().getNodesNODETerminalRuleCall_4_0());
                    				

                    					if (current==null) {
                    						current = createModelElement(grammarAccess.getBJTRule());
                    					}
                    					addWithLastConsumed(
                    						current,
                    						"nodes",
                    						lv_nodes_4_0,
                    						"com.xtext.ravornyo.xspice.XSpice.NODE");
                    				

                    }


                    }
                    break;

            }

            // InternalXSpice.g:5646:3: ( (lv_model_5_0= ruleLabel ) )
            // InternalXSpice.g:5647:4: (lv_model_5_0= ruleLabel )
            {
            // InternalXSpice.g:5647:4: (lv_model_5_0= ruleLabel )
            // InternalXSpice.g:5648:5: lv_model_5_0= ruleLabel
            {

            					newCompositeNode(grammarAccess.getBJTAccess().getModelLabelParserRuleCall_5_0());
            				
            pushFollow(FOLLOW_33);
            lv_model_5_0=ruleLabel();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getBJTRule());
            					}
            					set(
            						current,
            						"model",
            						lv_model_5_0,
            						"com.xtext.ravornyo.xspice.XSpice.Label");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            // InternalXSpice.g:5665:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_7= 'AREA' otherlv_8= '=' ( (lv_area_9_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_off_10_0= 'OFF' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'IC' otherlv_12= '=' ( (lv_ic_13_0= RULE_NUMBER ) ) otherlv_14= ',' ( (lv_ic_15_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'TEMP' otherlv_17= '=' ( (lv_temp_18_0= RULE_NUMBER ) ) ) ) ) ) )* ) ) )
            // InternalXSpice.g:5666:4: ( ( ( ({...}? => ( ({...}? => (otherlv_7= 'AREA' otherlv_8= '=' ( (lv_area_9_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_off_10_0= 'OFF' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'IC' otherlv_12= '=' ( (lv_ic_13_0= RULE_NUMBER ) ) otherlv_14= ',' ( (lv_ic_15_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'TEMP' otherlv_17= '=' ( (lv_temp_18_0= RULE_NUMBER ) ) ) ) ) ) )* ) )
            {
            // InternalXSpice.g:5666:4: ( ( ( ({...}? => ( ({...}? => (otherlv_7= 'AREA' otherlv_8= '=' ( (lv_area_9_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_off_10_0= 'OFF' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'IC' otherlv_12= '=' ( (lv_ic_13_0= RULE_NUMBER ) ) otherlv_14= ',' ( (lv_ic_15_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'TEMP' otherlv_17= '=' ( (lv_temp_18_0= RULE_NUMBER ) ) ) ) ) ) )* ) )
            // InternalXSpice.g:5667:5: ( ( ({...}? => ( ({...}? => (otherlv_7= 'AREA' otherlv_8= '=' ( (lv_area_9_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_off_10_0= 'OFF' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'IC' otherlv_12= '=' ( (lv_ic_13_0= RULE_NUMBER ) ) otherlv_14= ',' ( (lv_ic_15_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'TEMP' otherlv_17= '=' ( (lv_temp_18_0= RULE_NUMBER ) ) ) ) ) ) )* )
            {
             
            				  getUnorderedGroupHelper().enter(grammarAccess.getBJTAccess().getUnorderedGroup_6());
            				
            // InternalXSpice.g:5670:5: ( ( ({...}? => ( ({...}? => (otherlv_7= 'AREA' otherlv_8= '=' ( (lv_area_9_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_off_10_0= 'OFF' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'IC' otherlv_12= '=' ( (lv_ic_13_0= RULE_NUMBER ) ) otherlv_14= ',' ( (lv_ic_15_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'TEMP' otherlv_17= '=' ( (lv_temp_18_0= RULE_NUMBER ) ) ) ) ) ) )* )
            // InternalXSpice.g:5671:6: ( ({...}? => ( ({...}? => (otherlv_7= 'AREA' otherlv_8= '=' ( (lv_area_9_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_off_10_0= 'OFF' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'IC' otherlv_12= '=' ( (lv_ic_13_0= RULE_NUMBER ) ) otherlv_14= ',' ( (lv_ic_15_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'TEMP' otherlv_17= '=' ( (lv_temp_18_0= RULE_NUMBER ) ) ) ) ) ) )*
            {
            // InternalXSpice.g:5671:6: ( ({...}? => ( ({...}? => (otherlv_7= 'AREA' otherlv_8= '=' ( (lv_area_9_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_off_10_0= 'OFF' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'IC' otherlv_12= '=' ( (lv_ic_13_0= RULE_NUMBER ) ) otherlv_14= ',' ( (lv_ic_15_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'TEMP' otherlv_17= '=' ( (lv_temp_18_0= RULE_NUMBER ) ) ) ) ) ) )*
            loop34:
            do {
                int alt34=5;
                int LA34_0 = input.LA(1);

                if ( LA34_0 == 67 && getUnorderedGroupHelper().canSelect(grammarAccess.getBJTAccess().getUnorderedGroup_6(), 0) ) {
                    alt34=1;
                }
                else if ( LA34_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getBJTAccess().getUnorderedGroup_6(), 1) ) {
                    alt34=2;
                }
                else if ( LA34_0 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getBJTAccess().getUnorderedGroup_6(), 2) ) {
                    alt34=3;
                }
                else if ( LA34_0 == 42 && getUnorderedGroupHelper().canSelect(grammarAccess.getBJTAccess().getUnorderedGroup_6(), 3) ) {
                    alt34=4;
                }


                switch (alt34) {
            	case 1 :
            	    // InternalXSpice.g:5672:4: ({...}? => ( ({...}? => (otherlv_7= 'AREA' otherlv_8= '=' ( (lv_area_9_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:5672:4: ({...}? => ( ({...}? => (otherlv_7= 'AREA' otherlv_8= '=' ( (lv_area_9_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:5673:5: {...}? => ( ({...}? => (otherlv_7= 'AREA' otherlv_8= '=' ( (lv_area_9_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getBJTAccess().getUnorderedGroup_6(), 0) ) {
            	        throw new FailedPredicateException(input, "ruleBJT", "getUnorderedGroupHelper().canSelect(grammarAccess.getBJTAccess().getUnorderedGroup_6(), 0)");
            	    }
            	    // InternalXSpice.g:5673:100: ( ({...}? => (otherlv_7= 'AREA' otherlv_8= '=' ( (lv_area_9_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:5674:6: ({...}? => (otherlv_7= 'AREA' otherlv_8= '=' ( (lv_area_9_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getBJTAccess().getUnorderedGroup_6(), 0);
            	    					
            	    // InternalXSpice.g:5677:9: ({...}? => (otherlv_7= 'AREA' otherlv_8= '=' ( (lv_area_9_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:5677:10: {...}? => (otherlv_7= 'AREA' otherlv_8= '=' ( (lv_area_9_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleBJT", "true");
            	    }
            	    // InternalXSpice.g:5677:19: (otherlv_7= 'AREA' otherlv_8= '=' ( (lv_area_9_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:5677:20: otherlv_7= 'AREA' otherlv_8= '=' ( (lv_area_9_0= RULE_NUMBER ) )
            	    {
            	    otherlv_7=(Token)match(input,67,FOLLOW_11); 

            	    									newLeafNode(otherlv_7, grammarAccess.getBJTAccess().getAREAKeyword_6_0_0());
            	    								
            	    otherlv_8=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_8, grammarAccess.getBJTAccess().getEqualsSignKeyword_6_0_1());
            	    								
            	    // InternalXSpice.g:5685:9: ( (lv_area_9_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:5686:10: (lv_area_9_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:5686:10: (lv_area_9_0= RULE_NUMBER )
            	    // InternalXSpice.g:5687:11: lv_area_9_0= RULE_NUMBER
            	    {
            	    lv_area_9_0=(Token)match(input,RULE_NUMBER,FOLLOW_33); 

            	    											newLeafNode(lv_area_9_0, grammarAccess.getBJTAccess().getAreaNUMBERTerminalRuleCall_6_0_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getBJTRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"area",
            	    												lv_area_9_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBJTAccess().getUnorderedGroup_6());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalXSpice.g:5709:4: ({...}? => ( ({...}? => ( (lv_off_10_0= 'OFF' ) ) ) ) )
            	    {
            	    // InternalXSpice.g:5709:4: ({...}? => ( ({...}? => ( (lv_off_10_0= 'OFF' ) ) ) ) )
            	    // InternalXSpice.g:5710:5: {...}? => ( ({...}? => ( (lv_off_10_0= 'OFF' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getBJTAccess().getUnorderedGroup_6(), 1) ) {
            	        throw new FailedPredicateException(input, "ruleBJT", "getUnorderedGroupHelper().canSelect(grammarAccess.getBJTAccess().getUnorderedGroup_6(), 1)");
            	    }
            	    // InternalXSpice.g:5710:100: ( ({...}? => ( (lv_off_10_0= 'OFF' ) ) ) )
            	    // InternalXSpice.g:5711:6: ({...}? => ( (lv_off_10_0= 'OFF' ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getBJTAccess().getUnorderedGroup_6(), 1);
            	    					
            	    // InternalXSpice.g:5714:9: ({...}? => ( (lv_off_10_0= 'OFF' ) ) )
            	    // InternalXSpice.g:5714:10: {...}? => ( (lv_off_10_0= 'OFF' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleBJT", "true");
            	    }
            	    // InternalXSpice.g:5714:19: ( (lv_off_10_0= 'OFF' ) )
            	    // InternalXSpice.g:5714:20: (lv_off_10_0= 'OFF' )
            	    {
            	    // InternalXSpice.g:5714:20: (lv_off_10_0= 'OFF' )
            	    // InternalXSpice.g:5715:10: lv_off_10_0= 'OFF'
            	    {
            	    lv_off_10_0=(Token)match(input,58,FOLLOW_33); 

            	    										newLeafNode(lv_off_10_0, grammarAccess.getBJTAccess().getOffOFFKeyword_6_1_0());
            	    									

            	    										if (current==null) {
            	    											current = createModelElement(grammarAccess.getBJTRule());
            	    										}
            	    										setWithLastConsumed(current, "off", true, "OFF");
            	    									

            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBJTAccess().getUnorderedGroup_6());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalXSpice.g:5732:4: ({...}? => ( ({...}? => (otherlv_11= 'IC' otherlv_12= '=' ( (lv_ic_13_0= RULE_NUMBER ) ) otherlv_14= ',' ( (lv_ic_15_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:5732:4: ({...}? => ( ({...}? => (otherlv_11= 'IC' otherlv_12= '=' ( (lv_ic_13_0= RULE_NUMBER ) ) otherlv_14= ',' ( (lv_ic_15_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:5733:5: {...}? => ( ({...}? => (otherlv_11= 'IC' otherlv_12= '=' ( (lv_ic_13_0= RULE_NUMBER ) ) otherlv_14= ',' ( (lv_ic_15_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getBJTAccess().getUnorderedGroup_6(), 2) ) {
            	        throw new FailedPredicateException(input, "ruleBJT", "getUnorderedGroupHelper().canSelect(grammarAccess.getBJTAccess().getUnorderedGroup_6(), 2)");
            	    }
            	    // InternalXSpice.g:5733:100: ( ({...}? => (otherlv_11= 'IC' otherlv_12= '=' ( (lv_ic_13_0= RULE_NUMBER ) ) otherlv_14= ',' ( (lv_ic_15_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:5734:6: ({...}? => (otherlv_11= 'IC' otherlv_12= '=' ( (lv_ic_13_0= RULE_NUMBER ) ) otherlv_14= ',' ( (lv_ic_15_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getBJTAccess().getUnorderedGroup_6(), 2);
            	    					
            	    // InternalXSpice.g:5737:9: ({...}? => (otherlv_11= 'IC' otherlv_12= '=' ( (lv_ic_13_0= RULE_NUMBER ) ) otherlv_14= ',' ( (lv_ic_15_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:5737:10: {...}? => (otherlv_11= 'IC' otherlv_12= '=' ( (lv_ic_13_0= RULE_NUMBER ) ) otherlv_14= ',' ( (lv_ic_15_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleBJT", "true");
            	    }
            	    // InternalXSpice.g:5737:19: (otherlv_11= 'IC' otherlv_12= '=' ( (lv_ic_13_0= RULE_NUMBER ) ) otherlv_14= ',' ( (lv_ic_15_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:5737:20: otherlv_11= 'IC' otherlv_12= '=' ( (lv_ic_13_0= RULE_NUMBER ) ) otherlv_14= ',' ( (lv_ic_15_0= RULE_NUMBER ) )
            	    {
            	    otherlv_11=(Token)match(input,53,FOLLOW_11); 

            	    									newLeafNode(otherlv_11, grammarAccess.getBJTAccess().getICKeyword_6_2_0());
            	    								
            	    otherlv_12=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_12, grammarAccess.getBJTAccess().getEqualsSignKeyword_6_2_1());
            	    								
            	    // InternalXSpice.g:5745:9: ( (lv_ic_13_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:5746:10: (lv_ic_13_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:5746:10: (lv_ic_13_0= RULE_NUMBER )
            	    // InternalXSpice.g:5747:11: lv_ic_13_0= RULE_NUMBER
            	    {
            	    lv_ic_13_0=(Token)match(input,RULE_NUMBER,FOLLOW_37); 

            	    											newLeafNode(lv_ic_13_0, grammarAccess.getBJTAccess().getIcNUMBERTerminalRuleCall_6_2_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getBJTRule());
            	    											}
            	    											addWithLastConsumed(
            	    												current,
            	    												"ic",
            	    												lv_ic_13_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }

            	    otherlv_14=(Token)match(input,89,FOLLOW_12); 

            	    									newLeafNode(otherlv_14, grammarAccess.getBJTAccess().getCommaKeyword_6_2_3());
            	    								
            	    // InternalXSpice.g:5767:9: ( (lv_ic_15_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:5768:10: (lv_ic_15_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:5768:10: (lv_ic_15_0= RULE_NUMBER )
            	    // InternalXSpice.g:5769:11: lv_ic_15_0= RULE_NUMBER
            	    {
            	    lv_ic_15_0=(Token)match(input,RULE_NUMBER,FOLLOW_33); 

            	    											newLeafNode(lv_ic_15_0, grammarAccess.getBJTAccess().getIcNUMBERTerminalRuleCall_6_2_4_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getBJTRule());
            	    											}
            	    											addWithLastConsumed(
            	    												current,
            	    												"ic",
            	    												lv_ic_15_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBJTAccess().getUnorderedGroup_6());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalXSpice.g:5791:4: ({...}? => ( ({...}? => (otherlv_16= 'TEMP' otherlv_17= '=' ( (lv_temp_18_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:5791:4: ({...}? => ( ({...}? => (otherlv_16= 'TEMP' otherlv_17= '=' ( (lv_temp_18_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:5792:5: {...}? => ( ({...}? => (otherlv_16= 'TEMP' otherlv_17= '=' ( (lv_temp_18_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getBJTAccess().getUnorderedGroup_6(), 3) ) {
            	        throw new FailedPredicateException(input, "ruleBJT", "getUnorderedGroupHelper().canSelect(grammarAccess.getBJTAccess().getUnorderedGroup_6(), 3)");
            	    }
            	    // InternalXSpice.g:5792:100: ( ({...}? => (otherlv_16= 'TEMP' otherlv_17= '=' ( (lv_temp_18_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:5793:6: ({...}? => (otherlv_16= 'TEMP' otherlv_17= '=' ( (lv_temp_18_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getBJTAccess().getUnorderedGroup_6(), 3);
            	    					
            	    // InternalXSpice.g:5796:9: ({...}? => (otherlv_16= 'TEMP' otherlv_17= '=' ( (lv_temp_18_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:5796:10: {...}? => (otherlv_16= 'TEMP' otherlv_17= '=' ( (lv_temp_18_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleBJT", "true");
            	    }
            	    // InternalXSpice.g:5796:19: (otherlv_16= 'TEMP' otherlv_17= '=' ( (lv_temp_18_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:5796:20: otherlv_16= 'TEMP' otherlv_17= '=' ( (lv_temp_18_0= RULE_NUMBER ) )
            	    {
            	    otherlv_16=(Token)match(input,42,FOLLOW_11); 

            	    									newLeafNode(otherlv_16, grammarAccess.getBJTAccess().getTEMPKeyword_6_3_0());
            	    								
            	    otherlv_17=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_17, grammarAccess.getBJTAccess().getEqualsSignKeyword_6_3_1());
            	    								
            	    // InternalXSpice.g:5804:9: ( (lv_temp_18_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:5805:10: (lv_temp_18_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:5805:10: (lv_temp_18_0= RULE_NUMBER )
            	    // InternalXSpice.g:5806:11: lv_temp_18_0= RULE_NUMBER
            	    {
            	    lv_temp_18_0=(Token)match(input,RULE_NUMBER,FOLLOW_33); 

            	    											newLeafNode(lv_temp_18_0, grammarAccess.getBJTAccess().getTempNUMBERTerminalRuleCall_6_3_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getBJTRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"temp",
            	    												lv_temp_18_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBJTAccess().getUnorderedGroup_6());
            	    					

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop34;
                }
            } while (true);


            }


            }

             
            				  getUnorderedGroupHelper().leave(grammarAccess.getBJTAccess().getUnorderedGroup_6());
            				

            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBJT"


    // $ANTLR start "entryRuleBJTModel"
    // InternalXSpice.g:5839:1: entryRuleBJTModel returns [EObject current=null] : iv_ruleBJTModel= ruleBJTModel EOF ;
    public final EObject entryRuleBJTModel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBJTModel = null;


        try {
            // InternalXSpice.g:5839:49: (iv_ruleBJTModel= ruleBJTModel EOF )
            // InternalXSpice.g:5840:2: iv_ruleBJTModel= ruleBJTModel EOF
            {
             newCompositeNode(grammarAccess.getBJTModelRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleBJTModel=ruleBJTModel();

            state._fsp--;

             current =iv_ruleBJTModel; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBJTModel"


    // $ANTLR start "ruleBJTModel"
    // InternalXSpice.g:5846:1: ruleBJTModel returns [EObject current=null] : (otherlv_0= '.MODEL' ( (lv_name_1_0= ruleLabel ) ) (otherlv_2= 'NPN' | otherlv_3= 'PNP' ) otherlv_4= '(' ( ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'IS' otherlv_7= '=' ( (lv_saturationCurrent_8_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'BF' otherlv_10= '=' ( (lv_betaF_11_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'NF' otherlv_13= '=' ( (lv_emissionCoefficientForward_14_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'VAF' otherlv_16= '=' ( (lv_earlyVoltageForward_17_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'IKF' otherlv_19= '=' ( (lv_rollOffForward_20_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'ISE' otherlv_22= '=' ( (lv_leakBeCurrent_23_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= 'NE' otherlv_25= '=' ( (lv_leakBeEmissionCoefficient_26_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'BR' otherlv_28= '=' ( (lv_betaR_29_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_30= 'NR' otherlv_31= '=' ( (lv_emissionCoefficientReverse_32_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_33= 'VAR' otherlv_34= '=' ( (lv_earlyVoltageReverse_35_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'IKR' otherlv_37= '=' ( (lv_rollOffReverse_38_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'ISC' otherlv_40= '=' ( (lv_leakBcCurrent_41_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'NC' otherlv_43= '=' ( (lv_leakBcEmissionCoefficient_44_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'RB' otherlv_46= '=' ( (lv_baseResist_47_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= 'IRB' otherlv_49= '=' ( (lv_baseCurrentHalfResist_50_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_51= 'RBM' otherlv_52= '=' ( (lv_minimumBaseResistance_53_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_54= 'RE' otherlv_55= '=' ( (lv_emitterResistance_56_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_57= 'RC' otherlv_58= '=' ( (lv_collectorResistance_59_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_60= 'CJE' otherlv_61= '=' ( (lv_depletionCapBe_62_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_63= 'VJE' otherlv_64= '=' ( (lv_potentialBe_65_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'MJE' otherlv_67= '=' ( (lv_junctionExpBe_68_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_69= 'TF' otherlv_70= '=' ( (lv_transitTimeForward_71_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_72= 'XTF' otherlv_73= '=' ( (lv_transitTimeBiasCoefficientForward_74_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= 'VTF' otherlv_76= '=' ( (lv_transitTimeForwardVoltageBc_77_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_78= 'ITF' otherlv_79= '=' ( (lv_transitTimeHighCurrentForward_80_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_81= 'PTF' otherlv_82= '=' ( (lv_excessPhase_83_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_84= 'CJC' otherlv_85= '=' ( (lv_depletionCapBc_86_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_87= 'VJC' otherlv_88= '=' ( (lv_potentialBc_89_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_90= 'MJC' otherlv_91= '=' ( (lv_junctionExpBc_92_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_93= 'XCJC' otherlv_94= '=' ( (lv_baseFractionBcCap_95_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'TR' otherlv_97= '=' ( (lv_transitTimeReverse_98_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'CJS' otherlv_100= '=' ( (lv_capCs_101_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= 'VJS' otherlv_103= '=' ( (lv_potentialSubstrate_104_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_105= 'MJS' otherlv_106= '=' ( (lv_exponentialSubstrate_107_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_108= 'XTB' otherlv_109= '=' ( (lv_betaExponent_110_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_111= 'EG' otherlv_112= '=' ( (lv_energyGap_113_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_114= 'XTI' otherlv_115= '=' ( (lv_tempExpIs_116_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_117= 'KF' otherlv_118= '=' ( (lv_flickerNoiseCoefficient_119_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_120= 'AF' otherlv_121= '=' ( (lv_flickerNoiseExponent_122_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_123= 'FC' otherlv_124= '=' ( (lv_depletionCapCoefficient_125_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_126= 'TNOM' otherlv_127= '=' ( (lv_nominalTemperature_128_0= RULE_NUMBER ) ) ) ) ) ) )* ) ) ) otherlv_129= ')' ) ;
    public final EObject ruleBJTModel() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token lv_saturationCurrent_8_0=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token lv_betaF_11_0=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token lv_emissionCoefficientForward_14_0=null;
        Token otherlv_15=null;
        Token otherlv_16=null;
        Token lv_earlyVoltageForward_17_0=null;
        Token otherlv_18=null;
        Token otherlv_19=null;
        Token lv_rollOffForward_20_0=null;
        Token otherlv_21=null;
        Token otherlv_22=null;
        Token lv_leakBeCurrent_23_0=null;
        Token otherlv_24=null;
        Token otherlv_25=null;
        Token lv_leakBeEmissionCoefficient_26_0=null;
        Token otherlv_27=null;
        Token otherlv_28=null;
        Token lv_betaR_29_0=null;
        Token otherlv_30=null;
        Token otherlv_31=null;
        Token lv_emissionCoefficientReverse_32_0=null;
        Token otherlv_33=null;
        Token otherlv_34=null;
        Token lv_earlyVoltageReverse_35_0=null;
        Token otherlv_36=null;
        Token otherlv_37=null;
        Token lv_rollOffReverse_38_0=null;
        Token otherlv_39=null;
        Token otherlv_40=null;
        Token lv_leakBcCurrent_41_0=null;
        Token otherlv_42=null;
        Token otherlv_43=null;
        Token lv_leakBcEmissionCoefficient_44_0=null;
        Token otherlv_45=null;
        Token otherlv_46=null;
        Token lv_baseResist_47_0=null;
        Token otherlv_48=null;
        Token otherlv_49=null;
        Token lv_baseCurrentHalfResist_50_0=null;
        Token otherlv_51=null;
        Token otherlv_52=null;
        Token lv_minimumBaseResistance_53_0=null;
        Token otherlv_54=null;
        Token otherlv_55=null;
        Token lv_emitterResistance_56_0=null;
        Token otherlv_57=null;
        Token otherlv_58=null;
        Token lv_collectorResistance_59_0=null;
        Token otherlv_60=null;
        Token otherlv_61=null;
        Token lv_depletionCapBe_62_0=null;
        Token otherlv_63=null;
        Token otherlv_64=null;
        Token lv_potentialBe_65_0=null;
        Token otherlv_66=null;
        Token otherlv_67=null;
        Token lv_junctionExpBe_68_0=null;
        Token otherlv_69=null;
        Token otherlv_70=null;
        Token lv_transitTimeForward_71_0=null;
        Token otherlv_72=null;
        Token otherlv_73=null;
        Token lv_transitTimeBiasCoefficientForward_74_0=null;
        Token otherlv_75=null;
        Token otherlv_76=null;
        Token lv_transitTimeForwardVoltageBc_77_0=null;
        Token otherlv_78=null;
        Token otherlv_79=null;
        Token lv_transitTimeHighCurrentForward_80_0=null;
        Token otherlv_81=null;
        Token otherlv_82=null;
        Token lv_excessPhase_83_0=null;
        Token otherlv_84=null;
        Token otherlv_85=null;
        Token lv_depletionCapBc_86_0=null;
        Token otherlv_87=null;
        Token otherlv_88=null;
        Token lv_potentialBc_89_0=null;
        Token otherlv_90=null;
        Token otherlv_91=null;
        Token lv_junctionExpBc_92_0=null;
        Token otherlv_93=null;
        Token otherlv_94=null;
        Token lv_baseFractionBcCap_95_0=null;
        Token otherlv_96=null;
        Token otherlv_97=null;
        Token lv_transitTimeReverse_98_0=null;
        Token otherlv_99=null;
        Token otherlv_100=null;
        Token lv_capCs_101_0=null;
        Token otherlv_102=null;
        Token otherlv_103=null;
        Token lv_potentialSubstrate_104_0=null;
        Token otherlv_105=null;
        Token otherlv_106=null;
        Token lv_exponentialSubstrate_107_0=null;
        Token otherlv_108=null;
        Token otherlv_109=null;
        Token lv_betaExponent_110_0=null;
        Token otherlv_111=null;
        Token otherlv_112=null;
        Token lv_energyGap_113_0=null;
        Token otherlv_114=null;
        Token otherlv_115=null;
        Token lv_tempExpIs_116_0=null;
        Token otherlv_117=null;
        Token otherlv_118=null;
        Token lv_flickerNoiseCoefficient_119_0=null;
        Token otherlv_120=null;
        Token otherlv_121=null;
        Token lv_flickerNoiseExponent_122_0=null;
        Token otherlv_123=null;
        Token otherlv_124=null;
        Token lv_depletionCapCoefficient_125_0=null;
        Token otherlv_126=null;
        Token otherlv_127=null;
        Token lv_nominalTemperature_128_0=null;
        Token otherlv_129=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
            // InternalXSpice.g:5852:2: ( (otherlv_0= '.MODEL' ( (lv_name_1_0= ruleLabel ) ) (otherlv_2= 'NPN' | otherlv_3= 'PNP' ) otherlv_4= '(' ( ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'IS' otherlv_7= '=' ( (lv_saturationCurrent_8_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'BF' otherlv_10= '=' ( (lv_betaF_11_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'NF' otherlv_13= '=' ( (lv_emissionCoefficientForward_14_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'VAF' otherlv_16= '=' ( (lv_earlyVoltageForward_17_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'IKF' otherlv_19= '=' ( (lv_rollOffForward_20_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'ISE' otherlv_22= '=' ( (lv_leakBeCurrent_23_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= 'NE' otherlv_25= '=' ( (lv_leakBeEmissionCoefficient_26_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'BR' otherlv_28= '=' ( (lv_betaR_29_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_30= 'NR' otherlv_31= '=' ( (lv_emissionCoefficientReverse_32_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_33= 'VAR' otherlv_34= '=' ( (lv_earlyVoltageReverse_35_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'IKR' otherlv_37= '=' ( (lv_rollOffReverse_38_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'ISC' otherlv_40= '=' ( (lv_leakBcCurrent_41_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'NC' otherlv_43= '=' ( (lv_leakBcEmissionCoefficient_44_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'RB' otherlv_46= '=' ( (lv_baseResist_47_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= 'IRB' otherlv_49= '=' ( (lv_baseCurrentHalfResist_50_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_51= 'RBM' otherlv_52= '=' ( (lv_minimumBaseResistance_53_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_54= 'RE' otherlv_55= '=' ( (lv_emitterResistance_56_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_57= 'RC' otherlv_58= '=' ( (lv_collectorResistance_59_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_60= 'CJE' otherlv_61= '=' ( (lv_depletionCapBe_62_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_63= 'VJE' otherlv_64= '=' ( (lv_potentialBe_65_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'MJE' otherlv_67= '=' ( (lv_junctionExpBe_68_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_69= 'TF' otherlv_70= '=' ( (lv_transitTimeForward_71_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_72= 'XTF' otherlv_73= '=' ( (lv_transitTimeBiasCoefficientForward_74_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= 'VTF' otherlv_76= '=' ( (lv_transitTimeForwardVoltageBc_77_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_78= 'ITF' otherlv_79= '=' ( (lv_transitTimeHighCurrentForward_80_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_81= 'PTF' otherlv_82= '=' ( (lv_excessPhase_83_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_84= 'CJC' otherlv_85= '=' ( (lv_depletionCapBc_86_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_87= 'VJC' otherlv_88= '=' ( (lv_potentialBc_89_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_90= 'MJC' otherlv_91= '=' ( (lv_junctionExpBc_92_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_93= 'XCJC' otherlv_94= '=' ( (lv_baseFractionBcCap_95_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'TR' otherlv_97= '=' ( (lv_transitTimeReverse_98_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'CJS' otherlv_100= '=' ( (lv_capCs_101_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= 'VJS' otherlv_103= '=' ( (lv_potentialSubstrate_104_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_105= 'MJS' otherlv_106= '=' ( (lv_exponentialSubstrate_107_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_108= 'XTB' otherlv_109= '=' ( (lv_betaExponent_110_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_111= 'EG' otherlv_112= '=' ( (lv_energyGap_113_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_114= 'XTI' otherlv_115= '=' ( (lv_tempExpIs_116_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_117= 'KF' otherlv_118= '=' ( (lv_flickerNoiseCoefficient_119_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_120= 'AF' otherlv_121= '=' ( (lv_flickerNoiseExponent_122_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_123= 'FC' otherlv_124= '=' ( (lv_depletionCapCoefficient_125_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_126= 'TNOM' otherlv_127= '=' ( (lv_nominalTemperature_128_0= RULE_NUMBER ) ) ) ) ) ) )* ) ) ) otherlv_129= ')' ) )
            // InternalXSpice.g:5853:2: (otherlv_0= '.MODEL' ( (lv_name_1_0= ruleLabel ) ) (otherlv_2= 'NPN' | otherlv_3= 'PNP' ) otherlv_4= '(' ( ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'IS' otherlv_7= '=' ( (lv_saturationCurrent_8_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'BF' otherlv_10= '=' ( (lv_betaF_11_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'NF' otherlv_13= '=' ( (lv_emissionCoefficientForward_14_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'VAF' otherlv_16= '=' ( (lv_earlyVoltageForward_17_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'IKF' otherlv_19= '=' ( (lv_rollOffForward_20_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'ISE' otherlv_22= '=' ( (lv_leakBeCurrent_23_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= 'NE' otherlv_25= '=' ( (lv_leakBeEmissionCoefficient_26_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'BR' otherlv_28= '=' ( (lv_betaR_29_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_30= 'NR' otherlv_31= '=' ( (lv_emissionCoefficientReverse_32_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_33= 'VAR' otherlv_34= '=' ( (lv_earlyVoltageReverse_35_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'IKR' otherlv_37= '=' ( (lv_rollOffReverse_38_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'ISC' otherlv_40= '=' ( (lv_leakBcCurrent_41_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'NC' otherlv_43= '=' ( (lv_leakBcEmissionCoefficient_44_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'RB' otherlv_46= '=' ( (lv_baseResist_47_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= 'IRB' otherlv_49= '=' ( (lv_baseCurrentHalfResist_50_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_51= 'RBM' otherlv_52= '=' ( (lv_minimumBaseResistance_53_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_54= 'RE' otherlv_55= '=' ( (lv_emitterResistance_56_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_57= 'RC' otherlv_58= '=' ( (lv_collectorResistance_59_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_60= 'CJE' otherlv_61= '=' ( (lv_depletionCapBe_62_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_63= 'VJE' otherlv_64= '=' ( (lv_potentialBe_65_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'MJE' otherlv_67= '=' ( (lv_junctionExpBe_68_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_69= 'TF' otherlv_70= '=' ( (lv_transitTimeForward_71_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_72= 'XTF' otherlv_73= '=' ( (lv_transitTimeBiasCoefficientForward_74_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= 'VTF' otherlv_76= '=' ( (lv_transitTimeForwardVoltageBc_77_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_78= 'ITF' otherlv_79= '=' ( (lv_transitTimeHighCurrentForward_80_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_81= 'PTF' otherlv_82= '=' ( (lv_excessPhase_83_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_84= 'CJC' otherlv_85= '=' ( (lv_depletionCapBc_86_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_87= 'VJC' otherlv_88= '=' ( (lv_potentialBc_89_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_90= 'MJC' otherlv_91= '=' ( (lv_junctionExpBc_92_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_93= 'XCJC' otherlv_94= '=' ( (lv_baseFractionBcCap_95_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'TR' otherlv_97= '=' ( (lv_transitTimeReverse_98_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'CJS' otherlv_100= '=' ( (lv_capCs_101_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= 'VJS' otherlv_103= '=' ( (lv_potentialSubstrate_104_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_105= 'MJS' otherlv_106= '=' ( (lv_exponentialSubstrate_107_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_108= 'XTB' otherlv_109= '=' ( (lv_betaExponent_110_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_111= 'EG' otherlv_112= '=' ( (lv_energyGap_113_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_114= 'XTI' otherlv_115= '=' ( (lv_tempExpIs_116_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_117= 'KF' otherlv_118= '=' ( (lv_flickerNoiseCoefficient_119_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_120= 'AF' otherlv_121= '=' ( (lv_flickerNoiseExponent_122_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_123= 'FC' otherlv_124= '=' ( (lv_depletionCapCoefficient_125_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_126= 'TNOM' otherlv_127= '=' ( (lv_nominalTemperature_128_0= RULE_NUMBER ) ) ) ) ) ) )* ) ) ) otherlv_129= ')' )
            {
            // InternalXSpice.g:5853:2: (otherlv_0= '.MODEL' ( (lv_name_1_0= ruleLabel ) ) (otherlv_2= 'NPN' | otherlv_3= 'PNP' ) otherlv_4= '(' ( ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'IS' otherlv_7= '=' ( (lv_saturationCurrent_8_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'BF' otherlv_10= '=' ( (lv_betaF_11_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'NF' otherlv_13= '=' ( (lv_emissionCoefficientForward_14_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'VAF' otherlv_16= '=' ( (lv_earlyVoltageForward_17_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'IKF' otherlv_19= '=' ( (lv_rollOffForward_20_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'ISE' otherlv_22= '=' ( (lv_leakBeCurrent_23_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= 'NE' otherlv_25= '=' ( (lv_leakBeEmissionCoefficient_26_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'BR' otherlv_28= '=' ( (lv_betaR_29_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_30= 'NR' otherlv_31= '=' ( (lv_emissionCoefficientReverse_32_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_33= 'VAR' otherlv_34= '=' ( (lv_earlyVoltageReverse_35_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'IKR' otherlv_37= '=' ( (lv_rollOffReverse_38_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'ISC' otherlv_40= '=' ( (lv_leakBcCurrent_41_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'NC' otherlv_43= '=' ( (lv_leakBcEmissionCoefficient_44_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'RB' otherlv_46= '=' ( (lv_baseResist_47_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= 'IRB' otherlv_49= '=' ( (lv_baseCurrentHalfResist_50_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_51= 'RBM' otherlv_52= '=' ( (lv_minimumBaseResistance_53_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_54= 'RE' otherlv_55= '=' ( (lv_emitterResistance_56_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_57= 'RC' otherlv_58= '=' ( (lv_collectorResistance_59_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_60= 'CJE' otherlv_61= '=' ( (lv_depletionCapBe_62_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_63= 'VJE' otherlv_64= '=' ( (lv_potentialBe_65_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'MJE' otherlv_67= '=' ( (lv_junctionExpBe_68_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_69= 'TF' otherlv_70= '=' ( (lv_transitTimeForward_71_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_72= 'XTF' otherlv_73= '=' ( (lv_transitTimeBiasCoefficientForward_74_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= 'VTF' otherlv_76= '=' ( (lv_transitTimeForwardVoltageBc_77_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_78= 'ITF' otherlv_79= '=' ( (lv_transitTimeHighCurrentForward_80_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_81= 'PTF' otherlv_82= '=' ( (lv_excessPhase_83_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_84= 'CJC' otherlv_85= '=' ( (lv_depletionCapBc_86_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_87= 'VJC' otherlv_88= '=' ( (lv_potentialBc_89_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_90= 'MJC' otherlv_91= '=' ( (lv_junctionExpBc_92_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_93= 'XCJC' otherlv_94= '=' ( (lv_baseFractionBcCap_95_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'TR' otherlv_97= '=' ( (lv_transitTimeReverse_98_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'CJS' otherlv_100= '=' ( (lv_capCs_101_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= 'VJS' otherlv_103= '=' ( (lv_potentialSubstrate_104_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_105= 'MJS' otherlv_106= '=' ( (lv_exponentialSubstrate_107_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_108= 'XTB' otherlv_109= '=' ( (lv_betaExponent_110_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_111= 'EG' otherlv_112= '=' ( (lv_energyGap_113_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_114= 'XTI' otherlv_115= '=' ( (lv_tempExpIs_116_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_117= 'KF' otherlv_118= '=' ( (lv_flickerNoiseCoefficient_119_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_120= 'AF' otherlv_121= '=' ( (lv_flickerNoiseExponent_122_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_123= 'FC' otherlv_124= '=' ( (lv_depletionCapCoefficient_125_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_126= 'TNOM' otherlv_127= '=' ( (lv_nominalTemperature_128_0= RULE_NUMBER ) ) ) ) ) ) )* ) ) ) otherlv_129= ')' )
            // InternalXSpice.g:5854:3: otherlv_0= '.MODEL' ( (lv_name_1_0= ruleLabel ) ) (otherlv_2= 'NPN' | otherlv_3= 'PNP' ) otherlv_4= '(' ( ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'IS' otherlv_7= '=' ( (lv_saturationCurrent_8_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'BF' otherlv_10= '=' ( (lv_betaF_11_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'NF' otherlv_13= '=' ( (lv_emissionCoefficientForward_14_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'VAF' otherlv_16= '=' ( (lv_earlyVoltageForward_17_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'IKF' otherlv_19= '=' ( (lv_rollOffForward_20_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'ISE' otherlv_22= '=' ( (lv_leakBeCurrent_23_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= 'NE' otherlv_25= '=' ( (lv_leakBeEmissionCoefficient_26_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'BR' otherlv_28= '=' ( (lv_betaR_29_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_30= 'NR' otherlv_31= '=' ( (lv_emissionCoefficientReverse_32_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_33= 'VAR' otherlv_34= '=' ( (lv_earlyVoltageReverse_35_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'IKR' otherlv_37= '=' ( (lv_rollOffReverse_38_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'ISC' otherlv_40= '=' ( (lv_leakBcCurrent_41_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'NC' otherlv_43= '=' ( (lv_leakBcEmissionCoefficient_44_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'RB' otherlv_46= '=' ( (lv_baseResist_47_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= 'IRB' otherlv_49= '=' ( (lv_baseCurrentHalfResist_50_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_51= 'RBM' otherlv_52= '=' ( (lv_minimumBaseResistance_53_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_54= 'RE' otherlv_55= '=' ( (lv_emitterResistance_56_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_57= 'RC' otherlv_58= '=' ( (lv_collectorResistance_59_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_60= 'CJE' otherlv_61= '=' ( (lv_depletionCapBe_62_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_63= 'VJE' otherlv_64= '=' ( (lv_potentialBe_65_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'MJE' otherlv_67= '=' ( (lv_junctionExpBe_68_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_69= 'TF' otherlv_70= '=' ( (lv_transitTimeForward_71_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_72= 'XTF' otherlv_73= '=' ( (lv_transitTimeBiasCoefficientForward_74_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= 'VTF' otherlv_76= '=' ( (lv_transitTimeForwardVoltageBc_77_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_78= 'ITF' otherlv_79= '=' ( (lv_transitTimeHighCurrentForward_80_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_81= 'PTF' otherlv_82= '=' ( (lv_excessPhase_83_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_84= 'CJC' otherlv_85= '=' ( (lv_depletionCapBc_86_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_87= 'VJC' otherlv_88= '=' ( (lv_potentialBc_89_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_90= 'MJC' otherlv_91= '=' ( (lv_junctionExpBc_92_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_93= 'XCJC' otherlv_94= '=' ( (lv_baseFractionBcCap_95_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'TR' otherlv_97= '=' ( (lv_transitTimeReverse_98_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'CJS' otherlv_100= '=' ( (lv_capCs_101_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= 'VJS' otherlv_103= '=' ( (lv_potentialSubstrate_104_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_105= 'MJS' otherlv_106= '=' ( (lv_exponentialSubstrate_107_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_108= 'XTB' otherlv_109= '=' ( (lv_betaExponent_110_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_111= 'EG' otherlv_112= '=' ( (lv_energyGap_113_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_114= 'XTI' otherlv_115= '=' ( (lv_tempExpIs_116_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_117= 'KF' otherlv_118= '=' ( (lv_flickerNoiseCoefficient_119_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_120= 'AF' otherlv_121= '=' ( (lv_flickerNoiseExponent_122_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_123= 'FC' otherlv_124= '=' ( (lv_depletionCapCoefficient_125_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_126= 'TNOM' otherlv_127= '=' ( (lv_nominalTemperature_128_0= RULE_NUMBER ) ) ) ) ) ) )* ) ) ) otherlv_129= ')'
            {
            otherlv_0=(Token)match(input,43,FOLLOW_4); 

            			newLeafNode(otherlv_0, grammarAccess.getBJTModelAccess().getMODELKeyword_0());
            		
            // InternalXSpice.g:5858:3: ( (lv_name_1_0= ruleLabel ) )
            // InternalXSpice.g:5859:4: (lv_name_1_0= ruleLabel )
            {
            // InternalXSpice.g:5859:4: (lv_name_1_0= ruleLabel )
            // InternalXSpice.g:5860:5: lv_name_1_0= ruleLabel
            {

            					newCompositeNode(grammarAccess.getBJTModelAccess().getNameLabelParserRuleCall_1_0());
            				
            pushFollow(FOLLOW_42);
            lv_name_1_0=ruleLabel();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getBJTModelRule());
            					}
            					set(
            						current,
            						"name",
            						lv_name_1_0,
            						"com.xtext.ravornyo.xspice.XSpice.Label");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            // InternalXSpice.g:5877:3: (otherlv_2= 'NPN' | otherlv_3= 'PNP' )
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( (LA35_0==121) ) {
                alt35=1;
            }
            else if ( (LA35_0==122) ) {
                alt35=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 35, 0, input);

                throw nvae;
            }
            switch (alt35) {
                case 1 :
                    // InternalXSpice.g:5878:4: otherlv_2= 'NPN'
                    {
                    otherlv_2=(Token)match(input,121,FOLLOW_14); 

                    				newLeafNode(otherlv_2, grammarAccess.getBJTModelAccess().getNPNKeyword_2_0());
                    			

                    }
                    break;
                case 2 :
                    // InternalXSpice.g:5883:4: otherlv_3= 'PNP'
                    {
                    otherlv_3=(Token)match(input,122,FOLLOW_14); 

                    				newLeafNode(otherlv_3, grammarAccess.getBJTModelAccess().getPNPKeyword_2_1());
                    			

                    }
                    break;

            }

            otherlv_4=(Token)match(input,45,FOLLOW_43); 

            			newLeafNode(otherlv_4, grammarAccess.getBJTModelAccess().getLeftParenthesisKeyword_3());
            		
            // InternalXSpice.g:5892:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'IS' otherlv_7= '=' ( (lv_saturationCurrent_8_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'BF' otherlv_10= '=' ( (lv_betaF_11_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'NF' otherlv_13= '=' ( (lv_emissionCoefficientForward_14_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'VAF' otherlv_16= '=' ( (lv_earlyVoltageForward_17_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'IKF' otherlv_19= '=' ( (lv_rollOffForward_20_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'ISE' otherlv_22= '=' ( (lv_leakBeCurrent_23_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= 'NE' otherlv_25= '=' ( (lv_leakBeEmissionCoefficient_26_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'BR' otherlv_28= '=' ( (lv_betaR_29_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_30= 'NR' otherlv_31= '=' ( (lv_emissionCoefficientReverse_32_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_33= 'VAR' otherlv_34= '=' ( (lv_earlyVoltageReverse_35_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'IKR' otherlv_37= '=' ( (lv_rollOffReverse_38_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'ISC' otherlv_40= '=' ( (lv_leakBcCurrent_41_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'NC' otherlv_43= '=' ( (lv_leakBcEmissionCoefficient_44_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'RB' otherlv_46= '=' ( (lv_baseResist_47_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= 'IRB' otherlv_49= '=' ( (lv_baseCurrentHalfResist_50_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_51= 'RBM' otherlv_52= '=' ( (lv_minimumBaseResistance_53_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_54= 'RE' otherlv_55= '=' ( (lv_emitterResistance_56_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_57= 'RC' otherlv_58= '=' ( (lv_collectorResistance_59_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_60= 'CJE' otherlv_61= '=' ( (lv_depletionCapBe_62_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_63= 'VJE' otherlv_64= '=' ( (lv_potentialBe_65_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'MJE' otherlv_67= '=' ( (lv_junctionExpBe_68_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_69= 'TF' otherlv_70= '=' ( (lv_transitTimeForward_71_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_72= 'XTF' otherlv_73= '=' ( (lv_transitTimeBiasCoefficientForward_74_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= 'VTF' otherlv_76= '=' ( (lv_transitTimeForwardVoltageBc_77_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_78= 'ITF' otherlv_79= '=' ( (lv_transitTimeHighCurrentForward_80_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_81= 'PTF' otherlv_82= '=' ( (lv_excessPhase_83_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_84= 'CJC' otherlv_85= '=' ( (lv_depletionCapBc_86_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_87= 'VJC' otherlv_88= '=' ( (lv_potentialBc_89_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_90= 'MJC' otherlv_91= '=' ( (lv_junctionExpBc_92_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_93= 'XCJC' otherlv_94= '=' ( (lv_baseFractionBcCap_95_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'TR' otherlv_97= '=' ( (lv_transitTimeReverse_98_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'CJS' otherlv_100= '=' ( (lv_capCs_101_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= 'VJS' otherlv_103= '=' ( (lv_potentialSubstrate_104_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_105= 'MJS' otherlv_106= '=' ( (lv_exponentialSubstrate_107_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_108= 'XTB' otherlv_109= '=' ( (lv_betaExponent_110_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_111= 'EG' otherlv_112= '=' ( (lv_energyGap_113_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_114= 'XTI' otherlv_115= '=' ( (lv_tempExpIs_116_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_117= 'KF' otherlv_118= '=' ( (lv_flickerNoiseCoefficient_119_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_120= 'AF' otherlv_121= '=' ( (lv_flickerNoiseExponent_122_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_123= 'FC' otherlv_124= '=' ( (lv_depletionCapCoefficient_125_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_126= 'TNOM' otherlv_127= '=' ( (lv_nominalTemperature_128_0= RULE_NUMBER ) ) ) ) ) ) )* ) ) )
            // InternalXSpice.g:5893:4: ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'IS' otherlv_7= '=' ( (lv_saturationCurrent_8_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'BF' otherlv_10= '=' ( (lv_betaF_11_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'NF' otherlv_13= '=' ( (lv_emissionCoefficientForward_14_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'VAF' otherlv_16= '=' ( (lv_earlyVoltageForward_17_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'IKF' otherlv_19= '=' ( (lv_rollOffForward_20_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'ISE' otherlv_22= '=' ( (lv_leakBeCurrent_23_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= 'NE' otherlv_25= '=' ( (lv_leakBeEmissionCoefficient_26_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'BR' otherlv_28= '=' ( (lv_betaR_29_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_30= 'NR' otherlv_31= '=' ( (lv_emissionCoefficientReverse_32_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_33= 'VAR' otherlv_34= '=' ( (lv_earlyVoltageReverse_35_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'IKR' otherlv_37= '=' ( (lv_rollOffReverse_38_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'ISC' otherlv_40= '=' ( (lv_leakBcCurrent_41_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'NC' otherlv_43= '=' ( (lv_leakBcEmissionCoefficient_44_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'RB' otherlv_46= '=' ( (lv_baseResist_47_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= 'IRB' otherlv_49= '=' ( (lv_baseCurrentHalfResist_50_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_51= 'RBM' otherlv_52= '=' ( (lv_minimumBaseResistance_53_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_54= 'RE' otherlv_55= '=' ( (lv_emitterResistance_56_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_57= 'RC' otherlv_58= '=' ( (lv_collectorResistance_59_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_60= 'CJE' otherlv_61= '=' ( (lv_depletionCapBe_62_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_63= 'VJE' otherlv_64= '=' ( (lv_potentialBe_65_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'MJE' otherlv_67= '=' ( (lv_junctionExpBe_68_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_69= 'TF' otherlv_70= '=' ( (lv_transitTimeForward_71_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_72= 'XTF' otherlv_73= '=' ( (lv_transitTimeBiasCoefficientForward_74_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= 'VTF' otherlv_76= '=' ( (lv_transitTimeForwardVoltageBc_77_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_78= 'ITF' otherlv_79= '=' ( (lv_transitTimeHighCurrentForward_80_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_81= 'PTF' otherlv_82= '=' ( (lv_excessPhase_83_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_84= 'CJC' otherlv_85= '=' ( (lv_depletionCapBc_86_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_87= 'VJC' otherlv_88= '=' ( (lv_potentialBc_89_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_90= 'MJC' otherlv_91= '=' ( (lv_junctionExpBc_92_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_93= 'XCJC' otherlv_94= '=' ( (lv_baseFractionBcCap_95_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'TR' otherlv_97= '=' ( (lv_transitTimeReverse_98_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'CJS' otherlv_100= '=' ( (lv_capCs_101_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= 'VJS' otherlv_103= '=' ( (lv_potentialSubstrate_104_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_105= 'MJS' otherlv_106= '=' ( (lv_exponentialSubstrate_107_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_108= 'XTB' otherlv_109= '=' ( (lv_betaExponent_110_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_111= 'EG' otherlv_112= '=' ( (lv_energyGap_113_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_114= 'XTI' otherlv_115= '=' ( (lv_tempExpIs_116_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_117= 'KF' otherlv_118= '=' ( (lv_flickerNoiseCoefficient_119_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_120= 'AF' otherlv_121= '=' ( (lv_flickerNoiseExponent_122_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_123= 'FC' otherlv_124= '=' ( (lv_depletionCapCoefficient_125_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_126= 'TNOM' otherlv_127= '=' ( (lv_nominalTemperature_128_0= RULE_NUMBER ) ) ) ) ) ) )* ) )
            {
            // InternalXSpice.g:5893:4: ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'IS' otherlv_7= '=' ( (lv_saturationCurrent_8_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'BF' otherlv_10= '=' ( (lv_betaF_11_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'NF' otherlv_13= '=' ( (lv_emissionCoefficientForward_14_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'VAF' otherlv_16= '=' ( (lv_earlyVoltageForward_17_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'IKF' otherlv_19= '=' ( (lv_rollOffForward_20_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'ISE' otherlv_22= '=' ( (lv_leakBeCurrent_23_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= 'NE' otherlv_25= '=' ( (lv_leakBeEmissionCoefficient_26_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'BR' otherlv_28= '=' ( (lv_betaR_29_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_30= 'NR' otherlv_31= '=' ( (lv_emissionCoefficientReverse_32_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_33= 'VAR' otherlv_34= '=' ( (lv_earlyVoltageReverse_35_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'IKR' otherlv_37= '=' ( (lv_rollOffReverse_38_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'ISC' otherlv_40= '=' ( (lv_leakBcCurrent_41_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'NC' otherlv_43= '=' ( (lv_leakBcEmissionCoefficient_44_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'RB' otherlv_46= '=' ( (lv_baseResist_47_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= 'IRB' otherlv_49= '=' ( (lv_baseCurrentHalfResist_50_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_51= 'RBM' otherlv_52= '=' ( (lv_minimumBaseResistance_53_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_54= 'RE' otherlv_55= '=' ( (lv_emitterResistance_56_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_57= 'RC' otherlv_58= '=' ( (lv_collectorResistance_59_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_60= 'CJE' otherlv_61= '=' ( (lv_depletionCapBe_62_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_63= 'VJE' otherlv_64= '=' ( (lv_potentialBe_65_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'MJE' otherlv_67= '=' ( (lv_junctionExpBe_68_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_69= 'TF' otherlv_70= '=' ( (lv_transitTimeForward_71_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_72= 'XTF' otherlv_73= '=' ( (lv_transitTimeBiasCoefficientForward_74_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= 'VTF' otherlv_76= '=' ( (lv_transitTimeForwardVoltageBc_77_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_78= 'ITF' otherlv_79= '=' ( (lv_transitTimeHighCurrentForward_80_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_81= 'PTF' otherlv_82= '=' ( (lv_excessPhase_83_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_84= 'CJC' otherlv_85= '=' ( (lv_depletionCapBc_86_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_87= 'VJC' otherlv_88= '=' ( (lv_potentialBc_89_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_90= 'MJC' otherlv_91= '=' ( (lv_junctionExpBc_92_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_93= 'XCJC' otherlv_94= '=' ( (lv_baseFractionBcCap_95_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'TR' otherlv_97= '=' ( (lv_transitTimeReverse_98_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'CJS' otherlv_100= '=' ( (lv_capCs_101_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= 'VJS' otherlv_103= '=' ( (lv_potentialSubstrate_104_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_105= 'MJS' otherlv_106= '=' ( (lv_exponentialSubstrate_107_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_108= 'XTB' otherlv_109= '=' ( (lv_betaExponent_110_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_111= 'EG' otherlv_112= '=' ( (lv_energyGap_113_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_114= 'XTI' otherlv_115= '=' ( (lv_tempExpIs_116_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_117= 'KF' otherlv_118= '=' ( (lv_flickerNoiseCoefficient_119_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_120= 'AF' otherlv_121= '=' ( (lv_flickerNoiseExponent_122_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_123= 'FC' otherlv_124= '=' ( (lv_depletionCapCoefficient_125_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_126= 'TNOM' otherlv_127= '=' ( (lv_nominalTemperature_128_0= RULE_NUMBER ) ) ) ) ) ) )* ) )
            // InternalXSpice.g:5894:5: ( ( ({...}? => ( ({...}? => (otherlv_6= 'IS' otherlv_7= '=' ( (lv_saturationCurrent_8_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'BF' otherlv_10= '=' ( (lv_betaF_11_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'NF' otherlv_13= '=' ( (lv_emissionCoefficientForward_14_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'VAF' otherlv_16= '=' ( (lv_earlyVoltageForward_17_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'IKF' otherlv_19= '=' ( (lv_rollOffForward_20_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'ISE' otherlv_22= '=' ( (lv_leakBeCurrent_23_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= 'NE' otherlv_25= '=' ( (lv_leakBeEmissionCoefficient_26_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'BR' otherlv_28= '=' ( (lv_betaR_29_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_30= 'NR' otherlv_31= '=' ( (lv_emissionCoefficientReverse_32_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_33= 'VAR' otherlv_34= '=' ( (lv_earlyVoltageReverse_35_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'IKR' otherlv_37= '=' ( (lv_rollOffReverse_38_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'ISC' otherlv_40= '=' ( (lv_leakBcCurrent_41_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'NC' otherlv_43= '=' ( (lv_leakBcEmissionCoefficient_44_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'RB' otherlv_46= '=' ( (lv_baseResist_47_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= 'IRB' otherlv_49= '=' ( (lv_baseCurrentHalfResist_50_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_51= 'RBM' otherlv_52= '=' ( (lv_minimumBaseResistance_53_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_54= 'RE' otherlv_55= '=' ( (lv_emitterResistance_56_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_57= 'RC' otherlv_58= '=' ( (lv_collectorResistance_59_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_60= 'CJE' otherlv_61= '=' ( (lv_depletionCapBe_62_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_63= 'VJE' otherlv_64= '=' ( (lv_potentialBe_65_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'MJE' otherlv_67= '=' ( (lv_junctionExpBe_68_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_69= 'TF' otherlv_70= '=' ( (lv_transitTimeForward_71_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_72= 'XTF' otherlv_73= '=' ( (lv_transitTimeBiasCoefficientForward_74_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= 'VTF' otherlv_76= '=' ( (lv_transitTimeForwardVoltageBc_77_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_78= 'ITF' otherlv_79= '=' ( (lv_transitTimeHighCurrentForward_80_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_81= 'PTF' otherlv_82= '=' ( (lv_excessPhase_83_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_84= 'CJC' otherlv_85= '=' ( (lv_depletionCapBc_86_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_87= 'VJC' otherlv_88= '=' ( (lv_potentialBc_89_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_90= 'MJC' otherlv_91= '=' ( (lv_junctionExpBc_92_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_93= 'XCJC' otherlv_94= '=' ( (lv_baseFractionBcCap_95_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'TR' otherlv_97= '=' ( (lv_transitTimeReverse_98_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'CJS' otherlv_100= '=' ( (lv_capCs_101_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= 'VJS' otherlv_103= '=' ( (lv_potentialSubstrate_104_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_105= 'MJS' otherlv_106= '=' ( (lv_exponentialSubstrate_107_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_108= 'XTB' otherlv_109= '=' ( (lv_betaExponent_110_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_111= 'EG' otherlv_112= '=' ( (lv_energyGap_113_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_114= 'XTI' otherlv_115= '=' ( (lv_tempExpIs_116_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_117= 'KF' otherlv_118= '=' ( (lv_flickerNoiseCoefficient_119_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_120= 'AF' otherlv_121= '=' ( (lv_flickerNoiseExponent_122_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_123= 'FC' otherlv_124= '=' ( (lv_depletionCapCoefficient_125_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_126= 'TNOM' otherlv_127= '=' ( (lv_nominalTemperature_128_0= RULE_NUMBER ) ) ) ) ) ) )* )
            {
             
            				  getUnorderedGroupHelper().enter(grammarAccess.getBJTModelAccess().getUnorderedGroup_4());
            				
            // InternalXSpice.g:5897:5: ( ( ({...}? => ( ({...}? => (otherlv_6= 'IS' otherlv_7= '=' ( (lv_saturationCurrent_8_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'BF' otherlv_10= '=' ( (lv_betaF_11_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'NF' otherlv_13= '=' ( (lv_emissionCoefficientForward_14_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'VAF' otherlv_16= '=' ( (lv_earlyVoltageForward_17_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'IKF' otherlv_19= '=' ( (lv_rollOffForward_20_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'ISE' otherlv_22= '=' ( (lv_leakBeCurrent_23_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= 'NE' otherlv_25= '=' ( (lv_leakBeEmissionCoefficient_26_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'BR' otherlv_28= '=' ( (lv_betaR_29_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_30= 'NR' otherlv_31= '=' ( (lv_emissionCoefficientReverse_32_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_33= 'VAR' otherlv_34= '=' ( (lv_earlyVoltageReverse_35_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'IKR' otherlv_37= '=' ( (lv_rollOffReverse_38_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'ISC' otherlv_40= '=' ( (lv_leakBcCurrent_41_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'NC' otherlv_43= '=' ( (lv_leakBcEmissionCoefficient_44_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'RB' otherlv_46= '=' ( (lv_baseResist_47_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= 'IRB' otherlv_49= '=' ( (lv_baseCurrentHalfResist_50_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_51= 'RBM' otherlv_52= '=' ( (lv_minimumBaseResistance_53_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_54= 'RE' otherlv_55= '=' ( (lv_emitterResistance_56_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_57= 'RC' otherlv_58= '=' ( (lv_collectorResistance_59_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_60= 'CJE' otherlv_61= '=' ( (lv_depletionCapBe_62_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_63= 'VJE' otherlv_64= '=' ( (lv_potentialBe_65_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'MJE' otherlv_67= '=' ( (lv_junctionExpBe_68_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_69= 'TF' otherlv_70= '=' ( (lv_transitTimeForward_71_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_72= 'XTF' otherlv_73= '=' ( (lv_transitTimeBiasCoefficientForward_74_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= 'VTF' otherlv_76= '=' ( (lv_transitTimeForwardVoltageBc_77_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_78= 'ITF' otherlv_79= '=' ( (lv_transitTimeHighCurrentForward_80_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_81= 'PTF' otherlv_82= '=' ( (lv_excessPhase_83_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_84= 'CJC' otherlv_85= '=' ( (lv_depletionCapBc_86_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_87= 'VJC' otherlv_88= '=' ( (lv_potentialBc_89_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_90= 'MJC' otherlv_91= '=' ( (lv_junctionExpBc_92_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_93= 'XCJC' otherlv_94= '=' ( (lv_baseFractionBcCap_95_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'TR' otherlv_97= '=' ( (lv_transitTimeReverse_98_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'CJS' otherlv_100= '=' ( (lv_capCs_101_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= 'VJS' otherlv_103= '=' ( (lv_potentialSubstrate_104_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_105= 'MJS' otherlv_106= '=' ( (lv_exponentialSubstrate_107_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_108= 'XTB' otherlv_109= '=' ( (lv_betaExponent_110_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_111= 'EG' otherlv_112= '=' ( (lv_energyGap_113_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_114= 'XTI' otherlv_115= '=' ( (lv_tempExpIs_116_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_117= 'KF' otherlv_118= '=' ( (lv_flickerNoiseCoefficient_119_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_120= 'AF' otherlv_121= '=' ( (lv_flickerNoiseExponent_122_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_123= 'FC' otherlv_124= '=' ( (lv_depletionCapCoefficient_125_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_126= 'TNOM' otherlv_127= '=' ( (lv_nominalTemperature_128_0= RULE_NUMBER ) ) ) ) ) ) )* )
            // InternalXSpice.g:5898:6: ( ({...}? => ( ({...}? => (otherlv_6= 'IS' otherlv_7= '=' ( (lv_saturationCurrent_8_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'BF' otherlv_10= '=' ( (lv_betaF_11_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'NF' otherlv_13= '=' ( (lv_emissionCoefficientForward_14_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'VAF' otherlv_16= '=' ( (lv_earlyVoltageForward_17_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'IKF' otherlv_19= '=' ( (lv_rollOffForward_20_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'ISE' otherlv_22= '=' ( (lv_leakBeCurrent_23_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= 'NE' otherlv_25= '=' ( (lv_leakBeEmissionCoefficient_26_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'BR' otherlv_28= '=' ( (lv_betaR_29_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_30= 'NR' otherlv_31= '=' ( (lv_emissionCoefficientReverse_32_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_33= 'VAR' otherlv_34= '=' ( (lv_earlyVoltageReverse_35_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'IKR' otherlv_37= '=' ( (lv_rollOffReverse_38_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'ISC' otherlv_40= '=' ( (lv_leakBcCurrent_41_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'NC' otherlv_43= '=' ( (lv_leakBcEmissionCoefficient_44_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'RB' otherlv_46= '=' ( (lv_baseResist_47_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= 'IRB' otherlv_49= '=' ( (lv_baseCurrentHalfResist_50_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_51= 'RBM' otherlv_52= '=' ( (lv_minimumBaseResistance_53_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_54= 'RE' otherlv_55= '=' ( (lv_emitterResistance_56_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_57= 'RC' otherlv_58= '=' ( (lv_collectorResistance_59_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_60= 'CJE' otherlv_61= '=' ( (lv_depletionCapBe_62_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_63= 'VJE' otherlv_64= '=' ( (lv_potentialBe_65_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'MJE' otherlv_67= '=' ( (lv_junctionExpBe_68_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_69= 'TF' otherlv_70= '=' ( (lv_transitTimeForward_71_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_72= 'XTF' otherlv_73= '=' ( (lv_transitTimeBiasCoefficientForward_74_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= 'VTF' otherlv_76= '=' ( (lv_transitTimeForwardVoltageBc_77_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_78= 'ITF' otherlv_79= '=' ( (lv_transitTimeHighCurrentForward_80_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_81= 'PTF' otherlv_82= '=' ( (lv_excessPhase_83_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_84= 'CJC' otherlv_85= '=' ( (lv_depletionCapBc_86_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_87= 'VJC' otherlv_88= '=' ( (lv_potentialBc_89_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_90= 'MJC' otherlv_91= '=' ( (lv_junctionExpBc_92_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_93= 'XCJC' otherlv_94= '=' ( (lv_baseFractionBcCap_95_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'TR' otherlv_97= '=' ( (lv_transitTimeReverse_98_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'CJS' otherlv_100= '=' ( (lv_capCs_101_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= 'VJS' otherlv_103= '=' ( (lv_potentialSubstrate_104_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_105= 'MJS' otherlv_106= '=' ( (lv_exponentialSubstrate_107_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_108= 'XTB' otherlv_109= '=' ( (lv_betaExponent_110_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_111= 'EG' otherlv_112= '=' ( (lv_energyGap_113_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_114= 'XTI' otherlv_115= '=' ( (lv_tempExpIs_116_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_117= 'KF' otherlv_118= '=' ( (lv_flickerNoiseCoefficient_119_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_120= 'AF' otherlv_121= '=' ( (lv_flickerNoiseExponent_122_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_123= 'FC' otherlv_124= '=' ( (lv_depletionCapCoefficient_125_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_126= 'TNOM' otherlv_127= '=' ( (lv_nominalTemperature_128_0= RULE_NUMBER ) ) ) ) ) ) )*
            {
            // InternalXSpice.g:5898:6: ( ({...}? => ( ({...}? => (otherlv_6= 'IS' otherlv_7= '=' ( (lv_saturationCurrent_8_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'BF' otherlv_10= '=' ( (lv_betaF_11_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'NF' otherlv_13= '=' ( (lv_emissionCoefficientForward_14_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'VAF' otherlv_16= '=' ( (lv_earlyVoltageForward_17_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'IKF' otherlv_19= '=' ( (lv_rollOffForward_20_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'ISE' otherlv_22= '=' ( (lv_leakBeCurrent_23_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= 'NE' otherlv_25= '=' ( (lv_leakBeEmissionCoefficient_26_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'BR' otherlv_28= '=' ( (lv_betaR_29_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_30= 'NR' otherlv_31= '=' ( (lv_emissionCoefficientReverse_32_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_33= 'VAR' otherlv_34= '=' ( (lv_earlyVoltageReverse_35_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'IKR' otherlv_37= '=' ( (lv_rollOffReverse_38_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'ISC' otherlv_40= '=' ( (lv_leakBcCurrent_41_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'NC' otherlv_43= '=' ( (lv_leakBcEmissionCoefficient_44_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'RB' otherlv_46= '=' ( (lv_baseResist_47_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= 'IRB' otherlv_49= '=' ( (lv_baseCurrentHalfResist_50_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_51= 'RBM' otherlv_52= '=' ( (lv_minimumBaseResistance_53_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_54= 'RE' otherlv_55= '=' ( (lv_emitterResistance_56_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_57= 'RC' otherlv_58= '=' ( (lv_collectorResistance_59_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_60= 'CJE' otherlv_61= '=' ( (lv_depletionCapBe_62_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_63= 'VJE' otherlv_64= '=' ( (lv_potentialBe_65_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'MJE' otherlv_67= '=' ( (lv_junctionExpBe_68_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_69= 'TF' otherlv_70= '=' ( (lv_transitTimeForward_71_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_72= 'XTF' otherlv_73= '=' ( (lv_transitTimeBiasCoefficientForward_74_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= 'VTF' otherlv_76= '=' ( (lv_transitTimeForwardVoltageBc_77_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_78= 'ITF' otherlv_79= '=' ( (lv_transitTimeHighCurrentForward_80_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_81= 'PTF' otherlv_82= '=' ( (lv_excessPhase_83_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_84= 'CJC' otherlv_85= '=' ( (lv_depletionCapBc_86_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_87= 'VJC' otherlv_88= '=' ( (lv_potentialBc_89_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_90= 'MJC' otherlv_91= '=' ( (lv_junctionExpBc_92_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_93= 'XCJC' otherlv_94= '=' ( (lv_baseFractionBcCap_95_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'TR' otherlv_97= '=' ( (lv_transitTimeReverse_98_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'CJS' otherlv_100= '=' ( (lv_capCs_101_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= 'VJS' otherlv_103= '=' ( (lv_potentialSubstrate_104_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_105= 'MJS' otherlv_106= '=' ( (lv_exponentialSubstrate_107_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_108= 'XTB' otherlv_109= '=' ( (lv_betaExponent_110_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_111= 'EG' otherlv_112= '=' ( (lv_energyGap_113_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_114= 'XTI' otherlv_115= '=' ( (lv_tempExpIs_116_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_117= 'KF' otherlv_118= '=' ( (lv_flickerNoiseCoefficient_119_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_120= 'AF' otherlv_121= '=' ( (lv_flickerNoiseExponent_122_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_123= 'FC' otherlv_124= '=' ( (lv_depletionCapCoefficient_125_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_126= 'TNOM' otherlv_127= '=' ( (lv_nominalTemperature_128_0= RULE_NUMBER ) ) ) ) ) ) )*
            loop36:
            do {
                int alt36=42;
                alt36 = dfa36.predict(input);
                switch (alt36) {
            	case 1 :
            	    // InternalXSpice.g:5899:4: ({...}? => ( ({...}? => (otherlv_6= 'IS' otherlv_7= '=' ( (lv_saturationCurrent_8_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:5899:4: ({...}? => ( ({...}? => (otherlv_6= 'IS' otherlv_7= '=' ( (lv_saturationCurrent_8_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:5900:5: {...}? => ( ({...}? => (otherlv_6= 'IS' otherlv_7= '=' ( (lv_saturationCurrent_8_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 0) ) {
            	        throw new FailedPredicateException(input, "ruleBJTModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 0)");
            	    }
            	    // InternalXSpice.g:5900:105: ( ({...}? => (otherlv_6= 'IS' otherlv_7= '=' ( (lv_saturationCurrent_8_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:5901:6: ({...}? => (otherlv_6= 'IS' otherlv_7= '=' ( (lv_saturationCurrent_8_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 0);
            	    					
            	    // InternalXSpice.g:5904:9: ({...}? => (otherlv_6= 'IS' otherlv_7= '=' ( (lv_saturationCurrent_8_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:5904:10: {...}? => (otherlv_6= 'IS' otherlv_7= '=' ( (lv_saturationCurrent_8_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleBJTModel", "true");
            	    }
            	    // InternalXSpice.g:5904:19: (otherlv_6= 'IS' otherlv_7= '=' ( (lv_saturationCurrent_8_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:5904:20: otherlv_6= 'IS' otherlv_7= '=' ( (lv_saturationCurrent_8_0= RULE_NUMBER ) )
            	    {
            	    otherlv_6=(Token)match(input,69,FOLLOW_11); 

            	    									newLeafNode(otherlv_6, grammarAccess.getBJTModelAccess().getISKeyword_4_0_0());
            	    								
            	    otherlv_7=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_7, grammarAccess.getBJTModelAccess().getEqualsSignKeyword_4_0_1());
            	    								
            	    // InternalXSpice.g:5912:9: ( (lv_saturationCurrent_8_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:5913:10: (lv_saturationCurrent_8_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:5913:10: (lv_saturationCurrent_8_0= RULE_NUMBER )
            	    // InternalXSpice.g:5914:11: lv_saturationCurrent_8_0= RULE_NUMBER
            	    {
            	    lv_saturationCurrent_8_0=(Token)match(input,RULE_NUMBER,FOLLOW_43); 

            	    											newLeafNode(lv_saturationCurrent_8_0, grammarAccess.getBJTModelAccess().getSaturationCurrentNUMBERTerminalRuleCall_4_0_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getBJTModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"saturationCurrent",
            	    												lv_saturationCurrent_8_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBJTModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalXSpice.g:5936:4: ({...}? => ( ({...}? => (otherlv_9= 'BF' otherlv_10= '=' ( (lv_betaF_11_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:5936:4: ({...}? => ( ({...}? => (otherlv_9= 'BF' otherlv_10= '=' ( (lv_betaF_11_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:5937:5: {...}? => ( ({...}? => (otherlv_9= 'BF' otherlv_10= '=' ( (lv_betaF_11_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 1) ) {
            	        throw new FailedPredicateException(input, "ruleBJTModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 1)");
            	    }
            	    // InternalXSpice.g:5937:105: ( ({...}? => (otherlv_9= 'BF' otherlv_10= '=' ( (lv_betaF_11_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:5938:6: ({...}? => (otherlv_9= 'BF' otherlv_10= '=' ( (lv_betaF_11_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 1);
            	    					
            	    // InternalXSpice.g:5941:9: ({...}? => (otherlv_9= 'BF' otherlv_10= '=' ( (lv_betaF_11_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:5941:10: {...}? => (otherlv_9= 'BF' otherlv_10= '=' ( (lv_betaF_11_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleBJTModel", "true");
            	    }
            	    // InternalXSpice.g:5941:19: (otherlv_9= 'BF' otherlv_10= '=' ( (lv_betaF_11_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:5941:20: otherlv_9= 'BF' otherlv_10= '=' ( (lv_betaF_11_0= RULE_NUMBER ) )
            	    {
            	    otherlv_9=(Token)match(input,123,FOLLOW_11); 

            	    									newLeafNode(otherlv_9, grammarAccess.getBJTModelAccess().getBFKeyword_4_1_0());
            	    								
            	    otherlv_10=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_10, grammarAccess.getBJTModelAccess().getEqualsSignKeyword_4_1_1());
            	    								
            	    // InternalXSpice.g:5949:9: ( (lv_betaF_11_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:5950:10: (lv_betaF_11_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:5950:10: (lv_betaF_11_0= RULE_NUMBER )
            	    // InternalXSpice.g:5951:11: lv_betaF_11_0= RULE_NUMBER
            	    {
            	    lv_betaF_11_0=(Token)match(input,RULE_NUMBER,FOLLOW_43); 

            	    											newLeafNode(lv_betaF_11_0, grammarAccess.getBJTModelAccess().getBetaFNUMBERTerminalRuleCall_4_1_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getBJTModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"betaF",
            	    												lv_betaF_11_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBJTModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalXSpice.g:5973:4: ({...}? => ( ({...}? => (otherlv_12= 'NF' otherlv_13= '=' ( (lv_emissionCoefficientForward_14_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:5973:4: ({...}? => ( ({...}? => (otherlv_12= 'NF' otherlv_13= '=' ( (lv_emissionCoefficientForward_14_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:5974:5: {...}? => ( ({...}? => (otherlv_12= 'NF' otherlv_13= '=' ( (lv_emissionCoefficientForward_14_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 2) ) {
            	        throw new FailedPredicateException(input, "ruleBJTModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 2)");
            	    }
            	    // InternalXSpice.g:5974:105: ( ({...}? => (otherlv_12= 'NF' otherlv_13= '=' ( (lv_emissionCoefficientForward_14_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:5975:6: ({...}? => (otherlv_12= 'NF' otherlv_13= '=' ( (lv_emissionCoefficientForward_14_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 2);
            	    					
            	    // InternalXSpice.g:5978:9: ({...}? => (otherlv_12= 'NF' otherlv_13= '=' ( (lv_emissionCoefficientForward_14_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:5978:10: {...}? => (otherlv_12= 'NF' otherlv_13= '=' ( (lv_emissionCoefficientForward_14_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleBJTModel", "true");
            	    }
            	    // InternalXSpice.g:5978:19: (otherlv_12= 'NF' otherlv_13= '=' ( (lv_emissionCoefficientForward_14_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:5978:20: otherlv_12= 'NF' otherlv_13= '=' ( (lv_emissionCoefficientForward_14_0= RULE_NUMBER ) )
            	    {
            	    otherlv_12=(Token)match(input,124,FOLLOW_11); 

            	    									newLeafNode(otherlv_12, grammarAccess.getBJTModelAccess().getNFKeyword_4_2_0());
            	    								
            	    otherlv_13=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_13, grammarAccess.getBJTModelAccess().getEqualsSignKeyword_4_2_1());
            	    								
            	    // InternalXSpice.g:5986:9: ( (lv_emissionCoefficientForward_14_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:5987:10: (lv_emissionCoefficientForward_14_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:5987:10: (lv_emissionCoefficientForward_14_0= RULE_NUMBER )
            	    // InternalXSpice.g:5988:11: lv_emissionCoefficientForward_14_0= RULE_NUMBER
            	    {
            	    lv_emissionCoefficientForward_14_0=(Token)match(input,RULE_NUMBER,FOLLOW_43); 

            	    											newLeafNode(lv_emissionCoefficientForward_14_0, grammarAccess.getBJTModelAccess().getEmissionCoefficientForwardNUMBERTerminalRuleCall_4_2_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getBJTModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"emissionCoefficientForward",
            	    												lv_emissionCoefficientForward_14_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBJTModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalXSpice.g:6010:4: ({...}? => ( ({...}? => (otherlv_15= 'VAF' otherlv_16= '=' ( (lv_earlyVoltageForward_17_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:6010:4: ({...}? => ( ({...}? => (otherlv_15= 'VAF' otherlv_16= '=' ( (lv_earlyVoltageForward_17_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:6011:5: {...}? => ( ({...}? => (otherlv_15= 'VAF' otherlv_16= '=' ( (lv_earlyVoltageForward_17_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 3) ) {
            	        throw new FailedPredicateException(input, "ruleBJTModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 3)");
            	    }
            	    // InternalXSpice.g:6011:105: ( ({...}? => (otherlv_15= 'VAF' otherlv_16= '=' ( (lv_earlyVoltageForward_17_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:6012:6: ({...}? => (otherlv_15= 'VAF' otherlv_16= '=' ( (lv_earlyVoltageForward_17_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 3);
            	    					
            	    // InternalXSpice.g:6015:9: ({...}? => (otherlv_15= 'VAF' otherlv_16= '=' ( (lv_earlyVoltageForward_17_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:6015:10: {...}? => (otherlv_15= 'VAF' otherlv_16= '=' ( (lv_earlyVoltageForward_17_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleBJTModel", "true");
            	    }
            	    // InternalXSpice.g:6015:19: (otherlv_15= 'VAF' otherlv_16= '=' ( (lv_earlyVoltageForward_17_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:6015:20: otherlv_15= 'VAF' otherlv_16= '=' ( (lv_earlyVoltageForward_17_0= RULE_NUMBER ) )
            	    {
            	    otherlv_15=(Token)match(input,125,FOLLOW_11); 

            	    									newLeafNode(otherlv_15, grammarAccess.getBJTModelAccess().getVAFKeyword_4_3_0());
            	    								
            	    otherlv_16=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_16, grammarAccess.getBJTModelAccess().getEqualsSignKeyword_4_3_1());
            	    								
            	    // InternalXSpice.g:6023:9: ( (lv_earlyVoltageForward_17_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:6024:10: (lv_earlyVoltageForward_17_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:6024:10: (lv_earlyVoltageForward_17_0= RULE_NUMBER )
            	    // InternalXSpice.g:6025:11: lv_earlyVoltageForward_17_0= RULE_NUMBER
            	    {
            	    lv_earlyVoltageForward_17_0=(Token)match(input,RULE_NUMBER,FOLLOW_43); 

            	    											newLeafNode(lv_earlyVoltageForward_17_0, grammarAccess.getBJTModelAccess().getEarlyVoltageForwardNUMBERTerminalRuleCall_4_3_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getBJTModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"earlyVoltageForward",
            	    												lv_earlyVoltageForward_17_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBJTModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalXSpice.g:6047:4: ({...}? => ( ({...}? => (otherlv_18= 'IKF' otherlv_19= '=' ( (lv_rollOffForward_20_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:6047:4: ({...}? => ( ({...}? => (otherlv_18= 'IKF' otherlv_19= '=' ( (lv_rollOffForward_20_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:6048:5: {...}? => ( ({...}? => (otherlv_18= 'IKF' otherlv_19= '=' ( (lv_rollOffForward_20_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 4) ) {
            	        throw new FailedPredicateException(input, "ruleBJTModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 4)");
            	    }
            	    // InternalXSpice.g:6048:105: ( ({...}? => (otherlv_18= 'IKF' otherlv_19= '=' ( (lv_rollOffForward_20_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:6049:6: ({...}? => (otherlv_18= 'IKF' otherlv_19= '=' ( (lv_rollOffForward_20_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 4);
            	    					
            	    // InternalXSpice.g:6052:9: ({...}? => (otherlv_18= 'IKF' otherlv_19= '=' ( (lv_rollOffForward_20_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:6052:10: {...}? => (otherlv_18= 'IKF' otherlv_19= '=' ( (lv_rollOffForward_20_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleBJTModel", "true");
            	    }
            	    // InternalXSpice.g:6052:19: (otherlv_18= 'IKF' otherlv_19= '=' ( (lv_rollOffForward_20_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:6052:20: otherlv_18= 'IKF' otherlv_19= '=' ( (lv_rollOffForward_20_0= RULE_NUMBER ) )
            	    {
            	    otherlv_18=(Token)match(input,126,FOLLOW_11); 

            	    									newLeafNode(otherlv_18, grammarAccess.getBJTModelAccess().getIKFKeyword_4_4_0());
            	    								
            	    otherlv_19=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_19, grammarAccess.getBJTModelAccess().getEqualsSignKeyword_4_4_1());
            	    								
            	    // InternalXSpice.g:6060:9: ( (lv_rollOffForward_20_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:6061:10: (lv_rollOffForward_20_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:6061:10: (lv_rollOffForward_20_0= RULE_NUMBER )
            	    // InternalXSpice.g:6062:11: lv_rollOffForward_20_0= RULE_NUMBER
            	    {
            	    lv_rollOffForward_20_0=(Token)match(input,RULE_NUMBER,FOLLOW_43); 

            	    											newLeafNode(lv_rollOffForward_20_0, grammarAccess.getBJTModelAccess().getRollOffForwardNUMBERTerminalRuleCall_4_4_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getBJTModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"rollOffForward",
            	    												lv_rollOffForward_20_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBJTModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalXSpice.g:6084:4: ({...}? => ( ({...}? => (otherlv_21= 'ISE' otherlv_22= '=' ( (lv_leakBeCurrent_23_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:6084:4: ({...}? => ( ({...}? => (otherlv_21= 'ISE' otherlv_22= '=' ( (lv_leakBeCurrent_23_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:6085:5: {...}? => ( ({...}? => (otherlv_21= 'ISE' otherlv_22= '=' ( (lv_leakBeCurrent_23_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 5) ) {
            	        throw new FailedPredicateException(input, "ruleBJTModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 5)");
            	    }
            	    // InternalXSpice.g:6085:105: ( ({...}? => (otherlv_21= 'ISE' otherlv_22= '=' ( (lv_leakBeCurrent_23_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:6086:6: ({...}? => (otherlv_21= 'ISE' otherlv_22= '=' ( (lv_leakBeCurrent_23_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 5);
            	    					
            	    // InternalXSpice.g:6089:9: ({...}? => (otherlv_21= 'ISE' otherlv_22= '=' ( (lv_leakBeCurrent_23_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:6089:10: {...}? => (otherlv_21= 'ISE' otherlv_22= '=' ( (lv_leakBeCurrent_23_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleBJTModel", "true");
            	    }
            	    // InternalXSpice.g:6089:19: (otherlv_21= 'ISE' otherlv_22= '=' ( (lv_leakBeCurrent_23_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:6089:20: otherlv_21= 'ISE' otherlv_22= '=' ( (lv_leakBeCurrent_23_0= RULE_NUMBER ) )
            	    {
            	    otherlv_21=(Token)match(input,127,FOLLOW_11); 

            	    									newLeafNode(otherlv_21, grammarAccess.getBJTModelAccess().getISEKeyword_4_5_0());
            	    								
            	    otherlv_22=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_22, grammarAccess.getBJTModelAccess().getEqualsSignKeyword_4_5_1());
            	    								
            	    // InternalXSpice.g:6097:9: ( (lv_leakBeCurrent_23_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:6098:10: (lv_leakBeCurrent_23_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:6098:10: (lv_leakBeCurrent_23_0= RULE_NUMBER )
            	    // InternalXSpice.g:6099:11: lv_leakBeCurrent_23_0= RULE_NUMBER
            	    {
            	    lv_leakBeCurrent_23_0=(Token)match(input,RULE_NUMBER,FOLLOW_43); 

            	    											newLeafNode(lv_leakBeCurrent_23_0, grammarAccess.getBJTModelAccess().getLeakBeCurrentNUMBERTerminalRuleCall_4_5_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getBJTModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"leakBeCurrent",
            	    												lv_leakBeCurrent_23_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBJTModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // InternalXSpice.g:6121:4: ({...}? => ( ({...}? => (otherlv_24= 'NE' otherlv_25= '=' ( (lv_leakBeEmissionCoefficient_26_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:6121:4: ({...}? => ( ({...}? => (otherlv_24= 'NE' otherlv_25= '=' ( (lv_leakBeEmissionCoefficient_26_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:6122:5: {...}? => ( ({...}? => (otherlv_24= 'NE' otherlv_25= '=' ( (lv_leakBeEmissionCoefficient_26_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 6) ) {
            	        throw new FailedPredicateException(input, "ruleBJTModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 6)");
            	    }
            	    // InternalXSpice.g:6122:105: ( ({...}? => (otherlv_24= 'NE' otherlv_25= '=' ( (lv_leakBeEmissionCoefficient_26_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:6123:6: ({...}? => (otherlv_24= 'NE' otherlv_25= '=' ( (lv_leakBeEmissionCoefficient_26_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 6);
            	    					
            	    // InternalXSpice.g:6126:9: ({...}? => (otherlv_24= 'NE' otherlv_25= '=' ( (lv_leakBeEmissionCoefficient_26_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:6126:10: {...}? => (otherlv_24= 'NE' otherlv_25= '=' ( (lv_leakBeEmissionCoefficient_26_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleBJTModel", "true");
            	    }
            	    // InternalXSpice.g:6126:19: (otherlv_24= 'NE' otherlv_25= '=' ( (lv_leakBeEmissionCoefficient_26_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:6126:20: otherlv_24= 'NE' otherlv_25= '=' ( (lv_leakBeEmissionCoefficient_26_0= RULE_NUMBER ) )
            	    {
            	    otherlv_24=(Token)match(input,128,FOLLOW_11); 

            	    									newLeafNode(otherlv_24, grammarAccess.getBJTModelAccess().getNEKeyword_4_6_0());
            	    								
            	    otherlv_25=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_25, grammarAccess.getBJTModelAccess().getEqualsSignKeyword_4_6_1());
            	    								
            	    // InternalXSpice.g:6134:9: ( (lv_leakBeEmissionCoefficient_26_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:6135:10: (lv_leakBeEmissionCoefficient_26_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:6135:10: (lv_leakBeEmissionCoefficient_26_0= RULE_NUMBER )
            	    // InternalXSpice.g:6136:11: lv_leakBeEmissionCoefficient_26_0= RULE_NUMBER
            	    {
            	    lv_leakBeEmissionCoefficient_26_0=(Token)match(input,RULE_NUMBER,FOLLOW_43); 

            	    											newLeafNode(lv_leakBeEmissionCoefficient_26_0, grammarAccess.getBJTModelAccess().getLeakBeEmissionCoefficientNUMBERTerminalRuleCall_4_6_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getBJTModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"leakBeEmissionCoefficient",
            	    												lv_leakBeEmissionCoefficient_26_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBJTModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 8 :
            	    // InternalXSpice.g:6158:4: ({...}? => ( ({...}? => (otherlv_27= 'BR' otherlv_28= '=' ( (lv_betaR_29_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:6158:4: ({...}? => ( ({...}? => (otherlv_27= 'BR' otherlv_28= '=' ( (lv_betaR_29_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:6159:5: {...}? => ( ({...}? => (otherlv_27= 'BR' otherlv_28= '=' ( (lv_betaR_29_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 7) ) {
            	        throw new FailedPredicateException(input, "ruleBJTModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 7)");
            	    }
            	    // InternalXSpice.g:6159:105: ( ({...}? => (otherlv_27= 'BR' otherlv_28= '=' ( (lv_betaR_29_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:6160:6: ({...}? => (otherlv_27= 'BR' otherlv_28= '=' ( (lv_betaR_29_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 7);
            	    					
            	    // InternalXSpice.g:6163:9: ({...}? => (otherlv_27= 'BR' otherlv_28= '=' ( (lv_betaR_29_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:6163:10: {...}? => (otherlv_27= 'BR' otherlv_28= '=' ( (lv_betaR_29_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleBJTModel", "true");
            	    }
            	    // InternalXSpice.g:6163:19: (otherlv_27= 'BR' otherlv_28= '=' ( (lv_betaR_29_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:6163:20: otherlv_27= 'BR' otherlv_28= '=' ( (lv_betaR_29_0= RULE_NUMBER ) )
            	    {
            	    otherlv_27=(Token)match(input,129,FOLLOW_11); 

            	    									newLeafNode(otherlv_27, grammarAccess.getBJTModelAccess().getBRKeyword_4_7_0());
            	    								
            	    otherlv_28=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_28, grammarAccess.getBJTModelAccess().getEqualsSignKeyword_4_7_1());
            	    								
            	    // InternalXSpice.g:6171:9: ( (lv_betaR_29_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:6172:10: (lv_betaR_29_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:6172:10: (lv_betaR_29_0= RULE_NUMBER )
            	    // InternalXSpice.g:6173:11: lv_betaR_29_0= RULE_NUMBER
            	    {
            	    lv_betaR_29_0=(Token)match(input,RULE_NUMBER,FOLLOW_43); 

            	    											newLeafNode(lv_betaR_29_0, grammarAccess.getBJTModelAccess().getBetaRNUMBERTerminalRuleCall_4_7_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getBJTModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"betaR",
            	    												lv_betaR_29_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBJTModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 9 :
            	    // InternalXSpice.g:6195:4: ({...}? => ( ({...}? => (otherlv_30= 'NR' otherlv_31= '=' ( (lv_emissionCoefficientReverse_32_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:6195:4: ({...}? => ( ({...}? => (otherlv_30= 'NR' otherlv_31= '=' ( (lv_emissionCoefficientReverse_32_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:6196:5: {...}? => ( ({...}? => (otherlv_30= 'NR' otherlv_31= '=' ( (lv_emissionCoefficientReverse_32_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 8) ) {
            	        throw new FailedPredicateException(input, "ruleBJTModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 8)");
            	    }
            	    // InternalXSpice.g:6196:105: ( ({...}? => (otherlv_30= 'NR' otherlv_31= '=' ( (lv_emissionCoefficientReverse_32_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:6197:6: ({...}? => (otherlv_30= 'NR' otherlv_31= '=' ( (lv_emissionCoefficientReverse_32_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 8);
            	    					
            	    // InternalXSpice.g:6200:9: ({...}? => (otherlv_30= 'NR' otherlv_31= '=' ( (lv_emissionCoefficientReverse_32_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:6200:10: {...}? => (otherlv_30= 'NR' otherlv_31= '=' ( (lv_emissionCoefficientReverse_32_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleBJTModel", "true");
            	    }
            	    // InternalXSpice.g:6200:19: (otherlv_30= 'NR' otherlv_31= '=' ( (lv_emissionCoefficientReverse_32_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:6200:20: otherlv_30= 'NR' otherlv_31= '=' ( (lv_emissionCoefficientReverse_32_0= RULE_NUMBER ) )
            	    {
            	    otherlv_30=(Token)match(input,130,FOLLOW_11); 

            	    									newLeafNode(otherlv_30, grammarAccess.getBJTModelAccess().getNRKeyword_4_8_0());
            	    								
            	    otherlv_31=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_31, grammarAccess.getBJTModelAccess().getEqualsSignKeyword_4_8_1());
            	    								
            	    // InternalXSpice.g:6208:9: ( (lv_emissionCoefficientReverse_32_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:6209:10: (lv_emissionCoefficientReverse_32_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:6209:10: (lv_emissionCoefficientReverse_32_0= RULE_NUMBER )
            	    // InternalXSpice.g:6210:11: lv_emissionCoefficientReverse_32_0= RULE_NUMBER
            	    {
            	    lv_emissionCoefficientReverse_32_0=(Token)match(input,RULE_NUMBER,FOLLOW_43); 

            	    											newLeafNode(lv_emissionCoefficientReverse_32_0, grammarAccess.getBJTModelAccess().getEmissionCoefficientReverseNUMBERTerminalRuleCall_4_8_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getBJTModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"emissionCoefficientReverse",
            	    												lv_emissionCoefficientReverse_32_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBJTModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 10 :
            	    // InternalXSpice.g:6232:4: ({...}? => ( ({...}? => (otherlv_33= 'VAR' otherlv_34= '=' ( (lv_earlyVoltageReverse_35_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:6232:4: ({...}? => ( ({...}? => (otherlv_33= 'VAR' otherlv_34= '=' ( (lv_earlyVoltageReverse_35_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:6233:5: {...}? => ( ({...}? => (otherlv_33= 'VAR' otherlv_34= '=' ( (lv_earlyVoltageReverse_35_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 9) ) {
            	        throw new FailedPredicateException(input, "ruleBJTModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 9)");
            	    }
            	    // InternalXSpice.g:6233:105: ( ({...}? => (otherlv_33= 'VAR' otherlv_34= '=' ( (lv_earlyVoltageReverse_35_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:6234:6: ({...}? => (otherlv_33= 'VAR' otherlv_34= '=' ( (lv_earlyVoltageReverse_35_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 9);
            	    					
            	    // InternalXSpice.g:6237:9: ({...}? => (otherlv_33= 'VAR' otherlv_34= '=' ( (lv_earlyVoltageReverse_35_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:6237:10: {...}? => (otherlv_33= 'VAR' otherlv_34= '=' ( (lv_earlyVoltageReverse_35_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleBJTModel", "true");
            	    }
            	    // InternalXSpice.g:6237:19: (otherlv_33= 'VAR' otherlv_34= '=' ( (lv_earlyVoltageReverse_35_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:6237:20: otherlv_33= 'VAR' otherlv_34= '=' ( (lv_earlyVoltageReverse_35_0= RULE_NUMBER ) )
            	    {
            	    otherlv_33=(Token)match(input,131,FOLLOW_11); 

            	    									newLeafNode(otherlv_33, grammarAccess.getBJTModelAccess().getVARKeyword_4_9_0());
            	    								
            	    otherlv_34=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_34, grammarAccess.getBJTModelAccess().getEqualsSignKeyword_4_9_1());
            	    								
            	    // InternalXSpice.g:6245:9: ( (lv_earlyVoltageReverse_35_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:6246:10: (lv_earlyVoltageReverse_35_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:6246:10: (lv_earlyVoltageReverse_35_0= RULE_NUMBER )
            	    // InternalXSpice.g:6247:11: lv_earlyVoltageReverse_35_0= RULE_NUMBER
            	    {
            	    lv_earlyVoltageReverse_35_0=(Token)match(input,RULE_NUMBER,FOLLOW_43); 

            	    											newLeafNode(lv_earlyVoltageReverse_35_0, grammarAccess.getBJTModelAccess().getEarlyVoltageReverseNUMBERTerminalRuleCall_4_9_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getBJTModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"earlyVoltageReverse",
            	    												lv_earlyVoltageReverse_35_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBJTModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 11 :
            	    // InternalXSpice.g:6269:4: ({...}? => ( ({...}? => (otherlv_36= 'IKR' otherlv_37= '=' ( (lv_rollOffReverse_38_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:6269:4: ({...}? => ( ({...}? => (otherlv_36= 'IKR' otherlv_37= '=' ( (lv_rollOffReverse_38_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:6270:5: {...}? => ( ({...}? => (otherlv_36= 'IKR' otherlv_37= '=' ( (lv_rollOffReverse_38_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 10) ) {
            	        throw new FailedPredicateException(input, "ruleBJTModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 10)");
            	    }
            	    // InternalXSpice.g:6270:106: ( ({...}? => (otherlv_36= 'IKR' otherlv_37= '=' ( (lv_rollOffReverse_38_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:6271:6: ({...}? => (otherlv_36= 'IKR' otherlv_37= '=' ( (lv_rollOffReverse_38_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 10);
            	    					
            	    // InternalXSpice.g:6274:9: ({...}? => (otherlv_36= 'IKR' otherlv_37= '=' ( (lv_rollOffReverse_38_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:6274:10: {...}? => (otherlv_36= 'IKR' otherlv_37= '=' ( (lv_rollOffReverse_38_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleBJTModel", "true");
            	    }
            	    // InternalXSpice.g:6274:19: (otherlv_36= 'IKR' otherlv_37= '=' ( (lv_rollOffReverse_38_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:6274:20: otherlv_36= 'IKR' otherlv_37= '=' ( (lv_rollOffReverse_38_0= RULE_NUMBER ) )
            	    {
            	    otherlv_36=(Token)match(input,132,FOLLOW_11); 

            	    									newLeafNode(otherlv_36, grammarAccess.getBJTModelAccess().getIKRKeyword_4_10_0());
            	    								
            	    otherlv_37=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_37, grammarAccess.getBJTModelAccess().getEqualsSignKeyword_4_10_1());
            	    								
            	    // InternalXSpice.g:6282:9: ( (lv_rollOffReverse_38_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:6283:10: (lv_rollOffReverse_38_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:6283:10: (lv_rollOffReverse_38_0= RULE_NUMBER )
            	    // InternalXSpice.g:6284:11: lv_rollOffReverse_38_0= RULE_NUMBER
            	    {
            	    lv_rollOffReverse_38_0=(Token)match(input,RULE_NUMBER,FOLLOW_43); 

            	    											newLeafNode(lv_rollOffReverse_38_0, grammarAccess.getBJTModelAccess().getRollOffReverseNUMBERTerminalRuleCall_4_10_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getBJTModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"rollOffReverse",
            	    												lv_rollOffReverse_38_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBJTModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 12 :
            	    // InternalXSpice.g:6306:4: ({...}? => ( ({...}? => (otherlv_39= 'ISC' otherlv_40= '=' ( (lv_leakBcCurrent_41_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:6306:4: ({...}? => ( ({...}? => (otherlv_39= 'ISC' otherlv_40= '=' ( (lv_leakBcCurrent_41_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:6307:5: {...}? => ( ({...}? => (otherlv_39= 'ISC' otherlv_40= '=' ( (lv_leakBcCurrent_41_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 11) ) {
            	        throw new FailedPredicateException(input, "ruleBJTModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 11)");
            	    }
            	    // InternalXSpice.g:6307:106: ( ({...}? => (otherlv_39= 'ISC' otherlv_40= '=' ( (lv_leakBcCurrent_41_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:6308:6: ({...}? => (otherlv_39= 'ISC' otherlv_40= '=' ( (lv_leakBcCurrent_41_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 11);
            	    					
            	    // InternalXSpice.g:6311:9: ({...}? => (otherlv_39= 'ISC' otherlv_40= '=' ( (lv_leakBcCurrent_41_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:6311:10: {...}? => (otherlv_39= 'ISC' otherlv_40= '=' ( (lv_leakBcCurrent_41_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleBJTModel", "true");
            	    }
            	    // InternalXSpice.g:6311:19: (otherlv_39= 'ISC' otherlv_40= '=' ( (lv_leakBcCurrent_41_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:6311:20: otherlv_39= 'ISC' otherlv_40= '=' ( (lv_leakBcCurrent_41_0= RULE_NUMBER ) )
            	    {
            	    otherlv_39=(Token)match(input,133,FOLLOW_11); 

            	    									newLeafNode(otherlv_39, grammarAccess.getBJTModelAccess().getISCKeyword_4_11_0());
            	    								
            	    otherlv_40=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_40, grammarAccess.getBJTModelAccess().getEqualsSignKeyword_4_11_1());
            	    								
            	    // InternalXSpice.g:6319:9: ( (lv_leakBcCurrent_41_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:6320:10: (lv_leakBcCurrent_41_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:6320:10: (lv_leakBcCurrent_41_0= RULE_NUMBER )
            	    // InternalXSpice.g:6321:11: lv_leakBcCurrent_41_0= RULE_NUMBER
            	    {
            	    lv_leakBcCurrent_41_0=(Token)match(input,RULE_NUMBER,FOLLOW_43); 

            	    											newLeafNode(lv_leakBcCurrent_41_0, grammarAccess.getBJTModelAccess().getLeakBcCurrentNUMBERTerminalRuleCall_4_11_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getBJTModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"leakBcCurrent",
            	    												lv_leakBcCurrent_41_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBJTModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 13 :
            	    // InternalXSpice.g:6343:4: ({...}? => ( ({...}? => (otherlv_42= 'NC' otherlv_43= '=' ( (lv_leakBcEmissionCoefficient_44_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:6343:4: ({...}? => ( ({...}? => (otherlv_42= 'NC' otherlv_43= '=' ( (lv_leakBcEmissionCoefficient_44_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:6344:5: {...}? => ( ({...}? => (otherlv_42= 'NC' otherlv_43= '=' ( (lv_leakBcEmissionCoefficient_44_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 12) ) {
            	        throw new FailedPredicateException(input, "ruleBJTModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 12)");
            	    }
            	    // InternalXSpice.g:6344:106: ( ({...}? => (otherlv_42= 'NC' otherlv_43= '=' ( (lv_leakBcEmissionCoefficient_44_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:6345:6: ({...}? => (otherlv_42= 'NC' otherlv_43= '=' ( (lv_leakBcEmissionCoefficient_44_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 12);
            	    					
            	    // InternalXSpice.g:6348:9: ({...}? => (otherlv_42= 'NC' otherlv_43= '=' ( (lv_leakBcEmissionCoefficient_44_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:6348:10: {...}? => (otherlv_42= 'NC' otherlv_43= '=' ( (lv_leakBcEmissionCoefficient_44_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleBJTModel", "true");
            	    }
            	    // InternalXSpice.g:6348:19: (otherlv_42= 'NC' otherlv_43= '=' ( (lv_leakBcEmissionCoefficient_44_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:6348:20: otherlv_42= 'NC' otherlv_43= '=' ( (lv_leakBcEmissionCoefficient_44_0= RULE_NUMBER ) )
            	    {
            	    otherlv_42=(Token)match(input,134,FOLLOW_11); 

            	    									newLeafNode(otherlv_42, grammarAccess.getBJTModelAccess().getNCKeyword_4_12_0());
            	    								
            	    otherlv_43=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_43, grammarAccess.getBJTModelAccess().getEqualsSignKeyword_4_12_1());
            	    								
            	    // InternalXSpice.g:6356:9: ( (lv_leakBcEmissionCoefficient_44_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:6357:10: (lv_leakBcEmissionCoefficient_44_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:6357:10: (lv_leakBcEmissionCoefficient_44_0= RULE_NUMBER )
            	    // InternalXSpice.g:6358:11: lv_leakBcEmissionCoefficient_44_0= RULE_NUMBER
            	    {
            	    lv_leakBcEmissionCoefficient_44_0=(Token)match(input,RULE_NUMBER,FOLLOW_43); 

            	    											newLeafNode(lv_leakBcEmissionCoefficient_44_0, grammarAccess.getBJTModelAccess().getLeakBcEmissionCoefficientNUMBERTerminalRuleCall_4_12_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getBJTModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"leakBcEmissionCoefficient",
            	    												lv_leakBcEmissionCoefficient_44_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBJTModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 14 :
            	    // InternalXSpice.g:6380:4: ({...}? => ( ({...}? => (otherlv_45= 'RB' otherlv_46= '=' ( (lv_baseResist_47_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:6380:4: ({...}? => ( ({...}? => (otherlv_45= 'RB' otherlv_46= '=' ( (lv_baseResist_47_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:6381:5: {...}? => ( ({...}? => (otherlv_45= 'RB' otherlv_46= '=' ( (lv_baseResist_47_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 13) ) {
            	        throw new FailedPredicateException(input, "ruleBJTModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 13)");
            	    }
            	    // InternalXSpice.g:6381:106: ( ({...}? => (otherlv_45= 'RB' otherlv_46= '=' ( (lv_baseResist_47_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:6382:6: ({...}? => (otherlv_45= 'RB' otherlv_46= '=' ( (lv_baseResist_47_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 13);
            	    					
            	    // InternalXSpice.g:6385:9: ({...}? => (otherlv_45= 'RB' otherlv_46= '=' ( (lv_baseResist_47_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:6385:10: {...}? => (otherlv_45= 'RB' otherlv_46= '=' ( (lv_baseResist_47_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleBJTModel", "true");
            	    }
            	    // InternalXSpice.g:6385:19: (otherlv_45= 'RB' otherlv_46= '=' ( (lv_baseResist_47_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:6385:20: otherlv_45= 'RB' otherlv_46= '=' ( (lv_baseResist_47_0= RULE_NUMBER ) )
            	    {
            	    otherlv_45=(Token)match(input,135,FOLLOW_11); 

            	    									newLeafNode(otherlv_45, grammarAccess.getBJTModelAccess().getRBKeyword_4_13_0());
            	    								
            	    otherlv_46=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_46, grammarAccess.getBJTModelAccess().getEqualsSignKeyword_4_13_1());
            	    								
            	    // InternalXSpice.g:6393:9: ( (lv_baseResist_47_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:6394:10: (lv_baseResist_47_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:6394:10: (lv_baseResist_47_0= RULE_NUMBER )
            	    // InternalXSpice.g:6395:11: lv_baseResist_47_0= RULE_NUMBER
            	    {
            	    lv_baseResist_47_0=(Token)match(input,RULE_NUMBER,FOLLOW_43); 

            	    											newLeafNode(lv_baseResist_47_0, grammarAccess.getBJTModelAccess().getBaseResistNUMBERTerminalRuleCall_4_13_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getBJTModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"baseResist",
            	    												lv_baseResist_47_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBJTModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 15 :
            	    // InternalXSpice.g:6417:4: ({...}? => ( ({...}? => (otherlv_48= 'IRB' otherlv_49= '=' ( (lv_baseCurrentHalfResist_50_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:6417:4: ({...}? => ( ({...}? => (otherlv_48= 'IRB' otherlv_49= '=' ( (lv_baseCurrentHalfResist_50_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:6418:5: {...}? => ( ({...}? => (otherlv_48= 'IRB' otherlv_49= '=' ( (lv_baseCurrentHalfResist_50_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 14) ) {
            	        throw new FailedPredicateException(input, "ruleBJTModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 14)");
            	    }
            	    // InternalXSpice.g:6418:106: ( ({...}? => (otherlv_48= 'IRB' otherlv_49= '=' ( (lv_baseCurrentHalfResist_50_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:6419:6: ({...}? => (otherlv_48= 'IRB' otherlv_49= '=' ( (lv_baseCurrentHalfResist_50_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 14);
            	    					
            	    // InternalXSpice.g:6422:9: ({...}? => (otherlv_48= 'IRB' otherlv_49= '=' ( (lv_baseCurrentHalfResist_50_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:6422:10: {...}? => (otherlv_48= 'IRB' otherlv_49= '=' ( (lv_baseCurrentHalfResist_50_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleBJTModel", "true");
            	    }
            	    // InternalXSpice.g:6422:19: (otherlv_48= 'IRB' otherlv_49= '=' ( (lv_baseCurrentHalfResist_50_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:6422:20: otherlv_48= 'IRB' otherlv_49= '=' ( (lv_baseCurrentHalfResist_50_0= RULE_NUMBER ) )
            	    {
            	    otherlv_48=(Token)match(input,136,FOLLOW_11); 

            	    									newLeafNode(otherlv_48, grammarAccess.getBJTModelAccess().getIRBKeyword_4_14_0());
            	    								
            	    otherlv_49=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_49, grammarAccess.getBJTModelAccess().getEqualsSignKeyword_4_14_1());
            	    								
            	    // InternalXSpice.g:6430:9: ( (lv_baseCurrentHalfResist_50_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:6431:10: (lv_baseCurrentHalfResist_50_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:6431:10: (lv_baseCurrentHalfResist_50_0= RULE_NUMBER )
            	    // InternalXSpice.g:6432:11: lv_baseCurrentHalfResist_50_0= RULE_NUMBER
            	    {
            	    lv_baseCurrentHalfResist_50_0=(Token)match(input,RULE_NUMBER,FOLLOW_43); 

            	    											newLeafNode(lv_baseCurrentHalfResist_50_0, grammarAccess.getBJTModelAccess().getBaseCurrentHalfResistNUMBERTerminalRuleCall_4_14_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getBJTModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"baseCurrentHalfResist",
            	    												lv_baseCurrentHalfResist_50_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBJTModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 16 :
            	    // InternalXSpice.g:6454:4: ({...}? => ( ({...}? => (otherlv_51= 'RBM' otherlv_52= '=' ( (lv_minimumBaseResistance_53_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:6454:4: ({...}? => ( ({...}? => (otherlv_51= 'RBM' otherlv_52= '=' ( (lv_minimumBaseResistance_53_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:6455:5: {...}? => ( ({...}? => (otherlv_51= 'RBM' otherlv_52= '=' ( (lv_minimumBaseResistance_53_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 15) ) {
            	        throw new FailedPredicateException(input, "ruleBJTModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 15)");
            	    }
            	    // InternalXSpice.g:6455:106: ( ({...}? => (otherlv_51= 'RBM' otherlv_52= '=' ( (lv_minimumBaseResistance_53_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:6456:6: ({...}? => (otherlv_51= 'RBM' otherlv_52= '=' ( (lv_minimumBaseResistance_53_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 15);
            	    					
            	    // InternalXSpice.g:6459:9: ({...}? => (otherlv_51= 'RBM' otherlv_52= '=' ( (lv_minimumBaseResistance_53_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:6459:10: {...}? => (otherlv_51= 'RBM' otherlv_52= '=' ( (lv_minimumBaseResistance_53_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleBJTModel", "true");
            	    }
            	    // InternalXSpice.g:6459:19: (otherlv_51= 'RBM' otherlv_52= '=' ( (lv_minimumBaseResistance_53_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:6459:20: otherlv_51= 'RBM' otherlv_52= '=' ( (lv_minimumBaseResistance_53_0= RULE_NUMBER ) )
            	    {
            	    otherlv_51=(Token)match(input,137,FOLLOW_11); 

            	    									newLeafNode(otherlv_51, grammarAccess.getBJTModelAccess().getRBMKeyword_4_15_0());
            	    								
            	    otherlv_52=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_52, grammarAccess.getBJTModelAccess().getEqualsSignKeyword_4_15_1());
            	    								
            	    // InternalXSpice.g:6467:9: ( (lv_minimumBaseResistance_53_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:6468:10: (lv_minimumBaseResistance_53_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:6468:10: (lv_minimumBaseResistance_53_0= RULE_NUMBER )
            	    // InternalXSpice.g:6469:11: lv_minimumBaseResistance_53_0= RULE_NUMBER
            	    {
            	    lv_minimumBaseResistance_53_0=(Token)match(input,RULE_NUMBER,FOLLOW_43); 

            	    											newLeafNode(lv_minimumBaseResistance_53_0, grammarAccess.getBJTModelAccess().getMinimumBaseResistanceNUMBERTerminalRuleCall_4_15_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getBJTModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"minimumBaseResistance",
            	    												lv_minimumBaseResistance_53_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBJTModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 17 :
            	    // InternalXSpice.g:6491:4: ({...}? => ( ({...}? => (otherlv_54= 'RE' otherlv_55= '=' ( (lv_emitterResistance_56_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:6491:4: ({...}? => ( ({...}? => (otherlv_54= 'RE' otherlv_55= '=' ( (lv_emitterResistance_56_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:6492:5: {...}? => ( ({...}? => (otherlv_54= 'RE' otherlv_55= '=' ( (lv_emitterResistance_56_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 16) ) {
            	        throw new FailedPredicateException(input, "ruleBJTModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 16)");
            	    }
            	    // InternalXSpice.g:6492:106: ( ({...}? => (otherlv_54= 'RE' otherlv_55= '=' ( (lv_emitterResistance_56_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:6493:6: ({...}? => (otherlv_54= 'RE' otherlv_55= '=' ( (lv_emitterResistance_56_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 16);
            	    					
            	    // InternalXSpice.g:6496:9: ({...}? => (otherlv_54= 'RE' otherlv_55= '=' ( (lv_emitterResistance_56_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:6496:10: {...}? => (otherlv_54= 'RE' otherlv_55= '=' ( (lv_emitterResistance_56_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleBJTModel", "true");
            	    }
            	    // InternalXSpice.g:6496:19: (otherlv_54= 'RE' otherlv_55= '=' ( (lv_emitterResistance_56_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:6496:20: otherlv_54= 'RE' otherlv_55= '=' ( (lv_emitterResistance_56_0= RULE_NUMBER ) )
            	    {
            	    otherlv_54=(Token)match(input,138,FOLLOW_11); 

            	    									newLeafNode(otherlv_54, grammarAccess.getBJTModelAccess().getREKeyword_4_16_0());
            	    								
            	    otherlv_55=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_55, grammarAccess.getBJTModelAccess().getEqualsSignKeyword_4_16_1());
            	    								
            	    // InternalXSpice.g:6504:9: ( (lv_emitterResistance_56_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:6505:10: (lv_emitterResistance_56_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:6505:10: (lv_emitterResistance_56_0= RULE_NUMBER )
            	    // InternalXSpice.g:6506:11: lv_emitterResistance_56_0= RULE_NUMBER
            	    {
            	    lv_emitterResistance_56_0=(Token)match(input,RULE_NUMBER,FOLLOW_43); 

            	    											newLeafNode(lv_emitterResistance_56_0, grammarAccess.getBJTModelAccess().getEmitterResistanceNUMBERTerminalRuleCall_4_16_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getBJTModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"emitterResistance",
            	    												lv_emitterResistance_56_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBJTModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 18 :
            	    // InternalXSpice.g:6528:4: ({...}? => ( ({...}? => (otherlv_57= 'RC' otherlv_58= '=' ( (lv_collectorResistance_59_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:6528:4: ({...}? => ( ({...}? => (otherlv_57= 'RC' otherlv_58= '=' ( (lv_collectorResistance_59_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:6529:5: {...}? => ( ({...}? => (otherlv_57= 'RC' otherlv_58= '=' ( (lv_collectorResistance_59_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 17) ) {
            	        throw new FailedPredicateException(input, "ruleBJTModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 17)");
            	    }
            	    // InternalXSpice.g:6529:106: ( ({...}? => (otherlv_57= 'RC' otherlv_58= '=' ( (lv_collectorResistance_59_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:6530:6: ({...}? => (otherlv_57= 'RC' otherlv_58= '=' ( (lv_collectorResistance_59_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 17);
            	    					
            	    // InternalXSpice.g:6533:9: ({...}? => (otherlv_57= 'RC' otherlv_58= '=' ( (lv_collectorResistance_59_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:6533:10: {...}? => (otherlv_57= 'RC' otherlv_58= '=' ( (lv_collectorResistance_59_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleBJTModel", "true");
            	    }
            	    // InternalXSpice.g:6533:19: (otherlv_57= 'RC' otherlv_58= '=' ( (lv_collectorResistance_59_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:6533:20: otherlv_57= 'RC' otherlv_58= '=' ( (lv_collectorResistance_59_0= RULE_NUMBER ) )
            	    {
            	    otherlv_57=(Token)match(input,139,FOLLOW_11); 

            	    									newLeafNode(otherlv_57, grammarAccess.getBJTModelAccess().getRCKeyword_4_17_0());
            	    								
            	    otherlv_58=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_58, grammarAccess.getBJTModelAccess().getEqualsSignKeyword_4_17_1());
            	    								
            	    // InternalXSpice.g:6541:9: ( (lv_collectorResistance_59_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:6542:10: (lv_collectorResistance_59_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:6542:10: (lv_collectorResistance_59_0= RULE_NUMBER )
            	    // InternalXSpice.g:6543:11: lv_collectorResistance_59_0= RULE_NUMBER
            	    {
            	    lv_collectorResistance_59_0=(Token)match(input,RULE_NUMBER,FOLLOW_43); 

            	    											newLeafNode(lv_collectorResistance_59_0, grammarAccess.getBJTModelAccess().getCollectorResistanceNUMBERTerminalRuleCall_4_17_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getBJTModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"collectorResistance",
            	    												lv_collectorResistance_59_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBJTModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 19 :
            	    // InternalXSpice.g:6565:4: ({...}? => ( ({...}? => (otherlv_60= 'CJE' otherlv_61= '=' ( (lv_depletionCapBe_62_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:6565:4: ({...}? => ( ({...}? => (otherlv_60= 'CJE' otherlv_61= '=' ( (lv_depletionCapBe_62_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:6566:5: {...}? => ( ({...}? => (otherlv_60= 'CJE' otherlv_61= '=' ( (lv_depletionCapBe_62_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 18) ) {
            	        throw new FailedPredicateException(input, "ruleBJTModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 18)");
            	    }
            	    // InternalXSpice.g:6566:106: ( ({...}? => (otherlv_60= 'CJE' otherlv_61= '=' ( (lv_depletionCapBe_62_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:6567:6: ({...}? => (otherlv_60= 'CJE' otherlv_61= '=' ( (lv_depletionCapBe_62_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 18);
            	    					
            	    // InternalXSpice.g:6570:9: ({...}? => (otherlv_60= 'CJE' otherlv_61= '=' ( (lv_depletionCapBe_62_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:6570:10: {...}? => (otherlv_60= 'CJE' otherlv_61= '=' ( (lv_depletionCapBe_62_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleBJTModel", "true");
            	    }
            	    // InternalXSpice.g:6570:19: (otherlv_60= 'CJE' otherlv_61= '=' ( (lv_depletionCapBe_62_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:6570:20: otherlv_60= 'CJE' otherlv_61= '=' ( (lv_depletionCapBe_62_0= RULE_NUMBER ) )
            	    {
            	    otherlv_60=(Token)match(input,140,FOLLOW_11); 

            	    									newLeafNode(otherlv_60, grammarAccess.getBJTModelAccess().getCJEKeyword_4_18_0());
            	    								
            	    otherlv_61=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_61, grammarAccess.getBJTModelAccess().getEqualsSignKeyword_4_18_1());
            	    								
            	    // InternalXSpice.g:6578:9: ( (lv_depletionCapBe_62_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:6579:10: (lv_depletionCapBe_62_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:6579:10: (lv_depletionCapBe_62_0= RULE_NUMBER )
            	    // InternalXSpice.g:6580:11: lv_depletionCapBe_62_0= RULE_NUMBER
            	    {
            	    lv_depletionCapBe_62_0=(Token)match(input,RULE_NUMBER,FOLLOW_43); 

            	    											newLeafNode(lv_depletionCapBe_62_0, grammarAccess.getBJTModelAccess().getDepletionCapBeNUMBERTerminalRuleCall_4_18_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getBJTModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"depletionCapBe",
            	    												lv_depletionCapBe_62_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBJTModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 20 :
            	    // InternalXSpice.g:6602:4: ({...}? => ( ({...}? => (otherlv_63= 'VJE' otherlv_64= '=' ( (lv_potentialBe_65_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:6602:4: ({...}? => ( ({...}? => (otherlv_63= 'VJE' otherlv_64= '=' ( (lv_potentialBe_65_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:6603:5: {...}? => ( ({...}? => (otherlv_63= 'VJE' otherlv_64= '=' ( (lv_potentialBe_65_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 19) ) {
            	        throw new FailedPredicateException(input, "ruleBJTModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 19)");
            	    }
            	    // InternalXSpice.g:6603:106: ( ({...}? => (otherlv_63= 'VJE' otherlv_64= '=' ( (lv_potentialBe_65_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:6604:6: ({...}? => (otherlv_63= 'VJE' otherlv_64= '=' ( (lv_potentialBe_65_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 19);
            	    					
            	    // InternalXSpice.g:6607:9: ({...}? => (otherlv_63= 'VJE' otherlv_64= '=' ( (lv_potentialBe_65_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:6607:10: {...}? => (otherlv_63= 'VJE' otherlv_64= '=' ( (lv_potentialBe_65_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleBJTModel", "true");
            	    }
            	    // InternalXSpice.g:6607:19: (otherlv_63= 'VJE' otherlv_64= '=' ( (lv_potentialBe_65_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:6607:20: otherlv_63= 'VJE' otherlv_64= '=' ( (lv_potentialBe_65_0= RULE_NUMBER ) )
            	    {
            	    otherlv_63=(Token)match(input,141,FOLLOW_11); 

            	    									newLeafNode(otherlv_63, grammarAccess.getBJTModelAccess().getVJEKeyword_4_19_0());
            	    								
            	    otherlv_64=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_64, grammarAccess.getBJTModelAccess().getEqualsSignKeyword_4_19_1());
            	    								
            	    // InternalXSpice.g:6615:9: ( (lv_potentialBe_65_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:6616:10: (lv_potentialBe_65_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:6616:10: (lv_potentialBe_65_0= RULE_NUMBER )
            	    // InternalXSpice.g:6617:11: lv_potentialBe_65_0= RULE_NUMBER
            	    {
            	    lv_potentialBe_65_0=(Token)match(input,RULE_NUMBER,FOLLOW_43); 

            	    											newLeafNode(lv_potentialBe_65_0, grammarAccess.getBJTModelAccess().getPotentialBeNUMBERTerminalRuleCall_4_19_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getBJTModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"potentialBe",
            	    												lv_potentialBe_65_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBJTModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 21 :
            	    // InternalXSpice.g:6639:4: ({...}? => ( ({...}? => (otherlv_66= 'MJE' otherlv_67= '=' ( (lv_junctionExpBe_68_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:6639:4: ({...}? => ( ({...}? => (otherlv_66= 'MJE' otherlv_67= '=' ( (lv_junctionExpBe_68_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:6640:5: {...}? => ( ({...}? => (otherlv_66= 'MJE' otherlv_67= '=' ( (lv_junctionExpBe_68_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 20) ) {
            	        throw new FailedPredicateException(input, "ruleBJTModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 20)");
            	    }
            	    // InternalXSpice.g:6640:106: ( ({...}? => (otherlv_66= 'MJE' otherlv_67= '=' ( (lv_junctionExpBe_68_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:6641:6: ({...}? => (otherlv_66= 'MJE' otherlv_67= '=' ( (lv_junctionExpBe_68_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 20);
            	    					
            	    // InternalXSpice.g:6644:9: ({...}? => (otherlv_66= 'MJE' otherlv_67= '=' ( (lv_junctionExpBe_68_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:6644:10: {...}? => (otherlv_66= 'MJE' otherlv_67= '=' ( (lv_junctionExpBe_68_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleBJTModel", "true");
            	    }
            	    // InternalXSpice.g:6644:19: (otherlv_66= 'MJE' otherlv_67= '=' ( (lv_junctionExpBe_68_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:6644:20: otherlv_66= 'MJE' otherlv_67= '=' ( (lv_junctionExpBe_68_0= RULE_NUMBER ) )
            	    {
            	    otherlv_66=(Token)match(input,142,FOLLOW_11); 

            	    									newLeafNode(otherlv_66, grammarAccess.getBJTModelAccess().getMJEKeyword_4_20_0());
            	    								
            	    otherlv_67=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_67, grammarAccess.getBJTModelAccess().getEqualsSignKeyword_4_20_1());
            	    								
            	    // InternalXSpice.g:6652:9: ( (lv_junctionExpBe_68_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:6653:10: (lv_junctionExpBe_68_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:6653:10: (lv_junctionExpBe_68_0= RULE_NUMBER )
            	    // InternalXSpice.g:6654:11: lv_junctionExpBe_68_0= RULE_NUMBER
            	    {
            	    lv_junctionExpBe_68_0=(Token)match(input,RULE_NUMBER,FOLLOW_43); 

            	    											newLeafNode(lv_junctionExpBe_68_0, grammarAccess.getBJTModelAccess().getJunctionExpBeNUMBERTerminalRuleCall_4_20_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getBJTModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"junctionExpBe",
            	    												lv_junctionExpBe_68_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBJTModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 22 :
            	    // InternalXSpice.g:6676:4: ({...}? => ( ({...}? => (otherlv_69= 'TF' otherlv_70= '=' ( (lv_transitTimeForward_71_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:6676:4: ({...}? => ( ({...}? => (otherlv_69= 'TF' otherlv_70= '=' ( (lv_transitTimeForward_71_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:6677:5: {...}? => ( ({...}? => (otherlv_69= 'TF' otherlv_70= '=' ( (lv_transitTimeForward_71_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 21) ) {
            	        throw new FailedPredicateException(input, "ruleBJTModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 21)");
            	    }
            	    // InternalXSpice.g:6677:106: ( ({...}? => (otherlv_69= 'TF' otherlv_70= '=' ( (lv_transitTimeForward_71_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:6678:6: ({...}? => (otherlv_69= 'TF' otherlv_70= '=' ( (lv_transitTimeForward_71_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 21);
            	    					
            	    // InternalXSpice.g:6681:9: ({...}? => (otherlv_69= 'TF' otherlv_70= '=' ( (lv_transitTimeForward_71_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:6681:10: {...}? => (otherlv_69= 'TF' otherlv_70= '=' ( (lv_transitTimeForward_71_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleBJTModel", "true");
            	    }
            	    // InternalXSpice.g:6681:19: (otherlv_69= 'TF' otherlv_70= '=' ( (lv_transitTimeForward_71_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:6681:20: otherlv_69= 'TF' otherlv_70= '=' ( (lv_transitTimeForward_71_0= RULE_NUMBER ) )
            	    {
            	    otherlv_69=(Token)match(input,143,FOLLOW_11); 

            	    									newLeafNode(otherlv_69, grammarAccess.getBJTModelAccess().getTFKeyword_4_21_0());
            	    								
            	    otherlv_70=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_70, grammarAccess.getBJTModelAccess().getEqualsSignKeyword_4_21_1());
            	    								
            	    // InternalXSpice.g:6689:9: ( (lv_transitTimeForward_71_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:6690:10: (lv_transitTimeForward_71_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:6690:10: (lv_transitTimeForward_71_0= RULE_NUMBER )
            	    // InternalXSpice.g:6691:11: lv_transitTimeForward_71_0= RULE_NUMBER
            	    {
            	    lv_transitTimeForward_71_0=(Token)match(input,RULE_NUMBER,FOLLOW_43); 

            	    											newLeafNode(lv_transitTimeForward_71_0, grammarAccess.getBJTModelAccess().getTransitTimeForwardNUMBERTerminalRuleCall_4_21_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getBJTModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"transitTimeForward",
            	    												lv_transitTimeForward_71_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBJTModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 23 :
            	    // InternalXSpice.g:6713:4: ({...}? => ( ({...}? => (otherlv_72= 'XTF' otherlv_73= '=' ( (lv_transitTimeBiasCoefficientForward_74_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:6713:4: ({...}? => ( ({...}? => (otherlv_72= 'XTF' otherlv_73= '=' ( (lv_transitTimeBiasCoefficientForward_74_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:6714:5: {...}? => ( ({...}? => (otherlv_72= 'XTF' otherlv_73= '=' ( (lv_transitTimeBiasCoefficientForward_74_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 22) ) {
            	        throw new FailedPredicateException(input, "ruleBJTModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 22)");
            	    }
            	    // InternalXSpice.g:6714:106: ( ({...}? => (otherlv_72= 'XTF' otherlv_73= '=' ( (lv_transitTimeBiasCoefficientForward_74_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:6715:6: ({...}? => (otherlv_72= 'XTF' otherlv_73= '=' ( (lv_transitTimeBiasCoefficientForward_74_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 22);
            	    					
            	    // InternalXSpice.g:6718:9: ({...}? => (otherlv_72= 'XTF' otherlv_73= '=' ( (lv_transitTimeBiasCoefficientForward_74_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:6718:10: {...}? => (otherlv_72= 'XTF' otherlv_73= '=' ( (lv_transitTimeBiasCoefficientForward_74_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleBJTModel", "true");
            	    }
            	    // InternalXSpice.g:6718:19: (otherlv_72= 'XTF' otherlv_73= '=' ( (lv_transitTimeBiasCoefficientForward_74_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:6718:20: otherlv_72= 'XTF' otherlv_73= '=' ( (lv_transitTimeBiasCoefficientForward_74_0= RULE_NUMBER ) )
            	    {
            	    otherlv_72=(Token)match(input,144,FOLLOW_11); 

            	    									newLeafNode(otherlv_72, grammarAccess.getBJTModelAccess().getXTFKeyword_4_22_0());
            	    								
            	    otherlv_73=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_73, grammarAccess.getBJTModelAccess().getEqualsSignKeyword_4_22_1());
            	    								
            	    // InternalXSpice.g:6726:9: ( (lv_transitTimeBiasCoefficientForward_74_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:6727:10: (lv_transitTimeBiasCoefficientForward_74_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:6727:10: (lv_transitTimeBiasCoefficientForward_74_0= RULE_NUMBER )
            	    // InternalXSpice.g:6728:11: lv_transitTimeBiasCoefficientForward_74_0= RULE_NUMBER
            	    {
            	    lv_transitTimeBiasCoefficientForward_74_0=(Token)match(input,RULE_NUMBER,FOLLOW_43); 

            	    											newLeafNode(lv_transitTimeBiasCoefficientForward_74_0, grammarAccess.getBJTModelAccess().getTransitTimeBiasCoefficientForwardNUMBERTerminalRuleCall_4_22_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getBJTModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"transitTimeBiasCoefficientForward",
            	    												lv_transitTimeBiasCoefficientForward_74_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBJTModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 24 :
            	    // InternalXSpice.g:6750:4: ({...}? => ( ({...}? => (otherlv_75= 'VTF' otherlv_76= '=' ( (lv_transitTimeForwardVoltageBc_77_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:6750:4: ({...}? => ( ({...}? => (otherlv_75= 'VTF' otherlv_76= '=' ( (lv_transitTimeForwardVoltageBc_77_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:6751:5: {...}? => ( ({...}? => (otherlv_75= 'VTF' otherlv_76= '=' ( (lv_transitTimeForwardVoltageBc_77_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 23) ) {
            	        throw new FailedPredicateException(input, "ruleBJTModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 23)");
            	    }
            	    // InternalXSpice.g:6751:106: ( ({...}? => (otherlv_75= 'VTF' otherlv_76= '=' ( (lv_transitTimeForwardVoltageBc_77_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:6752:6: ({...}? => (otherlv_75= 'VTF' otherlv_76= '=' ( (lv_transitTimeForwardVoltageBc_77_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 23);
            	    					
            	    // InternalXSpice.g:6755:9: ({...}? => (otherlv_75= 'VTF' otherlv_76= '=' ( (lv_transitTimeForwardVoltageBc_77_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:6755:10: {...}? => (otherlv_75= 'VTF' otherlv_76= '=' ( (lv_transitTimeForwardVoltageBc_77_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleBJTModel", "true");
            	    }
            	    // InternalXSpice.g:6755:19: (otherlv_75= 'VTF' otherlv_76= '=' ( (lv_transitTimeForwardVoltageBc_77_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:6755:20: otherlv_75= 'VTF' otherlv_76= '=' ( (lv_transitTimeForwardVoltageBc_77_0= RULE_NUMBER ) )
            	    {
            	    otherlv_75=(Token)match(input,145,FOLLOW_11); 

            	    									newLeafNode(otherlv_75, grammarAccess.getBJTModelAccess().getVTFKeyword_4_23_0());
            	    								
            	    otherlv_76=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_76, grammarAccess.getBJTModelAccess().getEqualsSignKeyword_4_23_1());
            	    								
            	    // InternalXSpice.g:6763:9: ( (lv_transitTimeForwardVoltageBc_77_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:6764:10: (lv_transitTimeForwardVoltageBc_77_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:6764:10: (lv_transitTimeForwardVoltageBc_77_0= RULE_NUMBER )
            	    // InternalXSpice.g:6765:11: lv_transitTimeForwardVoltageBc_77_0= RULE_NUMBER
            	    {
            	    lv_transitTimeForwardVoltageBc_77_0=(Token)match(input,RULE_NUMBER,FOLLOW_43); 

            	    											newLeafNode(lv_transitTimeForwardVoltageBc_77_0, grammarAccess.getBJTModelAccess().getTransitTimeForwardVoltageBcNUMBERTerminalRuleCall_4_23_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getBJTModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"transitTimeForwardVoltageBc",
            	    												lv_transitTimeForwardVoltageBc_77_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBJTModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 25 :
            	    // InternalXSpice.g:6787:4: ({...}? => ( ({...}? => (otherlv_78= 'ITF' otherlv_79= '=' ( (lv_transitTimeHighCurrentForward_80_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:6787:4: ({...}? => ( ({...}? => (otherlv_78= 'ITF' otherlv_79= '=' ( (lv_transitTimeHighCurrentForward_80_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:6788:5: {...}? => ( ({...}? => (otherlv_78= 'ITF' otherlv_79= '=' ( (lv_transitTimeHighCurrentForward_80_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 24) ) {
            	        throw new FailedPredicateException(input, "ruleBJTModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 24)");
            	    }
            	    // InternalXSpice.g:6788:106: ( ({...}? => (otherlv_78= 'ITF' otherlv_79= '=' ( (lv_transitTimeHighCurrentForward_80_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:6789:6: ({...}? => (otherlv_78= 'ITF' otherlv_79= '=' ( (lv_transitTimeHighCurrentForward_80_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 24);
            	    					
            	    // InternalXSpice.g:6792:9: ({...}? => (otherlv_78= 'ITF' otherlv_79= '=' ( (lv_transitTimeHighCurrentForward_80_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:6792:10: {...}? => (otherlv_78= 'ITF' otherlv_79= '=' ( (lv_transitTimeHighCurrentForward_80_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleBJTModel", "true");
            	    }
            	    // InternalXSpice.g:6792:19: (otherlv_78= 'ITF' otherlv_79= '=' ( (lv_transitTimeHighCurrentForward_80_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:6792:20: otherlv_78= 'ITF' otherlv_79= '=' ( (lv_transitTimeHighCurrentForward_80_0= RULE_NUMBER ) )
            	    {
            	    otherlv_78=(Token)match(input,146,FOLLOW_11); 

            	    									newLeafNode(otherlv_78, grammarAccess.getBJTModelAccess().getITFKeyword_4_24_0());
            	    								
            	    otherlv_79=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_79, grammarAccess.getBJTModelAccess().getEqualsSignKeyword_4_24_1());
            	    								
            	    // InternalXSpice.g:6800:9: ( (lv_transitTimeHighCurrentForward_80_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:6801:10: (lv_transitTimeHighCurrentForward_80_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:6801:10: (lv_transitTimeHighCurrentForward_80_0= RULE_NUMBER )
            	    // InternalXSpice.g:6802:11: lv_transitTimeHighCurrentForward_80_0= RULE_NUMBER
            	    {
            	    lv_transitTimeHighCurrentForward_80_0=(Token)match(input,RULE_NUMBER,FOLLOW_43); 

            	    											newLeafNode(lv_transitTimeHighCurrentForward_80_0, grammarAccess.getBJTModelAccess().getTransitTimeHighCurrentForwardNUMBERTerminalRuleCall_4_24_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getBJTModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"transitTimeHighCurrentForward",
            	    												lv_transitTimeHighCurrentForward_80_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBJTModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 26 :
            	    // InternalXSpice.g:6824:4: ({...}? => ( ({...}? => (otherlv_81= 'PTF' otherlv_82= '=' ( (lv_excessPhase_83_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:6824:4: ({...}? => ( ({...}? => (otherlv_81= 'PTF' otherlv_82= '=' ( (lv_excessPhase_83_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:6825:5: {...}? => ( ({...}? => (otherlv_81= 'PTF' otherlv_82= '=' ( (lv_excessPhase_83_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 25) ) {
            	        throw new FailedPredicateException(input, "ruleBJTModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 25)");
            	    }
            	    // InternalXSpice.g:6825:106: ( ({...}? => (otherlv_81= 'PTF' otherlv_82= '=' ( (lv_excessPhase_83_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:6826:6: ({...}? => (otherlv_81= 'PTF' otherlv_82= '=' ( (lv_excessPhase_83_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 25);
            	    					
            	    // InternalXSpice.g:6829:9: ({...}? => (otherlv_81= 'PTF' otherlv_82= '=' ( (lv_excessPhase_83_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:6829:10: {...}? => (otherlv_81= 'PTF' otherlv_82= '=' ( (lv_excessPhase_83_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleBJTModel", "true");
            	    }
            	    // InternalXSpice.g:6829:19: (otherlv_81= 'PTF' otherlv_82= '=' ( (lv_excessPhase_83_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:6829:20: otherlv_81= 'PTF' otherlv_82= '=' ( (lv_excessPhase_83_0= RULE_NUMBER ) )
            	    {
            	    otherlv_81=(Token)match(input,147,FOLLOW_11); 

            	    									newLeafNode(otherlv_81, grammarAccess.getBJTModelAccess().getPTFKeyword_4_25_0());
            	    								
            	    otherlv_82=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_82, grammarAccess.getBJTModelAccess().getEqualsSignKeyword_4_25_1());
            	    								
            	    // InternalXSpice.g:6837:9: ( (lv_excessPhase_83_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:6838:10: (lv_excessPhase_83_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:6838:10: (lv_excessPhase_83_0= RULE_NUMBER )
            	    // InternalXSpice.g:6839:11: lv_excessPhase_83_0= RULE_NUMBER
            	    {
            	    lv_excessPhase_83_0=(Token)match(input,RULE_NUMBER,FOLLOW_43); 

            	    											newLeafNode(lv_excessPhase_83_0, grammarAccess.getBJTModelAccess().getExcessPhaseNUMBERTerminalRuleCall_4_25_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getBJTModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"excessPhase",
            	    												lv_excessPhase_83_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBJTModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 27 :
            	    // InternalXSpice.g:6861:4: ({...}? => ( ({...}? => (otherlv_84= 'CJC' otherlv_85= '=' ( (lv_depletionCapBc_86_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:6861:4: ({...}? => ( ({...}? => (otherlv_84= 'CJC' otherlv_85= '=' ( (lv_depletionCapBc_86_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:6862:5: {...}? => ( ({...}? => (otherlv_84= 'CJC' otherlv_85= '=' ( (lv_depletionCapBc_86_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 26) ) {
            	        throw new FailedPredicateException(input, "ruleBJTModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 26)");
            	    }
            	    // InternalXSpice.g:6862:106: ( ({...}? => (otherlv_84= 'CJC' otherlv_85= '=' ( (lv_depletionCapBc_86_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:6863:6: ({...}? => (otherlv_84= 'CJC' otherlv_85= '=' ( (lv_depletionCapBc_86_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 26);
            	    					
            	    // InternalXSpice.g:6866:9: ({...}? => (otherlv_84= 'CJC' otherlv_85= '=' ( (lv_depletionCapBc_86_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:6866:10: {...}? => (otherlv_84= 'CJC' otherlv_85= '=' ( (lv_depletionCapBc_86_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleBJTModel", "true");
            	    }
            	    // InternalXSpice.g:6866:19: (otherlv_84= 'CJC' otherlv_85= '=' ( (lv_depletionCapBc_86_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:6866:20: otherlv_84= 'CJC' otherlv_85= '=' ( (lv_depletionCapBc_86_0= RULE_NUMBER ) )
            	    {
            	    otherlv_84=(Token)match(input,148,FOLLOW_11); 

            	    									newLeafNode(otherlv_84, grammarAccess.getBJTModelAccess().getCJCKeyword_4_26_0());
            	    								
            	    otherlv_85=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_85, grammarAccess.getBJTModelAccess().getEqualsSignKeyword_4_26_1());
            	    								
            	    // InternalXSpice.g:6874:9: ( (lv_depletionCapBc_86_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:6875:10: (lv_depletionCapBc_86_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:6875:10: (lv_depletionCapBc_86_0= RULE_NUMBER )
            	    // InternalXSpice.g:6876:11: lv_depletionCapBc_86_0= RULE_NUMBER
            	    {
            	    lv_depletionCapBc_86_0=(Token)match(input,RULE_NUMBER,FOLLOW_43); 

            	    											newLeafNode(lv_depletionCapBc_86_0, grammarAccess.getBJTModelAccess().getDepletionCapBcNUMBERTerminalRuleCall_4_26_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getBJTModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"depletionCapBc",
            	    												lv_depletionCapBc_86_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBJTModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 28 :
            	    // InternalXSpice.g:6898:4: ({...}? => ( ({...}? => (otherlv_87= 'VJC' otherlv_88= '=' ( (lv_potentialBc_89_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:6898:4: ({...}? => ( ({...}? => (otherlv_87= 'VJC' otherlv_88= '=' ( (lv_potentialBc_89_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:6899:5: {...}? => ( ({...}? => (otherlv_87= 'VJC' otherlv_88= '=' ( (lv_potentialBc_89_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 27) ) {
            	        throw new FailedPredicateException(input, "ruleBJTModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 27)");
            	    }
            	    // InternalXSpice.g:6899:106: ( ({...}? => (otherlv_87= 'VJC' otherlv_88= '=' ( (lv_potentialBc_89_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:6900:6: ({...}? => (otherlv_87= 'VJC' otherlv_88= '=' ( (lv_potentialBc_89_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 27);
            	    					
            	    // InternalXSpice.g:6903:9: ({...}? => (otherlv_87= 'VJC' otherlv_88= '=' ( (lv_potentialBc_89_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:6903:10: {...}? => (otherlv_87= 'VJC' otherlv_88= '=' ( (lv_potentialBc_89_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleBJTModel", "true");
            	    }
            	    // InternalXSpice.g:6903:19: (otherlv_87= 'VJC' otherlv_88= '=' ( (lv_potentialBc_89_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:6903:20: otherlv_87= 'VJC' otherlv_88= '=' ( (lv_potentialBc_89_0= RULE_NUMBER ) )
            	    {
            	    otherlv_87=(Token)match(input,149,FOLLOW_11); 

            	    									newLeafNode(otherlv_87, grammarAccess.getBJTModelAccess().getVJCKeyword_4_27_0());
            	    								
            	    otherlv_88=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_88, grammarAccess.getBJTModelAccess().getEqualsSignKeyword_4_27_1());
            	    								
            	    // InternalXSpice.g:6911:9: ( (lv_potentialBc_89_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:6912:10: (lv_potentialBc_89_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:6912:10: (lv_potentialBc_89_0= RULE_NUMBER )
            	    // InternalXSpice.g:6913:11: lv_potentialBc_89_0= RULE_NUMBER
            	    {
            	    lv_potentialBc_89_0=(Token)match(input,RULE_NUMBER,FOLLOW_43); 

            	    											newLeafNode(lv_potentialBc_89_0, grammarAccess.getBJTModelAccess().getPotentialBcNUMBERTerminalRuleCall_4_27_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getBJTModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"potentialBc",
            	    												lv_potentialBc_89_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBJTModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 29 :
            	    // InternalXSpice.g:6935:4: ({...}? => ( ({...}? => (otherlv_90= 'MJC' otherlv_91= '=' ( (lv_junctionExpBc_92_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:6935:4: ({...}? => ( ({...}? => (otherlv_90= 'MJC' otherlv_91= '=' ( (lv_junctionExpBc_92_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:6936:5: {...}? => ( ({...}? => (otherlv_90= 'MJC' otherlv_91= '=' ( (lv_junctionExpBc_92_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 28) ) {
            	        throw new FailedPredicateException(input, "ruleBJTModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 28)");
            	    }
            	    // InternalXSpice.g:6936:106: ( ({...}? => (otherlv_90= 'MJC' otherlv_91= '=' ( (lv_junctionExpBc_92_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:6937:6: ({...}? => (otherlv_90= 'MJC' otherlv_91= '=' ( (lv_junctionExpBc_92_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 28);
            	    					
            	    // InternalXSpice.g:6940:9: ({...}? => (otherlv_90= 'MJC' otherlv_91= '=' ( (lv_junctionExpBc_92_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:6940:10: {...}? => (otherlv_90= 'MJC' otherlv_91= '=' ( (lv_junctionExpBc_92_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleBJTModel", "true");
            	    }
            	    // InternalXSpice.g:6940:19: (otherlv_90= 'MJC' otherlv_91= '=' ( (lv_junctionExpBc_92_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:6940:20: otherlv_90= 'MJC' otherlv_91= '=' ( (lv_junctionExpBc_92_0= RULE_NUMBER ) )
            	    {
            	    otherlv_90=(Token)match(input,150,FOLLOW_11); 

            	    									newLeafNode(otherlv_90, grammarAccess.getBJTModelAccess().getMJCKeyword_4_28_0());
            	    								
            	    otherlv_91=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_91, grammarAccess.getBJTModelAccess().getEqualsSignKeyword_4_28_1());
            	    								
            	    // InternalXSpice.g:6948:9: ( (lv_junctionExpBc_92_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:6949:10: (lv_junctionExpBc_92_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:6949:10: (lv_junctionExpBc_92_0= RULE_NUMBER )
            	    // InternalXSpice.g:6950:11: lv_junctionExpBc_92_0= RULE_NUMBER
            	    {
            	    lv_junctionExpBc_92_0=(Token)match(input,RULE_NUMBER,FOLLOW_43); 

            	    											newLeafNode(lv_junctionExpBc_92_0, grammarAccess.getBJTModelAccess().getJunctionExpBcNUMBERTerminalRuleCall_4_28_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getBJTModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"junctionExpBc",
            	    												lv_junctionExpBc_92_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBJTModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 30 :
            	    // InternalXSpice.g:6972:4: ({...}? => ( ({...}? => (otherlv_93= 'XCJC' otherlv_94= '=' ( (lv_baseFractionBcCap_95_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:6972:4: ({...}? => ( ({...}? => (otherlv_93= 'XCJC' otherlv_94= '=' ( (lv_baseFractionBcCap_95_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:6973:5: {...}? => ( ({...}? => (otherlv_93= 'XCJC' otherlv_94= '=' ( (lv_baseFractionBcCap_95_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 29) ) {
            	        throw new FailedPredicateException(input, "ruleBJTModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 29)");
            	    }
            	    // InternalXSpice.g:6973:106: ( ({...}? => (otherlv_93= 'XCJC' otherlv_94= '=' ( (lv_baseFractionBcCap_95_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:6974:6: ({...}? => (otherlv_93= 'XCJC' otherlv_94= '=' ( (lv_baseFractionBcCap_95_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 29);
            	    					
            	    // InternalXSpice.g:6977:9: ({...}? => (otherlv_93= 'XCJC' otherlv_94= '=' ( (lv_baseFractionBcCap_95_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:6977:10: {...}? => (otherlv_93= 'XCJC' otherlv_94= '=' ( (lv_baseFractionBcCap_95_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleBJTModel", "true");
            	    }
            	    // InternalXSpice.g:6977:19: (otherlv_93= 'XCJC' otherlv_94= '=' ( (lv_baseFractionBcCap_95_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:6977:20: otherlv_93= 'XCJC' otherlv_94= '=' ( (lv_baseFractionBcCap_95_0= RULE_NUMBER ) )
            	    {
            	    otherlv_93=(Token)match(input,151,FOLLOW_11); 

            	    									newLeafNode(otherlv_93, grammarAccess.getBJTModelAccess().getXCJCKeyword_4_29_0());
            	    								
            	    otherlv_94=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_94, grammarAccess.getBJTModelAccess().getEqualsSignKeyword_4_29_1());
            	    								
            	    // InternalXSpice.g:6985:9: ( (lv_baseFractionBcCap_95_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:6986:10: (lv_baseFractionBcCap_95_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:6986:10: (lv_baseFractionBcCap_95_0= RULE_NUMBER )
            	    // InternalXSpice.g:6987:11: lv_baseFractionBcCap_95_0= RULE_NUMBER
            	    {
            	    lv_baseFractionBcCap_95_0=(Token)match(input,RULE_NUMBER,FOLLOW_43); 

            	    											newLeafNode(lv_baseFractionBcCap_95_0, grammarAccess.getBJTModelAccess().getBaseFractionBcCapNUMBERTerminalRuleCall_4_29_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getBJTModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"baseFractionBcCap",
            	    												lv_baseFractionBcCap_95_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBJTModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 31 :
            	    // InternalXSpice.g:7009:4: ({...}? => ( ({...}? => (otherlv_96= 'TR' otherlv_97= '=' ( (lv_transitTimeReverse_98_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:7009:4: ({...}? => ( ({...}? => (otherlv_96= 'TR' otherlv_97= '=' ( (lv_transitTimeReverse_98_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:7010:5: {...}? => ( ({...}? => (otherlv_96= 'TR' otherlv_97= '=' ( (lv_transitTimeReverse_98_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 30) ) {
            	        throw new FailedPredicateException(input, "ruleBJTModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 30)");
            	    }
            	    // InternalXSpice.g:7010:106: ( ({...}? => (otherlv_96= 'TR' otherlv_97= '=' ( (lv_transitTimeReverse_98_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:7011:6: ({...}? => (otherlv_96= 'TR' otherlv_97= '=' ( (lv_transitTimeReverse_98_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 30);
            	    					
            	    // InternalXSpice.g:7014:9: ({...}? => (otherlv_96= 'TR' otherlv_97= '=' ( (lv_transitTimeReverse_98_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:7014:10: {...}? => (otherlv_96= 'TR' otherlv_97= '=' ( (lv_transitTimeReverse_98_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleBJTModel", "true");
            	    }
            	    // InternalXSpice.g:7014:19: (otherlv_96= 'TR' otherlv_97= '=' ( (lv_transitTimeReverse_98_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:7014:20: otherlv_96= 'TR' otherlv_97= '=' ( (lv_transitTimeReverse_98_0= RULE_NUMBER ) )
            	    {
            	    otherlv_96=(Token)match(input,152,FOLLOW_11); 

            	    									newLeafNode(otherlv_96, grammarAccess.getBJTModelAccess().getTRKeyword_4_30_0());
            	    								
            	    otherlv_97=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_97, grammarAccess.getBJTModelAccess().getEqualsSignKeyword_4_30_1());
            	    								
            	    // InternalXSpice.g:7022:9: ( (lv_transitTimeReverse_98_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:7023:10: (lv_transitTimeReverse_98_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:7023:10: (lv_transitTimeReverse_98_0= RULE_NUMBER )
            	    // InternalXSpice.g:7024:11: lv_transitTimeReverse_98_0= RULE_NUMBER
            	    {
            	    lv_transitTimeReverse_98_0=(Token)match(input,RULE_NUMBER,FOLLOW_43); 

            	    											newLeafNode(lv_transitTimeReverse_98_0, grammarAccess.getBJTModelAccess().getTransitTimeReverseNUMBERTerminalRuleCall_4_30_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getBJTModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"transitTimeReverse",
            	    												lv_transitTimeReverse_98_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBJTModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 32 :
            	    // InternalXSpice.g:7046:4: ({...}? => ( ({...}? => (otherlv_99= 'CJS' otherlv_100= '=' ( (lv_capCs_101_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:7046:4: ({...}? => ( ({...}? => (otherlv_99= 'CJS' otherlv_100= '=' ( (lv_capCs_101_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:7047:5: {...}? => ( ({...}? => (otherlv_99= 'CJS' otherlv_100= '=' ( (lv_capCs_101_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 31) ) {
            	        throw new FailedPredicateException(input, "ruleBJTModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 31)");
            	    }
            	    // InternalXSpice.g:7047:106: ( ({...}? => (otherlv_99= 'CJS' otherlv_100= '=' ( (lv_capCs_101_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:7048:6: ({...}? => (otherlv_99= 'CJS' otherlv_100= '=' ( (lv_capCs_101_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 31);
            	    					
            	    // InternalXSpice.g:7051:9: ({...}? => (otherlv_99= 'CJS' otherlv_100= '=' ( (lv_capCs_101_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:7051:10: {...}? => (otherlv_99= 'CJS' otherlv_100= '=' ( (lv_capCs_101_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleBJTModel", "true");
            	    }
            	    // InternalXSpice.g:7051:19: (otherlv_99= 'CJS' otherlv_100= '=' ( (lv_capCs_101_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:7051:20: otherlv_99= 'CJS' otherlv_100= '=' ( (lv_capCs_101_0= RULE_NUMBER ) )
            	    {
            	    otherlv_99=(Token)match(input,153,FOLLOW_11); 

            	    									newLeafNode(otherlv_99, grammarAccess.getBJTModelAccess().getCJSKeyword_4_31_0());
            	    								
            	    otherlv_100=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_100, grammarAccess.getBJTModelAccess().getEqualsSignKeyword_4_31_1());
            	    								
            	    // InternalXSpice.g:7059:9: ( (lv_capCs_101_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:7060:10: (lv_capCs_101_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:7060:10: (lv_capCs_101_0= RULE_NUMBER )
            	    // InternalXSpice.g:7061:11: lv_capCs_101_0= RULE_NUMBER
            	    {
            	    lv_capCs_101_0=(Token)match(input,RULE_NUMBER,FOLLOW_43); 

            	    											newLeafNode(lv_capCs_101_0, grammarAccess.getBJTModelAccess().getCapCsNUMBERTerminalRuleCall_4_31_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getBJTModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"capCs",
            	    												lv_capCs_101_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBJTModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 33 :
            	    // InternalXSpice.g:7083:4: ({...}? => ( ({...}? => (otherlv_102= 'VJS' otherlv_103= '=' ( (lv_potentialSubstrate_104_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:7083:4: ({...}? => ( ({...}? => (otherlv_102= 'VJS' otherlv_103= '=' ( (lv_potentialSubstrate_104_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:7084:5: {...}? => ( ({...}? => (otherlv_102= 'VJS' otherlv_103= '=' ( (lv_potentialSubstrate_104_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 32) ) {
            	        throw new FailedPredicateException(input, "ruleBJTModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 32)");
            	    }
            	    // InternalXSpice.g:7084:106: ( ({...}? => (otherlv_102= 'VJS' otherlv_103= '=' ( (lv_potentialSubstrate_104_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:7085:6: ({...}? => (otherlv_102= 'VJS' otherlv_103= '=' ( (lv_potentialSubstrate_104_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 32);
            	    					
            	    // InternalXSpice.g:7088:9: ({...}? => (otherlv_102= 'VJS' otherlv_103= '=' ( (lv_potentialSubstrate_104_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:7088:10: {...}? => (otherlv_102= 'VJS' otherlv_103= '=' ( (lv_potentialSubstrate_104_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleBJTModel", "true");
            	    }
            	    // InternalXSpice.g:7088:19: (otherlv_102= 'VJS' otherlv_103= '=' ( (lv_potentialSubstrate_104_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:7088:20: otherlv_102= 'VJS' otherlv_103= '=' ( (lv_potentialSubstrate_104_0= RULE_NUMBER ) )
            	    {
            	    otherlv_102=(Token)match(input,154,FOLLOW_11); 

            	    									newLeafNode(otherlv_102, grammarAccess.getBJTModelAccess().getVJSKeyword_4_32_0());
            	    								
            	    otherlv_103=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_103, grammarAccess.getBJTModelAccess().getEqualsSignKeyword_4_32_1());
            	    								
            	    // InternalXSpice.g:7096:9: ( (lv_potentialSubstrate_104_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:7097:10: (lv_potentialSubstrate_104_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:7097:10: (lv_potentialSubstrate_104_0= RULE_NUMBER )
            	    // InternalXSpice.g:7098:11: lv_potentialSubstrate_104_0= RULE_NUMBER
            	    {
            	    lv_potentialSubstrate_104_0=(Token)match(input,RULE_NUMBER,FOLLOW_43); 

            	    											newLeafNode(lv_potentialSubstrate_104_0, grammarAccess.getBJTModelAccess().getPotentialSubstrateNUMBERTerminalRuleCall_4_32_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getBJTModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"potentialSubstrate",
            	    												lv_potentialSubstrate_104_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBJTModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 34 :
            	    // InternalXSpice.g:7120:4: ({...}? => ( ({...}? => (otherlv_105= 'MJS' otherlv_106= '=' ( (lv_exponentialSubstrate_107_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:7120:4: ({...}? => ( ({...}? => (otherlv_105= 'MJS' otherlv_106= '=' ( (lv_exponentialSubstrate_107_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:7121:5: {...}? => ( ({...}? => (otherlv_105= 'MJS' otherlv_106= '=' ( (lv_exponentialSubstrate_107_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 33) ) {
            	        throw new FailedPredicateException(input, "ruleBJTModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 33)");
            	    }
            	    // InternalXSpice.g:7121:106: ( ({...}? => (otherlv_105= 'MJS' otherlv_106= '=' ( (lv_exponentialSubstrate_107_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:7122:6: ({...}? => (otherlv_105= 'MJS' otherlv_106= '=' ( (lv_exponentialSubstrate_107_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 33);
            	    					
            	    // InternalXSpice.g:7125:9: ({...}? => (otherlv_105= 'MJS' otherlv_106= '=' ( (lv_exponentialSubstrate_107_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:7125:10: {...}? => (otherlv_105= 'MJS' otherlv_106= '=' ( (lv_exponentialSubstrate_107_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleBJTModel", "true");
            	    }
            	    // InternalXSpice.g:7125:19: (otherlv_105= 'MJS' otherlv_106= '=' ( (lv_exponentialSubstrate_107_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:7125:20: otherlv_105= 'MJS' otherlv_106= '=' ( (lv_exponentialSubstrate_107_0= RULE_NUMBER ) )
            	    {
            	    otherlv_105=(Token)match(input,155,FOLLOW_11); 

            	    									newLeafNode(otherlv_105, grammarAccess.getBJTModelAccess().getMJSKeyword_4_33_0());
            	    								
            	    otherlv_106=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_106, grammarAccess.getBJTModelAccess().getEqualsSignKeyword_4_33_1());
            	    								
            	    // InternalXSpice.g:7133:9: ( (lv_exponentialSubstrate_107_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:7134:10: (lv_exponentialSubstrate_107_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:7134:10: (lv_exponentialSubstrate_107_0= RULE_NUMBER )
            	    // InternalXSpice.g:7135:11: lv_exponentialSubstrate_107_0= RULE_NUMBER
            	    {
            	    lv_exponentialSubstrate_107_0=(Token)match(input,RULE_NUMBER,FOLLOW_43); 

            	    											newLeafNode(lv_exponentialSubstrate_107_0, grammarAccess.getBJTModelAccess().getExponentialSubstrateNUMBERTerminalRuleCall_4_33_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getBJTModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"exponentialSubstrate",
            	    												lv_exponentialSubstrate_107_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBJTModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 35 :
            	    // InternalXSpice.g:7157:4: ({...}? => ( ({...}? => (otherlv_108= 'XTB' otherlv_109= '=' ( (lv_betaExponent_110_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:7157:4: ({...}? => ( ({...}? => (otherlv_108= 'XTB' otherlv_109= '=' ( (lv_betaExponent_110_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:7158:5: {...}? => ( ({...}? => (otherlv_108= 'XTB' otherlv_109= '=' ( (lv_betaExponent_110_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 34) ) {
            	        throw new FailedPredicateException(input, "ruleBJTModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 34)");
            	    }
            	    // InternalXSpice.g:7158:106: ( ({...}? => (otherlv_108= 'XTB' otherlv_109= '=' ( (lv_betaExponent_110_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:7159:6: ({...}? => (otherlv_108= 'XTB' otherlv_109= '=' ( (lv_betaExponent_110_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 34);
            	    					
            	    // InternalXSpice.g:7162:9: ({...}? => (otherlv_108= 'XTB' otherlv_109= '=' ( (lv_betaExponent_110_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:7162:10: {...}? => (otherlv_108= 'XTB' otherlv_109= '=' ( (lv_betaExponent_110_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleBJTModel", "true");
            	    }
            	    // InternalXSpice.g:7162:19: (otherlv_108= 'XTB' otherlv_109= '=' ( (lv_betaExponent_110_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:7162:20: otherlv_108= 'XTB' otherlv_109= '=' ( (lv_betaExponent_110_0= RULE_NUMBER ) )
            	    {
            	    otherlv_108=(Token)match(input,156,FOLLOW_11); 

            	    									newLeafNode(otherlv_108, grammarAccess.getBJTModelAccess().getXTBKeyword_4_34_0());
            	    								
            	    otherlv_109=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_109, grammarAccess.getBJTModelAccess().getEqualsSignKeyword_4_34_1());
            	    								
            	    // InternalXSpice.g:7170:9: ( (lv_betaExponent_110_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:7171:10: (lv_betaExponent_110_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:7171:10: (lv_betaExponent_110_0= RULE_NUMBER )
            	    // InternalXSpice.g:7172:11: lv_betaExponent_110_0= RULE_NUMBER
            	    {
            	    lv_betaExponent_110_0=(Token)match(input,RULE_NUMBER,FOLLOW_43); 

            	    											newLeafNode(lv_betaExponent_110_0, grammarAccess.getBJTModelAccess().getBetaExponentNUMBERTerminalRuleCall_4_34_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getBJTModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"betaExponent",
            	    												lv_betaExponent_110_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBJTModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 36 :
            	    // InternalXSpice.g:7194:4: ({...}? => ( ({...}? => (otherlv_111= 'EG' otherlv_112= '=' ( (lv_energyGap_113_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:7194:4: ({...}? => ( ({...}? => (otherlv_111= 'EG' otherlv_112= '=' ( (lv_energyGap_113_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:7195:5: {...}? => ( ({...}? => (otherlv_111= 'EG' otherlv_112= '=' ( (lv_energyGap_113_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 35) ) {
            	        throw new FailedPredicateException(input, "ruleBJTModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 35)");
            	    }
            	    // InternalXSpice.g:7195:106: ( ({...}? => (otherlv_111= 'EG' otherlv_112= '=' ( (lv_energyGap_113_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:7196:6: ({...}? => (otherlv_111= 'EG' otherlv_112= '=' ( (lv_energyGap_113_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 35);
            	    					
            	    // InternalXSpice.g:7199:9: ({...}? => (otherlv_111= 'EG' otherlv_112= '=' ( (lv_energyGap_113_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:7199:10: {...}? => (otherlv_111= 'EG' otherlv_112= '=' ( (lv_energyGap_113_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleBJTModel", "true");
            	    }
            	    // InternalXSpice.g:7199:19: (otherlv_111= 'EG' otherlv_112= '=' ( (lv_energyGap_113_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:7199:20: otherlv_111= 'EG' otherlv_112= '=' ( (lv_energyGap_113_0= RULE_NUMBER ) )
            	    {
            	    otherlv_111=(Token)match(input,76,FOLLOW_11); 

            	    									newLeafNode(otherlv_111, grammarAccess.getBJTModelAccess().getEGKeyword_4_35_0());
            	    								
            	    otherlv_112=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_112, grammarAccess.getBJTModelAccess().getEqualsSignKeyword_4_35_1());
            	    								
            	    // InternalXSpice.g:7207:9: ( (lv_energyGap_113_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:7208:10: (lv_energyGap_113_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:7208:10: (lv_energyGap_113_0= RULE_NUMBER )
            	    // InternalXSpice.g:7209:11: lv_energyGap_113_0= RULE_NUMBER
            	    {
            	    lv_energyGap_113_0=(Token)match(input,RULE_NUMBER,FOLLOW_43); 

            	    											newLeafNode(lv_energyGap_113_0, grammarAccess.getBJTModelAccess().getEnergyGapNUMBERTerminalRuleCall_4_35_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getBJTModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"energyGap",
            	    												lv_energyGap_113_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBJTModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 37 :
            	    // InternalXSpice.g:7231:4: ({...}? => ( ({...}? => (otherlv_114= 'XTI' otherlv_115= '=' ( (lv_tempExpIs_116_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:7231:4: ({...}? => ( ({...}? => (otherlv_114= 'XTI' otherlv_115= '=' ( (lv_tempExpIs_116_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:7232:5: {...}? => ( ({...}? => (otherlv_114= 'XTI' otherlv_115= '=' ( (lv_tempExpIs_116_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 36) ) {
            	        throw new FailedPredicateException(input, "ruleBJTModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 36)");
            	    }
            	    // InternalXSpice.g:7232:106: ( ({...}? => (otherlv_114= 'XTI' otherlv_115= '=' ( (lv_tempExpIs_116_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:7233:6: ({...}? => (otherlv_114= 'XTI' otherlv_115= '=' ( (lv_tempExpIs_116_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 36);
            	    					
            	    // InternalXSpice.g:7236:9: ({...}? => (otherlv_114= 'XTI' otherlv_115= '=' ( (lv_tempExpIs_116_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:7236:10: {...}? => (otherlv_114= 'XTI' otherlv_115= '=' ( (lv_tempExpIs_116_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleBJTModel", "true");
            	    }
            	    // InternalXSpice.g:7236:19: (otherlv_114= 'XTI' otherlv_115= '=' ( (lv_tempExpIs_116_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:7236:20: otherlv_114= 'XTI' otherlv_115= '=' ( (lv_tempExpIs_116_0= RULE_NUMBER ) )
            	    {
            	    otherlv_114=(Token)match(input,77,FOLLOW_11); 

            	    									newLeafNode(otherlv_114, grammarAccess.getBJTModelAccess().getXTIKeyword_4_36_0());
            	    								
            	    otherlv_115=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_115, grammarAccess.getBJTModelAccess().getEqualsSignKeyword_4_36_1());
            	    								
            	    // InternalXSpice.g:7244:9: ( (lv_tempExpIs_116_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:7245:10: (lv_tempExpIs_116_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:7245:10: (lv_tempExpIs_116_0= RULE_NUMBER )
            	    // InternalXSpice.g:7246:11: lv_tempExpIs_116_0= RULE_NUMBER
            	    {
            	    lv_tempExpIs_116_0=(Token)match(input,RULE_NUMBER,FOLLOW_43); 

            	    											newLeafNode(lv_tempExpIs_116_0, grammarAccess.getBJTModelAccess().getTempExpIsNUMBERTerminalRuleCall_4_36_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getBJTModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"tempExpIs",
            	    												lv_tempExpIs_116_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBJTModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 38 :
            	    // InternalXSpice.g:7268:4: ({...}? => ( ({...}? => (otherlv_117= 'KF' otherlv_118= '=' ( (lv_flickerNoiseCoefficient_119_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:7268:4: ({...}? => ( ({...}? => (otherlv_117= 'KF' otherlv_118= '=' ( (lv_flickerNoiseCoefficient_119_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:7269:5: {...}? => ( ({...}? => (otherlv_117= 'KF' otherlv_118= '=' ( (lv_flickerNoiseCoefficient_119_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 37) ) {
            	        throw new FailedPredicateException(input, "ruleBJTModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 37)");
            	    }
            	    // InternalXSpice.g:7269:106: ( ({...}? => (otherlv_117= 'KF' otherlv_118= '=' ( (lv_flickerNoiseCoefficient_119_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:7270:6: ({...}? => (otherlv_117= 'KF' otherlv_118= '=' ( (lv_flickerNoiseCoefficient_119_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 37);
            	    					
            	    // InternalXSpice.g:7273:9: ({...}? => (otherlv_117= 'KF' otherlv_118= '=' ( (lv_flickerNoiseCoefficient_119_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:7273:10: {...}? => (otherlv_117= 'KF' otherlv_118= '=' ( (lv_flickerNoiseCoefficient_119_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleBJTModel", "true");
            	    }
            	    // InternalXSpice.g:7273:19: (otherlv_117= 'KF' otherlv_118= '=' ( (lv_flickerNoiseCoefficient_119_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:7273:20: otherlv_117= 'KF' otherlv_118= '=' ( (lv_flickerNoiseCoefficient_119_0= RULE_NUMBER ) )
            	    {
            	    otherlv_117=(Token)match(input,78,FOLLOW_11); 

            	    									newLeafNode(otherlv_117, grammarAccess.getBJTModelAccess().getKFKeyword_4_37_0());
            	    								
            	    otherlv_118=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_118, grammarAccess.getBJTModelAccess().getEqualsSignKeyword_4_37_1());
            	    								
            	    // InternalXSpice.g:7281:9: ( (lv_flickerNoiseCoefficient_119_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:7282:10: (lv_flickerNoiseCoefficient_119_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:7282:10: (lv_flickerNoiseCoefficient_119_0= RULE_NUMBER )
            	    // InternalXSpice.g:7283:11: lv_flickerNoiseCoefficient_119_0= RULE_NUMBER
            	    {
            	    lv_flickerNoiseCoefficient_119_0=(Token)match(input,RULE_NUMBER,FOLLOW_43); 

            	    											newLeafNode(lv_flickerNoiseCoefficient_119_0, grammarAccess.getBJTModelAccess().getFlickerNoiseCoefficientNUMBERTerminalRuleCall_4_37_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getBJTModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"flickerNoiseCoefficient",
            	    												lv_flickerNoiseCoefficient_119_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBJTModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 39 :
            	    // InternalXSpice.g:7305:4: ({...}? => ( ({...}? => (otherlv_120= 'AF' otherlv_121= '=' ( (lv_flickerNoiseExponent_122_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:7305:4: ({...}? => ( ({...}? => (otherlv_120= 'AF' otherlv_121= '=' ( (lv_flickerNoiseExponent_122_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:7306:5: {...}? => ( ({...}? => (otherlv_120= 'AF' otherlv_121= '=' ( (lv_flickerNoiseExponent_122_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 38) ) {
            	        throw new FailedPredicateException(input, "ruleBJTModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 38)");
            	    }
            	    // InternalXSpice.g:7306:106: ( ({...}? => (otherlv_120= 'AF' otherlv_121= '=' ( (lv_flickerNoiseExponent_122_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:7307:6: ({...}? => (otherlv_120= 'AF' otherlv_121= '=' ( (lv_flickerNoiseExponent_122_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 38);
            	    					
            	    // InternalXSpice.g:7310:9: ({...}? => (otherlv_120= 'AF' otherlv_121= '=' ( (lv_flickerNoiseExponent_122_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:7310:10: {...}? => (otherlv_120= 'AF' otherlv_121= '=' ( (lv_flickerNoiseExponent_122_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleBJTModel", "true");
            	    }
            	    // InternalXSpice.g:7310:19: (otherlv_120= 'AF' otherlv_121= '=' ( (lv_flickerNoiseExponent_122_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:7310:20: otherlv_120= 'AF' otherlv_121= '=' ( (lv_flickerNoiseExponent_122_0= RULE_NUMBER ) )
            	    {
            	    otherlv_120=(Token)match(input,79,FOLLOW_11); 

            	    									newLeafNode(otherlv_120, grammarAccess.getBJTModelAccess().getAFKeyword_4_38_0());
            	    								
            	    otherlv_121=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_121, grammarAccess.getBJTModelAccess().getEqualsSignKeyword_4_38_1());
            	    								
            	    // InternalXSpice.g:7318:9: ( (lv_flickerNoiseExponent_122_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:7319:10: (lv_flickerNoiseExponent_122_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:7319:10: (lv_flickerNoiseExponent_122_0= RULE_NUMBER )
            	    // InternalXSpice.g:7320:11: lv_flickerNoiseExponent_122_0= RULE_NUMBER
            	    {
            	    lv_flickerNoiseExponent_122_0=(Token)match(input,RULE_NUMBER,FOLLOW_43); 

            	    											newLeafNode(lv_flickerNoiseExponent_122_0, grammarAccess.getBJTModelAccess().getFlickerNoiseExponentNUMBERTerminalRuleCall_4_38_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getBJTModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"flickerNoiseExponent",
            	    												lv_flickerNoiseExponent_122_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBJTModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 40 :
            	    // InternalXSpice.g:7342:4: ({...}? => ( ({...}? => (otherlv_123= 'FC' otherlv_124= '=' ( (lv_depletionCapCoefficient_125_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:7342:4: ({...}? => ( ({...}? => (otherlv_123= 'FC' otherlv_124= '=' ( (lv_depletionCapCoefficient_125_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:7343:5: {...}? => ( ({...}? => (otherlv_123= 'FC' otherlv_124= '=' ( (lv_depletionCapCoefficient_125_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 39) ) {
            	        throw new FailedPredicateException(input, "ruleBJTModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 39)");
            	    }
            	    // InternalXSpice.g:7343:106: ( ({...}? => (otherlv_123= 'FC' otherlv_124= '=' ( (lv_depletionCapCoefficient_125_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:7344:6: ({...}? => (otherlv_123= 'FC' otherlv_124= '=' ( (lv_depletionCapCoefficient_125_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 39);
            	    					
            	    // InternalXSpice.g:7347:9: ({...}? => (otherlv_123= 'FC' otherlv_124= '=' ( (lv_depletionCapCoefficient_125_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:7347:10: {...}? => (otherlv_123= 'FC' otherlv_124= '=' ( (lv_depletionCapCoefficient_125_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleBJTModel", "true");
            	    }
            	    // InternalXSpice.g:7347:19: (otherlv_123= 'FC' otherlv_124= '=' ( (lv_depletionCapCoefficient_125_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:7347:20: otherlv_123= 'FC' otherlv_124= '=' ( (lv_depletionCapCoefficient_125_0= RULE_NUMBER ) )
            	    {
            	    otherlv_123=(Token)match(input,80,FOLLOW_11); 

            	    									newLeafNode(otherlv_123, grammarAccess.getBJTModelAccess().getFCKeyword_4_39_0());
            	    								
            	    otherlv_124=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_124, grammarAccess.getBJTModelAccess().getEqualsSignKeyword_4_39_1());
            	    								
            	    // InternalXSpice.g:7355:9: ( (lv_depletionCapCoefficient_125_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:7356:10: (lv_depletionCapCoefficient_125_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:7356:10: (lv_depletionCapCoefficient_125_0= RULE_NUMBER )
            	    // InternalXSpice.g:7357:11: lv_depletionCapCoefficient_125_0= RULE_NUMBER
            	    {
            	    lv_depletionCapCoefficient_125_0=(Token)match(input,RULE_NUMBER,FOLLOW_43); 

            	    											newLeafNode(lv_depletionCapCoefficient_125_0, grammarAccess.getBJTModelAccess().getDepletionCapCoefficientNUMBERTerminalRuleCall_4_39_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getBJTModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"depletionCapCoefficient",
            	    												lv_depletionCapCoefficient_125_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBJTModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 41 :
            	    // InternalXSpice.g:7379:4: ({...}? => ( ({...}? => (otherlv_126= 'TNOM' otherlv_127= '=' ( (lv_nominalTemperature_128_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:7379:4: ({...}? => ( ({...}? => (otherlv_126= 'TNOM' otherlv_127= '=' ( (lv_nominalTemperature_128_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:7380:5: {...}? => ( ({...}? => (otherlv_126= 'TNOM' otherlv_127= '=' ( (lv_nominalTemperature_128_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 40) ) {
            	        throw new FailedPredicateException(input, "ruleBJTModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 40)");
            	    }
            	    // InternalXSpice.g:7380:106: ( ({...}? => (otherlv_126= 'TNOM' otherlv_127= '=' ( (lv_nominalTemperature_128_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:7381:6: ({...}? => (otherlv_126= 'TNOM' otherlv_127= '=' ( (lv_nominalTemperature_128_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 40);
            	    					
            	    // InternalXSpice.g:7384:9: ({...}? => (otherlv_126= 'TNOM' otherlv_127= '=' ( (lv_nominalTemperature_128_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:7384:10: {...}? => (otherlv_126= 'TNOM' otherlv_127= '=' ( (lv_nominalTemperature_128_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleBJTModel", "true");
            	    }
            	    // InternalXSpice.g:7384:19: (otherlv_126= 'TNOM' otherlv_127= '=' ( (lv_nominalTemperature_128_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:7384:20: otherlv_126= 'TNOM' otherlv_127= '=' ( (lv_nominalTemperature_128_0= RULE_NUMBER ) )
            	    {
            	    otherlv_126=(Token)match(input,51,FOLLOW_11); 

            	    									newLeafNode(otherlv_126, grammarAccess.getBJTModelAccess().getTNOMKeyword_4_40_0());
            	    								
            	    otherlv_127=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_127, grammarAccess.getBJTModelAccess().getEqualsSignKeyword_4_40_1());
            	    								
            	    // InternalXSpice.g:7392:9: ( (lv_nominalTemperature_128_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:7393:10: (lv_nominalTemperature_128_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:7393:10: (lv_nominalTemperature_128_0= RULE_NUMBER )
            	    // InternalXSpice.g:7394:11: lv_nominalTemperature_128_0= RULE_NUMBER
            	    {
            	    lv_nominalTemperature_128_0=(Token)match(input,RULE_NUMBER,FOLLOW_43); 

            	    											newLeafNode(lv_nominalTemperature_128_0, grammarAccess.getBJTModelAccess().getNominalTemperatureNUMBERTerminalRuleCall_4_40_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getBJTModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"nominalTemperature",
            	    												lv_nominalTemperature_128_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBJTModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop36;
                }
            } while (true);


            }


            }

             
            				  getUnorderedGroupHelper().leave(grammarAccess.getBJTModelAccess().getUnorderedGroup_4());
            				

            }

            otherlv_129=(Token)match(input,52,FOLLOW_2); 

            			newLeafNode(otherlv_129, grammarAccess.getBJTModelAccess().getRightParenthesisKeyword_5());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBJTModel"


    // $ANTLR start "entryRuleJFET"
    // InternalXSpice.g:7431:1: entryRuleJFET returns [EObject current=null] : iv_ruleJFET= ruleJFET EOF ;
    public final EObject entryRuleJFET() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJFET = null;


        try {
            // InternalXSpice.g:7431:45: (iv_ruleJFET= ruleJFET EOF )
            // InternalXSpice.g:7432:2: iv_ruleJFET= ruleJFET EOF
            {
             newCompositeNode(grammarAccess.getJFETRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleJFET=ruleJFET();

            state._fsp--;

             current =iv_ruleJFET; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJFET"


    // $ANTLR start "ruleJFET"
    // InternalXSpice.g:7438:1: ruleJFET returns [EObject current=null] : ( ( ( (lv_name_0_1= RULE_TNID | lv_name_0_2= RULE_TPID ) ) ) ( (lv_nodes_1_0= RULE_NODE ) ) ( (lv_nodes_2_0= RULE_NODE ) ) ( (lv_nodes_3_0= RULE_NODE ) ) ( (lv_model_4_0= ruleLabel ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'AREA' otherlv_7= '=' ( (lv_area_8_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_off_9_0= 'OFF' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'IC' otherlv_11= '=' ( (lv_ic_12_0= RULE_NUMBER ) ) otherlv_13= ',' ( (lv_ic_14_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'TEMP' otherlv_16= '=' ( (lv_temp_17_0= RULE_NUMBER ) ) ) ) ) ) )* ) ) ) ) ;
    public final EObject ruleJFET() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_1=null;
        Token lv_name_0_2=null;
        Token lv_nodes_1_0=null;
        Token lv_nodes_2_0=null;
        Token lv_nodes_3_0=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token lv_area_8_0=null;
        Token lv_off_9_0=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token lv_ic_12_0=null;
        Token otherlv_13=null;
        Token lv_ic_14_0=null;
        Token otherlv_15=null;
        Token otherlv_16=null;
        Token lv_temp_17_0=null;
        AntlrDatatypeRuleToken lv_model_4_0 = null;



        	enterRule();

        try {
            // InternalXSpice.g:7444:2: ( ( ( ( (lv_name_0_1= RULE_TNID | lv_name_0_2= RULE_TPID ) ) ) ( (lv_nodes_1_0= RULE_NODE ) ) ( (lv_nodes_2_0= RULE_NODE ) ) ( (lv_nodes_3_0= RULE_NODE ) ) ( (lv_model_4_0= ruleLabel ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'AREA' otherlv_7= '=' ( (lv_area_8_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_off_9_0= 'OFF' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'IC' otherlv_11= '=' ( (lv_ic_12_0= RULE_NUMBER ) ) otherlv_13= ',' ( (lv_ic_14_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'TEMP' otherlv_16= '=' ( (lv_temp_17_0= RULE_NUMBER ) ) ) ) ) ) )* ) ) ) ) )
            // InternalXSpice.g:7445:2: ( ( ( (lv_name_0_1= RULE_TNID | lv_name_0_2= RULE_TPID ) ) ) ( (lv_nodes_1_0= RULE_NODE ) ) ( (lv_nodes_2_0= RULE_NODE ) ) ( (lv_nodes_3_0= RULE_NODE ) ) ( (lv_model_4_0= ruleLabel ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'AREA' otherlv_7= '=' ( (lv_area_8_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_off_9_0= 'OFF' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'IC' otherlv_11= '=' ( (lv_ic_12_0= RULE_NUMBER ) ) otherlv_13= ',' ( (lv_ic_14_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'TEMP' otherlv_16= '=' ( (lv_temp_17_0= RULE_NUMBER ) ) ) ) ) ) )* ) ) ) )
            {
            // InternalXSpice.g:7445:2: ( ( ( (lv_name_0_1= RULE_TNID | lv_name_0_2= RULE_TPID ) ) ) ( (lv_nodes_1_0= RULE_NODE ) ) ( (lv_nodes_2_0= RULE_NODE ) ) ( (lv_nodes_3_0= RULE_NODE ) ) ( (lv_model_4_0= ruleLabel ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'AREA' otherlv_7= '=' ( (lv_area_8_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_off_9_0= 'OFF' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'IC' otherlv_11= '=' ( (lv_ic_12_0= RULE_NUMBER ) ) otherlv_13= ',' ( (lv_ic_14_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'TEMP' otherlv_16= '=' ( (lv_temp_17_0= RULE_NUMBER ) ) ) ) ) ) )* ) ) ) )
            // InternalXSpice.g:7446:3: ( ( (lv_name_0_1= RULE_TNID | lv_name_0_2= RULE_TPID ) ) ) ( (lv_nodes_1_0= RULE_NODE ) ) ( (lv_nodes_2_0= RULE_NODE ) ) ( (lv_nodes_3_0= RULE_NODE ) ) ( (lv_model_4_0= ruleLabel ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'AREA' otherlv_7= '=' ( (lv_area_8_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_off_9_0= 'OFF' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'IC' otherlv_11= '=' ( (lv_ic_12_0= RULE_NUMBER ) ) otherlv_13= ',' ( (lv_ic_14_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'TEMP' otherlv_16= '=' ( (lv_temp_17_0= RULE_NUMBER ) ) ) ) ) ) )* ) ) )
            {
            // InternalXSpice.g:7446:3: ( ( (lv_name_0_1= RULE_TNID | lv_name_0_2= RULE_TPID ) ) )
            // InternalXSpice.g:7447:4: ( (lv_name_0_1= RULE_TNID | lv_name_0_2= RULE_TPID ) )
            {
            // InternalXSpice.g:7447:4: ( (lv_name_0_1= RULE_TNID | lv_name_0_2= RULE_TPID ) )
            // InternalXSpice.g:7448:5: (lv_name_0_1= RULE_TNID | lv_name_0_2= RULE_TPID )
            {
            // InternalXSpice.g:7448:5: (lv_name_0_1= RULE_TNID | lv_name_0_2= RULE_TPID )
            int alt37=2;
            int LA37_0 = input.LA(1);

            if ( (LA37_0==RULE_TNID) ) {
                alt37=1;
            }
            else if ( (LA37_0==RULE_TPID) ) {
                alt37=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 37, 0, input);

                throw nvae;
            }
            switch (alt37) {
                case 1 :
                    // InternalXSpice.g:7449:6: lv_name_0_1= RULE_TNID
                    {
                    lv_name_0_1=(Token)match(input,RULE_TNID,FOLLOW_5); 

                    						newLeafNode(lv_name_0_1, grammarAccess.getJFETAccess().getNameTNIDTerminalRuleCall_0_0_0());
                    					

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getJFETRule());
                    						}
                    						setWithLastConsumed(
                    							current,
                    							"name",
                    							lv_name_0_1,
                    							"com.xtext.ravornyo.xspice.XSpice.TNID");
                    					

                    }
                    break;
                case 2 :
                    // InternalXSpice.g:7464:6: lv_name_0_2= RULE_TPID
                    {
                    lv_name_0_2=(Token)match(input,RULE_TPID,FOLLOW_5); 

                    						newLeafNode(lv_name_0_2, grammarAccess.getJFETAccess().getNameTPIDTerminalRuleCall_0_0_1());
                    					

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getJFETRule());
                    						}
                    						setWithLastConsumed(
                    							current,
                    							"name",
                    							lv_name_0_2,
                    							"com.xtext.ravornyo.xspice.XSpice.TPID");
                    					

                    }
                    break;

            }


            }


            }

            // InternalXSpice.g:7481:3: ( (lv_nodes_1_0= RULE_NODE ) )
            // InternalXSpice.g:7482:4: (lv_nodes_1_0= RULE_NODE )
            {
            // InternalXSpice.g:7482:4: (lv_nodes_1_0= RULE_NODE )
            // InternalXSpice.g:7483:5: lv_nodes_1_0= RULE_NODE
            {
            lv_nodes_1_0=(Token)match(input,RULE_NODE,FOLLOW_5); 

            					newLeafNode(lv_nodes_1_0, grammarAccess.getJFETAccess().getNodesNODETerminalRuleCall_1_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getJFETRule());
            					}
            					addWithLastConsumed(
            						current,
            						"nodes",
            						lv_nodes_1_0,
            						"com.xtext.ravornyo.xspice.XSpice.NODE");
            				

            }


            }

            // InternalXSpice.g:7499:3: ( (lv_nodes_2_0= RULE_NODE ) )
            // InternalXSpice.g:7500:4: (lv_nodes_2_0= RULE_NODE )
            {
            // InternalXSpice.g:7500:4: (lv_nodes_2_0= RULE_NODE )
            // InternalXSpice.g:7501:5: lv_nodes_2_0= RULE_NODE
            {
            lv_nodes_2_0=(Token)match(input,RULE_NODE,FOLLOW_5); 

            					newLeafNode(lv_nodes_2_0, grammarAccess.getJFETAccess().getNodesNODETerminalRuleCall_2_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getJFETRule());
            					}
            					addWithLastConsumed(
            						current,
            						"nodes",
            						lv_nodes_2_0,
            						"com.xtext.ravornyo.xspice.XSpice.NODE");
            				

            }


            }

            // InternalXSpice.g:7517:3: ( (lv_nodes_3_0= RULE_NODE ) )
            // InternalXSpice.g:7518:4: (lv_nodes_3_0= RULE_NODE )
            {
            // InternalXSpice.g:7518:4: (lv_nodes_3_0= RULE_NODE )
            // InternalXSpice.g:7519:5: lv_nodes_3_0= RULE_NODE
            {
            lv_nodes_3_0=(Token)match(input,RULE_NODE,FOLLOW_4); 

            					newLeafNode(lv_nodes_3_0, grammarAccess.getJFETAccess().getNodesNODETerminalRuleCall_3_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getJFETRule());
            					}
            					addWithLastConsumed(
            						current,
            						"nodes",
            						lv_nodes_3_0,
            						"com.xtext.ravornyo.xspice.XSpice.NODE");
            				

            }


            }

            // InternalXSpice.g:7535:3: ( (lv_model_4_0= ruleLabel ) )
            // InternalXSpice.g:7536:4: (lv_model_4_0= ruleLabel )
            {
            // InternalXSpice.g:7536:4: (lv_model_4_0= ruleLabel )
            // InternalXSpice.g:7537:5: lv_model_4_0= ruleLabel
            {

            					newCompositeNode(grammarAccess.getJFETAccess().getModelLabelParserRuleCall_4_0());
            				
            pushFollow(FOLLOW_33);
            lv_model_4_0=ruleLabel();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getJFETRule());
            					}
            					set(
            						current,
            						"model",
            						lv_model_4_0,
            						"com.xtext.ravornyo.xspice.XSpice.Label");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            // InternalXSpice.g:7554:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'AREA' otherlv_7= '=' ( (lv_area_8_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_off_9_0= 'OFF' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'IC' otherlv_11= '=' ( (lv_ic_12_0= RULE_NUMBER ) ) otherlv_13= ',' ( (lv_ic_14_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'TEMP' otherlv_16= '=' ( (lv_temp_17_0= RULE_NUMBER ) ) ) ) ) ) )* ) ) )
            // InternalXSpice.g:7555:4: ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'AREA' otherlv_7= '=' ( (lv_area_8_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_off_9_0= 'OFF' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'IC' otherlv_11= '=' ( (lv_ic_12_0= RULE_NUMBER ) ) otherlv_13= ',' ( (lv_ic_14_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'TEMP' otherlv_16= '=' ( (lv_temp_17_0= RULE_NUMBER ) ) ) ) ) ) )* ) )
            {
            // InternalXSpice.g:7555:4: ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'AREA' otherlv_7= '=' ( (lv_area_8_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_off_9_0= 'OFF' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'IC' otherlv_11= '=' ( (lv_ic_12_0= RULE_NUMBER ) ) otherlv_13= ',' ( (lv_ic_14_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'TEMP' otherlv_16= '=' ( (lv_temp_17_0= RULE_NUMBER ) ) ) ) ) ) )* ) )
            // InternalXSpice.g:7556:5: ( ( ({...}? => ( ({...}? => (otherlv_6= 'AREA' otherlv_7= '=' ( (lv_area_8_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_off_9_0= 'OFF' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'IC' otherlv_11= '=' ( (lv_ic_12_0= RULE_NUMBER ) ) otherlv_13= ',' ( (lv_ic_14_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'TEMP' otherlv_16= '=' ( (lv_temp_17_0= RULE_NUMBER ) ) ) ) ) ) )* )
            {
             
            				  getUnorderedGroupHelper().enter(grammarAccess.getJFETAccess().getUnorderedGroup_5());
            				
            // InternalXSpice.g:7559:5: ( ( ({...}? => ( ({...}? => (otherlv_6= 'AREA' otherlv_7= '=' ( (lv_area_8_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_off_9_0= 'OFF' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'IC' otherlv_11= '=' ( (lv_ic_12_0= RULE_NUMBER ) ) otherlv_13= ',' ( (lv_ic_14_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'TEMP' otherlv_16= '=' ( (lv_temp_17_0= RULE_NUMBER ) ) ) ) ) ) )* )
            // InternalXSpice.g:7560:6: ( ({...}? => ( ({...}? => (otherlv_6= 'AREA' otherlv_7= '=' ( (lv_area_8_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_off_9_0= 'OFF' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'IC' otherlv_11= '=' ( (lv_ic_12_0= RULE_NUMBER ) ) otherlv_13= ',' ( (lv_ic_14_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'TEMP' otherlv_16= '=' ( (lv_temp_17_0= RULE_NUMBER ) ) ) ) ) ) )*
            {
            // InternalXSpice.g:7560:6: ( ({...}? => ( ({...}? => (otherlv_6= 'AREA' otherlv_7= '=' ( (lv_area_8_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_off_9_0= 'OFF' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'IC' otherlv_11= '=' ( (lv_ic_12_0= RULE_NUMBER ) ) otherlv_13= ',' ( (lv_ic_14_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'TEMP' otherlv_16= '=' ( (lv_temp_17_0= RULE_NUMBER ) ) ) ) ) ) )*
            loop38:
            do {
                int alt38=5;
                int LA38_0 = input.LA(1);

                if ( LA38_0 == 67 && getUnorderedGroupHelper().canSelect(grammarAccess.getJFETAccess().getUnorderedGroup_5(), 0) ) {
                    alt38=1;
                }
                else if ( LA38_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getJFETAccess().getUnorderedGroup_5(), 1) ) {
                    alt38=2;
                }
                else if ( LA38_0 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getJFETAccess().getUnorderedGroup_5(), 2) ) {
                    alt38=3;
                }
                else if ( LA38_0 == 42 && getUnorderedGroupHelper().canSelect(grammarAccess.getJFETAccess().getUnorderedGroup_5(), 3) ) {
                    alt38=4;
                }


                switch (alt38) {
            	case 1 :
            	    // InternalXSpice.g:7561:4: ({...}? => ( ({...}? => (otherlv_6= 'AREA' otherlv_7= '=' ( (lv_area_8_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:7561:4: ({...}? => ( ({...}? => (otherlv_6= 'AREA' otherlv_7= '=' ( (lv_area_8_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:7562:5: {...}? => ( ({...}? => (otherlv_6= 'AREA' otherlv_7= '=' ( (lv_area_8_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getJFETAccess().getUnorderedGroup_5(), 0) ) {
            	        throw new FailedPredicateException(input, "ruleJFET", "getUnorderedGroupHelper().canSelect(grammarAccess.getJFETAccess().getUnorderedGroup_5(), 0)");
            	    }
            	    // InternalXSpice.g:7562:101: ( ({...}? => (otherlv_6= 'AREA' otherlv_7= '=' ( (lv_area_8_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:7563:6: ({...}? => (otherlv_6= 'AREA' otherlv_7= '=' ( (lv_area_8_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getJFETAccess().getUnorderedGroup_5(), 0);
            	    					
            	    // InternalXSpice.g:7566:9: ({...}? => (otherlv_6= 'AREA' otherlv_7= '=' ( (lv_area_8_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:7566:10: {...}? => (otherlv_6= 'AREA' otherlv_7= '=' ( (lv_area_8_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleJFET", "true");
            	    }
            	    // InternalXSpice.g:7566:19: (otherlv_6= 'AREA' otherlv_7= '=' ( (lv_area_8_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:7566:20: otherlv_6= 'AREA' otherlv_7= '=' ( (lv_area_8_0= RULE_NUMBER ) )
            	    {
            	    otherlv_6=(Token)match(input,67,FOLLOW_11); 

            	    									newLeafNode(otherlv_6, grammarAccess.getJFETAccess().getAREAKeyword_5_0_0());
            	    								
            	    otherlv_7=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_7, grammarAccess.getJFETAccess().getEqualsSignKeyword_5_0_1());
            	    								
            	    // InternalXSpice.g:7574:9: ( (lv_area_8_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:7575:10: (lv_area_8_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:7575:10: (lv_area_8_0= RULE_NUMBER )
            	    // InternalXSpice.g:7576:11: lv_area_8_0= RULE_NUMBER
            	    {
            	    lv_area_8_0=(Token)match(input,RULE_NUMBER,FOLLOW_33); 

            	    											newLeafNode(lv_area_8_0, grammarAccess.getJFETAccess().getAreaNUMBERTerminalRuleCall_5_0_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getJFETRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"area",
            	    												lv_area_8_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getJFETAccess().getUnorderedGroup_5());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalXSpice.g:7598:4: ({...}? => ( ({...}? => ( (lv_off_9_0= 'OFF' ) ) ) ) )
            	    {
            	    // InternalXSpice.g:7598:4: ({...}? => ( ({...}? => ( (lv_off_9_0= 'OFF' ) ) ) ) )
            	    // InternalXSpice.g:7599:5: {...}? => ( ({...}? => ( (lv_off_9_0= 'OFF' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getJFETAccess().getUnorderedGroup_5(), 1) ) {
            	        throw new FailedPredicateException(input, "ruleJFET", "getUnorderedGroupHelper().canSelect(grammarAccess.getJFETAccess().getUnorderedGroup_5(), 1)");
            	    }
            	    // InternalXSpice.g:7599:101: ( ({...}? => ( (lv_off_9_0= 'OFF' ) ) ) )
            	    // InternalXSpice.g:7600:6: ({...}? => ( (lv_off_9_0= 'OFF' ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getJFETAccess().getUnorderedGroup_5(), 1);
            	    					
            	    // InternalXSpice.g:7603:9: ({...}? => ( (lv_off_9_0= 'OFF' ) ) )
            	    // InternalXSpice.g:7603:10: {...}? => ( (lv_off_9_0= 'OFF' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleJFET", "true");
            	    }
            	    // InternalXSpice.g:7603:19: ( (lv_off_9_0= 'OFF' ) )
            	    // InternalXSpice.g:7603:20: (lv_off_9_0= 'OFF' )
            	    {
            	    // InternalXSpice.g:7603:20: (lv_off_9_0= 'OFF' )
            	    // InternalXSpice.g:7604:10: lv_off_9_0= 'OFF'
            	    {
            	    lv_off_9_0=(Token)match(input,58,FOLLOW_33); 

            	    										newLeafNode(lv_off_9_0, grammarAccess.getJFETAccess().getOffOFFKeyword_5_1_0());
            	    									

            	    										if (current==null) {
            	    											current = createModelElement(grammarAccess.getJFETRule());
            	    										}
            	    										setWithLastConsumed(current, "off", true, "OFF");
            	    									

            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getJFETAccess().getUnorderedGroup_5());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalXSpice.g:7621:4: ({...}? => ( ({...}? => (otherlv_10= 'IC' otherlv_11= '=' ( (lv_ic_12_0= RULE_NUMBER ) ) otherlv_13= ',' ( (lv_ic_14_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:7621:4: ({...}? => ( ({...}? => (otherlv_10= 'IC' otherlv_11= '=' ( (lv_ic_12_0= RULE_NUMBER ) ) otherlv_13= ',' ( (lv_ic_14_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:7622:5: {...}? => ( ({...}? => (otherlv_10= 'IC' otherlv_11= '=' ( (lv_ic_12_0= RULE_NUMBER ) ) otherlv_13= ',' ( (lv_ic_14_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getJFETAccess().getUnorderedGroup_5(), 2) ) {
            	        throw new FailedPredicateException(input, "ruleJFET", "getUnorderedGroupHelper().canSelect(grammarAccess.getJFETAccess().getUnorderedGroup_5(), 2)");
            	    }
            	    // InternalXSpice.g:7622:101: ( ({...}? => (otherlv_10= 'IC' otherlv_11= '=' ( (lv_ic_12_0= RULE_NUMBER ) ) otherlv_13= ',' ( (lv_ic_14_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:7623:6: ({...}? => (otherlv_10= 'IC' otherlv_11= '=' ( (lv_ic_12_0= RULE_NUMBER ) ) otherlv_13= ',' ( (lv_ic_14_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getJFETAccess().getUnorderedGroup_5(), 2);
            	    					
            	    // InternalXSpice.g:7626:9: ({...}? => (otherlv_10= 'IC' otherlv_11= '=' ( (lv_ic_12_0= RULE_NUMBER ) ) otherlv_13= ',' ( (lv_ic_14_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:7626:10: {...}? => (otherlv_10= 'IC' otherlv_11= '=' ( (lv_ic_12_0= RULE_NUMBER ) ) otherlv_13= ',' ( (lv_ic_14_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleJFET", "true");
            	    }
            	    // InternalXSpice.g:7626:19: (otherlv_10= 'IC' otherlv_11= '=' ( (lv_ic_12_0= RULE_NUMBER ) ) otherlv_13= ',' ( (lv_ic_14_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:7626:20: otherlv_10= 'IC' otherlv_11= '=' ( (lv_ic_12_0= RULE_NUMBER ) ) otherlv_13= ',' ( (lv_ic_14_0= RULE_NUMBER ) )
            	    {
            	    otherlv_10=(Token)match(input,53,FOLLOW_11); 

            	    									newLeafNode(otherlv_10, grammarAccess.getJFETAccess().getICKeyword_5_2_0());
            	    								
            	    otherlv_11=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_11, grammarAccess.getJFETAccess().getEqualsSignKeyword_5_2_1());
            	    								
            	    // InternalXSpice.g:7634:9: ( (lv_ic_12_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:7635:10: (lv_ic_12_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:7635:10: (lv_ic_12_0= RULE_NUMBER )
            	    // InternalXSpice.g:7636:11: lv_ic_12_0= RULE_NUMBER
            	    {
            	    lv_ic_12_0=(Token)match(input,RULE_NUMBER,FOLLOW_37); 

            	    											newLeafNode(lv_ic_12_0, grammarAccess.getJFETAccess().getIcNUMBERTerminalRuleCall_5_2_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getJFETRule());
            	    											}
            	    											addWithLastConsumed(
            	    												current,
            	    												"ic",
            	    												lv_ic_12_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }

            	    otherlv_13=(Token)match(input,89,FOLLOW_12); 

            	    									newLeafNode(otherlv_13, grammarAccess.getJFETAccess().getCommaKeyword_5_2_3());
            	    								
            	    // InternalXSpice.g:7656:9: ( (lv_ic_14_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:7657:10: (lv_ic_14_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:7657:10: (lv_ic_14_0= RULE_NUMBER )
            	    // InternalXSpice.g:7658:11: lv_ic_14_0= RULE_NUMBER
            	    {
            	    lv_ic_14_0=(Token)match(input,RULE_NUMBER,FOLLOW_33); 

            	    											newLeafNode(lv_ic_14_0, grammarAccess.getJFETAccess().getIcNUMBERTerminalRuleCall_5_2_4_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getJFETRule());
            	    											}
            	    											addWithLastConsumed(
            	    												current,
            	    												"ic",
            	    												lv_ic_14_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getJFETAccess().getUnorderedGroup_5());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalXSpice.g:7680:4: ({...}? => ( ({...}? => (otherlv_15= 'TEMP' otherlv_16= '=' ( (lv_temp_17_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:7680:4: ({...}? => ( ({...}? => (otherlv_15= 'TEMP' otherlv_16= '=' ( (lv_temp_17_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:7681:5: {...}? => ( ({...}? => (otherlv_15= 'TEMP' otherlv_16= '=' ( (lv_temp_17_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getJFETAccess().getUnorderedGroup_5(), 3) ) {
            	        throw new FailedPredicateException(input, "ruleJFET", "getUnorderedGroupHelper().canSelect(grammarAccess.getJFETAccess().getUnorderedGroup_5(), 3)");
            	    }
            	    // InternalXSpice.g:7681:101: ( ({...}? => (otherlv_15= 'TEMP' otherlv_16= '=' ( (lv_temp_17_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:7682:6: ({...}? => (otherlv_15= 'TEMP' otherlv_16= '=' ( (lv_temp_17_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getJFETAccess().getUnorderedGroup_5(), 3);
            	    					
            	    // InternalXSpice.g:7685:9: ({...}? => (otherlv_15= 'TEMP' otherlv_16= '=' ( (lv_temp_17_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:7685:10: {...}? => (otherlv_15= 'TEMP' otherlv_16= '=' ( (lv_temp_17_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleJFET", "true");
            	    }
            	    // InternalXSpice.g:7685:19: (otherlv_15= 'TEMP' otherlv_16= '=' ( (lv_temp_17_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:7685:20: otherlv_15= 'TEMP' otherlv_16= '=' ( (lv_temp_17_0= RULE_NUMBER ) )
            	    {
            	    otherlv_15=(Token)match(input,42,FOLLOW_11); 

            	    									newLeafNode(otherlv_15, grammarAccess.getJFETAccess().getTEMPKeyword_5_3_0());
            	    								
            	    otherlv_16=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_16, grammarAccess.getJFETAccess().getEqualsSignKeyword_5_3_1());
            	    								
            	    // InternalXSpice.g:7693:9: ( (lv_temp_17_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:7694:10: (lv_temp_17_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:7694:10: (lv_temp_17_0= RULE_NUMBER )
            	    // InternalXSpice.g:7695:11: lv_temp_17_0= RULE_NUMBER
            	    {
            	    lv_temp_17_0=(Token)match(input,RULE_NUMBER,FOLLOW_33); 

            	    											newLeafNode(lv_temp_17_0, grammarAccess.getJFETAccess().getTempNUMBERTerminalRuleCall_5_3_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getJFETRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"temp",
            	    												lv_temp_17_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getJFETAccess().getUnorderedGroup_5());
            	    					

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop38;
                }
            } while (true);


            }


            }

             
            				  getUnorderedGroupHelper().leave(grammarAccess.getJFETAccess().getUnorderedGroup_5());
            				

            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJFET"


    // $ANTLR start "entryRuleJFETModel"
    // InternalXSpice.g:7728:1: entryRuleJFETModel returns [EObject current=null] : iv_ruleJFETModel= ruleJFETModel EOF ;
    public final EObject entryRuleJFETModel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJFETModel = null;


        try {
            // InternalXSpice.g:7728:50: (iv_ruleJFETModel= ruleJFETModel EOF )
            // InternalXSpice.g:7729:2: iv_ruleJFETModel= ruleJFETModel EOF
            {
             newCompositeNode(grammarAccess.getJFETModelRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleJFETModel=ruleJFETModel();

            state._fsp--;

             current =iv_ruleJFETModel; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJFETModel"


    // $ANTLR start "ruleJFETModel"
    // InternalXSpice.g:7735:1: ruleJFETModel returns [EObject current=null] : (otherlv_0= '.MODEL' ( (lv_name_1_0= ruleLabel ) ) (otherlv_2= 'NJF' | otherlv_3= 'PJF' ) otherlv_4= '(' ( ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'VTO' | (otherlv_7= 'VT0' otherlv_8= '=' ( (lv_threshold_9_0= RULE_NUMBER ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'BETA' otherlv_11= '=' ( (lv_beta_12_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'LAMBDA' otherlv_14= '=' ( (lv_lambda_15_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'RD' otherlv_17= '=' ( (lv_drainResistance_18_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'RS' otherlv_20= '=' ( (lv_sourceResistance_21_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'CGS' otherlv_23= '=' ( (lv_capGs_24_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'CGD' otherlv_26= '=' ( (lv_capGd_27_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'PB' otherlv_29= '=' ( (lv_gatePotential_30_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'IS' otherlv_32= '=' ( (lv_gateSaturationCurrent_33_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_34= 'B' otherlv_35= '=' ( (lv_b_36_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'KF' otherlv_38= '=' ( (lv_flickerNoiseCoefficient_39_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'AF' otherlv_41= '=' ( (lv_flickerNoiseExponent_42_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'FC' otherlv_44= '=' ( (lv_depletionCapCoefficient_45_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_46= 'TNOM' otherlv_47= '=' ( (lv_nominalTemperature_48_0= RULE_NUMBER ) ) ) ) ) ) )* ) ) ) ) ;
    public final EObject ruleJFETModel() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token lv_threshold_9_0=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token lv_beta_12_0=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        Token lv_lambda_15_0=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        Token lv_drainResistance_18_0=null;
        Token otherlv_19=null;
        Token otherlv_20=null;
        Token lv_sourceResistance_21_0=null;
        Token otherlv_22=null;
        Token otherlv_23=null;
        Token lv_capGs_24_0=null;
        Token otherlv_25=null;
        Token otherlv_26=null;
        Token lv_capGd_27_0=null;
        Token otherlv_28=null;
        Token otherlv_29=null;
        Token lv_gatePotential_30_0=null;
        Token otherlv_31=null;
        Token otherlv_32=null;
        Token lv_gateSaturationCurrent_33_0=null;
        Token otherlv_34=null;
        Token otherlv_35=null;
        Token lv_b_36_0=null;
        Token otherlv_37=null;
        Token otherlv_38=null;
        Token lv_flickerNoiseCoefficient_39_0=null;
        Token otherlv_40=null;
        Token otherlv_41=null;
        Token lv_flickerNoiseExponent_42_0=null;
        Token otherlv_43=null;
        Token otherlv_44=null;
        Token lv_depletionCapCoefficient_45_0=null;
        Token otherlv_46=null;
        Token otherlv_47=null;
        Token lv_nominalTemperature_48_0=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
            // InternalXSpice.g:7741:2: ( (otherlv_0= '.MODEL' ( (lv_name_1_0= ruleLabel ) ) (otherlv_2= 'NJF' | otherlv_3= 'PJF' ) otherlv_4= '(' ( ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'VTO' | (otherlv_7= 'VT0' otherlv_8= '=' ( (lv_threshold_9_0= RULE_NUMBER ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'BETA' otherlv_11= '=' ( (lv_beta_12_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'LAMBDA' otherlv_14= '=' ( (lv_lambda_15_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'RD' otherlv_17= '=' ( (lv_drainResistance_18_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'RS' otherlv_20= '=' ( (lv_sourceResistance_21_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'CGS' otherlv_23= '=' ( (lv_capGs_24_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'CGD' otherlv_26= '=' ( (lv_capGd_27_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'PB' otherlv_29= '=' ( (lv_gatePotential_30_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'IS' otherlv_32= '=' ( (lv_gateSaturationCurrent_33_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_34= 'B' otherlv_35= '=' ( (lv_b_36_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'KF' otherlv_38= '=' ( (lv_flickerNoiseCoefficient_39_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'AF' otherlv_41= '=' ( (lv_flickerNoiseExponent_42_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'FC' otherlv_44= '=' ( (lv_depletionCapCoefficient_45_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_46= 'TNOM' otherlv_47= '=' ( (lv_nominalTemperature_48_0= RULE_NUMBER ) ) ) ) ) ) )* ) ) ) ) )
            // InternalXSpice.g:7742:2: (otherlv_0= '.MODEL' ( (lv_name_1_0= ruleLabel ) ) (otherlv_2= 'NJF' | otherlv_3= 'PJF' ) otherlv_4= '(' ( ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'VTO' | (otherlv_7= 'VT0' otherlv_8= '=' ( (lv_threshold_9_0= RULE_NUMBER ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'BETA' otherlv_11= '=' ( (lv_beta_12_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'LAMBDA' otherlv_14= '=' ( (lv_lambda_15_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'RD' otherlv_17= '=' ( (lv_drainResistance_18_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'RS' otherlv_20= '=' ( (lv_sourceResistance_21_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'CGS' otherlv_23= '=' ( (lv_capGs_24_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'CGD' otherlv_26= '=' ( (lv_capGd_27_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'PB' otherlv_29= '=' ( (lv_gatePotential_30_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'IS' otherlv_32= '=' ( (lv_gateSaturationCurrent_33_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_34= 'B' otherlv_35= '=' ( (lv_b_36_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'KF' otherlv_38= '=' ( (lv_flickerNoiseCoefficient_39_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'AF' otherlv_41= '=' ( (lv_flickerNoiseExponent_42_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'FC' otherlv_44= '=' ( (lv_depletionCapCoefficient_45_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_46= 'TNOM' otherlv_47= '=' ( (lv_nominalTemperature_48_0= RULE_NUMBER ) ) ) ) ) ) )* ) ) ) )
            {
            // InternalXSpice.g:7742:2: (otherlv_0= '.MODEL' ( (lv_name_1_0= ruleLabel ) ) (otherlv_2= 'NJF' | otherlv_3= 'PJF' ) otherlv_4= '(' ( ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'VTO' | (otherlv_7= 'VT0' otherlv_8= '=' ( (lv_threshold_9_0= RULE_NUMBER ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'BETA' otherlv_11= '=' ( (lv_beta_12_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'LAMBDA' otherlv_14= '=' ( (lv_lambda_15_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'RD' otherlv_17= '=' ( (lv_drainResistance_18_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'RS' otherlv_20= '=' ( (lv_sourceResistance_21_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'CGS' otherlv_23= '=' ( (lv_capGs_24_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'CGD' otherlv_26= '=' ( (lv_capGd_27_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'PB' otherlv_29= '=' ( (lv_gatePotential_30_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'IS' otherlv_32= '=' ( (lv_gateSaturationCurrent_33_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_34= 'B' otherlv_35= '=' ( (lv_b_36_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'KF' otherlv_38= '=' ( (lv_flickerNoiseCoefficient_39_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'AF' otherlv_41= '=' ( (lv_flickerNoiseExponent_42_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'FC' otherlv_44= '=' ( (lv_depletionCapCoefficient_45_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_46= 'TNOM' otherlv_47= '=' ( (lv_nominalTemperature_48_0= RULE_NUMBER ) ) ) ) ) ) )* ) ) ) )
            // InternalXSpice.g:7743:3: otherlv_0= '.MODEL' ( (lv_name_1_0= ruleLabel ) ) (otherlv_2= 'NJF' | otherlv_3= 'PJF' ) otherlv_4= '(' ( ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'VTO' | (otherlv_7= 'VT0' otherlv_8= '=' ( (lv_threshold_9_0= RULE_NUMBER ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'BETA' otherlv_11= '=' ( (lv_beta_12_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'LAMBDA' otherlv_14= '=' ( (lv_lambda_15_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'RD' otherlv_17= '=' ( (lv_drainResistance_18_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'RS' otherlv_20= '=' ( (lv_sourceResistance_21_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'CGS' otherlv_23= '=' ( (lv_capGs_24_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'CGD' otherlv_26= '=' ( (lv_capGd_27_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'PB' otherlv_29= '=' ( (lv_gatePotential_30_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'IS' otherlv_32= '=' ( (lv_gateSaturationCurrent_33_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_34= 'B' otherlv_35= '=' ( (lv_b_36_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'KF' otherlv_38= '=' ( (lv_flickerNoiseCoefficient_39_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'AF' otherlv_41= '=' ( (lv_flickerNoiseExponent_42_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'FC' otherlv_44= '=' ( (lv_depletionCapCoefficient_45_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_46= 'TNOM' otherlv_47= '=' ( (lv_nominalTemperature_48_0= RULE_NUMBER ) ) ) ) ) ) )* ) ) )
            {
            otherlv_0=(Token)match(input,43,FOLLOW_4); 

            			newLeafNode(otherlv_0, grammarAccess.getJFETModelAccess().getMODELKeyword_0());
            		
            // InternalXSpice.g:7747:3: ( (lv_name_1_0= ruleLabel ) )
            // InternalXSpice.g:7748:4: (lv_name_1_0= ruleLabel )
            {
            // InternalXSpice.g:7748:4: (lv_name_1_0= ruleLabel )
            // InternalXSpice.g:7749:5: lv_name_1_0= ruleLabel
            {

            					newCompositeNode(grammarAccess.getJFETModelAccess().getNameLabelParserRuleCall_1_0());
            				
            pushFollow(FOLLOW_44);
            lv_name_1_0=ruleLabel();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getJFETModelRule());
            					}
            					set(
            						current,
            						"name",
            						lv_name_1_0,
            						"com.xtext.ravornyo.xspice.XSpice.Label");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            // InternalXSpice.g:7766:3: (otherlv_2= 'NJF' | otherlv_3= 'PJF' )
            int alt39=2;
            int LA39_0 = input.LA(1);

            if ( (LA39_0==157) ) {
                alt39=1;
            }
            else if ( (LA39_0==158) ) {
                alt39=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 39, 0, input);

                throw nvae;
            }
            switch (alt39) {
                case 1 :
                    // InternalXSpice.g:7767:4: otherlv_2= 'NJF'
                    {
                    otherlv_2=(Token)match(input,157,FOLLOW_14); 

                    				newLeafNode(otherlv_2, grammarAccess.getJFETModelAccess().getNJFKeyword_2_0());
                    			

                    }
                    break;
                case 2 :
                    // InternalXSpice.g:7772:4: otherlv_3= 'PJF'
                    {
                    otherlv_3=(Token)match(input,158,FOLLOW_14); 

                    				newLeafNode(otherlv_3, grammarAccess.getJFETModelAccess().getPJFKeyword_2_1());
                    			

                    }
                    break;

            }

            otherlv_4=(Token)match(input,45,FOLLOW_45); 

            			newLeafNode(otherlv_4, grammarAccess.getJFETModelAccess().getLeftParenthesisKeyword_3());
            		
            // InternalXSpice.g:7781:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'VTO' | (otherlv_7= 'VT0' otherlv_8= '=' ( (lv_threshold_9_0= RULE_NUMBER ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'BETA' otherlv_11= '=' ( (lv_beta_12_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'LAMBDA' otherlv_14= '=' ( (lv_lambda_15_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'RD' otherlv_17= '=' ( (lv_drainResistance_18_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'RS' otherlv_20= '=' ( (lv_sourceResistance_21_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'CGS' otherlv_23= '=' ( (lv_capGs_24_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'CGD' otherlv_26= '=' ( (lv_capGd_27_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'PB' otherlv_29= '=' ( (lv_gatePotential_30_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'IS' otherlv_32= '=' ( (lv_gateSaturationCurrent_33_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_34= 'B' otherlv_35= '=' ( (lv_b_36_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'KF' otherlv_38= '=' ( (lv_flickerNoiseCoefficient_39_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'AF' otherlv_41= '=' ( (lv_flickerNoiseExponent_42_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'FC' otherlv_44= '=' ( (lv_depletionCapCoefficient_45_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_46= 'TNOM' otherlv_47= '=' ( (lv_nominalTemperature_48_0= RULE_NUMBER ) ) ) ) ) ) )* ) ) )
            // InternalXSpice.g:7782:4: ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'VTO' | (otherlv_7= 'VT0' otherlv_8= '=' ( (lv_threshold_9_0= RULE_NUMBER ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'BETA' otherlv_11= '=' ( (lv_beta_12_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'LAMBDA' otherlv_14= '=' ( (lv_lambda_15_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'RD' otherlv_17= '=' ( (lv_drainResistance_18_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'RS' otherlv_20= '=' ( (lv_sourceResistance_21_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'CGS' otherlv_23= '=' ( (lv_capGs_24_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'CGD' otherlv_26= '=' ( (lv_capGd_27_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'PB' otherlv_29= '=' ( (lv_gatePotential_30_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'IS' otherlv_32= '=' ( (lv_gateSaturationCurrent_33_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_34= 'B' otherlv_35= '=' ( (lv_b_36_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'KF' otherlv_38= '=' ( (lv_flickerNoiseCoefficient_39_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'AF' otherlv_41= '=' ( (lv_flickerNoiseExponent_42_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'FC' otherlv_44= '=' ( (lv_depletionCapCoefficient_45_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_46= 'TNOM' otherlv_47= '=' ( (lv_nominalTemperature_48_0= RULE_NUMBER ) ) ) ) ) ) )* ) )
            {
            // InternalXSpice.g:7782:4: ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'VTO' | (otherlv_7= 'VT0' otherlv_8= '=' ( (lv_threshold_9_0= RULE_NUMBER ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'BETA' otherlv_11= '=' ( (lv_beta_12_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'LAMBDA' otherlv_14= '=' ( (lv_lambda_15_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'RD' otherlv_17= '=' ( (lv_drainResistance_18_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'RS' otherlv_20= '=' ( (lv_sourceResistance_21_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'CGS' otherlv_23= '=' ( (lv_capGs_24_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'CGD' otherlv_26= '=' ( (lv_capGd_27_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'PB' otherlv_29= '=' ( (lv_gatePotential_30_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'IS' otherlv_32= '=' ( (lv_gateSaturationCurrent_33_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_34= 'B' otherlv_35= '=' ( (lv_b_36_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'KF' otherlv_38= '=' ( (lv_flickerNoiseCoefficient_39_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'AF' otherlv_41= '=' ( (lv_flickerNoiseExponent_42_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'FC' otherlv_44= '=' ( (lv_depletionCapCoefficient_45_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_46= 'TNOM' otherlv_47= '=' ( (lv_nominalTemperature_48_0= RULE_NUMBER ) ) ) ) ) ) )* ) )
            // InternalXSpice.g:7783:5: ( ( ({...}? => ( ({...}? => (otherlv_6= 'VTO' | (otherlv_7= 'VT0' otherlv_8= '=' ( (lv_threshold_9_0= RULE_NUMBER ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'BETA' otherlv_11= '=' ( (lv_beta_12_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'LAMBDA' otherlv_14= '=' ( (lv_lambda_15_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'RD' otherlv_17= '=' ( (lv_drainResistance_18_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'RS' otherlv_20= '=' ( (lv_sourceResistance_21_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'CGS' otherlv_23= '=' ( (lv_capGs_24_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'CGD' otherlv_26= '=' ( (lv_capGd_27_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'PB' otherlv_29= '=' ( (lv_gatePotential_30_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'IS' otherlv_32= '=' ( (lv_gateSaturationCurrent_33_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_34= 'B' otherlv_35= '=' ( (lv_b_36_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'KF' otherlv_38= '=' ( (lv_flickerNoiseCoefficient_39_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'AF' otherlv_41= '=' ( (lv_flickerNoiseExponent_42_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'FC' otherlv_44= '=' ( (lv_depletionCapCoefficient_45_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_46= 'TNOM' otherlv_47= '=' ( (lv_nominalTemperature_48_0= RULE_NUMBER ) ) ) ) ) ) )* )
            {
             
            				  getUnorderedGroupHelper().enter(grammarAccess.getJFETModelAccess().getUnorderedGroup_4());
            				
            // InternalXSpice.g:7786:5: ( ( ({...}? => ( ({...}? => (otherlv_6= 'VTO' | (otherlv_7= 'VT0' otherlv_8= '=' ( (lv_threshold_9_0= RULE_NUMBER ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'BETA' otherlv_11= '=' ( (lv_beta_12_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'LAMBDA' otherlv_14= '=' ( (lv_lambda_15_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'RD' otherlv_17= '=' ( (lv_drainResistance_18_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'RS' otherlv_20= '=' ( (lv_sourceResistance_21_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'CGS' otherlv_23= '=' ( (lv_capGs_24_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'CGD' otherlv_26= '=' ( (lv_capGd_27_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'PB' otherlv_29= '=' ( (lv_gatePotential_30_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'IS' otherlv_32= '=' ( (lv_gateSaturationCurrent_33_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_34= 'B' otherlv_35= '=' ( (lv_b_36_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'KF' otherlv_38= '=' ( (lv_flickerNoiseCoefficient_39_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'AF' otherlv_41= '=' ( (lv_flickerNoiseExponent_42_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'FC' otherlv_44= '=' ( (lv_depletionCapCoefficient_45_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_46= 'TNOM' otherlv_47= '=' ( (lv_nominalTemperature_48_0= RULE_NUMBER ) ) ) ) ) ) )* )
            // InternalXSpice.g:7787:6: ( ({...}? => ( ({...}? => (otherlv_6= 'VTO' | (otherlv_7= 'VT0' otherlv_8= '=' ( (lv_threshold_9_0= RULE_NUMBER ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'BETA' otherlv_11= '=' ( (lv_beta_12_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'LAMBDA' otherlv_14= '=' ( (lv_lambda_15_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'RD' otherlv_17= '=' ( (lv_drainResistance_18_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'RS' otherlv_20= '=' ( (lv_sourceResistance_21_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'CGS' otherlv_23= '=' ( (lv_capGs_24_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'CGD' otherlv_26= '=' ( (lv_capGd_27_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'PB' otherlv_29= '=' ( (lv_gatePotential_30_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'IS' otherlv_32= '=' ( (lv_gateSaturationCurrent_33_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_34= 'B' otherlv_35= '=' ( (lv_b_36_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'KF' otherlv_38= '=' ( (lv_flickerNoiseCoefficient_39_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'AF' otherlv_41= '=' ( (lv_flickerNoiseExponent_42_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'FC' otherlv_44= '=' ( (lv_depletionCapCoefficient_45_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_46= 'TNOM' otherlv_47= '=' ( (lv_nominalTemperature_48_0= RULE_NUMBER ) ) ) ) ) ) )*
            {
            // InternalXSpice.g:7787:6: ( ({...}? => ( ({...}? => (otherlv_6= 'VTO' | (otherlv_7= 'VT0' otherlv_8= '=' ( (lv_threshold_9_0= RULE_NUMBER ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'BETA' otherlv_11= '=' ( (lv_beta_12_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'LAMBDA' otherlv_14= '=' ( (lv_lambda_15_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'RD' otherlv_17= '=' ( (lv_drainResistance_18_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'RS' otherlv_20= '=' ( (lv_sourceResistance_21_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'CGS' otherlv_23= '=' ( (lv_capGs_24_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'CGD' otherlv_26= '=' ( (lv_capGd_27_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'PB' otherlv_29= '=' ( (lv_gatePotential_30_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'IS' otherlv_32= '=' ( (lv_gateSaturationCurrent_33_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_34= 'B' otherlv_35= '=' ( (lv_b_36_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'KF' otherlv_38= '=' ( (lv_flickerNoiseCoefficient_39_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'AF' otherlv_41= '=' ( (lv_flickerNoiseExponent_42_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'FC' otherlv_44= '=' ( (lv_depletionCapCoefficient_45_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_46= 'TNOM' otherlv_47= '=' ( (lv_nominalTemperature_48_0= RULE_NUMBER ) ) ) ) ) ) )*
            loop41:
            do {
                int alt41=15;
                alt41 = dfa41.predict(input);
                switch (alt41) {
            	case 1 :
            	    // InternalXSpice.g:7788:4: ({...}? => ( ({...}? => (otherlv_6= 'VTO' | (otherlv_7= 'VT0' otherlv_8= '=' ( (lv_threshold_9_0= RULE_NUMBER ) ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:7788:4: ({...}? => ( ({...}? => (otherlv_6= 'VTO' | (otherlv_7= 'VT0' otherlv_8= '=' ( (lv_threshold_9_0= RULE_NUMBER ) ) ) ) ) ) )
            	    // InternalXSpice.g:7789:5: {...}? => ( ({...}? => (otherlv_6= 'VTO' | (otherlv_7= 'VT0' otherlv_8= '=' ( (lv_threshold_9_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getJFETModelAccess().getUnorderedGroup_4(), 0) ) {
            	        throw new FailedPredicateException(input, "ruleJFETModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getJFETModelAccess().getUnorderedGroup_4(), 0)");
            	    }
            	    // InternalXSpice.g:7789:106: ( ({...}? => (otherlv_6= 'VTO' | (otherlv_7= 'VT0' otherlv_8= '=' ( (lv_threshold_9_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:7790:6: ({...}? => (otherlv_6= 'VTO' | (otherlv_7= 'VT0' otherlv_8= '=' ( (lv_threshold_9_0= RULE_NUMBER ) ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getJFETModelAccess().getUnorderedGroup_4(), 0);
            	    					
            	    // InternalXSpice.g:7793:9: ({...}? => (otherlv_6= 'VTO' | (otherlv_7= 'VT0' otherlv_8= '=' ( (lv_threshold_9_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:7793:10: {...}? => (otherlv_6= 'VTO' | (otherlv_7= 'VT0' otherlv_8= '=' ( (lv_threshold_9_0= RULE_NUMBER ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleJFETModel", "true");
            	    }
            	    // InternalXSpice.g:7793:19: (otherlv_6= 'VTO' | (otherlv_7= 'VT0' otherlv_8= '=' ( (lv_threshold_9_0= RULE_NUMBER ) ) ) )
            	    int alt40=2;
            	    int LA40_0 = input.LA(1);

            	    if ( (LA40_0==93) ) {
            	        alt40=1;
            	    }
            	    else if ( (LA40_0==94) ) {
            	        alt40=2;
            	    }
            	    else {
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 40, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt40) {
            	        case 1 :
            	            // InternalXSpice.g:7793:20: otherlv_6= 'VTO'
            	            {
            	            otherlv_6=(Token)match(input,93,FOLLOW_45); 

            	            									newLeafNode(otherlv_6, grammarAccess.getJFETModelAccess().getVTOKeyword_4_0_0());
            	            								

            	            }
            	            break;
            	        case 2 :
            	            // InternalXSpice.g:7798:9: (otherlv_7= 'VT0' otherlv_8= '=' ( (lv_threshold_9_0= RULE_NUMBER ) ) )
            	            {
            	            // InternalXSpice.g:7798:9: (otherlv_7= 'VT0' otherlv_8= '=' ( (lv_threshold_9_0= RULE_NUMBER ) ) )
            	            // InternalXSpice.g:7799:10: otherlv_7= 'VT0' otherlv_8= '=' ( (lv_threshold_9_0= RULE_NUMBER ) )
            	            {
            	            otherlv_7=(Token)match(input,94,FOLLOW_11); 

            	            										newLeafNode(otherlv_7, grammarAccess.getJFETModelAccess().getVT0Keyword_4_0_1_0());
            	            									
            	            otherlv_8=(Token)match(input,40,FOLLOW_12); 

            	            										newLeafNode(otherlv_8, grammarAccess.getJFETModelAccess().getEqualsSignKeyword_4_0_1_1());
            	            									
            	            // InternalXSpice.g:7807:10: ( (lv_threshold_9_0= RULE_NUMBER ) )
            	            // InternalXSpice.g:7808:11: (lv_threshold_9_0= RULE_NUMBER )
            	            {
            	            // InternalXSpice.g:7808:11: (lv_threshold_9_0= RULE_NUMBER )
            	            // InternalXSpice.g:7809:12: lv_threshold_9_0= RULE_NUMBER
            	            {
            	            lv_threshold_9_0=(Token)match(input,RULE_NUMBER,FOLLOW_45); 

            	            												newLeafNode(lv_threshold_9_0, grammarAccess.getJFETModelAccess().getThresholdNUMBERTerminalRuleCall_4_0_1_2_0());
            	            											

            	            												if (current==null) {
            	            													current = createModelElement(grammarAccess.getJFETModelRule());
            	            												}
            	            												setWithLastConsumed(
            	            													current,
            	            													"threshold",
            	            													lv_threshold_9_0,
            	            													"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	            											

            	            }


            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getJFETModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalXSpice.g:7832:4: ({...}? => ( ({...}? => (otherlv_10= 'BETA' otherlv_11= '=' ( (lv_beta_12_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:7832:4: ({...}? => ( ({...}? => (otherlv_10= 'BETA' otherlv_11= '=' ( (lv_beta_12_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:7833:5: {...}? => ( ({...}? => (otherlv_10= 'BETA' otherlv_11= '=' ( (lv_beta_12_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getJFETModelAccess().getUnorderedGroup_4(), 1) ) {
            	        throw new FailedPredicateException(input, "ruleJFETModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getJFETModelAccess().getUnorderedGroup_4(), 1)");
            	    }
            	    // InternalXSpice.g:7833:106: ( ({...}? => (otherlv_10= 'BETA' otherlv_11= '=' ( (lv_beta_12_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:7834:6: ({...}? => (otherlv_10= 'BETA' otherlv_11= '=' ( (lv_beta_12_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getJFETModelAccess().getUnorderedGroup_4(), 1);
            	    					
            	    // InternalXSpice.g:7837:9: ({...}? => (otherlv_10= 'BETA' otherlv_11= '=' ( (lv_beta_12_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:7837:10: {...}? => (otherlv_10= 'BETA' otherlv_11= '=' ( (lv_beta_12_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleJFETModel", "true");
            	    }
            	    // InternalXSpice.g:7837:19: (otherlv_10= 'BETA' otherlv_11= '=' ( (lv_beta_12_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:7837:20: otherlv_10= 'BETA' otherlv_11= '=' ( (lv_beta_12_0= RULE_NUMBER ) )
            	    {
            	    otherlv_10=(Token)match(input,159,FOLLOW_11); 

            	    									newLeafNode(otherlv_10, grammarAccess.getJFETModelAccess().getBETAKeyword_4_1_0());
            	    								
            	    otherlv_11=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_11, grammarAccess.getJFETModelAccess().getEqualsSignKeyword_4_1_1());
            	    								
            	    // InternalXSpice.g:7845:9: ( (lv_beta_12_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:7846:10: (lv_beta_12_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:7846:10: (lv_beta_12_0= RULE_NUMBER )
            	    // InternalXSpice.g:7847:11: lv_beta_12_0= RULE_NUMBER
            	    {
            	    lv_beta_12_0=(Token)match(input,RULE_NUMBER,FOLLOW_45); 

            	    											newLeafNode(lv_beta_12_0, grammarAccess.getJFETModelAccess().getBetaNUMBERTerminalRuleCall_4_1_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getJFETModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"beta",
            	    												lv_beta_12_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getJFETModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalXSpice.g:7869:4: ({...}? => ( ({...}? => (otherlv_13= 'LAMBDA' otherlv_14= '=' ( (lv_lambda_15_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:7869:4: ({...}? => ( ({...}? => (otherlv_13= 'LAMBDA' otherlv_14= '=' ( (lv_lambda_15_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:7870:5: {...}? => ( ({...}? => (otherlv_13= 'LAMBDA' otherlv_14= '=' ( (lv_lambda_15_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getJFETModelAccess().getUnorderedGroup_4(), 2) ) {
            	        throw new FailedPredicateException(input, "ruleJFETModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getJFETModelAccess().getUnorderedGroup_4(), 2)");
            	    }
            	    // InternalXSpice.g:7870:106: ( ({...}? => (otherlv_13= 'LAMBDA' otherlv_14= '=' ( (lv_lambda_15_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:7871:6: ({...}? => (otherlv_13= 'LAMBDA' otherlv_14= '=' ( (lv_lambda_15_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getJFETModelAccess().getUnorderedGroup_4(), 2);
            	    					
            	    // InternalXSpice.g:7874:9: ({...}? => (otherlv_13= 'LAMBDA' otherlv_14= '=' ( (lv_lambda_15_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:7874:10: {...}? => (otherlv_13= 'LAMBDA' otherlv_14= '=' ( (lv_lambda_15_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleJFETModel", "true");
            	    }
            	    // InternalXSpice.g:7874:19: (otherlv_13= 'LAMBDA' otherlv_14= '=' ( (lv_lambda_15_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:7874:20: otherlv_13= 'LAMBDA' otherlv_14= '=' ( (lv_lambda_15_0= RULE_NUMBER ) )
            	    {
            	    otherlv_13=(Token)match(input,98,FOLLOW_11); 

            	    									newLeafNode(otherlv_13, grammarAccess.getJFETModelAccess().getLAMBDAKeyword_4_2_0());
            	    								
            	    otherlv_14=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_14, grammarAccess.getJFETModelAccess().getEqualsSignKeyword_4_2_1());
            	    								
            	    // InternalXSpice.g:7882:9: ( (lv_lambda_15_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:7883:10: (lv_lambda_15_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:7883:10: (lv_lambda_15_0= RULE_NUMBER )
            	    // InternalXSpice.g:7884:11: lv_lambda_15_0= RULE_NUMBER
            	    {
            	    lv_lambda_15_0=(Token)match(input,RULE_NUMBER,FOLLOW_45); 

            	    											newLeafNode(lv_lambda_15_0, grammarAccess.getJFETModelAccess().getLambdaNUMBERTerminalRuleCall_4_2_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getJFETModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"lambda",
            	    												lv_lambda_15_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getJFETModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalXSpice.g:7906:4: ({...}? => ( ({...}? => (otherlv_16= 'RD' otherlv_17= '=' ( (lv_drainResistance_18_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:7906:4: ({...}? => ( ({...}? => (otherlv_16= 'RD' otherlv_17= '=' ( (lv_drainResistance_18_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:7907:5: {...}? => ( ({...}? => (otherlv_16= 'RD' otherlv_17= '=' ( (lv_drainResistance_18_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getJFETModelAccess().getUnorderedGroup_4(), 3) ) {
            	        throw new FailedPredicateException(input, "ruleJFETModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getJFETModelAccess().getUnorderedGroup_4(), 3)");
            	    }
            	    // InternalXSpice.g:7907:106: ( ({...}? => (otherlv_16= 'RD' otherlv_17= '=' ( (lv_drainResistance_18_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:7908:6: ({...}? => (otherlv_16= 'RD' otherlv_17= '=' ( (lv_drainResistance_18_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getJFETModelAccess().getUnorderedGroup_4(), 3);
            	    					
            	    // InternalXSpice.g:7911:9: ({...}? => (otherlv_16= 'RD' otherlv_17= '=' ( (lv_drainResistance_18_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:7911:10: {...}? => (otherlv_16= 'RD' otherlv_17= '=' ( (lv_drainResistance_18_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleJFETModel", "true");
            	    }
            	    // InternalXSpice.g:7911:19: (otherlv_16= 'RD' otherlv_17= '=' ( (lv_drainResistance_18_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:7911:20: otherlv_16= 'RD' otherlv_17= '=' ( (lv_drainResistance_18_0= RULE_NUMBER ) )
            	    {
            	    otherlv_16=(Token)match(input,99,FOLLOW_11); 

            	    									newLeafNode(otherlv_16, grammarAccess.getJFETModelAccess().getRDKeyword_4_3_0());
            	    								
            	    otherlv_17=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_17, grammarAccess.getJFETModelAccess().getEqualsSignKeyword_4_3_1());
            	    								
            	    // InternalXSpice.g:7919:9: ( (lv_drainResistance_18_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:7920:10: (lv_drainResistance_18_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:7920:10: (lv_drainResistance_18_0= RULE_NUMBER )
            	    // InternalXSpice.g:7921:11: lv_drainResistance_18_0= RULE_NUMBER
            	    {
            	    lv_drainResistance_18_0=(Token)match(input,RULE_NUMBER,FOLLOW_45); 

            	    											newLeafNode(lv_drainResistance_18_0, grammarAccess.getJFETModelAccess().getDrainResistanceNUMBERTerminalRuleCall_4_3_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getJFETModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"drainResistance",
            	    												lv_drainResistance_18_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getJFETModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalXSpice.g:7943:4: ({...}? => ( ({...}? => (otherlv_19= 'RS' otherlv_20= '=' ( (lv_sourceResistance_21_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:7943:4: ({...}? => ( ({...}? => (otherlv_19= 'RS' otherlv_20= '=' ( (lv_sourceResistance_21_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:7944:5: {...}? => ( ({...}? => (otherlv_19= 'RS' otherlv_20= '=' ( (lv_sourceResistance_21_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getJFETModelAccess().getUnorderedGroup_4(), 4) ) {
            	        throw new FailedPredicateException(input, "ruleJFETModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getJFETModelAccess().getUnorderedGroup_4(), 4)");
            	    }
            	    // InternalXSpice.g:7944:106: ( ({...}? => (otherlv_19= 'RS' otherlv_20= '=' ( (lv_sourceResistance_21_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:7945:6: ({...}? => (otherlv_19= 'RS' otherlv_20= '=' ( (lv_sourceResistance_21_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getJFETModelAccess().getUnorderedGroup_4(), 4);
            	    					
            	    // InternalXSpice.g:7948:9: ({...}? => (otherlv_19= 'RS' otherlv_20= '=' ( (lv_sourceResistance_21_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:7948:10: {...}? => (otherlv_19= 'RS' otherlv_20= '=' ( (lv_sourceResistance_21_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleJFETModel", "true");
            	    }
            	    // InternalXSpice.g:7948:19: (otherlv_19= 'RS' otherlv_20= '=' ( (lv_sourceResistance_21_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:7948:20: otherlv_19= 'RS' otherlv_20= '=' ( (lv_sourceResistance_21_0= RULE_NUMBER ) )
            	    {
            	    otherlv_19=(Token)match(input,70,FOLLOW_11); 

            	    									newLeafNode(otherlv_19, grammarAccess.getJFETModelAccess().getRSKeyword_4_4_0());
            	    								
            	    otherlv_20=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_20, grammarAccess.getJFETModelAccess().getEqualsSignKeyword_4_4_1());
            	    								
            	    // InternalXSpice.g:7956:9: ( (lv_sourceResistance_21_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:7957:10: (lv_sourceResistance_21_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:7957:10: (lv_sourceResistance_21_0= RULE_NUMBER )
            	    // InternalXSpice.g:7958:11: lv_sourceResistance_21_0= RULE_NUMBER
            	    {
            	    lv_sourceResistance_21_0=(Token)match(input,RULE_NUMBER,FOLLOW_45); 

            	    											newLeafNode(lv_sourceResistance_21_0, grammarAccess.getJFETModelAccess().getSourceResistanceNUMBERTerminalRuleCall_4_4_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getJFETModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"sourceResistance",
            	    												lv_sourceResistance_21_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getJFETModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalXSpice.g:7980:4: ({...}? => ( ({...}? => (otherlv_22= 'CGS' otherlv_23= '=' ( (lv_capGs_24_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:7980:4: ({...}? => ( ({...}? => (otherlv_22= 'CGS' otherlv_23= '=' ( (lv_capGs_24_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:7981:5: {...}? => ( ({...}? => (otherlv_22= 'CGS' otherlv_23= '=' ( (lv_capGs_24_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getJFETModelAccess().getUnorderedGroup_4(), 5) ) {
            	        throw new FailedPredicateException(input, "ruleJFETModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getJFETModelAccess().getUnorderedGroup_4(), 5)");
            	    }
            	    // InternalXSpice.g:7981:106: ( ({...}? => (otherlv_22= 'CGS' otherlv_23= '=' ( (lv_capGs_24_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:7982:6: ({...}? => (otherlv_22= 'CGS' otherlv_23= '=' ( (lv_capGs_24_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getJFETModelAccess().getUnorderedGroup_4(), 5);
            	    					
            	    // InternalXSpice.g:7985:9: ({...}? => (otherlv_22= 'CGS' otherlv_23= '=' ( (lv_capGs_24_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:7985:10: {...}? => (otherlv_22= 'CGS' otherlv_23= '=' ( (lv_capGs_24_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleJFETModel", "true");
            	    }
            	    // InternalXSpice.g:7985:19: (otherlv_22= 'CGS' otherlv_23= '=' ( (lv_capGs_24_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:7985:20: otherlv_22= 'CGS' otherlv_23= '=' ( (lv_capGs_24_0= RULE_NUMBER ) )
            	    {
            	    otherlv_22=(Token)match(input,160,FOLLOW_11); 

            	    									newLeafNode(otherlv_22, grammarAccess.getJFETModelAccess().getCGSKeyword_4_5_0());
            	    								
            	    otherlv_23=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_23, grammarAccess.getJFETModelAccess().getEqualsSignKeyword_4_5_1());
            	    								
            	    // InternalXSpice.g:7993:9: ( (lv_capGs_24_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:7994:10: (lv_capGs_24_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:7994:10: (lv_capGs_24_0= RULE_NUMBER )
            	    // InternalXSpice.g:7995:11: lv_capGs_24_0= RULE_NUMBER
            	    {
            	    lv_capGs_24_0=(Token)match(input,RULE_NUMBER,FOLLOW_45); 

            	    											newLeafNode(lv_capGs_24_0, grammarAccess.getJFETModelAccess().getCapGsNUMBERTerminalRuleCall_4_5_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getJFETModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"capGs",
            	    												lv_capGs_24_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getJFETModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // InternalXSpice.g:8017:4: ({...}? => ( ({...}? => (otherlv_25= 'CGD' otherlv_26= '=' ( (lv_capGd_27_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:8017:4: ({...}? => ( ({...}? => (otherlv_25= 'CGD' otherlv_26= '=' ( (lv_capGd_27_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:8018:5: {...}? => ( ({...}? => (otherlv_25= 'CGD' otherlv_26= '=' ( (lv_capGd_27_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getJFETModelAccess().getUnorderedGroup_4(), 6) ) {
            	        throw new FailedPredicateException(input, "ruleJFETModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getJFETModelAccess().getUnorderedGroup_4(), 6)");
            	    }
            	    // InternalXSpice.g:8018:106: ( ({...}? => (otherlv_25= 'CGD' otherlv_26= '=' ( (lv_capGd_27_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:8019:6: ({...}? => (otherlv_25= 'CGD' otherlv_26= '=' ( (lv_capGd_27_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getJFETModelAccess().getUnorderedGroup_4(), 6);
            	    					
            	    // InternalXSpice.g:8022:9: ({...}? => (otherlv_25= 'CGD' otherlv_26= '=' ( (lv_capGd_27_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:8022:10: {...}? => (otherlv_25= 'CGD' otherlv_26= '=' ( (lv_capGd_27_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleJFETModel", "true");
            	    }
            	    // InternalXSpice.g:8022:19: (otherlv_25= 'CGD' otherlv_26= '=' ( (lv_capGd_27_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:8022:20: otherlv_25= 'CGD' otherlv_26= '=' ( (lv_capGd_27_0= RULE_NUMBER ) )
            	    {
            	    otherlv_25=(Token)match(input,161,FOLLOW_11); 

            	    									newLeafNode(otherlv_25, grammarAccess.getJFETModelAccess().getCGDKeyword_4_6_0());
            	    								
            	    otherlv_26=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_26, grammarAccess.getJFETModelAccess().getEqualsSignKeyword_4_6_1());
            	    								
            	    // InternalXSpice.g:8030:9: ( (lv_capGd_27_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:8031:10: (lv_capGd_27_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:8031:10: (lv_capGd_27_0= RULE_NUMBER )
            	    // InternalXSpice.g:8032:11: lv_capGd_27_0= RULE_NUMBER
            	    {
            	    lv_capGd_27_0=(Token)match(input,RULE_NUMBER,FOLLOW_45); 

            	    											newLeafNode(lv_capGd_27_0, grammarAccess.getJFETModelAccess().getCapGdNUMBERTerminalRuleCall_4_6_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getJFETModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"capGd",
            	    												lv_capGd_27_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getJFETModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 8 :
            	    // InternalXSpice.g:8054:4: ({...}? => ( ({...}? => (otherlv_28= 'PB' otherlv_29= '=' ( (lv_gatePotential_30_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:8054:4: ({...}? => ( ({...}? => (otherlv_28= 'PB' otherlv_29= '=' ( (lv_gatePotential_30_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:8055:5: {...}? => ( ({...}? => (otherlv_28= 'PB' otherlv_29= '=' ( (lv_gatePotential_30_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getJFETModelAccess().getUnorderedGroup_4(), 7) ) {
            	        throw new FailedPredicateException(input, "ruleJFETModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getJFETModelAccess().getUnorderedGroup_4(), 7)");
            	    }
            	    // InternalXSpice.g:8055:106: ( ({...}? => (otherlv_28= 'PB' otherlv_29= '=' ( (lv_gatePotential_30_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:8056:6: ({...}? => (otherlv_28= 'PB' otherlv_29= '=' ( (lv_gatePotential_30_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getJFETModelAccess().getUnorderedGroup_4(), 7);
            	    					
            	    // InternalXSpice.g:8059:9: ({...}? => (otherlv_28= 'PB' otherlv_29= '=' ( (lv_gatePotential_30_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:8059:10: {...}? => (otherlv_28= 'PB' otherlv_29= '=' ( (lv_gatePotential_30_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleJFETModel", "true");
            	    }
            	    // InternalXSpice.g:8059:19: (otherlv_28= 'PB' otherlv_29= '=' ( (lv_gatePotential_30_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:8059:20: otherlv_28= 'PB' otherlv_29= '=' ( (lv_gatePotential_30_0= RULE_NUMBER ) )
            	    {
            	    otherlv_28=(Token)match(input,102,FOLLOW_11); 

            	    									newLeafNode(otherlv_28, grammarAccess.getJFETModelAccess().getPBKeyword_4_7_0());
            	    								
            	    otherlv_29=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_29, grammarAccess.getJFETModelAccess().getEqualsSignKeyword_4_7_1());
            	    								
            	    // InternalXSpice.g:8067:9: ( (lv_gatePotential_30_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:8068:10: (lv_gatePotential_30_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:8068:10: (lv_gatePotential_30_0= RULE_NUMBER )
            	    // InternalXSpice.g:8069:11: lv_gatePotential_30_0= RULE_NUMBER
            	    {
            	    lv_gatePotential_30_0=(Token)match(input,RULE_NUMBER,FOLLOW_45); 

            	    											newLeafNode(lv_gatePotential_30_0, grammarAccess.getJFETModelAccess().getGatePotentialNUMBERTerminalRuleCall_4_7_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getJFETModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"gatePotential",
            	    												lv_gatePotential_30_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getJFETModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 9 :
            	    // InternalXSpice.g:8091:4: ({...}? => ( ({...}? => (otherlv_31= 'IS' otherlv_32= '=' ( (lv_gateSaturationCurrent_33_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:8091:4: ({...}? => ( ({...}? => (otherlv_31= 'IS' otherlv_32= '=' ( (lv_gateSaturationCurrent_33_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:8092:5: {...}? => ( ({...}? => (otherlv_31= 'IS' otherlv_32= '=' ( (lv_gateSaturationCurrent_33_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getJFETModelAccess().getUnorderedGroup_4(), 8) ) {
            	        throw new FailedPredicateException(input, "ruleJFETModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getJFETModelAccess().getUnorderedGroup_4(), 8)");
            	    }
            	    // InternalXSpice.g:8092:106: ( ({...}? => (otherlv_31= 'IS' otherlv_32= '=' ( (lv_gateSaturationCurrent_33_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:8093:6: ({...}? => (otherlv_31= 'IS' otherlv_32= '=' ( (lv_gateSaturationCurrent_33_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getJFETModelAccess().getUnorderedGroup_4(), 8);
            	    					
            	    // InternalXSpice.g:8096:9: ({...}? => (otherlv_31= 'IS' otherlv_32= '=' ( (lv_gateSaturationCurrent_33_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:8096:10: {...}? => (otherlv_31= 'IS' otherlv_32= '=' ( (lv_gateSaturationCurrent_33_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleJFETModel", "true");
            	    }
            	    // InternalXSpice.g:8096:19: (otherlv_31= 'IS' otherlv_32= '=' ( (lv_gateSaturationCurrent_33_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:8096:20: otherlv_31= 'IS' otherlv_32= '=' ( (lv_gateSaturationCurrent_33_0= RULE_NUMBER ) )
            	    {
            	    otherlv_31=(Token)match(input,69,FOLLOW_11); 

            	    									newLeafNode(otherlv_31, grammarAccess.getJFETModelAccess().getISKeyword_4_8_0());
            	    								
            	    otherlv_32=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_32, grammarAccess.getJFETModelAccess().getEqualsSignKeyword_4_8_1());
            	    								
            	    // InternalXSpice.g:8104:9: ( (lv_gateSaturationCurrent_33_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:8105:10: (lv_gateSaturationCurrent_33_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:8105:10: (lv_gateSaturationCurrent_33_0= RULE_NUMBER )
            	    // InternalXSpice.g:8106:11: lv_gateSaturationCurrent_33_0= RULE_NUMBER
            	    {
            	    lv_gateSaturationCurrent_33_0=(Token)match(input,RULE_NUMBER,FOLLOW_45); 

            	    											newLeafNode(lv_gateSaturationCurrent_33_0, grammarAccess.getJFETModelAccess().getGateSaturationCurrentNUMBERTerminalRuleCall_4_8_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getJFETModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"gateSaturationCurrent",
            	    												lv_gateSaturationCurrent_33_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getJFETModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 10 :
            	    // InternalXSpice.g:8128:4: ({...}? => ( ({...}? => (otherlv_34= 'B' otherlv_35= '=' ( (lv_b_36_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:8128:4: ({...}? => ( ({...}? => (otherlv_34= 'B' otherlv_35= '=' ( (lv_b_36_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:8129:5: {...}? => ( ({...}? => (otherlv_34= 'B' otherlv_35= '=' ( (lv_b_36_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getJFETModelAccess().getUnorderedGroup_4(), 9) ) {
            	        throw new FailedPredicateException(input, "ruleJFETModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getJFETModelAccess().getUnorderedGroup_4(), 9)");
            	    }
            	    // InternalXSpice.g:8129:106: ( ({...}? => (otherlv_34= 'B' otherlv_35= '=' ( (lv_b_36_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:8130:6: ({...}? => (otherlv_34= 'B' otherlv_35= '=' ( (lv_b_36_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getJFETModelAccess().getUnorderedGroup_4(), 9);
            	    					
            	    // InternalXSpice.g:8133:9: ({...}? => (otherlv_34= 'B' otherlv_35= '=' ( (lv_b_36_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:8133:10: {...}? => (otherlv_34= 'B' otherlv_35= '=' ( (lv_b_36_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleJFETModel", "true");
            	    }
            	    // InternalXSpice.g:8133:19: (otherlv_34= 'B' otherlv_35= '=' ( (lv_b_36_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:8133:20: otherlv_34= 'B' otherlv_35= '=' ( (lv_b_36_0= RULE_NUMBER ) )
            	    {
            	    otherlv_34=(Token)match(input,162,FOLLOW_11); 

            	    									newLeafNode(otherlv_34, grammarAccess.getJFETModelAccess().getBKeyword_4_9_0());
            	    								
            	    otherlv_35=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_35, grammarAccess.getJFETModelAccess().getEqualsSignKeyword_4_9_1());
            	    								
            	    // InternalXSpice.g:8141:9: ( (lv_b_36_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:8142:10: (lv_b_36_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:8142:10: (lv_b_36_0= RULE_NUMBER )
            	    // InternalXSpice.g:8143:11: lv_b_36_0= RULE_NUMBER
            	    {
            	    lv_b_36_0=(Token)match(input,RULE_NUMBER,FOLLOW_45); 

            	    											newLeafNode(lv_b_36_0, grammarAccess.getJFETModelAccess().getBNUMBERTerminalRuleCall_4_9_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getJFETModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"b",
            	    												lv_b_36_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getJFETModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 11 :
            	    // InternalXSpice.g:8165:4: ({...}? => ( ({...}? => (otherlv_37= 'KF' otherlv_38= '=' ( (lv_flickerNoiseCoefficient_39_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:8165:4: ({...}? => ( ({...}? => (otherlv_37= 'KF' otherlv_38= '=' ( (lv_flickerNoiseCoefficient_39_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:8166:5: {...}? => ( ({...}? => (otherlv_37= 'KF' otherlv_38= '=' ( (lv_flickerNoiseCoefficient_39_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getJFETModelAccess().getUnorderedGroup_4(), 10) ) {
            	        throw new FailedPredicateException(input, "ruleJFETModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getJFETModelAccess().getUnorderedGroup_4(), 10)");
            	    }
            	    // InternalXSpice.g:8166:107: ( ({...}? => (otherlv_37= 'KF' otherlv_38= '=' ( (lv_flickerNoiseCoefficient_39_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:8167:6: ({...}? => (otherlv_37= 'KF' otherlv_38= '=' ( (lv_flickerNoiseCoefficient_39_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getJFETModelAccess().getUnorderedGroup_4(), 10);
            	    					
            	    // InternalXSpice.g:8170:9: ({...}? => (otherlv_37= 'KF' otherlv_38= '=' ( (lv_flickerNoiseCoefficient_39_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:8170:10: {...}? => (otherlv_37= 'KF' otherlv_38= '=' ( (lv_flickerNoiseCoefficient_39_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleJFETModel", "true");
            	    }
            	    // InternalXSpice.g:8170:19: (otherlv_37= 'KF' otherlv_38= '=' ( (lv_flickerNoiseCoefficient_39_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:8170:20: otherlv_37= 'KF' otherlv_38= '=' ( (lv_flickerNoiseCoefficient_39_0= RULE_NUMBER ) )
            	    {
            	    otherlv_37=(Token)match(input,78,FOLLOW_11); 

            	    									newLeafNode(otherlv_37, grammarAccess.getJFETModelAccess().getKFKeyword_4_10_0());
            	    								
            	    otherlv_38=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_38, grammarAccess.getJFETModelAccess().getEqualsSignKeyword_4_10_1());
            	    								
            	    // InternalXSpice.g:8178:9: ( (lv_flickerNoiseCoefficient_39_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:8179:10: (lv_flickerNoiseCoefficient_39_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:8179:10: (lv_flickerNoiseCoefficient_39_0= RULE_NUMBER )
            	    // InternalXSpice.g:8180:11: lv_flickerNoiseCoefficient_39_0= RULE_NUMBER
            	    {
            	    lv_flickerNoiseCoefficient_39_0=(Token)match(input,RULE_NUMBER,FOLLOW_45); 

            	    											newLeafNode(lv_flickerNoiseCoefficient_39_0, grammarAccess.getJFETModelAccess().getFlickerNoiseCoefficientNUMBERTerminalRuleCall_4_10_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getJFETModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"flickerNoiseCoefficient",
            	    												lv_flickerNoiseCoefficient_39_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getJFETModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 12 :
            	    // InternalXSpice.g:8202:4: ({...}? => ( ({...}? => (otherlv_40= 'AF' otherlv_41= '=' ( (lv_flickerNoiseExponent_42_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:8202:4: ({...}? => ( ({...}? => (otherlv_40= 'AF' otherlv_41= '=' ( (lv_flickerNoiseExponent_42_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:8203:5: {...}? => ( ({...}? => (otherlv_40= 'AF' otherlv_41= '=' ( (lv_flickerNoiseExponent_42_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getJFETModelAccess().getUnorderedGroup_4(), 11) ) {
            	        throw new FailedPredicateException(input, "ruleJFETModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getJFETModelAccess().getUnorderedGroup_4(), 11)");
            	    }
            	    // InternalXSpice.g:8203:107: ( ({...}? => (otherlv_40= 'AF' otherlv_41= '=' ( (lv_flickerNoiseExponent_42_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:8204:6: ({...}? => (otherlv_40= 'AF' otherlv_41= '=' ( (lv_flickerNoiseExponent_42_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getJFETModelAccess().getUnorderedGroup_4(), 11);
            	    					
            	    // InternalXSpice.g:8207:9: ({...}? => (otherlv_40= 'AF' otherlv_41= '=' ( (lv_flickerNoiseExponent_42_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:8207:10: {...}? => (otherlv_40= 'AF' otherlv_41= '=' ( (lv_flickerNoiseExponent_42_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleJFETModel", "true");
            	    }
            	    // InternalXSpice.g:8207:19: (otherlv_40= 'AF' otherlv_41= '=' ( (lv_flickerNoiseExponent_42_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:8207:20: otherlv_40= 'AF' otherlv_41= '=' ( (lv_flickerNoiseExponent_42_0= RULE_NUMBER ) )
            	    {
            	    otherlv_40=(Token)match(input,79,FOLLOW_11); 

            	    									newLeafNode(otherlv_40, grammarAccess.getJFETModelAccess().getAFKeyword_4_11_0());
            	    								
            	    otherlv_41=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_41, grammarAccess.getJFETModelAccess().getEqualsSignKeyword_4_11_1());
            	    								
            	    // InternalXSpice.g:8215:9: ( (lv_flickerNoiseExponent_42_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:8216:10: (lv_flickerNoiseExponent_42_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:8216:10: (lv_flickerNoiseExponent_42_0= RULE_NUMBER )
            	    // InternalXSpice.g:8217:11: lv_flickerNoiseExponent_42_0= RULE_NUMBER
            	    {
            	    lv_flickerNoiseExponent_42_0=(Token)match(input,RULE_NUMBER,FOLLOW_45); 

            	    											newLeafNode(lv_flickerNoiseExponent_42_0, grammarAccess.getJFETModelAccess().getFlickerNoiseExponentNUMBERTerminalRuleCall_4_11_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getJFETModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"flickerNoiseExponent",
            	    												lv_flickerNoiseExponent_42_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getJFETModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 13 :
            	    // InternalXSpice.g:8239:4: ({...}? => ( ({...}? => (otherlv_43= 'FC' otherlv_44= '=' ( (lv_depletionCapCoefficient_45_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:8239:4: ({...}? => ( ({...}? => (otherlv_43= 'FC' otherlv_44= '=' ( (lv_depletionCapCoefficient_45_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:8240:5: {...}? => ( ({...}? => (otherlv_43= 'FC' otherlv_44= '=' ( (lv_depletionCapCoefficient_45_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getJFETModelAccess().getUnorderedGroup_4(), 12) ) {
            	        throw new FailedPredicateException(input, "ruleJFETModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getJFETModelAccess().getUnorderedGroup_4(), 12)");
            	    }
            	    // InternalXSpice.g:8240:107: ( ({...}? => (otherlv_43= 'FC' otherlv_44= '=' ( (lv_depletionCapCoefficient_45_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:8241:6: ({...}? => (otherlv_43= 'FC' otherlv_44= '=' ( (lv_depletionCapCoefficient_45_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getJFETModelAccess().getUnorderedGroup_4(), 12);
            	    					
            	    // InternalXSpice.g:8244:9: ({...}? => (otherlv_43= 'FC' otherlv_44= '=' ( (lv_depletionCapCoefficient_45_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:8244:10: {...}? => (otherlv_43= 'FC' otherlv_44= '=' ( (lv_depletionCapCoefficient_45_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleJFETModel", "true");
            	    }
            	    // InternalXSpice.g:8244:19: (otherlv_43= 'FC' otherlv_44= '=' ( (lv_depletionCapCoefficient_45_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:8244:20: otherlv_43= 'FC' otherlv_44= '=' ( (lv_depletionCapCoefficient_45_0= RULE_NUMBER ) )
            	    {
            	    otherlv_43=(Token)match(input,80,FOLLOW_11); 

            	    									newLeafNode(otherlv_43, grammarAccess.getJFETModelAccess().getFCKeyword_4_12_0());
            	    								
            	    otherlv_44=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_44, grammarAccess.getJFETModelAccess().getEqualsSignKeyword_4_12_1());
            	    								
            	    // InternalXSpice.g:8252:9: ( (lv_depletionCapCoefficient_45_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:8253:10: (lv_depletionCapCoefficient_45_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:8253:10: (lv_depletionCapCoefficient_45_0= RULE_NUMBER )
            	    // InternalXSpice.g:8254:11: lv_depletionCapCoefficient_45_0= RULE_NUMBER
            	    {
            	    lv_depletionCapCoefficient_45_0=(Token)match(input,RULE_NUMBER,FOLLOW_45); 

            	    											newLeafNode(lv_depletionCapCoefficient_45_0, grammarAccess.getJFETModelAccess().getDepletionCapCoefficientNUMBERTerminalRuleCall_4_12_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getJFETModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"depletionCapCoefficient",
            	    												lv_depletionCapCoefficient_45_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getJFETModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 14 :
            	    // InternalXSpice.g:8276:4: ({...}? => ( ({...}? => (otherlv_46= 'TNOM' otherlv_47= '=' ( (lv_nominalTemperature_48_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:8276:4: ({...}? => ( ({...}? => (otherlv_46= 'TNOM' otherlv_47= '=' ( (lv_nominalTemperature_48_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:8277:5: {...}? => ( ({...}? => (otherlv_46= 'TNOM' otherlv_47= '=' ( (lv_nominalTemperature_48_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getJFETModelAccess().getUnorderedGroup_4(), 13) ) {
            	        throw new FailedPredicateException(input, "ruleJFETModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getJFETModelAccess().getUnorderedGroup_4(), 13)");
            	    }
            	    // InternalXSpice.g:8277:107: ( ({...}? => (otherlv_46= 'TNOM' otherlv_47= '=' ( (lv_nominalTemperature_48_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:8278:6: ({...}? => (otherlv_46= 'TNOM' otherlv_47= '=' ( (lv_nominalTemperature_48_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getJFETModelAccess().getUnorderedGroup_4(), 13);
            	    					
            	    // InternalXSpice.g:8281:9: ({...}? => (otherlv_46= 'TNOM' otherlv_47= '=' ( (lv_nominalTemperature_48_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:8281:10: {...}? => (otherlv_46= 'TNOM' otherlv_47= '=' ( (lv_nominalTemperature_48_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleJFETModel", "true");
            	    }
            	    // InternalXSpice.g:8281:19: (otherlv_46= 'TNOM' otherlv_47= '=' ( (lv_nominalTemperature_48_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:8281:20: otherlv_46= 'TNOM' otherlv_47= '=' ( (lv_nominalTemperature_48_0= RULE_NUMBER ) )
            	    {
            	    otherlv_46=(Token)match(input,51,FOLLOW_11); 

            	    									newLeafNode(otherlv_46, grammarAccess.getJFETModelAccess().getTNOMKeyword_4_13_0());
            	    								
            	    otherlv_47=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_47, grammarAccess.getJFETModelAccess().getEqualsSignKeyword_4_13_1());
            	    								
            	    // InternalXSpice.g:8289:9: ( (lv_nominalTemperature_48_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:8290:10: (lv_nominalTemperature_48_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:8290:10: (lv_nominalTemperature_48_0= RULE_NUMBER )
            	    // InternalXSpice.g:8291:11: lv_nominalTemperature_48_0= RULE_NUMBER
            	    {
            	    lv_nominalTemperature_48_0=(Token)match(input,RULE_NUMBER,FOLLOW_45); 

            	    											newLeafNode(lv_nominalTemperature_48_0, grammarAccess.getJFETModelAccess().getNominalTemperatureNUMBERTerminalRuleCall_4_13_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getJFETModelRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"nominalTemperature",
            	    												lv_nominalTemperature_48_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getJFETModelAccess().getUnorderedGroup_4());
            	    					

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop41;
                }
            } while (true);


            }


            }

             
            				  getUnorderedGroupHelper().leave(grammarAccess.getJFETModelAccess().getUnorderedGroup_4());
            				

            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJFETModel"


    // $ANTLR start "entryRuleVSource"
    // InternalXSpice.g:8324:1: entryRuleVSource returns [EObject current=null] : iv_ruleVSource= ruleVSource EOF ;
    public final EObject entryRuleVSource() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVSource = null;


        try {
            // InternalXSpice.g:8324:48: (iv_ruleVSource= ruleVSource EOF )
            // InternalXSpice.g:8325:2: iv_ruleVSource= ruleVSource EOF
            {
             newCompositeNode(grammarAccess.getVSourceRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleVSource=ruleVSource();

            state._fsp--;

             current =iv_ruleVSource; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVSource"


    // $ANTLR start "ruleVSource"
    // InternalXSpice.g:8331:1: ruleVSource returns [EObject current=null] : ( ( (lv_name_0_0= RULE_VID ) ) ( (lv_nodes_1_0= RULE_NODE ) ) ( (lv_nodes_2_0= RULE_NODE ) ) ( (otherlv_3= 'DC' )? ( (lv_dc_4_0= RULE_NUMBER ) ) )? (otherlv_5= 'AC' ( (lv_ac_6_0= RULE_NUMBER ) ) ( (lv_ac_7_0= RULE_NUMBER ) )? )? ( (lv_waveform_8_0= ruleWaveform ) )? ) ;
    public final EObject ruleVSource() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token lv_nodes_1_0=null;
        Token lv_nodes_2_0=null;
        Token otherlv_3=null;
        Token lv_dc_4_0=null;
        Token otherlv_5=null;
        Token lv_ac_6_0=null;
        Token lv_ac_7_0=null;
        EObject lv_waveform_8_0 = null;



        	enterRule();

        try {
            // InternalXSpice.g:8337:2: ( ( ( (lv_name_0_0= RULE_VID ) ) ( (lv_nodes_1_0= RULE_NODE ) ) ( (lv_nodes_2_0= RULE_NODE ) ) ( (otherlv_3= 'DC' )? ( (lv_dc_4_0= RULE_NUMBER ) ) )? (otherlv_5= 'AC' ( (lv_ac_6_0= RULE_NUMBER ) ) ( (lv_ac_7_0= RULE_NUMBER ) )? )? ( (lv_waveform_8_0= ruleWaveform ) )? ) )
            // InternalXSpice.g:8338:2: ( ( (lv_name_0_0= RULE_VID ) ) ( (lv_nodes_1_0= RULE_NODE ) ) ( (lv_nodes_2_0= RULE_NODE ) ) ( (otherlv_3= 'DC' )? ( (lv_dc_4_0= RULE_NUMBER ) ) )? (otherlv_5= 'AC' ( (lv_ac_6_0= RULE_NUMBER ) ) ( (lv_ac_7_0= RULE_NUMBER ) )? )? ( (lv_waveform_8_0= ruleWaveform ) )? )
            {
            // InternalXSpice.g:8338:2: ( ( (lv_name_0_0= RULE_VID ) ) ( (lv_nodes_1_0= RULE_NODE ) ) ( (lv_nodes_2_0= RULE_NODE ) ) ( (otherlv_3= 'DC' )? ( (lv_dc_4_0= RULE_NUMBER ) ) )? (otherlv_5= 'AC' ( (lv_ac_6_0= RULE_NUMBER ) ) ( (lv_ac_7_0= RULE_NUMBER ) )? )? ( (lv_waveform_8_0= ruleWaveform ) )? )
            // InternalXSpice.g:8339:3: ( (lv_name_0_0= RULE_VID ) ) ( (lv_nodes_1_0= RULE_NODE ) ) ( (lv_nodes_2_0= RULE_NODE ) ) ( (otherlv_3= 'DC' )? ( (lv_dc_4_0= RULE_NUMBER ) ) )? (otherlv_5= 'AC' ( (lv_ac_6_0= RULE_NUMBER ) ) ( (lv_ac_7_0= RULE_NUMBER ) )? )? ( (lv_waveform_8_0= ruleWaveform ) )?
            {
            // InternalXSpice.g:8339:3: ( (lv_name_0_0= RULE_VID ) )
            // InternalXSpice.g:8340:4: (lv_name_0_0= RULE_VID )
            {
            // InternalXSpice.g:8340:4: (lv_name_0_0= RULE_VID )
            // InternalXSpice.g:8341:5: lv_name_0_0= RULE_VID
            {
            lv_name_0_0=(Token)match(input,RULE_VID,FOLLOW_5); 

            					newLeafNode(lv_name_0_0, grammarAccess.getVSourceAccess().getNameVIDTerminalRuleCall_0_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getVSourceRule());
            					}
            					setWithLastConsumed(
            						current,
            						"name",
            						lv_name_0_0,
            						"com.xtext.ravornyo.xspice.XSpice.VID");
            				

            }


            }

            // InternalXSpice.g:8357:3: ( (lv_nodes_1_0= RULE_NODE ) )
            // InternalXSpice.g:8358:4: (lv_nodes_1_0= RULE_NODE )
            {
            // InternalXSpice.g:8358:4: (lv_nodes_1_0= RULE_NODE )
            // InternalXSpice.g:8359:5: lv_nodes_1_0= RULE_NODE
            {
            lv_nodes_1_0=(Token)match(input,RULE_NODE,FOLLOW_5); 

            					newLeafNode(lv_nodes_1_0, grammarAccess.getVSourceAccess().getNodesNODETerminalRuleCall_1_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getVSourceRule());
            					}
            					addWithLastConsumed(
            						current,
            						"nodes",
            						lv_nodes_1_0,
            						"com.xtext.ravornyo.xspice.XSpice.NODE");
            				

            }


            }

            // InternalXSpice.g:8375:3: ( (lv_nodes_2_0= RULE_NODE ) )
            // InternalXSpice.g:8376:4: (lv_nodes_2_0= RULE_NODE )
            {
            // InternalXSpice.g:8376:4: (lv_nodes_2_0= RULE_NODE )
            // InternalXSpice.g:8377:5: lv_nodes_2_0= RULE_NODE
            {
            lv_nodes_2_0=(Token)match(input,RULE_NODE,FOLLOW_46); 

            					newLeafNode(lv_nodes_2_0, grammarAccess.getVSourceAccess().getNodesNODETerminalRuleCall_2_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getVSourceRule());
            					}
            					addWithLastConsumed(
            						current,
            						"nodes",
            						lv_nodes_2_0,
            						"com.xtext.ravornyo.xspice.XSpice.NODE");
            				

            }


            }

            // InternalXSpice.g:8393:3: ( (otherlv_3= 'DC' )? ( (lv_dc_4_0= RULE_NUMBER ) ) )?
            int alt43=2;
            int LA43_0 = input.LA(1);

            if ( (LA43_0==RULE_NUMBER||LA43_0==163) ) {
                alt43=1;
            }
            switch (alt43) {
                case 1 :
                    // InternalXSpice.g:8394:4: (otherlv_3= 'DC' )? ( (lv_dc_4_0= RULE_NUMBER ) )
                    {
                    // InternalXSpice.g:8394:4: (otherlv_3= 'DC' )?
                    int alt42=2;
                    int LA42_0 = input.LA(1);

                    if ( (LA42_0==163) ) {
                        alt42=1;
                    }
                    switch (alt42) {
                        case 1 :
                            // InternalXSpice.g:8395:5: otherlv_3= 'DC'
                            {
                            otherlv_3=(Token)match(input,163,FOLLOW_12); 

                            					newLeafNode(otherlv_3, grammarAccess.getVSourceAccess().getDCKeyword_3_0());
                            				

                            }
                            break;

                    }

                    // InternalXSpice.g:8400:4: ( (lv_dc_4_0= RULE_NUMBER ) )
                    // InternalXSpice.g:8401:5: (lv_dc_4_0= RULE_NUMBER )
                    {
                    // InternalXSpice.g:8401:5: (lv_dc_4_0= RULE_NUMBER )
                    // InternalXSpice.g:8402:6: lv_dc_4_0= RULE_NUMBER
                    {
                    lv_dc_4_0=(Token)match(input,RULE_NUMBER,FOLLOW_47); 

                    						newLeafNode(lv_dc_4_0, grammarAccess.getVSourceAccess().getDcNUMBERTerminalRuleCall_3_1_0());
                    					

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getVSourceRule());
                    						}
                    						setWithLastConsumed(
                    							current,
                    							"dc",
                    							lv_dc_4_0,
                    							"com.xtext.ravornyo.xspice.XSpice.NUMBER");
                    					

                    }


                    }


                    }
                    break;

            }

            // InternalXSpice.g:8419:3: (otherlv_5= 'AC' ( (lv_ac_6_0= RULE_NUMBER ) ) ( (lv_ac_7_0= RULE_NUMBER ) )? )?
            int alt45=2;
            int LA45_0 = input.LA(1);

            if ( (LA45_0==164) ) {
                alt45=1;
            }
            switch (alt45) {
                case 1 :
                    // InternalXSpice.g:8420:4: otherlv_5= 'AC' ( (lv_ac_6_0= RULE_NUMBER ) ) ( (lv_ac_7_0= RULE_NUMBER ) )?
                    {
                    otherlv_5=(Token)match(input,164,FOLLOW_12); 

                    				newLeafNode(otherlv_5, grammarAccess.getVSourceAccess().getACKeyword_4_0());
                    			
                    // InternalXSpice.g:8424:4: ( (lv_ac_6_0= RULE_NUMBER ) )
                    // InternalXSpice.g:8425:5: (lv_ac_6_0= RULE_NUMBER )
                    {
                    // InternalXSpice.g:8425:5: (lv_ac_6_0= RULE_NUMBER )
                    // InternalXSpice.g:8426:6: lv_ac_6_0= RULE_NUMBER
                    {
                    lv_ac_6_0=(Token)match(input,RULE_NUMBER,FOLLOW_48); 

                    						newLeafNode(lv_ac_6_0, grammarAccess.getVSourceAccess().getAcNUMBERTerminalRuleCall_4_1_0());
                    					

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getVSourceRule());
                    						}
                    						addWithLastConsumed(
                    							current,
                    							"ac",
                    							lv_ac_6_0,
                    							"com.xtext.ravornyo.xspice.XSpice.NUMBER");
                    					

                    }


                    }

                    // InternalXSpice.g:8442:4: ( (lv_ac_7_0= RULE_NUMBER ) )?
                    int alt44=2;
                    int LA44_0 = input.LA(1);

                    if ( (LA44_0==RULE_NUMBER) ) {
                        alt44=1;
                    }
                    switch (alt44) {
                        case 1 :
                            // InternalXSpice.g:8443:5: (lv_ac_7_0= RULE_NUMBER )
                            {
                            // InternalXSpice.g:8443:5: (lv_ac_7_0= RULE_NUMBER )
                            // InternalXSpice.g:8444:6: lv_ac_7_0= RULE_NUMBER
                            {
                            lv_ac_7_0=(Token)match(input,RULE_NUMBER,FOLLOW_49); 

                            						newLeafNode(lv_ac_7_0, grammarAccess.getVSourceAccess().getAcNUMBERTerminalRuleCall_4_2_0());
                            					

                            						if (current==null) {
                            							current = createModelElement(grammarAccess.getVSourceRule());
                            						}
                            						addWithLastConsumed(
                            							current,
                            							"ac",
                            							lv_ac_7_0,
                            							"com.xtext.ravornyo.xspice.XSpice.NUMBER");
                            					

                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // InternalXSpice.g:8461:3: ( (lv_waveform_8_0= ruleWaveform ) )?
            int alt46=2;
            int LA46_0 = input.LA(1);

            if ( ((LA46_0>=187 && LA46_0<=192)) ) {
                alt46=1;
            }
            switch (alt46) {
                case 1 :
                    // InternalXSpice.g:8462:4: (lv_waveform_8_0= ruleWaveform )
                    {
                    // InternalXSpice.g:8462:4: (lv_waveform_8_0= ruleWaveform )
                    // InternalXSpice.g:8463:5: lv_waveform_8_0= ruleWaveform
                    {

                    					newCompositeNode(grammarAccess.getVSourceAccess().getWaveformWaveformParserRuleCall_5_0());
                    				
                    pushFollow(FOLLOW_2);
                    lv_waveform_8_0=ruleWaveform();

                    state._fsp--;


                    					if (current==null) {
                    						current = createModelElementForParent(grammarAccess.getVSourceRule());
                    					}
                    					set(
                    						current,
                    						"waveform",
                    						lv_waveform_8_0,
                    						"com.xtext.ravornyo.xspice.XSpice.Waveform");
                    					afterParserOrEnumRuleCall();
                    				

                    }


                    }
                    break;

            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVSource"


    // $ANTLR start "entryRuleCurrentSource"
    // InternalXSpice.g:8484:1: entryRuleCurrentSource returns [EObject current=null] : iv_ruleCurrentSource= ruleCurrentSource EOF ;
    public final EObject entryRuleCurrentSource() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCurrentSource = null;


        try {
            // InternalXSpice.g:8484:54: (iv_ruleCurrentSource= ruleCurrentSource EOF )
            // InternalXSpice.g:8485:2: iv_ruleCurrentSource= ruleCurrentSource EOF
            {
             newCompositeNode(grammarAccess.getCurrentSourceRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleCurrentSource=ruleCurrentSource();

            state._fsp--;

             current =iv_ruleCurrentSource; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCurrentSource"


    // $ANTLR start "ruleCurrentSource"
    // InternalXSpice.g:8491:1: ruleCurrentSource returns [EObject current=null] : ( ( (lv_name_0_0= RULE_IID ) ) ( (lv_nodes_1_0= RULE_NODE ) ) ( (lv_nodes_2_0= RULE_NODE ) ) ( (otherlv_3= 'DC' )? ( (lv_dc_4_0= RULE_NUMBER ) ) )? (otherlv_5= 'AC' ( (lv_ac_6_0= RULE_NUMBER ) ) ( (lv_ac_7_0= RULE_NUMBER ) )? )? ( (lv_waveform_8_0= ruleWaveform ) )? ) ;
    public final EObject ruleCurrentSource() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token lv_nodes_1_0=null;
        Token lv_nodes_2_0=null;
        Token otherlv_3=null;
        Token lv_dc_4_0=null;
        Token otherlv_5=null;
        Token lv_ac_6_0=null;
        Token lv_ac_7_0=null;
        EObject lv_waveform_8_0 = null;



        	enterRule();

        try {
            // InternalXSpice.g:8497:2: ( ( ( (lv_name_0_0= RULE_IID ) ) ( (lv_nodes_1_0= RULE_NODE ) ) ( (lv_nodes_2_0= RULE_NODE ) ) ( (otherlv_3= 'DC' )? ( (lv_dc_4_0= RULE_NUMBER ) ) )? (otherlv_5= 'AC' ( (lv_ac_6_0= RULE_NUMBER ) ) ( (lv_ac_7_0= RULE_NUMBER ) )? )? ( (lv_waveform_8_0= ruleWaveform ) )? ) )
            // InternalXSpice.g:8498:2: ( ( (lv_name_0_0= RULE_IID ) ) ( (lv_nodes_1_0= RULE_NODE ) ) ( (lv_nodes_2_0= RULE_NODE ) ) ( (otherlv_3= 'DC' )? ( (lv_dc_4_0= RULE_NUMBER ) ) )? (otherlv_5= 'AC' ( (lv_ac_6_0= RULE_NUMBER ) ) ( (lv_ac_7_0= RULE_NUMBER ) )? )? ( (lv_waveform_8_0= ruleWaveform ) )? )
            {
            // InternalXSpice.g:8498:2: ( ( (lv_name_0_0= RULE_IID ) ) ( (lv_nodes_1_0= RULE_NODE ) ) ( (lv_nodes_2_0= RULE_NODE ) ) ( (otherlv_3= 'DC' )? ( (lv_dc_4_0= RULE_NUMBER ) ) )? (otherlv_5= 'AC' ( (lv_ac_6_0= RULE_NUMBER ) ) ( (lv_ac_7_0= RULE_NUMBER ) )? )? ( (lv_waveform_8_0= ruleWaveform ) )? )
            // InternalXSpice.g:8499:3: ( (lv_name_0_0= RULE_IID ) ) ( (lv_nodes_1_0= RULE_NODE ) ) ( (lv_nodes_2_0= RULE_NODE ) ) ( (otherlv_3= 'DC' )? ( (lv_dc_4_0= RULE_NUMBER ) ) )? (otherlv_5= 'AC' ( (lv_ac_6_0= RULE_NUMBER ) ) ( (lv_ac_7_0= RULE_NUMBER ) )? )? ( (lv_waveform_8_0= ruleWaveform ) )?
            {
            // InternalXSpice.g:8499:3: ( (lv_name_0_0= RULE_IID ) )
            // InternalXSpice.g:8500:4: (lv_name_0_0= RULE_IID )
            {
            // InternalXSpice.g:8500:4: (lv_name_0_0= RULE_IID )
            // InternalXSpice.g:8501:5: lv_name_0_0= RULE_IID
            {
            lv_name_0_0=(Token)match(input,RULE_IID,FOLLOW_5); 

            					newLeafNode(lv_name_0_0, grammarAccess.getCurrentSourceAccess().getNameIIDTerminalRuleCall_0_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getCurrentSourceRule());
            					}
            					setWithLastConsumed(
            						current,
            						"name",
            						lv_name_0_0,
            						"com.xtext.ravornyo.xspice.XSpice.IID");
            				

            }


            }

            // InternalXSpice.g:8517:3: ( (lv_nodes_1_0= RULE_NODE ) )
            // InternalXSpice.g:8518:4: (lv_nodes_1_0= RULE_NODE )
            {
            // InternalXSpice.g:8518:4: (lv_nodes_1_0= RULE_NODE )
            // InternalXSpice.g:8519:5: lv_nodes_1_0= RULE_NODE
            {
            lv_nodes_1_0=(Token)match(input,RULE_NODE,FOLLOW_5); 

            					newLeafNode(lv_nodes_1_0, grammarAccess.getCurrentSourceAccess().getNodesNODETerminalRuleCall_1_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getCurrentSourceRule());
            					}
            					addWithLastConsumed(
            						current,
            						"nodes",
            						lv_nodes_1_0,
            						"com.xtext.ravornyo.xspice.XSpice.NODE");
            				

            }


            }

            // InternalXSpice.g:8535:3: ( (lv_nodes_2_0= RULE_NODE ) )
            // InternalXSpice.g:8536:4: (lv_nodes_2_0= RULE_NODE )
            {
            // InternalXSpice.g:8536:4: (lv_nodes_2_0= RULE_NODE )
            // InternalXSpice.g:8537:5: lv_nodes_2_0= RULE_NODE
            {
            lv_nodes_2_0=(Token)match(input,RULE_NODE,FOLLOW_46); 

            					newLeafNode(lv_nodes_2_0, grammarAccess.getCurrentSourceAccess().getNodesNODETerminalRuleCall_2_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getCurrentSourceRule());
            					}
            					addWithLastConsumed(
            						current,
            						"nodes",
            						lv_nodes_2_0,
            						"com.xtext.ravornyo.xspice.XSpice.NODE");
            				

            }


            }

            // InternalXSpice.g:8553:3: ( (otherlv_3= 'DC' )? ( (lv_dc_4_0= RULE_NUMBER ) ) )?
            int alt48=2;
            int LA48_0 = input.LA(1);

            if ( (LA48_0==RULE_NUMBER||LA48_0==163) ) {
                alt48=1;
            }
            switch (alt48) {
                case 1 :
                    // InternalXSpice.g:8554:4: (otherlv_3= 'DC' )? ( (lv_dc_4_0= RULE_NUMBER ) )
                    {
                    // InternalXSpice.g:8554:4: (otherlv_3= 'DC' )?
                    int alt47=2;
                    int LA47_0 = input.LA(1);

                    if ( (LA47_0==163) ) {
                        alt47=1;
                    }
                    switch (alt47) {
                        case 1 :
                            // InternalXSpice.g:8555:5: otherlv_3= 'DC'
                            {
                            otherlv_3=(Token)match(input,163,FOLLOW_12); 

                            					newLeafNode(otherlv_3, grammarAccess.getCurrentSourceAccess().getDCKeyword_3_0());
                            				

                            }
                            break;

                    }

                    // InternalXSpice.g:8560:4: ( (lv_dc_4_0= RULE_NUMBER ) )
                    // InternalXSpice.g:8561:5: (lv_dc_4_0= RULE_NUMBER )
                    {
                    // InternalXSpice.g:8561:5: (lv_dc_4_0= RULE_NUMBER )
                    // InternalXSpice.g:8562:6: lv_dc_4_0= RULE_NUMBER
                    {
                    lv_dc_4_0=(Token)match(input,RULE_NUMBER,FOLLOW_47); 

                    						newLeafNode(lv_dc_4_0, grammarAccess.getCurrentSourceAccess().getDcNUMBERTerminalRuleCall_3_1_0());
                    					

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getCurrentSourceRule());
                    						}
                    						setWithLastConsumed(
                    							current,
                    							"dc",
                    							lv_dc_4_0,
                    							"com.xtext.ravornyo.xspice.XSpice.NUMBER");
                    					

                    }


                    }


                    }
                    break;

            }

            // InternalXSpice.g:8579:3: (otherlv_5= 'AC' ( (lv_ac_6_0= RULE_NUMBER ) ) ( (lv_ac_7_0= RULE_NUMBER ) )? )?
            int alt50=2;
            int LA50_0 = input.LA(1);

            if ( (LA50_0==164) ) {
                alt50=1;
            }
            switch (alt50) {
                case 1 :
                    // InternalXSpice.g:8580:4: otherlv_5= 'AC' ( (lv_ac_6_0= RULE_NUMBER ) ) ( (lv_ac_7_0= RULE_NUMBER ) )?
                    {
                    otherlv_5=(Token)match(input,164,FOLLOW_12); 

                    				newLeafNode(otherlv_5, grammarAccess.getCurrentSourceAccess().getACKeyword_4_0());
                    			
                    // InternalXSpice.g:8584:4: ( (lv_ac_6_0= RULE_NUMBER ) )
                    // InternalXSpice.g:8585:5: (lv_ac_6_0= RULE_NUMBER )
                    {
                    // InternalXSpice.g:8585:5: (lv_ac_6_0= RULE_NUMBER )
                    // InternalXSpice.g:8586:6: lv_ac_6_0= RULE_NUMBER
                    {
                    lv_ac_6_0=(Token)match(input,RULE_NUMBER,FOLLOW_48); 

                    						newLeafNode(lv_ac_6_0, grammarAccess.getCurrentSourceAccess().getAcNUMBERTerminalRuleCall_4_1_0());
                    					

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getCurrentSourceRule());
                    						}
                    						addWithLastConsumed(
                    							current,
                    							"ac",
                    							lv_ac_6_0,
                    							"com.xtext.ravornyo.xspice.XSpice.NUMBER");
                    					

                    }


                    }

                    // InternalXSpice.g:8602:4: ( (lv_ac_7_0= RULE_NUMBER ) )?
                    int alt49=2;
                    int LA49_0 = input.LA(1);

                    if ( (LA49_0==RULE_NUMBER) ) {
                        alt49=1;
                    }
                    switch (alt49) {
                        case 1 :
                            // InternalXSpice.g:8603:5: (lv_ac_7_0= RULE_NUMBER )
                            {
                            // InternalXSpice.g:8603:5: (lv_ac_7_0= RULE_NUMBER )
                            // InternalXSpice.g:8604:6: lv_ac_7_0= RULE_NUMBER
                            {
                            lv_ac_7_0=(Token)match(input,RULE_NUMBER,FOLLOW_49); 

                            						newLeafNode(lv_ac_7_0, grammarAccess.getCurrentSourceAccess().getAcNUMBERTerminalRuleCall_4_2_0());
                            					

                            						if (current==null) {
                            							current = createModelElement(grammarAccess.getCurrentSourceRule());
                            						}
                            						addWithLastConsumed(
                            							current,
                            							"ac",
                            							lv_ac_7_0,
                            							"com.xtext.ravornyo.xspice.XSpice.NUMBER");
                            					

                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // InternalXSpice.g:8621:3: ( (lv_waveform_8_0= ruleWaveform ) )?
            int alt51=2;
            int LA51_0 = input.LA(1);

            if ( ((LA51_0>=187 && LA51_0<=192)) ) {
                alt51=1;
            }
            switch (alt51) {
                case 1 :
                    // InternalXSpice.g:8622:4: (lv_waveform_8_0= ruleWaveform )
                    {
                    // InternalXSpice.g:8622:4: (lv_waveform_8_0= ruleWaveform )
                    // InternalXSpice.g:8623:5: lv_waveform_8_0= ruleWaveform
                    {

                    					newCompositeNode(grammarAccess.getCurrentSourceAccess().getWaveformWaveformParserRuleCall_5_0());
                    				
                    pushFollow(FOLLOW_2);
                    lv_waveform_8_0=ruleWaveform();

                    state._fsp--;


                    					if (current==null) {
                    						current = createModelElementForParent(grammarAccess.getCurrentSourceRule());
                    					}
                    					set(
                    						current,
                    						"waveform",
                    						lv_waveform_8_0,
                    						"com.xtext.ravornyo.xspice.XSpice.Waveform");
                    					afterParserOrEnumRuleCall();
                    				

                    }


                    }
                    break;

            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCurrentSource"


    // $ANTLR start "entryRuleVCVS"
    // InternalXSpice.g:8644:1: entryRuleVCVS returns [EObject current=null] : iv_ruleVCVS= ruleVCVS EOF ;
    public final EObject entryRuleVCVS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVCVS = null;


        try {
            // InternalXSpice.g:8644:45: (iv_ruleVCVS= ruleVCVS EOF )
            // InternalXSpice.g:8645:2: iv_ruleVCVS= ruleVCVS EOF
            {
             newCompositeNode(grammarAccess.getVCVSRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleVCVS=ruleVCVS();

            state._fsp--;

             current =iv_ruleVCVS; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVCVS"


    // $ANTLR start "ruleVCVS"
    // InternalXSpice.g:8651:1: ruleVCVS returns [EObject current=null] : ( ( (lv_name_0_0= RULE_EID ) ) ( (lv_nodes_1_0= RULE_NODE ) ) ( (lv_nodes_2_0= RULE_NODE ) ) ( (lv_nodes_3_0= RULE_NODE ) ) ( (lv_nodes_4_0= RULE_NODE ) ) ( (lv_gain_5_0= RULE_NUMBER ) ) ) ;
    public final EObject ruleVCVS() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token lv_nodes_1_0=null;
        Token lv_nodes_2_0=null;
        Token lv_nodes_3_0=null;
        Token lv_nodes_4_0=null;
        Token lv_gain_5_0=null;


        	enterRule();

        try {
            // InternalXSpice.g:8657:2: ( ( ( (lv_name_0_0= RULE_EID ) ) ( (lv_nodes_1_0= RULE_NODE ) ) ( (lv_nodes_2_0= RULE_NODE ) ) ( (lv_nodes_3_0= RULE_NODE ) ) ( (lv_nodes_4_0= RULE_NODE ) ) ( (lv_gain_5_0= RULE_NUMBER ) ) ) )
            // InternalXSpice.g:8658:2: ( ( (lv_name_0_0= RULE_EID ) ) ( (lv_nodes_1_0= RULE_NODE ) ) ( (lv_nodes_2_0= RULE_NODE ) ) ( (lv_nodes_3_0= RULE_NODE ) ) ( (lv_nodes_4_0= RULE_NODE ) ) ( (lv_gain_5_0= RULE_NUMBER ) ) )
            {
            // InternalXSpice.g:8658:2: ( ( (lv_name_0_0= RULE_EID ) ) ( (lv_nodes_1_0= RULE_NODE ) ) ( (lv_nodes_2_0= RULE_NODE ) ) ( (lv_nodes_3_0= RULE_NODE ) ) ( (lv_nodes_4_0= RULE_NODE ) ) ( (lv_gain_5_0= RULE_NUMBER ) ) )
            // InternalXSpice.g:8659:3: ( (lv_name_0_0= RULE_EID ) ) ( (lv_nodes_1_0= RULE_NODE ) ) ( (lv_nodes_2_0= RULE_NODE ) ) ( (lv_nodes_3_0= RULE_NODE ) ) ( (lv_nodes_4_0= RULE_NODE ) ) ( (lv_gain_5_0= RULE_NUMBER ) )
            {
            // InternalXSpice.g:8659:3: ( (lv_name_0_0= RULE_EID ) )
            // InternalXSpice.g:8660:4: (lv_name_0_0= RULE_EID )
            {
            // InternalXSpice.g:8660:4: (lv_name_0_0= RULE_EID )
            // InternalXSpice.g:8661:5: lv_name_0_0= RULE_EID
            {
            lv_name_0_0=(Token)match(input,RULE_EID,FOLLOW_5); 

            					newLeafNode(lv_name_0_0, grammarAccess.getVCVSAccess().getNameEIDTerminalRuleCall_0_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getVCVSRule());
            					}
            					setWithLastConsumed(
            						current,
            						"name",
            						lv_name_0_0,
            						"com.xtext.ravornyo.xspice.XSpice.EID");
            				

            }


            }

            // InternalXSpice.g:8677:3: ( (lv_nodes_1_0= RULE_NODE ) )
            // InternalXSpice.g:8678:4: (lv_nodes_1_0= RULE_NODE )
            {
            // InternalXSpice.g:8678:4: (lv_nodes_1_0= RULE_NODE )
            // InternalXSpice.g:8679:5: lv_nodes_1_0= RULE_NODE
            {
            lv_nodes_1_0=(Token)match(input,RULE_NODE,FOLLOW_5); 

            					newLeafNode(lv_nodes_1_0, grammarAccess.getVCVSAccess().getNodesNODETerminalRuleCall_1_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getVCVSRule());
            					}
            					addWithLastConsumed(
            						current,
            						"nodes",
            						lv_nodes_1_0,
            						"com.xtext.ravornyo.xspice.XSpice.NODE");
            				

            }


            }

            // InternalXSpice.g:8695:3: ( (lv_nodes_2_0= RULE_NODE ) )
            // InternalXSpice.g:8696:4: (lv_nodes_2_0= RULE_NODE )
            {
            // InternalXSpice.g:8696:4: (lv_nodes_2_0= RULE_NODE )
            // InternalXSpice.g:8697:5: lv_nodes_2_0= RULE_NODE
            {
            lv_nodes_2_0=(Token)match(input,RULE_NODE,FOLLOW_5); 

            					newLeafNode(lv_nodes_2_0, grammarAccess.getVCVSAccess().getNodesNODETerminalRuleCall_2_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getVCVSRule());
            					}
            					addWithLastConsumed(
            						current,
            						"nodes",
            						lv_nodes_2_0,
            						"com.xtext.ravornyo.xspice.XSpice.NODE");
            				

            }


            }

            // InternalXSpice.g:8713:3: ( (lv_nodes_3_0= RULE_NODE ) )
            // InternalXSpice.g:8714:4: (lv_nodes_3_0= RULE_NODE )
            {
            // InternalXSpice.g:8714:4: (lv_nodes_3_0= RULE_NODE )
            // InternalXSpice.g:8715:5: lv_nodes_3_0= RULE_NODE
            {
            lv_nodes_3_0=(Token)match(input,RULE_NODE,FOLLOW_5); 

            					newLeafNode(lv_nodes_3_0, grammarAccess.getVCVSAccess().getNodesNODETerminalRuleCall_3_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getVCVSRule());
            					}
            					addWithLastConsumed(
            						current,
            						"nodes",
            						lv_nodes_3_0,
            						"com.xtext.ravornyo.xspice.XSpice.NODE");
            				

            }


            }

            // InternalXSpice.g:8731:3: ( (lv_nodes_4_0= RULE_NODE ) )
            // InternalXSpice.g:8732:4: (lv_nodes_4_0= RULE_NODE )
            {
            // InternalXSpice.g:8732:4: (lv_nodes_4_0= RULE_NODE )
            // InternalXSpice.g:8733:5: lv_nodes_4_0= RULE_NODE
            {
            lv_nodes_4_0=(Token)match(input,RULE_NODE,FOLLOW_12); 

            					newLeafNode(lv_nodes_4_0, grammarAccess.getVCVSAccess().getNodesNODETerminalRuleCall_4_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getVCVSRule());
            					}
            					addWithLastConsumed(
            						current,
            						"nodes",
            						lv_nodes_4_0,
            						"com.xtext.ravornyo.xspice.XSpice.NODE");
            				

            }


            }

            // InternalXSpice.g:8749:3: ( (lv_gain_5_0= RULE_NUMBER ) )
            // InternalXSpice.g:8750:4: (lv_gain_5_0= RULE_NUMBER )
            {
            // InternalXSpice.g:8750:4: (lv_gain_5_0= RULE_NUMBER )
            // InternalXSpice.g:8751:5: lv_gain_5_0= RULE_NUMBER
            {
            lv_gain_5_0=(Token)match(input,RULE_NUMBER,FOLLOW_2); 

            					newLeafNode(lv_gain_5_0, grammarAccess.getVCVSAccess().getGainNUMBERTerminalRuleCall_5_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getVCVSRule());
            					}
            					setWithLastConsumed(
            						current,
            						"gain",
            						lv_gain_5_0,
            						"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            				

            }


            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVCVS"


    // $ANTLR start "entryRuleVCCS"
    // InternalXSpice.g:8771:1: entryRuleVCCS returns [EObject current=null] : iv_ruleVCCS= ruleVCCS EOF ;
    public final EObject entryRuleVCCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVCCS = null;


        try {
            // InternalXSpice.g:8771:45: (iv_ruleVCCS= ruleVCCS EOF )
            // InternalXSpice.g:8772:2: iv_ruleVCCS= ruleVCCS EOF
            {
             newCompositeNode(grammarAccess.getVCCSRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleVCCS=ruleVCCS();

            state._fsp--;

             current =iv_ruleVCCS; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVCCS"


    // $ANTLR start "ruleVCCS"
    // InternalXSpice.g:8778:1: ruleVCCS returns [EObject current=null] : ( ( (lv_name_0_0= RULE_GID ) ) ( (lv_nodes_1_0= RULE_NODE ) ) ( (lv_nodes_2_0= RULE_NODE ) ) ( (lv_nodes_3_0= RULE_NODE ) ) ( (lv_nodes_4_0= RULE_NODE ) ) ( (lv_transconductance_5_0= RULE_NUMBER ) ) ) ;
    public final EObject ruleVCCS() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token lv_nodes_1_0=null;
        Token lv_nodes_2_0=null;
        Token lv_nodes_3_0=null;
        Token lv_nodes_4_0=null;
        Token lv_transconductance_5_0=null;


        	enterRule();

        try {
            // InternalXSpice.g:8784:2: ( ( ( (lv_name_0_0= RULE_GID ) ) ( (lv_nodes_1_0= RULE_NODE ) ) ( (lv_nodes_2_0= RULE_NODE ) ) ( (lv_nodes_3_0= RULE_NODE ) ) ( (lv_nodes_4_0= RULE_NODE ) ) ( (lv_transconductance_5_0= RULE_NUMBER ) ) ) )
            // InternalXSpice.g:8785:2: ( ( (lv_name_0_0= RULE_GID ) ) ( (lv_nodes_1_0= RULE_NODE ) ) ( (lv_nodes_2_0= RULE_NODE ) ) ( (lv_nodes_3_0= RULE_NODE ) ) ( (lv_nodes_4_0= RULE_NODE ) ) ( (lv_transconductance_5_0= RULE_NUMBER ) ) )
            {
            // InternalXSpice.g:8785:2: ( ( (lv_name_0_0= RULE_GID ) ) ( (lv_nodes_1_0= RULE_NODE ) ) ( (lv_nodes_2_0= RULE_NODE ) ) ( (lv_nodes_3_0= RULE_NODE ) ) ( (lv_nodes_4_0= RULE_NODE ) ) ( (lv_transconductance_5_0= RULE_NUMBER ) ) )
            // InternalXSpice.g:8786:3: ( (lv_name_0_0= RULE_GID ) ) ( (lv_nodes_1_0= RULE_NODE ) ) ( (lv_nodes_2_0= RULE_NODE ) ) ( (lv_nodes_3_0= RULE_NODE ) ) ( (lv_nodes_4_0= RULE_NODE ) ) ( (lv_transconductance_5_0= RULE_NUMBER ) )
            {
            // InternalXSpice.g:8786:3: ( (lv_name_0_0= RULE_GID ) )
            // InternalXSpice.g:8787:4: (lv_name_0_0= RULE_GID )
            {
            // InternalXSpice.g:8787:4: (lv_name_0_0= RULE_GID )
            // InternalXSpice.g:8788:5: lv_name_0_0= RULE_GID
            {
            lv_name_0_0=(Token)match(input,RULE_GID,FOLLOW_5); 

            					newLeafNode(lv_name_0_0, grammarAccess.getVCCSAccess().getNameGIDTerminalRuleCall_0_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getVCCSRule());
            					}
            					setWithLastConsumed(
            						current,
            						"name",
            						lv_name_0_0,
            						"com.xtext.ravornyo.xspice.XSpice.GID");
            				

            }


            }

            // InternalXSpice.g:8804:3: ( (lv_nodes_1_0= RULE_NODE ) )
            // InternalXSpice.g:8805:4: (lv_nodes_1_0= RULE_NODE )
            {
            // InternalXSpice.g:8805:4: (lv_nodes_1_0= RULE_NODE )
            // InternalXSpice.g:8806:5: lv_nodes_1_0= RULE_NODE
            {
            lv_nodes_1_0=(Token)match(input,RULE_NODE,FOLLOW_5); 

            					newLeafNode(lv_nodes_1_0, grammarAccess.getVCCSAccess().getNodesNODETerminalRuleCall_1_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getVCCSRule());
            					}
            					addWithLastConsumed(
            						current,
            						"nodes",
            						lv_nodes_1_0,
            						"com.xtext.ravornyo.xspice.XSpice.NODE");
            				

            }


            }

            // InternalXSpice.g:8822:3: ( (lv_nodes_2_0= RULE_NODE ) )
            // InternalXSpice.g:8823:4: (lv_nodes_2_0= RULE_NODE )
            {
            // InternalXSpice.g:8823:4: (lv_nodes_2_0= RULE_NODE )
            // InternalXSpice.g:8824:5: lv_nodes_2_0= RULE_NODE
            {
            lv_nodes_2_0=(Token)match(input,RULE_NODE,FOLLOW_5); 

            					newLeafNode(lv_nodes_2_0, grammarAccess.getVCCSAccess().getNodesNODETerminalRuleCall_2_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getVCCSRule());
            					}
            					addWithLastConsumed(
            						current,
            						"nodes",
            						lv_nodes_2_0,
            						"com.xtext.ravornyo.xspice.XSpice.NODE");
            				

            }


            }

            // InternalXSpice.g:8840:3: ( (lv_nodes_3_0= RULE_NODE ) )
            // InternalXSpice.g:8841:4: (lv_nodes_3_0= RULE_NODE )
            {
            // InternalXSpice.g:8841:4: (lv_nodes_3_0= RULE_NODE )
            // InternalXSpice.g:8842:5: lv_nodes_3_0= RULE_NODE
            {
            lv_nodes_3_0=(Token)match(input,RULE_NODE,FOLLOW_5); 

            					newLeafNode(lv_nodes_3_0, grammarAccess.getVCCSAccess().getNodesNODETerminalRuleCall_3_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getVCCSRule());
            					}
            					addWithLastConsumed(
            						current,
            						"nodes",
            						lv_nodes_3_0,
            						"com.xtext.ravornyo.xspice.XSpice.NODE");
            				

            }


            }

            // InternalXSpice.g:8858:3: ( (lv_nodes_4_0= RULE_NODE ) )
            // InternalXSpice.g:8859:4: (lv_nodes_4_0= RULE_NODE )
            {
            // InternalXSpice.g:8859:4: (lv_nodes_4_0= RULE_NODE )
            // InternalXSpice.g:8860:5: lv_nodes_4_0= RULE_NODE
            {
            lv_nodes_4_0=(Token)match(input,RULE_NODE,FOLLOW_12); 

            					newLeafNode(lv_nodes_4_0, grammarAccess.getVCCSAccess().getNodesNODETerminalRuleCall_4_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getVCCSRule());
            					}
            					addWithLastConsumed(
            						current,
            						"nodes",
            						lv_nodes_4_0,
            						"com.xtext.ravornyo.xspice.XSpice.NODE");
            				

            }


            }

            // InternalXSpice.g:8876:3: ( (lv_transconductance_5_0= RULE_NUMBER ) )
            // InternalXSpice.g:8877:4: (lv_transconductance_5_0= RULE_NUMBER )
            {
            // InternalXSpice.g:8877:4: (lv_transconductance_5_0= RULE_NUMBER )
            // InternalXSpice.g:8878:5: lv_transconductance_5_0= RULE_NUMBER
            {
            lv_transconductance_5_0=(Token)match(input,RULE_NUMBER,FOLLOW_2); 

            					newLeafNode(lv_transconductance_5_0, grammarAccess.getVCCSAccess().getTransconductanceNUMBERTerminalRuleCall_5_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getVCCSRule());
            					}
            					setWithLastConsumed(
            						current,
            						"transconductance",
            						lv_transconductance_5_0,
            						"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            				

            }


            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVCCS"


    // $ANTLR start "entryRuleCCCS"
    // InternalXSpice.g:8898:1: entryRuleCCCS returns [EObject current=null] : iv_ruleCCCS= ruleCCCS EOF ;
    public final EObject entryRuleCCCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCCCS = null;


        try {
            // InternalXSpice.g:8898:45: (iv_ruleCCCS= ruleCCCS EOF )
            // InternalXSpice.g:8899:2: iv_ruleCCCS= ruleCCCS EOF
            {
             newCompositeNode(grammarAccess.getCCCSRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleCCCS=ruleCCCS();

            state._fsp--;

             current =iv_ruleCCCS; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCCCS"


    // $ANTLR start "ruleCCCS"
    // InternalXSpice.g:8905:1: ruleCCCS returns [EObject current=null] : ( ( (lv_name_0_0= RULE_FID ) ) ( (lv_nodes_1_0= RULE_NODE ) ) ( (lv_nodes_2_0= RULE_NODE ) ) ( (lv_controller_3_0= RULE_VID ) ) ( (lv_gain_4_0= RULE_NUMBER ) ) ) ;
    public final EObject ruleCCCS() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token lv_nodes_1_0=null;
        Token lv_nodes_2_0=null;
        Token lv_controller_3_0=null;
        Token lv_gain_4_0=null;


        	enterRule();

        try {
            // InternalXSpice.g:8911:2: ( ( ( (lv_name_0_0= RULE_FID ) ) ( (lv_nodes_1_0= RULE_NODE ) ) ( (lv_nodes_2_0= RULE_NODE ) ) ( (lv_controller_3_0= RULE_VID ) ) ( (lv_gain_4_0= RULE_NUMBER ) ) ) )
            // InternalXSpice.g:8912:2: ( ( (lv_name_0_0= RULE_FID ) ) ( (lv_nodes_1_0= RULE_NODE ) ) ( (lv_nodes_2_0= RULE_NODE ) ) ( (lv_controller_3_0= RULE_VID ) ) ( (lv_gain_4_0= RULE_NUMBER ) ) )
            {
            // InternalXSpice.g:8912:2: ( ( (lv_name_0_0= RULE_FID ) ) ( (lv_nodes_1_0= RULE_NODE ) ) ( (lv_nodes_2_0= RULE_NODE ) ) ( (lv_controller_3_0= RULE_VID ) ) ( (lv_gain_4_0= RULE_NUMBER ) ) )
            // InternalXSpice.g:8913:3: ( (lv_name_0_0= RULE_FID ) ) ( (lv_nodes_1_0= RULE_NODE ) ) ( (lv_nodes_2_0= RULE_NODE ) ) ( (lv_controller_3_0= RULE_VID ) ) ( (lv_gain_4_0= RULE_NUMBER ) )
            {
            // InternalXSpice.g:8913:3: ( (lv_name_0_0= RULE_FID ) )
            // InternalXSpice.g:8914:4: (lv_name_0_0= RULE_FID )
            {
            // InternalXSpice.g:8914:4: (lv_name_0_0= RULE_FID )
            // InternalXSpice.g:8915:5: lv_name_0_0= RULE_FID
            {
            lv_name_0_0=(Token)match(input,RULE_FID,FOLLOW_5); 

            					newLeafNode(lv_name_0_0, grammarAccess.getCCCSAccess().getNameFIDTerminalRuleCall_0_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getCCCSRule());
            					}
            					setWithLastConsumed(
            						current,
            						"name",
            						lv_name_0_0,
            						"com.xtext.ravornyo.xspice.XSpice.FID");
            				

            }


            }

            // InternalXSpice.g:8931:3: ( (lv_nodes_1_0= RULE_NODE ) )
            // InternalXSpice.g:8932:4: (lv_nodes_1_0= RULE_NODE )
            {
            // InternalXSpice.g:8932:4: (lv_nodes_1_0= RULE_NODE )
            // InternalXSpice.g:8933:5: lv_nodes_1_0= RULE_NODE
            {
            lv_nodes_1_0=(Token)match(input,RULE_NODE,FOLLOW_5); 

            					newLeafNode(lv_nodes_1_0, grammarAccess.getCCCSAccess().getNodesNODETerminalRuleCall_1_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getCCCSRule());
            					}
            					addWithLastConsumed(
            						current,
            						"nodes",
            						lv_nodes_1_0,
            						"com.xtext.ravornyo.xspice.XSpice.NODE");
            				

            }


            }

            // InternalXSpice.g:8949:3: ( (lv_nodes_2_0= RULE_NODE ) )
            // InternalXSpice.g:8950:4: (lv_nodes_2_0= RULE_NODE )
            {
            // InternalXSpice.g:8950:4: (lv_nodes_2_0= RULE_NODE )
            // InternalXSpice.g:8951:5: lv_nodes_2_0= RULE_NODE
            {
            lv_nodes_2_0=(Token)match(input,RULE_NODE,FOLLOW_50); 

            					newLeafNode(lv_nodes_2_0, grammarAccess.getCCCSAccess().getNodesNODETerminalRuleCall_2_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getCCCSRule());
            					}
            					addWithLastConsumed(
            						current,
            						"nodes",
            						lv_nodes_2_0,
            						"com.xtext.ravornyo.xspice.XSpice.NODE");
            				

            }


            }

            // InternalXSpice.g:8967:3: ( (lv_controller_3_0= RULE_VID ) )
            // InternalXSpice.g:8968:4: (lv_controller_3_0= RULE_VID )
            {
            // InternalXSpice.g:8968:4: (lv_controller_3_0= RULE_VID )
            // InternalXSpice.g:8969:5: lv_controller_3_0= RULE_VID
            {
            lv_controller_3_0=(Token)match(input,RULE_VID,FOLLOW_12); 

            					newLeafNode(lv_controller_3_0, grammarAccess.getCCCSAccess().getControllerVIDTerminalRuleCall_3_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getCCCSRule());
            					}
            					setWithLastConsumed(
            						current,
            						"controller",
            						lv_controller_3_0,
            						"com.xtext.ravornyo.xspice.XSpice.VID");
            				

            }


            }

            // InternalXSpice.g:8985:3: ( (lv_gain_4_0= RULE_NUMBER ) )
            // InternalXSpice.g:8986:4: (lv_gain_4_0= RULE_NUMBER )
            {
            // InternalXSpice.g:8986:4: (lv_gain_4_0= RULE_NUMBER )
            // InternalXSpice.g:8987:5: lv_gain_4_0= RULE_NUMBER
            {
            lv_gain_4_0=(Token)match(input,RULE_NUMBER,FOLLOW_2); 

            					newLeafNode(lv_gain_4_0, grammarAccess.getCCCSAccess().getGainNUMBERTerminalRuleCall_4_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getCCCSRule());
            					}
            					setWithLastConsumed(
            						current,
            						"gain",
            						lv_gain_4_0,
            						"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            				

            }


            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCCCS"


    // $ANTLR start "entryRuleCCVS"
    // InternalXSpice.g:9007:1: entryRuleCCVS returns [EObject current=null] : iv_ruleCCVS= ruleCCVS EOF ;
    public final EObject entryRuleCCVS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCCVS = null;


        try {
            // InternalXSpice.g:9007:45: (iv_ruleCCVS= ruleCCVS EOF )
            // InternalXSpice.g:9008:2: iv_ruleCCVS= ruleCCVS EOF
            {
             newCompositeNode(grammarAccess.getCCVSRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleCCVS=ruleCCVS();

            state._fsp--;

             current =iv_ruleCCVS; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCCVS"


    // $ANTLR start "ruleCCVS"
    // InternalXSpice.g:9014:1: ruleCCVS returns [EObject current=null] : ( ( (lv_name_0_0= RULE_HID ) ) ( (lv_nodes_1_0= RULE_NODE ) ) ( (lv_nodes_2_0= RULE_NODE ) ) ( (lv_controller_3_0= RULE_VID ) ) ( (lv_transresistance_4_0= RULE_NUMBER ) ) ) ;
    public final EObject ruleCCVS() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token lv_nodes_1_0=null;
        Token lv_nodes_2_0=null;
        Token lv_controller_3_0=null;
        Token lv_transresistance_4_0=null;


        	enterRule();

        try {
            // InternalXSpice.g:9020:2: ( ( ( (lv_name_0_0= RULE_HID ) ) ( (lv_nodes_1_0= RULE_NODE ) ) ( (lv_nodes_2_0= RULE_NODE ) ) ( (lv_controller_3_0= RULE_VID ) ) ( (lv_transresistance_4_0= RULE_NUMBER ) ) ) )
            // InternalXSpice.g:9021:2: ( ( (lv_name_0_0= RULE_HID ) ) ( (lv_nodes_1_0= RULE_NODE ) ) ( (lv_nodes_2_0= RULE_NODE ) ) ( (lv_controller_3_0= RULE_VID ) ) ( (lv_transresistance_4_0= RULE_NUMBER ) ) )
            {
            // InternalXSpice.g:9021:2: ( ( (lv_name_0_0= RULE_HID ) ) ( (lv_nodes_1_0= RULE_NODE ) ) ( (lv_nodes_2_0= RULE_NODE ) ) ( (lv_controller_3_0= RULE_VID ) ) ( (lv_transresistance_4_0= RULE_NUMBER ) ) )
            // InternalXSpice.g:9022:3: ( (lv_name_0_0= RULE_HID ) ) ( (lv_nodes_1_0= RULE_NODE ) ) ( (lv_nodes_2_0= RULE_NODE ) ) ( (lv_controller_3_0= RULE_VID ) ) ( (lv_transresistance_4_0= RULE_NUMBER ) )
            {
            // InternalXSpice.g:9022:3: ( (lv_name_0_0= RULE_HID ) )
            // InternalXSpice.g:9023:4: (lv_name_0_0= RULE_HID )
            {
            // InternalXSpice.g:9023:4: (lv_name_0_0= RULE_HID )
            // InternalXSpice.g:9024:5: lv_name_0_0= RULE_HID
            {
            lv_name_0_0=(Token)match(input,RULE_HID,FOLLOW_5); 

            					newLeafNode(lv_name_0_0, grammarAccess.getCCVSAccess().getNameHIDTerminalRuleCall_0_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getCCVSRule());
            					}
            					setWithLastConsumed(
            						current,
            						"name",
            						lv_name_0_0,
            						"com.xtext.ravornyo.xspice.XSpice.HID");
            				

            }


            }

            // InternalXSpice.g:9040:3: ( (lv_nodes_1_0= RULE_NODE ) )
            // InternalXSpice.g:9041:4: (lv_nodes_1_0= RULE_NODE )
            {
            // InternalXSpice.g:9041:4: (lv_nodes_1_0= RULE_NODE )
            // InternalXSpice.g:9042:5: lv_nodes_1_0= RULE_NODE
            {
            lv_nodes_1_0=(Token)match(input,RULE_NODE,FOLLOW_5); 

            					newLeafNode(lv_nodes_1_0, grammarAccess.getCCVSAccess().getNodesNODETerminalRuleCall_1_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getCCVSRule());
            					}
            					addWithLastConsumed(
            						current,
            						"nodes",
            						lv_nodes_1_0,
            						"com.xtext.ravornyo.xspice.XSpice.NODE");
            				

            }


            }

            // InternalXSpice.g:9058:3: ( (lv_nodes_2_0= RULE_NODE ) )
            // InternalXSpice.g:9059:4: (lv_nodes_2_0= RULE_NODE )
            {
            // InternalXSpice.g:9059:4: (lv_nodes_2_0= RULE_NODE )
            // InternalXSpice.g:9060:5: lv_nodes_2_0= RULE_NODE
            {
            lv_nodes_2_0=(Token)match(input,RULE_NODE,FOLLOW_50); 

            					newLeafNode(lv_nodes_2_0, grammarAccess.getCCVSAccess().getNodesNODETerminalRuleCall_2_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getCCVSRule());
            					}
            					addWithLastConsumed(
            						current,
            						"nodes",
            						lv_nodes_2_0,
            						"com.xtext.ravornyo.xspice.XSpice.NODE");
            				

            }


            }

            // InternalXSpice.g:9076:3: ( (lv_controller_3_0= RULE_VID ) )
            // InternalXSpice.g:9077:4: (lv_controller_3_0= RULE_VID )
            {
            // InternalXSpice.g:9077:4: (lv_controller_3_0= RULE_VID )
            // InternalXSpice.g:9078:5: lv_controller_3_0= RULE_VID
            {
            lv_controller_3_0=(Token)match(input,RULE_VID,FOLLOW_12); 

            					newLeafNode(lv_controller_3_0, grammarAccess.getCCVSAccess().getControllerVIDTerminalRuleCall_3_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getCCVSRule());
            					}
            					setWithLastConsumed(
            						current,
            						"controller",
            						lv_controller_3_0,
            						"com.xtext.ravornyo.xspice.XSpice.VID");
            				

            }


            }

            // InternalXSpice.g:9094:3: ( (lv_transresistance_4_0= RULE_NUMBER ) )
            // InternalXSpice.g:9095:4: (lv_transresistance_4_0= RULE_NUMBER )
            {
            // InternalXSpice.g:9095:4: (lv_transresistance_4_0= RULE_NUMBER )
            // InternalXSpice.g:9096:5: lv_transresistance_4_0= RULE_NUMBER
            {
            lv_transresistance_4_0=(Token)match(input,RULE_NUMBER,FOLLOW_2); 

            					newLeafNode(lv_transresistance_4_0, grammarAccess.getCCVSAccess().getTransresistanceNUMBERTerminalRuleCall_4_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getCCVSRule());
            					}
            					setWithLastConsumed(
            						current,
            						"transresistance",
            						lv_transresistance_4_0,
            						"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            				

            }


            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCCVS"


    // $ANTLR start "entryRuleGeometericSweep"
    // InternalXSpice.g:9116:1: entryRuleGeometericSweep returns [EObject current=null] : iv_ruleGeometericSweep= ruleGeometericSweep EOF ;
    public final EObject entryRuleGeometericSweep() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGeometericSweep = null;


        try {
            // InternalXSpice.g:9116:56: (iv_ruleGeometericSweep= ruleGeometericSweep EOF )
            // InternalXSpice.g:9117:2: iv_ruleGeometericSweep= ruleGeometericSweep EOF
            {
             newCompositeNode(grammarAccess.getGeometericSweepRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleGeometericSweep=ruleGeometericSweep();

            state._fsp--;

             current =iv_ruleGeometericSweep; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGeometericSweep"


    // $ANTLR start "ruleGeometericSweep"
    // InternalXSpice.g:9123:1: ruleGeometericSweep returns [EObject current=null] : (this_LinearSweep_0= ruleLinearSweep | this_OctaveSweep_1= ruleOctaveSweep | this_DecadeSweep_2= ruleDecadeSweep ) ;
    public final EObject ruleGeometericSweep() throws RecognitionException {
        EObject current = null;

        EObject this_LinearSweep_0 = null;

        EObject this_OctaveSweep_1 = null;

        EObject this_DecadeSweep_2 = null;



        	enterRule();

        try {
            // InternalXSpice.g:9129:2: ( (this_LinearSweep_0= ruleLinearSweep | this_OctaveSweep_1= ruleOctaveSweep | this_DecadeSweep_2= ruleDecadeSweep ) )
            // InternalXSpice.g:9130:2: (this_LinearSweep_0= ruleLinearSweep | this_OctaveSweep_1= ruleOctaveSweep | this_DecadeSweep_2= ruleDecadeSweep )
            {
            // InternalXSpice.g:9130:2: (this_LinearSweep_0= ruleLinearSweep | this_OctaveSweep_1= ruleOctaveSweep | this_DecadeSweep_2= ruleDecadeSweep )
            int alt52=3;
            switch ( input.LA(1) ) {
            case 165:
                {
                alt52=1;
                }
                break;
            case 166:
                {
                alt52=2;
                }
                break;
            case 167:
                {
                alt52=3;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 52, 0, input);

                throw nvae;
            }

            switch (alt52) {
                case 1 :
                    // InternalXSpice.g:9131:3: this_LinearSweep_0= ruleLinearSweep
                    {

                    			newCompositeNode(grammarAccess.getGeometericSweepAccess().getLinearSweepParserRuleCall_0());
                    		
                    pushFollow(FOLLOW_2);
                    this_LinearSweep_0=ruleLinearSweep();

                    state._fsp--;


                    			current = this_LinearSweep_0;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 2 :
                    // InternalXSpice.g:9140:3: this_OctaveSweep_1= ruleOctaveSweep
                    {

                    			newCompositeNode(grammarAccess.getGeometericSweepAccess().getOctaveSweepParserRuleCall_1());
                    		
                    pushFollow(FOLLOW_2);
                    this_OctaveSweep_1=ruleOctaveSweep();

                    state._fsp--;


                    			current = this_OctaveSweep_1;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 3 :
                    // InternalXSpice.g:9149:3: this_DecadeSweep_2= ruleDecadeSweep
                    {

                    			newCompositeNode(grammarAccess.getGeometericSweepAccess().getDecadeSweepParserRuleCall_2());
                    		
                    pushFollow(FOLLOW_2);
                    this_DecadeSweep_2=ruleDecadeSweep();

                    state._fsp--;


                    			current = this_DecadeSweep_2;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGeometericSweep"


    // $ANTLR start "entryRuleLinearSweep"
    // InternalXSpice.g:9161:1: entryRuleLinearSweep returns [EObject current=null] : iv_ruleLinearSweep= ruleLinearSweep EOF ;
    public final EObject entryRuleLinearSweep() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLinearSweep = null;


        try {
            // InternalXSpice.g:9161:52: (iv_ruleLinearSweep= ruleLinearSweep EOF )
            // InternalXSpice.g:9162:2: iv_ruleLinearSweep= ruleLinearSweep EOF
            {
             newCompositeNode(grammarAccess.getLinearSweepRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleLinearSweep=ruleLinearSweep();

            state._fsp--;

             current =iv_ruleLinearSweep; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLinearSweep"


    // $ANTLR start "ruleLinearSweep"
    // InternalXSpice.g:9168:1: ruleLinearSweep returns [EObject current=null] : (otherlv_0= 'LIN' ( (lv_initial_1_0= RULE_NUMBER ) ) ( (lv_final_2_0= RULE_NUMBER ) ) ( (lv_delta_3_0= RULE_NUMBER ) ) ) ;
    public final EObject ruleLinearSweep() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_initial_1_0=null;
        Token lv_final_2_0=null;
        Token lv_delta_3_0=null;


        	enterRule();

        try {
            // InternalXSpice.g:9174:2: ( (otherlv_0= 'LIN' ( (lv_initial_1_0= RULE_NUMBER ) ) ( (lv_final_2_0= RULE_NUMBER ) ) ( (lv_delta_3_0= RULE_NUMBER ) ) ) )
            // InternalXSpice.g:9175:2: (otherlv_0= 'LIN' ( (lv_initial_1_0= RULE_NUMBER ) ) ( (lv_final_2_0= RULE_NUMBER ) ) ( (lv_delta_3_0= RULE_NUMBER ) ) )
            {
            // InternalXSpice.g:9175:2: (otherlv_0= 'LIN' ( (lv_initial_1_0= RULE_NUMBER ) ) ( (lv_final_2_0= RULE_NUMBER ) ) ( (lv_delta_3_0= RULE_NUMBER ) ) )
            // InternalXSpice.g:9176:3: otherlv_0= 'LIN' ( (lv_initial_1_0= RULE_NUMBER ) ) ( (lv_final_2_0= RULE_NUMBER ) ) ( (lv_delta_3_0= RULE_NUMBER ) )
            {
            otherlv_0=(Token)match(input,165,FOLLOW_12); 

            			newLeafNode(otherlv_0, grammarAccess.getLinearSweepAccess().getLINKeyword_0());
            		
            // InternalXSpice.g:9180:3: ( (lv_initial_1_0= RULE_NUMBER ) )
            // InternalXSpice.g:9181:4: (lv_initial_1_0= RULE_NUMBER )
            {
            // InternalXSpice.g:9181:4: (lv_initial_1_0= RULE_NUMBER )
            // InternalXSpice.g:9182:5: lv_initial_1_0= RULE_NUMBER
            {
            lv_initial_1_0=(Token)match(input,RULE_NUMBER,FOLLOW_12); 

            					newLeafNode(lv_initial_1_0, grammarAccess.getLinearSweepAccess().getInitialNUMBERTerminalRuleCall_1_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getLinearSweepRule());
            					}
            					setWithLastConsumed(
            						current,
            						"initial",
            						lv_initial_1_0,
            						"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            				

            }


            }

            // InternalXSpice.g:9198:3: ( (lv_final_2_0= RULE_NUMBER ) )
            // InternalXSpice.g:9199:4: (lv_final_2_0= RULE_NUMBER )
            {
            // InternalXSpice.g:9199:4: (lv_final_2_0= RULE_NUMBER )
            // InternalXSpice.g:9200:5: lv_final_2_0= RULE_NUMBER
            {
            lv_final_2_0=(Token)match(input,RULE_NUMBER,FOLLOW_12); 

            					newLeafNode(lv_final_2_0, grammarAccess.getLinearSweepAccess().getFinalNUMBERTerminalRuleCall_2_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getLinearSweepRule());
            					}
            					setWithLastConsumed(
            						current,
            						"final",
            						lv_final_2_0,
            						"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            				

            }


            }

            // InternalXSpice.g:9216:3: ( (lv_delta_3_0= RULE_NUMBER ) )
            // InternalXSpice.g:9217:4: (lv_delta_3_0= RULE_NUMBER )
            {
            // InternalXSpice.g:9217:4: (lv_delta_3_0= RULE_NUMBER )
            // InternalXSpice.g:9218:5: lv_delta_3_0= RULE_NUMBER
            {
            lv_delta_3_0=(Token)match(input,RULE_NUMBER,FOLLOW_2); 

            					newLeafNode(lv_delta_3_0, grammarAccess.getLinearSweepAccess().getDeltaNUMBERTerminalRuleCall_3_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getLinearSweepRule());
            					}
            					setWithLastConsumed(
            						current,
            						"delta",
            						lv_delta_3_0,
            						"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            				

            }


            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLinearSweep"


    // $ANTLR start "entryRuleOctaveSweep"
    // InternalXSpice.g:9238:1: entryRuleOctaveSweep returns [EObject current=null] : iv_ruleOctaveSweep= ruleOctaveSweep EOF ;
    public final EObject entryRuleOctaveSweep() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOctaveSweep = null;


        try {
            // InternalXSpice.g:9238:52: (iv_ruleOctaveSweep= ruleOctaveSweep EOF )
            // InternalXSpice.g:9239:2: iv_ruleOctaveSweep= ruleOctaveSweep EOF
            {
             newCompositeNode(grammarAccess.getOctaveSweepRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleOctaveSweep=ruleOctaveSweep();

            state._fsp--;

             current =iv_ruleOctaveSweep; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOctaveSweep"


    // $ANTLR start "ruleOctaveSweep"
    // InternalXSpice.g:9245:1: ruleOctaveSweep returns [EObject current=null] : (otherlv_0= 'OCT' ( (lv_initial_1_0= RULE_NUMBER ) ) ( (lv_final_2_0= RULE_NUMBER ) ) ( (lv_pointsPerOctave_3_0= RULE_NUMBER ) ) ) ;
    public final EObject ruleOctaveSweep() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_initial_1_0=null;
        Token lv_final_2_0=null;
        Token lv_pointsPerOctave_3_0=null;


        	enterRule();

        try {
            // InternalXSpice.g:9251:2: ( (otherlv_0= 'OCT' ( (lv_initial_1_0= RULE_NUMBER ) ) ( (lv_final_2_0= RULE_NUMBER ) ) ( (lv_pointsPerOctave_3_0= RULE_NUMBER ) ) ) )
            // InternalXSpice.g:9252:2: (otherlv_0= 'OCT' ( (lv_initial_1_0= RULE_NUMBER ) ) ( (lv_final_2_0= RULE_NUMBER ) ) ( (lv_pointsPerOctave_3_0= RULE_NUMBER ) ) )
            {
            // InternalXSpice.g:9252:2: (otherlv_0= 'OCT' ( (lv_initial_1_0= RULE_NUMBER ) ) ( (lv_final_2_0= RULE_NUMBER ) ) ( (lv_pointsPerOctave_3_0= RULE_NUMBER ) ) )
            // InternalXSpice.g:9253:3: otherlv_0= 'OCT' ( (lv_initial_1_0= RULE_NUMBER ) ) ( (lv_final_2_0= RULE_NUMBER ) ) ( (lv_pointsPerOctave_3_0= RULE_NUMBER ) )
            {
            otherlv_0=(Token)match(input,166,FOLLOW_12); 

            			newLeafNode(otherlv_0, grammarAccess.getOctaveSweepAccess().getOCTKeyword_0());
            		
            // InternalXSpice.g:9257:3: ( (lv_initial_1_0= RULE_NUMBER ) )
            // InternalXSpice.g:9258:4: (lv_initial_1_0= RULE_NUMBER )
            {
            // InternalXSpice.g:9258:4: (lv_initial_1_0= RULE_NUMBER )
            // InternalXSpice.g:9259:5: lv_initial_1_0= RULE_NUMBER
            {
            lv_initial_1_0=(Token)match(input,RULE_NUMBER,FOLLOW_12); 

            					newLeafNode(lv_initial_1_0, grammarAccess.getOctaveSweepAccess().getInitialNUMBERTerminalRuleCall_1_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getOctaveSweepRule());
            					}
            					setWithLastConsumed(
            						current,
            						"initial",
            						lv_initial_1_0,
            						"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            				

            }


            }

            // InternalXSpice.g:9275:3: ( (lv_final_2_0= RULE_NUMBER ) )
            // InternalXSpice.g:9276:4: (lv_final_2_0= RULE_NUMBER )
            {
            // InternalXSpice.g:9276:4: (lv_final_2_0= RULE_NUMBER )
            // InternalXSpice.g:9277:5: lv_final_2_0= RULE_NUMBER
            {
            lv_final_2_0=(Token)match(input,RULE_NUMBER,FOLLOW_12); 

            					newLeafNode(lv_final_2_0, grammarAccess.getOctaveSweepAccess().getFinalNUMBERTerminalRuleCall_2_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getOctaveSweepRule());
            					}
            					setWithLastConsumed(
            						current,
            						"final",
            						lv_final_2_0,
            						"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            				

            }


            }

            // InternalXSpice.g:9293:3: ( (lv_pointsPerOctave_3_0= RULE_NUMBER ) )
            // InternalXSpice.g:9294:4: (lv_pointsPerOctave_3_0= RULE_NUMBER )
            {
            // InternalXSpice.g:9294:4: (lv_pointsPerOctave_3_0= RULE_NUMBER )
            // InternalXSpice.g:9295:5: lv_pointsPerOctave_3_0= RULE_NUMBER
            {
            lv_pointsPerOctave_3_0=(Token)match(input,RULE_NUMBER,FOLLOW_2); 

            					newLeafNode(lv_pointsPerOctave_3_0, grammarAccess.getOctaveSweepAccess().getPointsPerOctaveNUMBERTerminalRuleCall_3_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getOctaveSweepRule());
            					}
            					setWithLastConsumed(
            						current,
            						"pointsPerOctave",
            						lv_pointsPerOctave_3_0,
            						"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            				

            }


            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOctaveSweep"


    // $ANTLR start "entryRuleDecadeSweep"
    // InternalXSpice.g:9315:1: entryRuleDecadeSweep returns [EObject current=null] : iv_ruleDecadeSweep= ruleDecadeSweep EOF ;
    public final EObject entryRuleDecadeSweep() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDecadeSweep = null;


        try {
            // InternalXSpice.g:9315:52: (iv_ruleDecadeSweep= ruleDecadeSweep EOF )
            // InternalXSpice.g:9316:2: iv_ruleDecadeSweep= ruleDecadeSweep EOF
            {
             newCompositeNode(grammarAccess.getDecadeSweepRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleDecadeSweep=ruleDecadeSweep();

            state._fsp--;

             current =iv_ruleDecadeSweep; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDecadeSweep"


    // $ANTLR start "ruleDecadeSweep"
    // InternalXSpice.g:9322:1: ruleDecadeSweep returns [EObject current=null] : (otherlv_0= 'DEC' ( (lv_initial_1_0= RULE_NUMBER ) ) ( (lv_final_2_0= RULE_NUMBER ) ) ( (lv_pointsPerDecade_3_0= RULE_NUMBER ) ) ) ;
    public final EObject ruleDecadeSweep() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_initial_1_0=null;
        Token lv_final_2_0=null;
        Token lv_pointsPerDecade_3_0=null;


        	enterRule();

        try {
            // InternalXSpice.g:9328:2: ( (otherlv_0= 'DEC' ( (lv_initial_1_0= RULE_NUMBER ) ) ( (lv_final_2_0= RULE_NUMBER ) ) ( (lv_pointsPerDecade_3_0= RULE_NUMBER ) ) ) )
            // InternalXSpice.g:9329:2: (otherlv_0= 'DEC' ( (lv_initial_1_0= RULE_NUMBER ) ) ( (lv_final_2_0= RULE_NUMBER ) ) ( (lv_pointsPerDecade_3_0= RULE_NUMBER ) ) )
            {
            // InternalXSpice.g:9329:2: (otherlv_0= 'DEC' ( (lv_initial_1_0= RULE_NUMBER ) ) ( (lv_final_2_0= RULE_NUMBER ) ) ( (lv_pointsPerDecade_3_0= RULE_NUMBER ) ) )
            // InternalXSpice.g:9330:3: otherlv_0= 'DEC' ( (lv_initial_1_0= RULE_NUMBER ) ) ( (lv_final_2_0= RULE_NUMBER ) ) ( (lv_pointsPerDecade_3_0= RULE_NUMBER ) )
            {
            otherlv_0=(Token)match(input,167,FOLLOW_12); 

            			newLeafNode(otherlv_0, grammarAccess.getDecadeSweepAccess().getDECKeyword_0());
            		
            // InternalXSpice.g:9334:3: ( (lv_initial_1_0= RULE_NUMBER ) )
            // InternalXSpice.g:9335:4: (lv_initial_1_0= RULE_NUMBER )
            {
            // InternalXSpice.g:9335:4: (lv_initial_1_0= RULE_NUMBER )
            // InternalXSpice.g:9336:5: lv_initial_1_0= RULE_NUMBER
            {
            lv_initial_1_0=(Token)match(input,RULE_NUMBER,FOLLOW_12); 

            					newLeafNode(lv_initial_1_0, grammarAccess.getDecadeSweepAccess().getInitialNUMBERTerminalRuleCall_1_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getDecadeSweepRule());
            					}
            					setWithLastConsumed(
            						current,
            						"initial",
            						lv_initial_1_0,
            						"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            				

            }


            }

            // InternalXSpice.g:9352:3: ( (lv_final_2_0= RULE_NUMBER ) )
            // InternalXSpice.g:9353:4: (lv_final_2_0= RULE_NUMBER )
            {
            // InternalXSpice.g:9353:4: (lv_final_2_0= RULE_NUMBER )
            // InternalXSpice.g:9354:5: lv_final_2_0= RULE_NUMBER
            {
            lv_final_2_0=(Token)match(input,RULE_NUMBER,FOLLOW_12); 

            					newLeafNode(lv_final_2_0, grammarAccess.getDecadeSweepAccess().getFinalNUMBERTerminalRuleCall_2_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getDecadeSweepRule());
            					}
            					setWithLastConsumed(
            						current,
            						"final",
            						lv_final_2_0,
            						"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            				

            }


            }

            // InternalXSpice.g:9370:3: ( (lv_pointsPerDecade_3_0= RULE_NUMBER ) )
            // InternalXSpice.g:9371:4: (lv_pointsPerDecade_3_0= RULE_NUMBER )
            {
            // InternalXSpice.g:9371:4: (lv_pointsPerDecade_3_0= RULE_NUMBER )
            // InternalXSpice.g:9372:5: lv_pointsPerDecade_3_0= RULE_NUMBER
            {
            lv_pointsPerDecade_3_0=(Token)match(input,RULE_NUMBER,FOLLOW_2); 

            					newLeafNode(lv_pointsPerDecade_3_0, grammarAccess.getDecadeSweepAccess().getPointsPerDecadeNUMBERTerminalRuleCall_3_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getDecadeSweepRule());
            					}
            					setWithLastConsumed(
            						current,
            						"pointsPerDecade",
            						lv_pointsPerDecade_3_0,
            						"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            				

            }


            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDecadeSweep"


    // $ANTLR start "entryRuleParameterSweep"
    // InternalXSpice.g:9392:1: entryRuleParameterSweep returns [EObject current=null] : iv_ruleParameterSweep= ruleParameterSweep EOF ;
    public final EObject entryRuleParameterSweep() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParameterSweep = null;


        try {
            // InternalXSpice.g:9392:55: (iv_ruleParameterSweep= ruleParameterSweep EOF )
            // InternalXSpice.g:9393:2: iv_ruleParameterSweep= ruleParameterSweep EOF
            {
             newCompositeNode(grammarAccess.getParameterSweepRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleParameterSweep=ruleParameterSweep();

            state._fsp--;

             current =iv_ruleParameterSweep; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleParameterSweep"


    // $ANTLR start "ruleParameterSweep"
    // InternalXSpice.g:9399:1: ruleParameterSweep returns [EObject current=null] : ( ( (lv_source_0_0= ruleLabel ) ) ( (lv_sweep_1_0= ruleGeometericSweep ) ) ) ;
    public final EObject ruleParameterSweep() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_source_0_0 = null;

        EObject lv_sweep_1_0 = null;



        	enterRule();

        try {
            // InternalXSpice.g:9405:2: ( ( ( (lv_source_0_0= ruleLabel ) ) ( (lv_sweep_1_0= ruleGeometericSweep ) ) ) )
            // InternalXSpice.g:9406:2: ( ( (lv_source_0_0= ruleLabel ) ) ( (lv_sweep_1_0= ruleGeometericSweep ) ) )
            {
            // InternalXSpice.g:9406:2: ( ( (lv_source_0_0= ruleLabel ) ) ( (lv_sweep_1_0= ruleGeometericSweep ) ) )
            // InternalXSpice.g:9407:3: ( (lv_source_0_0= ruleLabel ) ) ( (lv_sweep_1_0= ruleGeometericSweep ) )
            {
            // InternalXSpice.g:9407:3: ( (lv_source_0_0= ruleLabel ) )
            // InternalXSpice.g:9408:4: (lv_source_0_0= ruleLabel )
            {
            // InternalXSpice.g:9408:4: (lv_source_0_0= ruleLabel )
            // InternalXSpice.g:9409:5: lv_source_0_0= ruleLabel
            {

            					newCompositeNode(grammarAccess.getParameterSweepAccess().getSourceLabelParserRuleCall_0_0());
            				
            pushFollow(FOLLOW_51);
            lv_source_0_0=ruleLabel();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getParameterSweepRule());
            					}
            					set(
            						current,
            						"source",
            						lv_source_0_0,
            						"com.xtext.ravornyo.xspice.XSpice.Label");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            // InternalXSpice.g:9426:3: ( (lv_sweep_1_0= ruleGeometericSweep ) )
            // InternalXSpice.g:9427:4: (lv_sweep_1_0= ruleGeometericSweep )
            {
            // InternalXSpice.g:9427:4: (lv_sweep_1_0= ruleGeometericSweep )
            // InternalXSpice.g:9428:5: lv_sweep_1_0= ruleGeometericSweep
            {

            					newCompositeNode(grammarAccess.getParameterSweepAccess().getSweepGeometericSweepParserRuleCall_1_0());
            				
            pushFollow(FOLLOW_2);
            lv_sweep_1_0=ruleGeometericSweep();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getParameterSweepRule());
            					}
            					set(
            						current,
            						"sweep",
            						lv_sweep_1_0,
            						"com.xtext.ravornyo.xspice.XSpice.GeometericSweep");
            					afterParserOrEnumRuleCall();
            				

            }


            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleParameterSweep"


    // $ANTLR start "entryRuleSimulation"
    // InternalXSpice.g:9449:1: entryRuleSimulation returns [EObject current=null] : iv_ruleSimulation= ruleSimulation EOF ;
    public final EObject entryRuleSimulation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimulation = null;


        try {
            // InternalXSpice.g:9449:51: (iv_ruleSimulation= ruleSimulation EOF )
            // InternalXSpice.g:9450:2: iv_ruleSimulation= ruleSimulation EOF
            {
             newCompositeNode(grammarAccess.getSimulationRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleSimulation=ruleSimulation();

            state._fsp--;

             current =iv_ruleSimulation; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimulation"


    // $ANTLR start "ruleSimulation"
    // InternalXSpice.g:9456:1: ruleSimulation returns [EObject current=null] : (this_ACSimulation_0= ruleACSimulation | this_DCSimulation_1= ruleDCSimulation | this_NoiseSimulation_2= ruleNoiseSimulation | this_TransientSimulation_3= ruleTransientSimulation | ( () this_OP_5= RULE_OP ) ) ;
    public final EObject ruleSimulation() throws RecognitionException {
        EObject current = null;

        Token this_OP_5=null;
        EObject this_ACSimulation_0 = null;

        EObject this_DCSimulation_1 = null;

        EObject this_NoiseSimulation_2 = null;

        EObject this_TransientSimulation_3 = null;



        	enterRule();

        try {
            // InternalXSpice.g:9462:2: ( (this_ACSimulation_0= ruleACSimulation | this_DCSimulation_1= ruleDCSimulation | this_NoiseSimulation_2= ruleNoiseSimulation | this_TransientSimulation_3= ruleTransientSimulation | ( () this_OP_5= RULE_OP ) ) )
            // InternalXSpice.g:9463:2: (this_ACSimulation_0= ruleACSimulation | this_DCSimulation_1= ruleDCSimulation | this_NoiseSimulation_2= ruleNoiseSimulation | this_TransientSimulation_3= ruleTransientSimulation | ( () this_OP_5= RULE_OP ) )
            {
            // InternalXSpice.g:9463:2: (this_ACSimulation_0= ruleACSimulation | this_DCSimulation_1= ruleDCSimulation | this_NoiseSimulation_2= ruleNoiseSimulation | this_TransientSimulation_3= ruleTransientSimulation | ( () this_OP_5= RULE_OP ) )
            int alt53=5;
            switch ( input.LA(1) ) {
            case 168:
                {
                alt53=1;
                }
                break;
            case 169:
                {
                alt53=2;
                }
                break;
            case 170:
                {
                alt53=3;
                }
                break;
            case 171:
                {
                alt53=4;
                }
                break;
            case RULE_OP:
                {
                alt53=5;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 53, 0, input);

                throw nvae;
            }

            switch (alt53) {
                case 1 :
                    // InternalXSpice.g:9464:3: this_ACSimulation_0= ruleACSimulation
                    {

                    			newCompositeNode(grammarAccess.getSimulationAccess().getACSimulationParserRuleCall_0());
                    		
                    pushFollow(FOLLOW_2);
                    this_ACSimulation_0=ruleACSimulation();

                    state._fsp--;


                    			current = this_ACSimulation_0;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 2 :
                    // InternalXSpice.g:9473:3: this_DCSimulation_1= ruleDCSimulation
                    {

                    			newCompositeNode(grammarAccess.getSimulationAccess().getDCSimulationParserRuleCall_1());
                    		
                    pushFollow(FOLLOW_2);
                    this_DCSimulation_1=ruleDCSimulation();

                    state._fsp--;


                    			current = this_DCSimulation_1;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 3 :
                    // InternalXSpice.g:9482:3: this_NoiseSimulation_2= ruleNoiseSimulation
                    {

                    			newCompositeNode(grammarAccess.getSimulationAccess().getNoiseSimulationParserRuleCall_2());
                    		
                    pushFollow(FOLLOW_2);
                    this_NoiseSimulation_2=ruleNoiseSimulation();

                    state._fsp--;


                    			current = this_NoiseSimulation_2;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 4 :
                    // InternalXSpice.g:9491:3: this_TransientSimulation_3= ruleTransientSimulation
                    {

                    			newCompositeNode(grammarAccess.getSimulationAccess().getTransientSimulationParserRuleCall_3());
                    		
                    pushFollow(FOLLOW_2);
                    this_TransientSimulation_3=ruleTransientSimulation();

                    state._fsp--;


                    			current = this_TransientSimulation_3;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 5 :
                    // InternalXSpice.g:9500:3: ( () this_OP_5= RULE_OP )
                    {
                    // InternalXSpice.g:9500:3: ( () this_OP_5= RULE_OP )
                    // InternalXSpice.g:9501:4: () this_OP_5= RULE_OP
                    {
                    // InternalXSpice.g:9501:4: ()
                    // InternalXSpice.g:9502:5: 
                    {

                    					current = forceCreateModelElement(
                    						grammarAccess.getSimulationAccess().getSimulationAction_4_0(),
                    						current);
                    				

                    }

                    this_OP_5=(Token)match(input,RULE_OP,FOLLOW_2); 

                    				newLeafNode(this_OP_5, grammarAccess.getSimulationAccess().getOPTerminalRuleCall_4_1());
                    			

                    }


                    }
                    break;

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimulation"


    // $ANTLR start "entryRuleACSimulation"
    // InternalXSpice.g:9517:1: entryRuleACSimulation returns [EObject current=null] : iv_ruleACSimulation= ruleACSimulation EOF ;
    public final EObject entryRuleACSimulation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleACSimulation = null;


        try {
            // InternalXSpice.g:9517:53: (iv_ruleACSimulation= ruleACSimulation EOF )
            // InternalXSpice.g:9518:2: iv_ruleACSimulation= ruleACSimulation EOF
            {
             newCompositeNode(grammarAccess.getACSimulationRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleACSimulation=ruleACSimulation();

            state._fsp--;

             current =iv_ruleACSimulation; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleACSimulation"


    // $ANTLR start "ruleACSimulation"
    // InternalXSpice.g:9524:1: ruleACSimulation returns [EObject current=null] : (otherlv_0= '.AC' ( (lv_sweep_1_0= ruleGeometericSweep ) ) ) ;
    public final EObject ruleACSimulation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_sweep_1_0 = null;



        	enterRule();

        try {
            // InternalXSpice.g:9530:2: ( (otherlv_0= '.AC' ( (lv_sweep_1_0= ruleGeometericSweep ) ) ) )
            // InternalXSpice.g:9531:2: (otherlv_0= '.AC' ( (lv_sweep_1_0= ruleGeometericSweep ) ) )
            {
            // InternalXSpice.g:9531:2: (otherlv_0= '.AC' ( (lv_sweep_1_0= ruleGeometericSweep ) ) )
            // InternalXSpice.g:9532:3: otherlv_0= '.AC' ( (lv_sweep_1_0= ruleGeometericSweep ) )
            {
            otherlv_0=(Token)match(input,168,FOLLOW_51); 

            			newLeafNode(otherlv_0, grammarAccess.getACSimulationAccess().getACKeyword_0());
            		
            // InternalXSpice.g:9536:3: ( (lv_sweep_1_0= ruleGeometericSweep ) )
            // InternalXSpice.g:9537:4: (lv_sweep_1_0= ruleGeometericSweep )
            {
            // InternalXSpice.g:9537:4: (lv_sweep_1_0= ruleGeometericSweep )
            // InternalXSpice.g:9538:5: lv_sweep_1_0= ruleGeometericSweep
            {

            					newCompositeNode(grammarAccess.getACSimulationAccess().getSweepGeometericSweepParserRuleCall_1_0());
            				
            pushFollow(FOLLOW_2);
            lv_sweep_1_0=ruleGeometericSweep();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getACSimulationRule());
            					}
            					set(
            						current,
            						"sweep",
            						lv_sweep_1_0,
            						"com.xtext.ravornyo.xspice.XSpice.GeometericSweep");
            					afterParserOrEnumRuleCall();
            				

            }


            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleACSimulation"


    // $ANTLR start "entryRuleDCSimulation"
    // InternalXSpice.g:9559:1: entryRuleDCSimulation returns [EObject current=null] : iv_ruleDCSimulation= ruleDCSimulation EOF ;
    public final EObject entryRuleDCSimulation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDCSimulation = null;


        try {
            // InternalXSpice.g:9559:53: (iv_ruleDCSimulation= ruleDCSimulation EOF )
            // InternalXSpice.g:9560:2: iv_ruleDCSimulation= ruleDCSimulation EOF
            {
             newCompositeNode(grammarAccess.getDCSimulationRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleDCSimulation=ruleDCSimulation();

            state._fsp--;

             current =iv_ruleDCSimulation; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDCSimulation"


    // $ANTLR start "ruleDCSimulation"
    // InternalXSpice.g:9566:1: ruleDCSimulation returns [EObject current=null] : (otherlv_0= '.DC' ( (lv_sweeps_1_0= ruleParameterSweep ) ) ( (lv_sweeps_2_0= ruleParameterSweep ) )* ) ;
    public final EObject ruleDCSimulation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_sweeps_1_0 = null;

        EObject lv_sweeps_2_0 = null;



        	enterRule();

        try {
            // InternalXSpice.g:9572:2: ( (otherlv_0= '.DC' ( (lv_sweeps_1_0= ruleParameterSweep ) ) ( (lv_sweeps_2_0= ruleParameterSweep ) )* ) )
            // InternalXSpice.g:9573:2: (otherlv_0= '.DC' ( (lv_sweeps_1_0= ruleParameterSweep ) ) ( (lv_sweeps_2_0= ruleParameterSweep ) )* )
            {
            // InternalXSpice.g:9573:2: (otherlv_0= '.DC' ( (lv_sweeps_1_0= ruleParameterSweep ) ) ( (lv_sweeps_2_0= ruleParameterSweep ) )* )
            // InternalXSpice.g:9574:3: otherlv_0= '.DC' ( (lv_sweeps_1_0= ruleParameterSweep ) ) ( (lv_sweeps_2_0= ruleParameterSweep ) )*
            {
            otherlv_0=(Token)match(input,169,FOLLOW_4); 

            			newLeafNode(otherlv_0, grammarAccess.getDCSimulationAccess().getDCKeyword_0());
            		
            // InternalXSpice.g:9578:3: ( (lv_sweeps_1_0= ruleParameterSweep ) )
            // InternalXSpice.g:9579:4: (lv_sweeps_1_0= ruleParameterSweep )
            {
            // InternalXSpice.g:9579:4: (lv_sweeps_1_0= ruleParameterSweep )
            // InternalXSpice.g:9580:5: lv_sweeps_1_0= ruleParameterSweep
            {

            					newCompositeNode(grammarAccess.getDCSimulationAccess().getSweepsParameterSweepParserRuleCall_1_0());
            				
            pushFollow(FOLLOW_52);
            lv_sweeps_1_0=ruleParameterSweep();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getDCSimulationRule());
            					}
            					add(
            						current,
            						"sweeps",
            						lv_sweeps_1_0,
            						"com.xtext.ravornyo.xspice.XSpice.ParameterSweep");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            // InternalXSpice.g:9597:3: ( (lv_sweeps_2_0= ruleParameterSweep ) )*
            loop54:
            do {
                int alt54=2;
                alt54 = dfa54.predict(input);
                switch (alt54) {
            	case 1 :
            	    // InternalXSpice.g:9598:4: (lv_sweeps_2_0= ruleParameterSweep )
            	    {
            	    // InternalXSpice.g:9598:4: (lv_sweeps_2_0= ruleParameterSweep )
            	    // InternalXSpice.g:9599:5: lv_sweeps_2_0= ruleParameterSweep
            	    {

            	    					newCompositeNode(grammarAccess.getDCSimulationAccess().getSweepsParameterSweepParserRuleCall_2_0());
            	    				
            	    pushFollow(FOLLOW_52);
            	    lv_sweeps_2_0=ruleParameterSweep();

            	    state._fsp--;


            	    					if (current==null) {
            	    						current = createModelElementForParent(grammarAccess.getDCSimulationRule());
            	    					}
            	    					add(
            	    						current,
            	    						"sweeps",
            	    						lv_sweeps_2_0,
            	    						"com.xtext.ravornyo.xspice.XSpice.ParameterSweep");
            	    					afterParserOrEnumRuleCall();
            	    				

            	    }


            	    }
            	    break;

            	default :
            	    break loop54;
                }
            } while (true);


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDCSimulation"


    // $ANTLR start "entryRuleNoiseSimulation"
    // InternalXSpice.g:9620:1: entryRuleNoiseSimulation returns [EObject current=null] : iv_ruleNoiseSimulation= ruleNoiseSimulation EOF ;
    public final EObject entryRuleNoiseSimulation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNoiseSimulation = null;


        try {
            // InternalXSpice.g:9620:56: (iv_ruleNoiseSimulation= ruleNoiseSimulation EOF )
            // InternalXSpice.g:9621:2: iv_ruleNoiseSimulation= ruleNoiseSimulation EOF
            {
             newCompositeNode(grammarAccess.getNoiseSimulationRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleNoiseSimulation=ruleNoiseSimulation();

            state._fsp--;

             current =iv_ruleNoiseSimulation; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNoiseSimulation"


    // $ANTLR start "ruleNoiseSimulation"
    // InternalXSpice.g:9627:1: ruleNoiseSimulation returns [EObject current=null] : (otherlv_0= '.NOISE' ( ( (lv_output_1_0= ruleExport ) ) ( (lv_inputSource_2_0= ruleLabel ) ) ( (lv_isweep_3_0= ruleGeometericSweep ) ) ) ) ;
    public final EObject ruleNoiseSimulation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_output_1_0 = null;

        AntlrDatatypeRuleToken lv_inputSource_2_0 = null;

        EObject lv_isweep_3_0 = null;



        	enterRule();

        try {
            // InternalXSpice.g:9633:2: ( (otherlv_0= '.NOISE' ( ( (lv_output_1_0= ruleExport ) ) ( (lv_inputSource_2_0= ruleLabel ) ) ( (lv_isweep_3_0= ruleGeometericSweep ) ) ) ) )
            // InternalXSpice.g:9634:2: (otherlv_0= '.NOISE' ( ( (lv_output_1_0= ruleExport ) ) ( (lv_inputSource_2_0= ruleLabel ) ) ( (lv_isweep_3_0= ruleGeometericSweep ) ) ) )
            {
            // InternalXSpice.g:9634:2: (otherlv_0= '.NOISE' ( ( (lv_output_1_0= ruleExport ) ) ( (lv_inputSource_2_0= ruleLabel ) ) ( (lv_isweep_3_0= ruleGeometericSweep ) ) ) )
            // InternalXSpice.g:9635:3: otherlv_0= '.NOISE' ( ( (lv_output_1_0= ruleExport ) ) ( (lv_inputSource_2_0= ruleLabel ) ) ( (lv_isweep_3_0= ruleGeometericSweep ) ) )
            {
            otherlv_0=(Token)match(input,170,FOLLOW_53); 

            			newLeafNode(otherlv_0, grammarAccess.getNoiseSimulationAccess().getNOISEKeyword_0());
            		
            // InternalXSpice.g:9639:3: ( ( (lv_output_1_0= ruleExport ) ) ( (lv_inputSource_2_0= ruleLabel ) ) ( (lv_isweep_3_0= ruleGeometericSweep ) ) )
            // InternalXSpice.g:9640:4: ( (lv_output_1_0= ruleExport ) ) ( (lv_inputSource_2_0= ruleLabel ) ) ( (lv_isweep_3_0= ruleGeometericSweep ) )
            {
            // InternalXSpice.g:9640:4: ( (lv_output_1_0= ruleExport ) )
            // InternalXSpice.g:9641:5: (lv_output_1_0= ruleExport )
            {
            // InternalXSpice.g:9641:5: (lv_output_1_0= ruleExport )
            // InternalXSpice.g:9642:6: lv_output_1_0= ruleExport
            {

            						newCompositeNode(grammarAccess.getNoiseSimulationAccess().getOutputExportParserRuleCall_1_0_0());
            					
            pushFollow(FOLLOW_4);
            lv_output_1_0=ruleExport();

            state._fsp--;


            						if (current==null) {
            							current = createModelElementForParent(grammarAccess.getNoiseSimulationRule());
            						}
            						add(
            							current,
            							"output",
            							lv_output_1_0,
            							"com.xtext.ravornyo.xspice.XSpice.Export");
            						afterParserOrEnumRuleCall();
            					

            }


            }

            // InternalXSpice.g:9659:4: ( (lv_inputSource_2_0= ruleLabel ) )
            // InternalXSpice.g:9660:5: (lv_inputSource_2_0= ruleLabel )
            {
            // InternalXSpice.g:9660:5: (lv_inputSource_2_0= ruleLabel )
            // InternalXSpice.g:9661:6: lv_inputSource_2_0= ruleLabel
            {

            						newCompositeNode(grammarAccess.getNoiseSimulationAccess().getInputSourceLabelParserRuleCall_1_1_0());
            					
            pushFollow(FOLLOW_51);
            lv_inputSource_2_0=ruleLabel();

            state._fsp--;


            						if (current==null) {
            							current = createModelElementForParent(grammarAccess.getNoiseSimulationRule());
            						}
            						set(
            							current,
            							"inputSource",
            							lv_inputSource_2_0,
            							"com.xtext.ravornyo.xspice.XSpice.Label");
            						afterParserOrEnumRuleCall();
            					

            }


            }

            // InternalXSpice.g:9678:4: ( (lv_isweep_3_0= ruleGeometericSweep ) )
            // InternalXSpice.g:9679:5: (lv_isweep_3_0= ruleGeometericSweep )
            {
            // InternalXSpice.g:9679:5: (lv_isweep_3_0= ruleGeometericSweep )
            // InternalXSpice.g:9680:6: lv_isweep_3_0= ruleGeometericSweep
            {

            						newCompositeNode(grammarAccess.getNoiseSimulationAccess().getIsweepGeometericSweepParserRuleCall_1_2_0());
            					
            pushFollow(FOLLOW_2);
            lv_isweep_3_0=ruleGeometericSweep();

            state._fsp--;


            						if (current==null) {
            							current = createModelElementForParent(grammarAccess.getNoiseSimulationRule());
            						}
            						set(
            							current,
            							"isweep",
            							lv_isweep_3_0,
            							"com.xtext.ravornyo.xspice.XSpice.GeometericSweep");
            						afterParserOrEnumRuleCall();
            					

            }


            }


            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNoiseSimulation"


    // $ANTLR start "entryRuleTransientSimulation"
    // InternalXSpice.g:9702:1: entryRuleTransientSimulation returns [EObject current=null] : iv_ruleTransientSimulation= ruleTransientSimulation EOF ;
    public final EObject entryRuleTransientSimulation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTransientSimulation = null;


        try {
            // InternalXSpice.g:9702:60: (iv_ruleTransientSimulation= ruleTransientSimulation EOF )
            // InternalXSpice.g:9703:2: iv_ruleTransientSimulation= ruleTransientSimulation EOF
            {
             newCompositeNode(grammarAccess.getTransientSimulationRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleTransientSimulation=ruleTransientSimulation();

            state._fsp--;

             current =iv_ruleTransientSimulation; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTransientSimulation"


    // $ANTLR start "ruleTransientSimulation"
    // InternalXSpice.g:9709:1: ruleTransientSimulation returns [EObject current=null] : (otherlv_0= '.TRAN' ( ( (lv_args_1_0= RULE_NUMBER ) ) ( (lv_args_2_0= RULE_NUMBER ) ) ( (lv_args_3_0= RULE_NUMBER ) )* ( (lv_uic_4_0= 'UIC' ) )? ) ) ;
    public final EObject ruleTransientSimulation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_args_1_0=null;
        Token lv_args_2_0=null;
        Token lv_args_3_0=null;
        Token lv_uic_4_0=null;


        	enterRule();

        try {
            // InternalXSpice.g:9715:2: ( (otherlv_0= '.TRAN' ( ( (lv_args_1_0= RULE_NUMBER ) ) ( (lv_args_2_0= RULE_NUMBER ) ) ( (lv_args_3_0= RULE_NUMBER ) )* ( (lv_uic_4_0= 'UIC' ) )? ) ) )
            // InternalXSpice.g:9716:2: (otherlv_0= '.TRAN' ( ( (lv_args_1_0= RULE_NUMBER ) ) ( (lv_args_2_0= RULE_NUMBER ) ) ( (lv_args_3_0= RULE_NUMBER ) )* ( (lv_uic_4_0= 'UIC' ) )? ) )
            {
            // InternalXSpice.g:9716:2: (otherlv_0= '.TRAN' ( ( (lv_args_1_0= RULE_NUMBER ) ) ( (lv_args_2_0= RULE_NUMBER ) ) ( (lv_args_3_0= RULE_NUMBER ) )* ( (lv_uic_4_0= 'UIC' ) )? ) )
            // InternalXSpice.g:9717:3: otherlv_0= '.TRAN' ( ( (lv_args_1_0= RULE_NUMBER ) ) ( (lv_args_2_0= RULE_NUMBER ) ) ( (lv_args_3_0= RULE_NUMBER ) )* ( (lv_uic_4_0= 'UIC' ) )? )
            {
            otherlv_0=(Token)match(input,171,FOLLOW_12); 

            			newLeafNode(otherlv_0, grammarAccess.getTransientSimulationAccess().getTRANKeyword_0());
            		
            // InternalXSpice.g:9721:3: ( ( (lv_args_1_0= RULE_NUMBER ) ) ( (lv_args_2_0= RULE_NUMBER ) ) ( (lv_args_3_0= RULE_NUMBER ) )* ( (lv_uic_4_0= 'UIC' ) )? )
            // InternalXSpice.g:9722:4: ( (lv_args_1_0= RULE_NUMBER ) ) ( (lv_args_2_0= RULE_NUMBER ) ) ( (lv_args_3_0= RULE_NUMBER ) )* ( (lv_uic_4_0= 'UIC' ) )?
            {
            // InternalXSpice.g:9722:4: ( (lv_args_1_0= RULE_NUMBER ) )
            // InternalXSpice.g:9723:5: (lv_args_1_0= RULE_NUMBER )
            {
            // InternalXSpice.g:9723:5: (lv_args_1_0= RULE_NUMBER )
            // InternalXSpice.g:9724:6: lv_args_1_0= RULE_NUMBER
            {
            lv_args_1_0=(Token)match(input,RULE_NUMBER,FOLLOW_12); 

            						newLeafNode(lv_args_1_0, grammarAccess.getTransientSimulationAccess().getArgsNUMBERTerminalRuleCall_1_0_0());
            					

            						if (current==null) {
            							current = createModelElement(grammarAccess.getTransientSimulationRule());
            						}
            						addWithLastConsumed(
            							current,
            							"args",
            							lv_args_1_0,
            							"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            					

            }


            }

            // InternalXSpice.g:9740:4: ( (lv_args_2_0= RULE_NUMBER ) )
            // InternalXSpice.g:9741:5: (lv_args_2_0= RULE_NUMBER )
            {
            // InternalXSpice.g:9741:5: (lv_args_2_0= RULE_NUMBER )
            // InternalXSpice.g:9742:6: lv_args_2_0= RULE_NUMBER
            {
            lv_args_2_0=(Token)match(input,RULE_NUMBER,FOLLOW_54); 

            						newLeafNode(lv_args_2_0, grammarAccess.getTransientSimulationAccess().getArgsNUMBERTerminalRuleCall_1_1_0());
            					

            						if (current==null) {
            							current = createModelElement(grammarAccess.getTransientSimulationRule());
            						}
            						addWithLastConsumed(
            							current,
            							"args",
            							lv_args_2_0,
            							"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            					

            }


            }

            // InternalXSpice.g:9758:4: ( (lv_args_3_0= RULE_NUMBER ) )*
            loop55:
            do {
                int alt55=2;
                int LA55_0 = input.LA(1);

                if ( (LA55_0==RULE_NUMBER) ) {
                    alt55=1;
                }


                switch (alt55) {
            	case 1 :
            	    // InternalXSpice.g:9759:5: (lv_args_3_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:9759:5: (lv_args_3_0= RULE_NUMBER )
            	    // InternalXSpice.g:9760:6: lv_args_3_0= RULE_NUMBER
            	    {
            	    lv_args_3_0=(Token)match(input,RULE_NUMBER,FOLLOW_54); 

            	    						newLeafNode(lv_args_3_0, grammarAccess.getTransientSimulationAccess().getArgsNUMBERTerminalRuleCall_1_2_0());
            	    					

            	    						if (current==null) {
            	    							current = createModelElement(grammarAccess.getTransientSimulationRule());
            	    						}
            	    						addWithLastConsumed(
            	    							current,
            	    							"args",
            	    							lv_args_3_0,
            	    							"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    					

            	    }


            	    }
            	    break;

            	default :
            	    break loop55;
                }
            } while (true);

            // InternalXSpice.g:9776:4: ( (lv_uic_4_0= 'UIC' ) )?
            int alt56=2;
            int LA56_0 = input.LA(1);

            if ( (LA56_0==172) ) {
                alt56=1;
            }
            switch (alt56) {
                case 1 :
                    // InternalXSpice.g:9777:5: (lv_uic_4_0= 'UIC' )
                    {
                    // InternalXSpice.g:9777:5: (lv_uic_4_0= 'UIC' )
                    // InternalXSpice.g:9778:6: lv_uic_4_0= 'UIC'
                    {
                    lv_uic_4_0=(Token)match(input,172,FOLLOW_2); 

                    						newLeafNode(lv_uic_4_0, grammarAccess.getTransientSimulationAccess().getUicUICKeyword_1_3_0());
                    					

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getTransientSimulationRule());
                    						}
                    						setWithLastConsumed(current, "uic", true, "UIC");
                    					

                    }


                    }
                    break;

            }


            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTransientSimulation"


    // $ANTLR start "entryRuleOutput"
    // InternalXSpice.g:9795:1: entryRuleOutput returns [EObject current=null] : iv_ruleOutput= ruleOutput EOF ;
    public final EObject entryRuleOutput() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOutput = null;


        try {
            // InternalXSpice.g:9795:47: (iv_ruleOutput= ruleOutput EOF )
            // InternalXSpice.g:9796:2: iv_ruleOutput= ruleOutput EOF
            {
             newCompositeNode(grammarAccess.getOutputRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleOutput=ruleOutput();

            state._fsp--;

             current =iv_ruleOutput; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOutput"


    // $ANTLR start "ruleOutput"
    // InternalXSpice.g:9802:1: ruleOutput returns [EObject current=null] : (this_Print_0= rulePrint | this_Plot_1= rulePlot ) ;
    public final EObject ruleOutput() throws RecognitionException {
        EObject current = null;

        EObject this_Print_0 = null;

        EObject this_Plot_1 = null;



        	enterRule();

        try {
            // InternalXSpice.g:9808:2: ( (this_Print_0= rulePrint | this_Plot_1= rulePlot ) )
            // InternalXSpice.g:9809:2: (this_Print_0= rulePrint | this_Plot_1= rulePlot )
            {
            // InternalXSpice.g:9809:2: (this_Print_0= rulePrint | this_Plot_1= rulePlot )
            int alt57=2;
            int LA57_0 = input.LA(1);

            if ( (LA57_0==173) ) {
                alt57=1;
            }
            else if ( (LA57_0==174) ) {
                alt57=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 57, 0, input);

                throw nvae;
            }
            switch (alt57) {
                case 1 :
                    // InternalXSpice.g:9810:3: this_Print_0= rulePrint
                    {

                    			newCompositeNode(grammarAccess.getOutputAccess().getPrintParserRuleCall_0());
                    		
                    pushFollow(FOLLOW_2);
                    this_Print_0=rulePrint();

                    state._fsp--;


                    			current = this_Print_0;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 2 :
                    // InternalXSpice.g:9819:3: this_Plot_1= rulePlot
                    {

                    			newCompositeNode(grammarAccess.getOutputAccess().getPlotParserRuleCall_1());
                    		
                    pushFollow(FOLLOW_2);
                    this_Plot_1=rulePlot();

                    state._fsp--;


                    			current = this_Plot_1;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOutput"


    // $ANTLR start "entryRulePrint"
    // InternalXSpice.g:9831:1: entryRulePrint returns [EObject current=null] : iv_rulePrint= rulePrint EOF ;
    public final EObject entryRulePrint() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePrint = null;


        try {
            // InternalXSpice.g:9831:46: (iv_rulePrint= rulePrint EOF )
            // InternalXSpice.g:9832:2: iv_rulePrint= rulePrint EOF
            {
             newCompositeNode(grammarAccess.getPrintRule()); 
            pushFollow(FOLLOW_1);
            iv_rulePrint=rulePrint();

            state._fsp--;

             current =iv_rulePrint; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrint"


    // $ANTLR start "rulePrint"
    // InternalXSpice.g:9838:1: rulePrint returns [EObject current=null] : (otherlv_0= '.PRINT' ( (lv_prtype_1_0= rulePRTYPE ) ) ( (lv_exports_2_0= ruleExport ) ) ( (lv_exports_3_0= ruleExport ) )* ) ;
    public final EObject rulePrint() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Enumerator lv_prtype_1_0 = null;

        EObject lv_exports_2_0 = null;

        EObject lv_exports_3_0 = null;



        	enterRule();

        try {
            // InternalXSpice.g:9844:2: ( (otherlv_0= '.PRINT' ( (lv_prtype_1_0= rulePRTYPE ) ) ( (lv_exports_2_0= ruleExport ) ) ( (lv_exports_3_0= ruleExport ) )* ) )
            // InternalXSpice.g:9845:2: (otherlv_0= '.PRINT' ( (lv_prtype_1_0= rulePRTYPE ) ) ( (lv_exports_2_0= ruleExport ) ) ( (lv_exports_3_0= ruleExport ) )* )
            {
            // InternalXSpice.g:9845:2: (otherlv_0= '.PRINT' ( (lv_prtype_1_0= rulePRTYPE ) ) ( (lv_exports_2_0= ruleExport ) ) ( (lv_exports_3_0= ruleExport ) )* )
            // InternalXSpice.g:9846:3: otherlv_0= '.PRINT' ( (lv_prtype_1_0= rulePRTYPE ) ) ( (lv_exports_2_0= ruleExport ) ) ( (lv_exports_3_0= ruleExport ) )*
            {
            otherlv_0=(Token)match(input,173,FOLLOW_55); 

            			newLeafNode(otherlv_0, grammarAccess.getPrintAccess().getPRINTKeyword_0());
            		
            // InternalXSpice.g:9850:3: ( (lv_prtype_1_0= rulePRTYPE ) )
            // InternalXSpice.g:9851:4: (lv_prtype_1_0= rulePRTYPE )
            {
            // InternalXSpice.g:9851:4: (lv_prtype_1_0= rulePRTYPE )
            // InternalXSpice.g:9852:5: lv_prtype_1_0= rulePRTYPE
            {

            					newCompositeNode(grammarAccess.getPrintAccess().getPrtypePRTYPEEnumRuleCall_1_0());
            				
            pushFollow(FOLLOW_53);
            lv_prtype_1_0=rulePRTYPE();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getPrintRule());
            					}
            					set(
            						current,
            						"prtype",
            						lv_prtype_1_0,
            						"com.xtext.ravornyo.xspice.XSpice.PRTYPE");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            // InternalXSpice.g:9869:3: ( (lv_exports_2_0= ruleExport ) )
            // InternalXSpice.g:9870:4: (lv_exports_2_0= ruleExport )
            {
            // InternalXSpice.g:9870:4: (lv_exports_2_0= ruleExport )
            // InternalXSpice.g:9871:5: lv_exports_2_0= ruleExport
            {

            					newCompositeNode(grammarAccess.getPrintAccess().getExportsExportParserRuleCall_2_0());
            				
            pushFollow(FOLLOW_56);
            lv_exports_2_0=ruleExport();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getPrintRule());
            					}
            					add(
            						current,
            						"exports",
            						lv_exports_2_0,
            						"com.xtext.ravornyo.xspice.XSpice.Export");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            // InternalXSpice.g:9888:3: ( (lv_exports_3_0= ruleExport ) )*
            loop58:
            do {
                int alt58=2;
                int LA58_0 = input.LA(1);

                if ( ((LA58_0>=175 && LA58_0<=186)) ) {
                    alt58=1;
                }


                switch (alt58) {
            	case 1 :
            	    // InternalXSpice.g:9889:4: (lv_exports_3_0= ruleExport )
            	    {
            	    // InternalXSpice.g:9889:4: (lv_exports_3_0= ruleExport )
            	    // InternalXSpice.g:9890:5: lv_exports_3_0= ruleExport
            	    {

            	    					newCompositeNode(grammarAccess.getPrintAccess().getExportsExportParserRuleCall_3_0());
            	    				
            	    pushFollow(FOLLOW_56);
            	    lv_exports_3_0=ruleExport();

            	    state._fsp--;


            	    					if (current==null) {
            	    						current = createModelElementForParent(grammarAccess.getPrintRule());
            	    					}
            	    					add(
            	    						current,
            	    						"exports",
            	    						lv_exports_3_0,
            	    						"com.xtext.ravornyo.xspice.XSpice.Export");
            	    					afterParserOrEnumRuleCall();
            	    				

            	    }


            	    }
            	    break;

            	default :
            	    break loop58;
                }
            } while (true);


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrint"


    // $ANTLR start "entryRulePlot"
    // InternalXSpice.g:9911:1: entryRulePlot returns [EObject current=null] : iv_rulePlot= rulePlot EOF ;
    public final EObject entryRulePlot() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePlot = null;


        try {
            // InternalXSpice.g:9911:45: (iv_rulePlot= rulePlot EOF )
            // InternalXSpice.g:9912:2: iv_rulePlot= rulePlot EOF
            {
             newCompositeNode(grammarAccess.getPlotRule()); 
            pushFollow(FOLLOW_1);
            iv_rulePlot=rulePlot();

            state._fsp--;

             current =iv_rulePlot; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePlot"


    // $ANTLR start "rulePlot"
    // InternalXSpice.g:9918:1: rulePlot returns [EObject current=null] : (otherlv_0= '.PLOT' ( (lv_prtype_1_0= rulePRTYPE ) ) ( (lv_exports_2_0= ruleExport ) ) ( (lv_exports_3_0= ruleExport ) )* ) ;
    public final EObject rulePlot() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Enumerator lv_prtype_1_0 = null;

        EObject lv_exports_2_0 = null;

        EObject lv_exports_3_0 = null;



        	enterRule();

        try {
            // InternalXSpice.g:9924:2: ( (otherlv_0= '.PLOT' ( (lv_prtype_1_0= rulePRTYPE ) ) ( (lv_exports_2_0= ruleExport ) ) ( (lv_exports_3_0= ruleExport ) )* ) )
            // InternalXSpice.g:9925:2: (otherlv_0= '.PLOT' ( (lv_prtype_1_0= rulePRTYPE ) ) ( (lv_exports_2_0= ruleExport ) ) ( (lv_exports_3_0= ruleExport ) )* )
            {
            // InternalXSpice.g:9925:2: (otherlv_0= '.PLOT' ( (lv_prtype_1_0= rulePRTYPE ) ) ( (lv_exports_2_0= ruleExport ) ) ( (lv_exports_3_0= ruleExport ) )* )
            // InternalXSpice.g:9926:3: otherlv_0= '.PLOT' ( (lv_prtype_1_0= rulePRTYPE ) ) ( (lv_exports_2_0= ruleExport ) ) ( (lv_exports_3_0= ruleExport ) )*
            {
            otherlv_0=(Token)match(input,174,FOLLOW_55); 

            			newLeafNode(otherlv_0, grammarAccess.getPlotAccess().getPLOTKeyword_0());
            		
            // InternalXSpice.g:9930:3: ( (lv_prtype_1_0= rulePRTYPE ) )
            // InternalXSpice.g:9931:4: (lv_prtype_1_0= rulePRTYPE )
            {
            // InternalXSpice.g:9931:4: (lv_prtype_1_0= rulePRTYPE )
            // InternalXSpice.g:9932:5: lv_prtype_1_0= rulePRTYPE
            {

            					newCompositeNode(grammarAccess.getPlotAccess().getPrtypePRTYPEEnumRuleCall_1_0());
            				
            pushFollow(FOLLOW_53);
            lv_prtype_1_0=rulePRTYPE();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getPlotRule());
            					}
            					set(
            						current,
            						"prtype",
            						lv_prtype_1_0,
            						"com.xtext.ravornyo.xspice.XSpice.PRTYPE");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            // InternalXSpice.g:9949:3: ( (lv_exports_2_0= ruleExport ) )
            // InternalXSpice.g:9950:4: (lv_exports_2_0= ruleExport )
            {
            // InternalXSpice.g:9950:4: (lv_exports_2_0= ruleExport )
            // InternalXSpice.g:9951:5: lv_exports_2_0= ruleExport
            {

            					newCompositeNode(grammarAccess.getPlotAccess().getExportsExportParserRuleCall_2_0());
            				
            pushFollow(FOLLOW_56);
            lv_exports_2_0=ruleExport();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getPlotRule());
            					}
            					add(
            						current,
            						"exports",
            						lv_exports_2_0,
            						"com.xtext.ravornyo.xspice.XSpice.Export");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            // InternalXSpice.g:9968:3: ( (lv_exports_3_0= ruleExport ) )*
            loop59:
            do {
                int alt59=2;
                int LA59_0 = input.LA(1);

                if ( ((LA59_0>=175 && LA59_0<=186)) ) {
                    alt59=1;
                }


                switch (alt59) {
            	case 1 :
            	    // InternalXSpice.g:9969:4: (lv_exports_3_0= ruleExport )
            	    {
            	    // InternalXSpice.g:9969:4: (lv_exports_3_0= ruleExport )
            	    // InternalXSpice.g:9970:5: lv_exports_3_0= ruleExport
            	    {

            	    					newCompositeNode(grammarAccess.getPlotAccess().getExportsExportParserRuleCall_3_0());
            	    				
            	    pushFollow(FOLLOW_56);
            	    lv_exports_3_0=ruleExport();

            	    state._fsp--;


            	    					if (current==null) {
            	    						current = createModelElementForParent(grammarAccess.getPlotRule());
            	    					}
            	    					add(
            	    						current,
            	    						"exports",
            	    						lv_exports_3_0,
            	    						"com.xtext.ravornyo.xspice.XSpice.Export");
            	    					afterParserOrEnumRuleCall();
            	    				

            	    }


            	    }
            	    break;

            	default :
            	    break loop59;
                }
            } while (true);


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePlot"


    // $ANTLR start "entryRuleExport"
    // InternalXSpice.g:9991:1: entryRuleExport returns [EObject current=null] : iv_ruleExport= ruleExport EOF ;
    public final EObject entryRuleExport() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExport = null;


        try {
            // InternalXSpice.g:9991:47: (iv_ruleExport= ruleExport EOF )
            // InternalXSpice.g:9992:2: iv_ruleExport= ruleExport EOF
            {
             newCompositeNode(grammarAccess.getExportRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleExport=ruleExport();

            state._fsp--;

             current =iv_ruleExport; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExport"


    // $ANTLR start "ruleExport"
    // InternalXSpice.g:9998:1: ruleExport returns [EObject current=null] : (this_VoltageExport_0= ruleVoltageExport | this_CurrentExport_1= ruleCurrentExport ) ;
    public final EObject ruleExport() throws RecognitionException {
        EObject current = null;

        EObject this_VoltageExport_0 = null;

        EObject this_CurrentExport_1 = null;



        	enterRule();

        try {
            // InternalXSpice.g:10004:2: ( (this_VoltageExport_0= ruleVoltageExport | this_CurrentExport_1= ruleCurrentExport ) )
            // InternalXSpice.g:10005:2: (this_VoltageExport_0= ruleVoltageExport | this_CurrentExport_1= ruleCurrentExport )
            {
            // InternalXSpice.g:10005:2: (this_VoltageExport_0= ruleVoltageExport | this_CurrentExport_1= ruleCurrentExport )
            int alt60=2;
            int LA60_0 = input.LA(1);

            if ( ((LA60_0>=175 && LA60_0<=180)) ) {
                alt60=1;
            }
            else if ( ((LA60_0>=181 && LA60_0<=186)) ) {
                alt60=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 60, 0, input);

                throw nvae;
            }
            switch (alt60) {
                case 1 :
                    // InternalXSpice.g:10006:3: this_VoltageExport_0= ruleVoltageExport
                    {

                    			newCompositeNode(grammarAccess.getExportAccess().getVoltageExportParserRuleCall_0());
                    		
                    pushFollow(FOLLOW_2);
                    this_VoltageExport_0=ruleVoltageExport();

                    state._fsp--;


                    			current = this_VoltageExport_0;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 2 :
                    // InternalXSpice.g:10015:3: this_CurrentExport_1= ruleCurrentExport
                    {

                    			newCompositeNode(grammarAccess.getExportAccess().getCurrentExportParserRuleCall_1());
                    		
                    pushFollow(FOLLOW_2);
                    this_CurrentExport_1=ruleCurrentExport();

                    state._fsp--;


                    			current = this_CurrentExport_1;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExport"


    // $ANTLR start "entryRuleVoltageExport"
    // InternalXSpice.g:10027:1: entryRuleVoltageExport returns [EObject current=null] : iv_ruleVoltageExport= ruleVoltageExport EOF ;
    public final EObject entryRuleVoltageExport() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVoltageExport = null;


        try {
            // InternalXSpice.g:10027:54: (iv_ruleVoltageExport= ruleVoltageExport EOF )
            // InternalXSpice.g:10028:2: iv_ruleVoltageExport= ruleVoltageExport EOF
            {
             newCompositeNode(grammarAccess.getVoltageExportRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleVoltageExport=ruleVoltageExport();

            state._fsp--;

             current =iv_ruleVoltageExport; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVoltageExport"


    // $ANTLR start "ruleVoltageExport"
    // InternalXSpice.g:10034:1: ruleVoltageExport returns [EObject current=null] : ( ( ( (lv_prefix_0_1= 'V' | lv_prefix_0_2= 'VM' | lv_prefix_0_3= 'VDB' | lv_prefix_0_4= 'VP' | lv_prefix_0_5= 'VR' | lv_prefix_0_6= 'VI' ) ) ) otherlv_1= '(' ( ( (lv_nodes_2_0= ruleLabel ) ) (otherlv_3= ',' ( (lv_nodes_4_0= RULE_NODE ) ) )? ) otherlv_5= ')' ) ;
    public final EObject ruleVoltageExport() throws RecognitionException {
        EObject current = null;

        Token lv_prefix_0_1=null;
        Token lv_prefix_0_2=null;
        Token lv_prefix_0_3=null;
        Token lv_prefix_0_4=null;
        Token lv_prefix_0_5=null;
        Token lv_prefix_0_6=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token lv_nodes_4_0=null;
        Token otherlv_5=null;
        AntlrDatatypeRuleToken lv_nodes_2_0 = null;



        	enterRule();

        try {
            // InternalXSpice.g:10040:2: ( ( ( ( (lv_prefix_0_1= 'V' | lv_prefix_0_2= 'VM' | lv_prefix_0_3= 'VDB' | lv_prefix_0_4= 'VP' | lv_prefix_0_5= 'VR' | lv_prefix_0_6= 'VI' ) ) ) otherlv_1= '(' ( ( (lv_nodes_2_0= ruleLabel ) ) (otherlv_3= ',' ( (lv_nodes_4_0= RULE_NODE ) ) )? ) otherlv_5= ')' ) )
            // InternalXSpice.g:10041:2: ( ( ( (lv_prefix_0_1= 'V' | lv_prefix_0_2= 'VM' | lv_prefix_0_3= 'VDB' | lv_prefix_0_4= 'VP' | lv_prefix_0_5= 'VR' | lv_prefix_0_6= 'VI' ) ) ) otherlv_1= '(' ( ( (lv_nodes_2_0= ruleLabel ) ) (otherlv_3= ',' ( (lv_nodes_4_0= RULE_NODE ) ) )? ) otherlv_5= ')' )
            {
            // InternalXSpice.g:10041:2: ( ( ( (lv_prefix_0_1= 'V' | lv_prefix_0_2= 'VM' | lv_prefix_0_3= 'VDB' | lv_prefix_0_4= 'VP' | lv_prefix_0_5= 'VR' | lv_prefix_0_6= 'VI' ) ) ) otherlv_1= '(' ( ( (lv_nodes_2_0= ruleLabel ) ) (otherlv_3= ',' ( (lv_nodes_4_0= RULE_NODE ) ) )? ) otherlv_5= ')' )
            // InternalXSpice.g:10042:3: ( ( (lv_prefix_0_1= 'V' | lv_prefix_0_2= 'VM' | lv_prefix_0_3= 'VDB' | lv_prefix_0_4= 'VP' | lv_prefix_0_5= 'VR' | lv_prefix_0_6= 'VI' ) ) ) otherlv_1= '(' ( ( (lv_nodes_2_0= ruleLabel ) ) (otherlv_3= ',' ( (lv_nodes_4_0= RULE_NODE ) ) )? ) otherlv_5= ')'
            {
            // InternalXSpice.g:10042:3: ( ( (lv_prefix_0_1= 'V' | lv_prefix_0_2= 'VM' | lv_prefix_0_3= 'VDB' | lv_prefix_0_4= 'VP' | lv_prefix_0_5= 'VR' | lv_prefix_0_6= 'VI' ) ) )
            // InternalXSpice.g:10043:4: ( (lv_prefix_0_1= 'V' | lv_prefix_0_2= 'VM' | lv_prefix_0_3= 'VDB' | lv_prefix_0_4= 'VP' | lv_prefix_0_5= 'VR' | lv_prefix_0_6= 'VI' ) )
            {
            // InternalXSpice.g:10043:4: ( (lv_prefix_0_1= 'V' | lv_prefix_0_2= 'VM' | lv_prefix_0_3= 'VDB' | lv_prefix_0_4= 'VP' | lv_prefix_0_5= 'VR' | lv_prefix_0_6= 'VI' ) )
            // InternalXSpice.g:10044:5: (lv_prefix_0_1= 'V' | lv_prefix_0_2= 'VM' | lv_prefix_0_3= 'VDB' | lv_prefix_0_4= 'VP' | lv_prefix_0_5= 'VR' | lv_prefix_0_6= 'VI' )
            {
            // InternalXSpice.g:10044:5: (lv_prefix_0_1= 'V' | lv_prefix_0_2= 'VM' | lv_prefix_0_3= 'VDB' | lv_prefix_0_4= 'VP' | lv_prefix_0_5= 'VR' | lv_prefix_0_6= 'VI' )
            int alt61=6;
            switch ( input.LA(1) ) {
            case 175:
                {
                alt61=1;
                }
                break;
            case 176:
                {
                alt61=2;
                }
                break;
            case 177:
                {
                alt61=3;
                }
                break;
            case 178:
                {
                alt61=4;
                }
                break;
            case 179:
                {
                alt61=5;
                }
                break;
            case 180:
                {
                alt61=6;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 61, 0, input);

                throw nvae;
            }

            switch (alt61) {
                case 1 :
                    // InternalXSpice.g:10045:6: lv_prefix_0_1= 'V'
                    {
                    lv_prefix_0_1=(Token)match(input,175,FOLLOW_14); 

                    						newLeafNode(lv_prefix_0_1, grammarAccess.getVoltageExportAccess().getPrefixVKeyword_0_0_0());
                    					

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getVoltageExportRule());
                    						}
                    						setWithLastConsumed(current, "prefix", lv_prefix_0_1, null);
                    					

                    }
                    break;
                case 2 :
                    // InternalXSpice.g:10056:6: lv_prefix_0_2= 'VM'
                    {
                    lv_prefix_0_2=(Token)match(input,176,FOLLOW_14); 

                    						newLeafNode(lv_prefix_0_2, grammarAccess.getVoltageExportAccess().getPrefixVMKeyword_0_0_1());
                    					

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getVoltageExportRule());
                    						}
                    						setWithLastConsumed(current, "prefix", lv_prefix_0_2, null);
                    					

                    }
                    break;
                case 3 :
                    // InternalXSpice.g:10067:6: lv_prefix_0_3= 'VDB'
                    {
                    lv_prefix_0_3=(Token)match(input,177,FOLLOW_14); 

                    						newLeafNode(lv_prefix_0_3, grammarAccess.getVoltageExportAccess().getPrefixVDBKeyword_0_0_2());
                    					

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getVoltageExportRule());
                    						}
                    						setWithLastConsumed(current, "prefix", lv_prefix_0_3, null);
                    					

                    }
                    break;
                case 4 :
                    // InternalXSpice.g:10078:6: lv_prefix_0_4= 'VP'
                    {
                    lv_prefix_0_4=(Token)match(input,178,FOLLOW_14); 

                    						newLeafNode(lv_prefix_0_4, grammarAccess.getVoltageExportAccess().getPrefixVPKeyword_0_0_3());
                    					

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getVoltageExportRule());
                    						}
                    						setWithLastConsumed(current, "prefix", lv_prefix_0_4, null);
                    					

                    }
                    break;
                case 5 :
                    // InternalXSpice.g:10089:6: lv_prefix_0_5= 'VR'
                    {
                    lv_prefix_0_5=(Token)match(input,179,FOLLOW_14); 

                    						newLeafNode(lv_prefix_0_5, grammarAccess.getVoltageExportAccess().getPrefixVRKeyword_0_0_4());
                    					

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getVoltageExportRule());
                    						}
                    						setWithLastConsumed(current, "prefix", lv_prefix_0_5, null);
                    					

                    }
                    break;
                case 6 :
                    // InternalXSpice.g:10100:6: lv_prefix_0_6= 'VI'
                    {
                    lv_prefix_0_6=(Token)match(input,180,FOLLOW_14); 

                    						newLeafNode(lv_prefix_0_6, grammarAccess.getVoltageExportAccess().getPrefixVIKeyword_0_0_5());
                    					

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getVoltageExportRule());
                    						}
                    						setWithLastConsumed(current, "prefix", lv_prefix_0_6, null);
                    					

                    }
                    break;

            }


            }


            }

            otherlv_1=(Token)match(input,45,FOLLOW_4); 

            			newLeafNode(otherlv_1, grammarAccess.getVoltageExportAccess().getLeftParenthesisKeyword_1());
            		
            // InternalXSpice.g:10117:3: ( ( (lv_nodes_2_0= ruleLabel ) ) (otherlv_3= ',' ( (lv_nodes_4_0= RULE_NODE ) ) )? )
            // InternalXSpice.g:10118:4: ( (lv_nodes_2_0= ruleLabel ) ) (otherlv_3= ',' ( (lv_nodes_4_0= RULE_NODE ) ) )?
            {
            // InternalXSpice.g:10118:4: ( (lv_nodes_2_0= ruleLabel ) )
            // InternalXSpice.g:10119:5: (lv_nodes_2_0= ruleLabel )
            {
            // InternalXSpice.g:10119:5: (lv_nodes_2_0= ruleLabel )
            // InternalXSpice.g:10120:6: lv_nodes_2_0= ruleLabel
            {

            						newCompositeNode(grammarAccess.getVoltageExportAccess().getNodesLabelParserRuleCall_2_0_0());
            					
            pushFollow(FOLLOW_57);
            lv_nodes_2_0=ruleLabel();

            state._fsp--;


            						if (current==null) {
            							current = createModelElementForParent(grammarAccess.getVoltageExportRule());
            						}
            						add(
            							current,
            							"nodes",
            							lv_nodes_2_0,
            							"com.xtext.ravornyo.xspice.XSpice.Label");
            						afterParserOrEnumRuleCall();
            					

            }


            }

            // InternalXSpice.g:10137:4: (otherlv_3= ',' ( (lv_nodes_4_0= RULE_NODE ) ) )?
            int alt62=2;
            int LA62_0 = input.LA(1);

            if ( (LA62_0==89) ) {
                alt62=1;
            }
            switch (alt62) {
                case 1 :
                    // InternalXSpice.g:10138:5: otherlv_3= ',' ( (lv_nodes_4_0= RULE_NODE ) )
                    {
                    otherlv_3=(Token)match(input,89,FOLLOW_5); 

                    					newLeafNode(otherlv_3, grammarAccess.getVoltageExportAccess().getCommaKeyword_2_1_0());
                    				
                    // InternalXSpice.g:10142:5: ( (lv_nodes_4_0= RULE_NODE ) )
                    // InternalXSpice.g:10143:6: (lv_nodes_4_0= RULE_NODE )
                    {
                    // InternalXSpice.g:10143:6: (lv_nodes_4_0= RULE_NODE )
                    // InternalXSpice.g:10144:7: lv_nodes_4_0= RULE_NODE
                    {
                    lv_nodes_4_0=(Token)match(input,RULE_NODE,FOLLOW_58); 

                    							newLeafNode(lv_nodes_4_0, grammarAccess.getVoltageExportAccess().getNodesNODETerminalRuleCall_2_1_1_0());
                    						

                    							if (current==null) {
                    								current = createModelElement(grammarAccess.getVoltageExportRule());
                    							}
                    							addWithLastConsumed(
                    								current,
                    								"nodes",
                    								lv_nodes_4_0,
                    								"com.xtext.ravornyo.xspice.XSpice.NODE");
                    						

                    }


                    }


                    }
                    break;

            }


            }

            otherlv_5=(Token)match(input,52,FOLLOW_2); 

            			newLeafNode(otherlv_5, grammarAccess.getVoltageExportAccess().getRightParenthesisKeyword_3());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVoltageExport"


    // $ANTLR start "entryRuleCurrentExport"
    // InternalXSpice.g:10170:1: entryRuleCurrentExport returns [EObject current=null] : iv_ruleCurrentExport= ruleCurrentExport EOF ;
    public final EObject entryRuleCurrentExport() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCurrentExport = null;


        try {
            // InternalXSpice.g:10170:54: (iv_ruleCurrentExport= ruleCurrentExport EOF )
            // InternalXSpice.g:10171:2: iv_ruleCurrentExport= ruleCurrentExport EOF
            {
             newCompositeNode(grammarAccess.getCurrentExportRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleCurrentExport=ruleCurrentExport();

            state._fsp--;

             current =iv_ruleCurrentExport; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCurrentExport"


    // $ANTLR start "ruleCurrentExport"
    // InternalXSpice.g:10177:1: ruleCurrentExport returns [EObject current=null] : ( ( ( (lv_prefix_0_1= 'I' | lv_prefix_0_2= 'IM' | lv_prefix_0_3= 'IDB' | lv_prefix_0_4= 'IP' | lv_prefix_0_5= 'IR' | lv_prefix_0_6= 'II' ) ) ) otherlv_1= '(' ( (lv_nodes_2_0= ruleLabel ) ) otherlv_3= ')' ) ;
    public final EObject ruleCurrentExport() throws RecognitionException {
        EObject current = null;

        Token lv_prefix_0_1=null;
        Token lv_prefix_0_2=null;
        Token lv_prefix_0_3=null;
        Token lv_prefix_0_4=null;
        Token lv_prefix_0_5=null;
        Token lv_prefix_0_6=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        AntlrDatatypeRuleToken lv_nodes_2_0 = null;



        	enterRule();

        try {
            // InternalXSpice.g:10183:2: ( ( ( ( (lv_prefix_0_1= 'I' | lv_prefix_0_2= 'IM' | lv_prefix_0_3= 'IDB' | lv_prefix_0_4= 'IP' | lv_prefix_0_5= 'IR' | lv_prefix_0_6= 'II' ) ) ) otherlv_1= '(' ( (lv_nodes_2_0= ruleLabel ) ) otherlv_3= ')' ) )
            // InternalXSpice.g:10184:2: ( ( ( (lv_prefix_0_1= 'I' | lv_prefix_0_2= 'IM' | lv_prefix_0_3= 'IDB' | lv_prefix_0_4= 'IP' | lv_prefix_0_5= 'IR' | lv_prefix_0_6= 'II' ) ) ) otherlv_1= '(' ( (lv_nodes_2_0= ruleLabel ) ) otherlv_3= ')' )
            {
            // InternalXSpice.g:10184:2: ( ( ( (lv_prefix_0_1= 'I' | lv_prefix_0_2= 'IM' | lv_prefix_0_3= 'IDB' | lv_prefix_0_4= 'IP' | lv_prefix_0_5= 'IR' | lv_prefix_0_6= 'II' ) ) ) otherlv_1= '(' ( (lv_nodes_2_0= ruleLabel ) ) otherlv_3= ')' )
            // InternalXSpice.g:10185:3: ( ( (lv_prefix_0_1= 'I' | lv_prefix_0_2= 'IM' | lv_prefix_0_3= 'IDB' | lv_prefix_0_4= 'IP' | lv_prefix_0_5= 'IR' | lv_prefix_0_6= 'II' ) ) ) otherlv_1= '(' ( (lv_nodes_2_0= ruleLabel ) ) otherlv_3= ')'
            {
            // InternalXSpice.g:10185:3: ( ( (lv_prefix_0_1= 'I' | lv_prefix_0_2= 'IM' | lv_prefix_0_3= 'IDB' | lv_prefix_0_4= 'IP' | lv_prefix_0_5= 'IR' | lv_prefix_0_6= 'II' ) ) )
            // InternalXSpice.g:10186:4: ( (lv_prefix_0_1= 'I' | lv_prefix_0_2= 'IM' | lv_prefix_0_3= 'IDB' | lv_prefix_0_4= 'IP' | lv_prefix_0_5= 'IR' | lv_prefix_0_6= 'II' ) )
            {
            // InternalXSpice.g:10186:4: ( (lv_prefix_0_1= 'I' | lv_prefix_0_2= 'IM' | lv_prefix_0_3= 'IDB' | lv_prefix_0_4= 'IP' | lv_prefix_0_5= 'IR' | lv_prefix_0_6= 'II' ) )
            // InternalXSpice.g:10187:5: (lv_prefix_0_1= 'I' | lv_prefix_0_2= 'IM' | lv_prefix_0_3= 'IDB' | lv_prefix_0_4= 'IP' | lv_prefix_0_5= 'IR' | lv_prefix_0_6= 'II' )
            {
            // InternalXSpice.g:10187:5: (lv_prefix_0_1= 'I' | lv_prefix_0_2= 'IM' | lv_prefix_0_3= 'IDB' | lv_prefix_0_4= 'IP' | lv_prefix_0_5= 'IR' | lv_prefix_0_6= 'II' )
            int alt63=6;
            switch ( input.LA(1) ) {
            case 181:
                {
                alt63=1;
                }
                break;
            case 182:
                {
                alt63=2;
                }
                break;
            case 183:
                {
                alt63=3;
                }
                break;
            case 184:
                {
                alt63=4;
                }
                break;
            case 185:
                {
                alt63=5;
                }
                break;
            case 186:
                {
                alt63=6;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 63, 0, input);

                throw nvae;
            }

            switch (alt63) {
                case 1 :
                    // InternalXSpice.g:10188:6: lv_prefix_0_1= 'I'
                    {
                    lv_prefix_0_1=(Token)match(input,181,FOLLOW_14); 

                    						newLeafNode(lv_prefix_0_1, grammarAccess.getCurrentExportAccess().getPrefixIKeyword_0_0_0());
                    					

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getCurrentExportRule());
                    						}
                    						setWithLastConsumed(current, "prefix", lv_prefix_0_1, null);
                    					

                    }
                    break;
                case 2 :
                    // InternalXSpice.g:10199:6: lv_prefix_0_2= 'IM'
                    {
                    lv_prefix_0_2=(Token)match(input,182,FOLLOW_14); 

                    						newLeafNode(lv_prefix_0_2, grammarAccess.getCurrentExportAccess().getPrefixIMKeyword_0_0_1());
                    					

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getCurrentExportRule());
                    						}
                    						setWithLastConsumed(current, "prefix", lv_prefix_0_2, null);
                    					

                    }
                    break;
                case 3 :
                    // InternalXSpice.g:10210:6: lv_prefix_0_3= 'IDB'
                    {
                    lv_prefix_0_3=(Token)match(input,183,FOLLOW_14); 

                    						newLeafNode(lv_prefix_0_3, grammarAccess.getCurrentExportAccess().getPrefixIDBKeyword_0_0_2());
                    					

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getCurrentExportRule());
                    						}
                    						setWithLastConsumed(current, "prefix", lv_prefix_0_3, null);
                    					

                    }
                    break;
                case 4 :
                    // InternalXSpice.g:10221:6: lv_prefix_0_4= 'IP'
                    {
                    lv_prefix_0_4=(Token)match(input,184,FOLLOW_14); 

                    						newLeafNode(lv_prefix_0_4, grammarAccess.getCurrentExportAccess().getPrefixIPKeyword_0_0_3());
                    					

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getCurrentExportRule());
                    						}
                    						setWithLastConsumed(current, "prefix", lv_prefix_0_4, null);
                    					

                    }
                    break;
                case 5 :
                    // InternalXSpice.g:10232:6: lv_prefix_0_5= 'IR'
                    {
                    lv_prefix_0_5=(Token)match(input,185,FOLLOW_14); 

                    						newLeafNode(lv_prefix_0_5, grammarAccess.getCurrentExportAccess().getPrefixIRKeyword_0_0_4());
                    					

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getCurrentExportRule());
                    						}
                    						setWithLastConsumed(current, "prefix", lv_prefix_0_5, null);
                    					

                    }
                    break;
                case 6 :
                    // InternalXSpice.g:10243:6: lv_prefix_0_6= 'II'
                    {
                    lv_prefix_0_6=(Token)match(input,186,FOLLOW_14); 

                    						newLeafNode(lv_prefix_0_6, grammarAccess.getCurrentExportAccess().getPrefixIIKeyword_0_0_5());
                    					

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getCurrentExportRule());
                    						}
                    						setWithLastConsumed(current, "prefix", lv_prefix_0_6, null);
                    					

                    }
                    break;

            }


            }


            }

            otherlv_1=(Token)match(input,45,FOLLOW_4); 

            			newLeafNode(otherlv_1, grammarAccess.getCurrentExportAccess().getLeftParenthesisKeyword_1());
            		
            // InternalXSpice.g:10260:3: ( (lv_nodes_2_0= ruleLabel ) )
            // InternalXSpice.g:10261:4: (lv_nodes_2_0= ruleLabel )
            {
            // InternalXSpice.g:10261:4: (lv_nodes_2_0= ruleLabel )
            // InternalXSpice.g:10262:5: lv_nodes_2_0= ruleLabel
            {

            					newCompositeNode(grammarAccess.getCurrentExportAccess().getNodesLabelParserRuleCall_2_0());
            				
            pushFollow(FOLLOW_58);
            lv_nodes_2_0=ruleLabel();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getCurrentExportRule());
            					}
            					add(
            						current,
            						"nodes",
            						lv_nodes_2_0,
            						"com.xtext.ravornyo.xspice.XSpice.Label");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            otherlv_3=(Token)match(input,52,FOLLOW_2); 

            			newLeafNode(otherlv_3, grammarAccess.getCurrentExportAccess().getRightParenthesisKeyword_3());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCurrentExport"


    // $ANTLR start "entryRuleWaveform"
    // InternalXSpice.g:10287:1: entryRuleWaveform returns [EObject current=null] : iv_ruleWaveform= ruleWaveform EOF ;
    public final EObject entryRuleWaveform() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWaveform = null;


        try {
            // InternalXSpice.g:10287:49: (iv_ruleWaveform= ruleWaveform EOF )
            // InternalXSpice.g:10288:2: iv_ruleWaveform= ruleWaveform EOF
            {
             newCompositeNode(grammarAccess.getWaveformRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleWaveform=ruleWaveform();

            state._fsp--;

             current =iv_ruleWaveform; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleWaveform"


    // $ANTLR start "ruleWaveform"
    // InternalXSpice.g:10294:1: ruleWaveform returns [EObject current=null] : (this_Exp_0= ruleExp | this_Sine_1= ruleSine | this_Pulse_2= rulePulse | this_PWL_3= rulePWL | this_SFFM_4= ruleSFFM | this_AM_5= ruleAM ) ;
    public final EObject ruleWaveform() throws RecognitionException {
        EObject current = null;

        EObject this_Exp_0 = null;

        EObject this_Sine_1 = null;

        EObject this_Pulse_2 = null;

        EObject this_PWL_3 = null;

        EObject this_SFFM_4 = null;

        EObject this_AM_5 = null;



        	enterRule();

        try {
            // InternalXSpice.g:10300:2: ( (this_Exp_0= ruleExp | this_Sine_1= ruleSine | this_Pulse_2= rulePulse | this_PWL_3= rulePWL | this_SFFM_4= ruleSFFM | this_AM_5= ruleAM ) )
            // InternalXSpice.g:10301:2: (this_Exp_0= ruleExp | this_Sine_1= ruleSine | this_Pulse_2= rulePulse | this_PWL_3= rulePWL | this_SFFM_4= ruleSFFM | this_AM_5= ruleAM )
            {
            // InternalXSpice.g:10301:2: (this_Exp_0= ruleExp | this_Sine_1= ruleSine | this_Pulse_2= rulePulse | this_PWL_3= rulePWL | this_SFFM_4= ruleSFFM | this_AM_5= ruleAM )
            int alt64=6;
            switch ( input.LA(1) ) {
            case 187:
                {
                alt64=1;
                }
                break;
            case 188:
                {
                alt64=2;
                }
                break;
            case 189:
                {
                alt64=3;
                }
                break;
            case 190:
                {
                alt64=4;
                }
                break;
            case 191:
                {
                alt64=5;
                }
                break;
            case 192:
                {
                alt64=6;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 64, 0, input);

                throw nvae;
            }

            switch (alt64) {
                case 1 :
                    // InternalXSpice.g:10302:3: this_Exp_0= ruleExp
                    {

                    			newCompositeNode(grammarAccess.getWaveformAccess().getExpParserRuleCall_0());
                    		
                    pushFollow(FOLLOW_2);
                    this_Exp_0=ruleExp();

                    state._fsp--;


                    			current = this_Exp_0;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 2 :
                    // InternalXSpice.g:10311:3: this_Sine_1= ruleSine
                    {

                    			newCompositeNode(grammarAccess.getWaveformAccess().getSineParserRuleCall_1());
                    		
                    pushFollow(FOLLOW_2);
                    this_Sine_1=ruleSine();

                    state._fsp--;


                    			current = this_Sine_1;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 3 :
                    // InternalXSpice.g:10320:3: this_Pulse_2= rulePulse
                    {

                    			newCompositeNode(grammarAccess.getWaveformAccess().getPulseParserRuleCall_2());
                    		
                    pushFollow(FOLLOW_2);
                    this_Pulse_2=rulePulse();

                    state._fsp--;


                    			current = this_Pulse_2;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 4 :
                    // InternalXSpice.g:10329:3: this_PWL_3= rulePWL
                    {

                    			newCompositeNode(grammarAccess.getWaveformAccess().getPWLParserRuleCall_3());
                    		
                    pushFollow(FOLLOW_2);
                    this_PWL_3=rulePWL();

                    state._fsp--;


                    			current = this_PWL_3;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 5 :
                    // InternalXSpice.g:10338:3: this_SFFM_4= ruleSFFM
                    {

                    			newCompositeNode(grammarAccess.getWaveformAccess().getSFFMParserRuleCall_4());
                    		
                    pushFollow(FOLLOW_2);
                    this_SFFM_4=ruleSFFM();

                    state._fsp--;


                    			current = this_SFFM_4;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 6 :
                    // InternalXSpice.g:10347:3: this_AM_5= ruleAM
                    {

                    			newCompositeNode(grammarAccess.getWaveformAccess().getAMParserRuleCall_5());
                    		
                    pushFollow(FOLLOW_2);
                    this_AM_5=ruleAM();

                    state._fsp--;


                    			current = this_AM_5;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleWaveform"


    // $ANTLR start "entryRuleExp"
    // InternalXSpice.g:10359:1: entryRuleExp returns [EObject current=null] : iv_ruleExp= ruleExp EOF ;
    public final EObject entryRuleExp() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExp = null;


        try {
            // InternalXSpice.g:10359:44: (iv_ruleExp= ruleExp EOF )
            // InternalXSpice.g:10360:2: iv_ruleExp= ruleExp EOF
            {
             newCompositeNode(grammarAccess.getExpRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleExp=ruleExp();

            state._fsp--;

             current =iv_ruleExp; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExp"


    // $ANTLR start "ruleExp"
    // InternalXSpice.g:10366:1: ruleExp returns [EObject current=null] : (otherlv_0= 'EXP' otherlv_1= '(' ( (lv_args_2_0= RULE_NUMBER ) ) ( (lv_args_3_0= RULE_NUMBER ) )* otherlv_4= ')' ) ;
    public final EObject ruleExp() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token lv_args_2_0=null;
        Token lv_args_3_0=null;
        Token otherlv_4=null;


        	enterRule();

        try {
            // InternalXSpice.g:10372:2: ( (otherlv_0= 'EXP' otherlv_1= '(' ( (lv_args_2_0= RULE_NUMBER ) ) ( (lv_args_3_0= RULE_NUMBER ) )* otherlv_4= ')' ) )
            // InternalXSpice.g:10373:2: (otherlv_0= 'EXP' otherlv_1= '(' ( (lv_args_2_0= RULE_NUMBER ) ) ( (lv_args_3_0= RULE_NUMBER ) )* otherlv_4= ')' )
            {
            // InternalXSpice.g:10373:2: (otherlv_0= 'EXP' otherlv_1= '(' ( (lv_args_2_0= RULE_NUMBER ) ) ( (lv_args_3_0= RULE_NUMBER ) )* otherlv_4= ')' )
            // InternalXSpice.g:10374:3: otherlv_0= 'EXP' otherlv_1= '(' ( (lv_args_2_0= RULE_NUMBER ) ) ( (lv_args_3_0= RULE_NUMBER ) )* otherlv_4= ')'
            {
            otherlv_0=(Token)match(input,187,FOLLOW_14); 

            			newLeafNode(otherlv_0, grammarAccess.getExpAccess().getEXPKeyword_0());
            		
            otherlv_1=(Token)match(input,45,FOLLOW_12); 

            			newLeafNode(otherlv_1, grammarAccess.getExpAccess().getLeftParenthesisKeyword_1());
            		
            // InternalXSpice.g:10382:3: ( (lv_args_2_0= RULE_NUMBER ) )
            // InternalXSpice.g:10383:4: (lv_args_2_0= RULE_NUMBER )
            {
            // InternalXSpice.g:10383:4: (lv_args_2_0= RULE_NUMBER )
            // InternalXSpice.g:10384:5: lv_args_2_0= RULE_NUMBER
            {
            lv_args_2_0=(Token)match(input,RULE_NUMBER,FOLLOW_59); 

            					newLeafNode(lv_args_2_0, grammarAccess.getExpAccess().getArgsNUMBERTerminalRuleCall_2_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getExpRule());
            					}
            					addWithLastConsumed(
            						current,
            						"args",
            						lv_args_2_0,
            						"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            				

            }


            }

            // InternalXSpice.g:10400:3: ( (lv_args_3_0= RULE_NUMBER ) )*
            loop65:
            do {
                int alt65=2;
                int LA65_0 = input.LA(1);

                if ( (LA65_0==RULE_NUMBER) ) {
                    alt65=1;
                }


                switch (alt65) {
            	case 1 :
            	    // InternalXSpice.g:10401:4: (lv_args_3_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:10401:4: (lv_args_3_0= RULE_NUMBER )
            	    // InternalXSpice.g:10402:5: lv_args_3_0= RULE_NUMBER
            	    {
            	    lv_args_3_0=(Token)match(input,RULE_NUMBER,FOLLOW_59); 

            	    					newLeafNode(lv_args_3_0, grammarAccess.getExpAccess().getArgsNUMBERTerminalRuleCall_3_0());
            	    				

            	    					if (current==null) {
            	    						current = createModelElement(grammarAccess.getExpRule());
            	    					}
            	    					addWithLastConsumed(
            	    						current,
            	    						"args",
            	    						lv_args_3_0,
            	    						"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    				

            	    }


            	    }
            	    break;

            	default :
            	    break loop65;
                }
            } while (true);

            otherlv_4=(Token)match(input,52,FOLLOW_2); 

            			newLeafNode(otherlv_4, grammarAccess.getExpAccess().getRightParenthesisKeyword_4());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExp"


    // $ANTLR start "entryRuleSine"
    // InternalXSpice.g:10426:1: entryRuleSine returns [EObject current=null] : iv_ruleSine= ruleSine EOF ;
    public final EObject entryRuleSine() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSine = null;


        try {
            // InternalXSpice.g:10426:45: (iv_ruleSine= ruleSine EOF )
            // InternalXSpice.g:10427:2: iv_ruleSine= ruleSine EOF
            {
             newCompositeNode(grammarAccess.getSineRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleSine=ruleSine();

            state._fsp--;

             current =iv_ruleSine; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSine"


    // $ANTLR start "ruleSine"
    // InternalXSpice.g:10433:1: ruleSine returns [EObject current=null] : (otherlv_0= 'SIN' otherlv_1= '(' ( (lv_args_2_0= RULE_NUMBER ) ) ( (lv_args_3_0= RULE_NUMBER ) )* otherlv_4= ')' ) ;
    public final EObject ruleSine() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token lv_args_2_0=null;
        Token lv_args_3_0=null;
        Token otherlv_4=null;


        	enterRule();

        try {
            // InternalXSpice.g:10439:2: ( (otherlv_0= 'SIN' otherlv_1= '(' ( (lv_args_2_0= RULE_NUMBER ) ) ( (lv_args_3_0= RULE_NUMBER ) )* otherlv_4= ')' ) )
            // InternalXSpice.g:10440:2: (otherlv_0= 'SIN' otherlv_1= '(' ( (lv_args_2_0= RULE_NUMBER ) ) ( (lv_args_3_0= RULE_NUMBER ) )* otherlv_4= ')' )
            {
            // InternalXSpice.g:10440:2: (otherlv_0= 'SIN' otherlv_1= '(' ( (lv_args_2_0= RULE_NUMBER ) ) ( (lv_args_3_0= RULE_NUMBER ) )* otherlv_4= ')' )
            // InternalXSpice.g:10441:3: otherlv_0= 'SIN' otherlv_1= '(' ( (lv_args_2_0= RULE_NUMBER ) ) ( (lv_args_3_0= RULE_NUMBER ) )* otherlv_4= ')'
            {
            otherlv_0=(Token)match(input,188,FOLLOW_14); 

            			newLeafNode(otherlv_0, grammarAccess.getSineAccess().getSINKeyword_0());
            		
            otherlv_1=(Token)match(input,45,FOLLOW_12); 

            			newLeafNode(otherlv_1, grammarAccess.getSineAccess().getLeftParenthesisKeyword_1());
            		
            // InternalXSpice.g:10449:3: ( (lv_args_2_0= RULE_NUMBER ) )
            // InternalXSpice.g:10450:4: (lv_args_2_0= RULE_NUMBER )
            {
            // InternalXSpice.g:10450:4: (lv_args_2_0= RULE_NUMBER )
            // InternalXSpice.g:10451:5: lv_args_2_0= RULE_NUMBER
            {
            lv_args_2_0=(Token)match(input,RULE_NUMBER,FOLLOW_59); 

            					newLeafNode(lv_args_2_0, grammarAccess.getSineAccess().getArgsNUMBERTerminalRuleCall_2_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getSineRule());
            					}
            					addWithLastConsumed(
            						current,
            						"args",
            						lv_args_2_0,
            						"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            				

            }


            }

            // InternalXSpice.g:10467:3: ( (lv_args_3_0= RULE_NUMBER ) )*
            loop66:
            do {
                int alt66=2;
                int LA66_0 = input.LA(1);

                if ( (LA66_0==RULE_NUMBER) ) {
                    alt66=1;
                }


                switch (alt66) {
            	case 1 :
            	    // InternalXSpice.g:10468:4: (lv_args_3_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:10468:4: (lv_args_3_0= RULE_NUMBER )
            	    // InternalXSpice.g:10469:5: lv_args_3_0= RULE_NUMBER
            	    {
            	    lv_args_3_0=(Token)match(input,RULE_NUMBER,FOLLOW_59); 

            	    					newLeafNode(lv_args_3_0, grammarAccess.getSineAccess().getArgsNUMBERTerminalRuleCall_3_0());
            	    				

            	    					if (current==null) {
            	    						current = createModelElement(grammarAccess.getSineRule());
            	    					}
            	    					addWithLastConsumed(
            	    						current,
            	    						"args",
            	    						lv_args_3_0,
            	    						"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    				

            	    }


            	    }
            	    break;

            	default :
            	    break loop66;
                }
            } while (true);

            otherlv_4=(Token)match(input,52,FOLLOW_2); 

            			newLeafNode(otherlv_4, grammarAccess.getSineAccess().getRightParenthesisKeyword_4());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSine"


    // $ANTLR start "entryRulePulse"
    // InternalXSpice.g:10493:1: entryRulePulse returns [EObject current=null] : iv_rulePulse= rulePulse EOF ;
    public final EObject entryRulePulse() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePulse = null;


        try {
            // InternalXSpice.g:10493:46: (iv_rulePulse= rulePulse EOF )
            // InternalXSpice.g:10494:2: iv_rulePulse= rulePulse EOF
            {
             newCompositeNode(grammarAccess.getPulseRule()); 
            pushFollow(FOLLOW_1);
            iv_rulePulse=rulePulse();

            state._fsp--;

             current =iv_rulePulse; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePulse"


    // $ANTLR start "rulePulse"
    // InternalXSpice.g:10500:1: rulePulse returns [EObject current=null] : (otherlv_0= 'PULSE' otherlv_1= '(' ( (lv_args_2_0= RULE_NUMBER ) ) ( (lv_args_3_0= RULE_NUMBER ) )* otherlv_4= ')' ) ;
    public final EObject rulePulse() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token lv_args_2_0=null;
        Token lv_args_3_0=null;
        Token otherlv_4=null;


        	enterRule();

        try {
            // InternalXSpice.g:10506:2: ( (otherlv_0= 'PULSE' otherlv_1= '(' ( (lv_args_2_0= RULE_NUMBER ) ) ( (lv_args_3_0= RULE_NUMBER ) )* otherlv_4= ')' ) )
            // InternalXSpice.g:10507:2: (otherlv_0= 'PULSE' otherlv_1= '(' ( (lv_args_2_0= RULE_NUMBER ) ) ( (lv_args_3_0= RULE_NUMBER ) )* otherlv_4= ')' )
            {
            // InternalXSpice.g:10507:2: (otherlv_0= 'PULSE' otherlv_1= '(' ( (lv_args_2_0= RULE_NUMBER ) ) ( (lv_args_3_0= RULE_NUMBER ) )* otherlv_4= ')' )
            // InternalXSpice.g:10508:3: otherlv_0= 'PULSE' otherlv_1= '(' ( (lv_args_2_0= RULE_NUMBER ) ) ( (lv_args_3_0= RULE_NUMBER ) )* otherlv_4= ')'
            {
            otherlv_0=(Token)match(input,189,FOLLOW_14); 

            			newLeafNode(otherlv_0, grammarAccess.getPulseAccess().getPULSEKeyword_0());
            		
            otherlv_1=(Token)match(input,45,FOLLOW_12); 

            			newLeafNode(otherlv_1, grammarAccess.getPulseAccess().getLeftParenthesisKeyword_1());
            		
            // InternalXSpice.g:10516:3: ( (lv_args_2_0= RULE_NUMBER ) )
            // InternalXSpice.g:10517:4: (lv_args_2_0= RULE_NUMBER )
            {
            // InternalXSpice.g:10517:4: (lv_args_2_0= RULE_NUMBER )
            // InternalXSpice.g:10518:5: lv_args_2_0= RULE_NUMBER
            {
            lv_args_2_0=(Token)match(input,RULE_NUMBER,FOLLOW_59); 

            					newLeafNode(lv_args_2_0, grammarAccess.getPulseAccess().getArgsNUMBERTerminalRuleCall_2_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getPulseRule());
            					}
            					addWithLastConsumed(
            						current,
            						"args",
            						lv_args_2_0,
            						"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            				

            }


            }

            // InternalXSpice.g:10534:3: ( (lv_args_3_0= RULE_NUMBER ) )*
            loop67:
            do {
                int alt67=2;
                int LA67_0 = input.LA(1);

                if ( (LA67_0==RULE_NUMBER) ) {
                    alt67=1;
                }


                switch (alt67) {
            	case 1 :
            	    // InternalXSpice.g:10535:4: (lv_args_3_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:10535:4: (lv_args_3_0= RULE_NUMBER )
            	    // InternalXSpice.g:10536:5: lv_args_3_0= RULE_NUMBER
            	    {
            	    lv_args_3_0=(Token)match(input,RULE_NUMBER,FOLLOW_59); 

            	    					newLeafNode(lv_args_3_0, grammarAccess.getPulseAccess().getArgsNUMBERTerminalRuleCall_3_0());
            	    				

            	    					if (current==null) {
            	    						current = createModelElement(grammarAccess.getPulseRule());
            	    					}
            	    					addWithLastConsumed(
            	    						current,
            	    						"args",
            	    						lv_args_3_0,
            	    						"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    				

            	    }


            	    }
            	    break;

            	default :
            	    break loop67;
                }
            } while (true);

            otherlv_4=(Token)match(input,52,FOLLOW_2); 

            			newLeafNode(otherlv_4, grammarAccess.getPulseAccess().getRightParenthesisKeyword_4());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePulse"


    // $ANTLR start "entryRulePWL"
    // InternalXSpice.g:10560:1: entryRulePWL returns [EObject current=null] : iv_rulePWL= rulePWL EOF ;
    public final EObject entryRulePWL() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePWL = null;


        try {
            // InternalXSpice.g:10560:44: (iv_rulePWL= rulePWL EOF )
            // InternalXSpice.g:10561:2: iv_rulePWL= rulePWL EOF
            {
             newCompositeNode(grammarAccess.getPWLRule()); 
            pushFollow(FOLLOW_1);
            iv_rulePWL=rulePWL();

            state._fsp--;

             current =iv_rulePWL; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePWL"


    // $ANTLR start "rulePWL"
    // InternalXSpice.g:10567:1: rulePWL returns [EObject current=null] : (otherlv_0= 'PWL' otherlv_1= '(' ( ( (lv_args_2_0= RULE_NUMBER ) ) ( (lv_args_3_0= RULE_NUMBER ) ) ) ( ( (lv_args_4_0= RULE_NUMBER ) ) ( (lv_args_5_0= RULE_NUMBER ) ) )* otherlv_6= ')' ) ;
    public final EObject rulePWL() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token lv_args_2_0=null;
        Token lv_args_3_0=null;
        Token lv_args_4_0=null;
        Token lv_args_5_0=null;
        Token otherlv_6=null;


        	enterRule();

        try {
            // InternalXSpice.g:10573:2: ( (otherlv_0= 'PWL' otherlv_1= '(' ( ( (lv_args_2_0= RULE_NUMBER ) ) ( (lv_args_3_0= RULE_NUMBER ) ) ) ( ( (lv_args_4_0= RULE_NUMBER ) ) ( (lv_args_5_0= RULE_NUMBER ) ) )* otherlv_6= ')' ) )
            // InternalXSpice.g:10574:2: (otherlv_0= 'PWL' otherlv_1= '(' ( ( (lv_args_2_0= RULE_NUMBER ) ) ( (lv_args_3_0= RULE_NUMBER ) ) ) ( ( (lv_args_4_0= RULE_NUMBER ) ) ( (lv_args_5_0= RULE_NUMBER ) ) )* otherlv_6= ')' )
            {
            // InternalXSpice.g:10574:2: (otherlv_0= 'PWL' otherlv_1= '(' ( ( (lv_args_2_0= RULE_NUMBER ) ) ( (lv_args_3_0= RULE_NUMBER ) ) ) ( ( (lv_args_4_0= RULE_NUMBER ) ) ( (lv_args_5_0= RULE_NUMBER ) ) )* otherlv_6= ')' )
            // InternalXSpice.g:10575:3: otherlv_0= 'PWL' otherlv_1= '(' ( ( (lv_args_2_0= RULE_NUMBER ) ) ( (lv_args_3_0= RULE_NUMBER ) ) ) ( ( (lv_args_4_0= RULE_NUMBER ) ) ( (lv_args_5_0= RULE_NUMBER ) ) )* otherlv_6= ')'
            {
            otherlv_0=(Token)match(input,190,FOLLOW_14); 

            			newLeafNode(otherlv_0, grammarAccess.getPWLAccess().getPWLKeyword_0());
            		
            otherlv_1=(Token)match(input,45,FOLLOW_12); 

            			newLeafNode(otherlv_1, grammarAccess.getPWLAccess().getLeftParenthesisKeyword_1());
            		
            // InternalXSpice.g:10583:3: ( ( (lv_args_2_0= RULE_NUMBER ) ) ( (lv_args_3_0= RULE_NUMBER ) ) )
            // InternalXSpice.g:10584:4: ( (lv_args_2_0= RULE_NUMBER ) ) ( (lv_args_3_0= RULE_NUMBER ) )
            {
            // InternalXSpice.g:10584:4: ( (lv_args_2_0= RULE_NUMBER ) )
            // InternalXSpice.g:10585:5: (lv_args_2_0= RULE_NUMBER )
            {
            // InternalXSpice.g:10585:5: (lv_args_2_0= RULE_NUMBER )
            // InternalXSpice.g:10586:6: lv_args_2_0= RULE_NUMBER
            {
            lv_args_2_0=(Token)match(input,RULE_NUMBER,FOLLOW_12); 

            						newLeafNode(lv_args_2_0, grammarAccess.getPWLAccess().getArgsNUMBERTerminalRuleCall_2_0_0());
            					

            						if (current==null) {
            							current = createModelElement(grammarAccess.getPWLRule());
            						}
            						addWithLastConsumed(
            							current,
            							"args",
            							lv_args_2_0,
            							"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            					

            }


            }

            // InternalXSpice.g:10602:4: ( (lv_args_3_0= RULE_NUMBER ) )
            // InternalXSpice.g:10603:5: (lv_args_3_0= RULE_NUMBER )
            {
            // InternalXSpice.g:10603:5: (lv_args_3_0= RULE_NUMBER )
            // InternalXSpice.g:10604:6: lv_args_3_0= RULE_NUMBER
            {
            lv_args_3_0=(Token)match(input,RULE_NUMBER,FOLLOW_59); 

            						newLeafNode(lv_args_3_0, grammarAccess.getPWLAccess().getArgsNUMBERTerminalRuleCall_2_1_0());
            					

            						if (current==null) {
            							current = createModelElement(grammarAccess.getPWLRule());
            						}
            						addWithLastConsumed(
            							current,
            							"args",
            							lv_args_3_0,
            							"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            					

            }


            }


            }

            // InternalXSpice.g:10621:3: ( ( (lv_args_4_0= RULE_NUMBER ) ) ( (lv_args_5_0= RULE_NUMBER ) ) )*
            loop68:
            do {
                int alt68=2;
                int LA68_0 = input.LA(1);

                if ( (LA68_0==RULE_NUMBER) ) {
                    alt68=1;
                }


                switch (alt68) {
            	case 1 :
            	    // InternalXSpice.g:10622:4: ( (lv_args_4_0= RULE_NUMBER ) ) ( (lv_args_5_0= RULE_NUMBER ) )
            	    {
            	    // InternalXSpice.g:10622:4: ( (lv_args_4_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:10623:5: (lv_args_4_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:10623:5: (lv_args_4_0= RULE_NUMBER )
            	    // InternalXSpice.g:10624:6: lv_args_4_0= RULE_NUMBER
            	    {
            	    lv_args_4_0=(Token)match(input,RULE_NUMBER,FOLLOW_12); 

            	    						newLeafNode(lv_args_4_0, grammarAccess.getPWLAccess().getArgsNUMBERTerminalRuleCall_3_0_0());
            	    					

            	    						if (current==null) {
            	    							current = createModelElement(grammarAccess.getPWLRule());
            	    						}
            	    						addWithLastConsumed(
            	    							current,
            	    							"args",
            	    							lv_args_4_0,
            	    							"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    					

            	    }


            	    }

            	    // InternalXSpice.g:10640:4: ( (lv_args_5_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:10641:5: (lv_args_5_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:10641:5: (lv_args_5_0= RULE_NUMBER )
            	    // InternalXSpice.g:10642:6: lv_args_5_0= RULE_NUMBER
            	    {
            	    lv_args_5_0=(Token)match(input,RULE_NUMBER,FOLLOW_59); 

            	    						newLeafNode(lv_args_5_0, grammarAccess.getPWLAccess().getArgsNUMBERTerminalRuleCall_3_1_0());
            	    					

            	    						if (current==null) {
            	    							current = createModelElement(grammarAccess.getPWLRule());
            	    						}
            	    						addWithLastConsumed(
            	    							current,
            	    							"args",
            	    							lv_args_5_0,
            	    							"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    					

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop68;
                }
            } while (true);

            otherlv_6=(Token)match(input,52,FOLLOW_2); 

            			newLeafNode(otherlv_6, grammarAccess.getPWLAccess().getRightParenthesisKeyword_4());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePWL"


    // $ANTLR start "entryRuleSFFM"
    // InternalXSpice.g:10667:1: entryRuleSFFM returns [EObject current=null] : iv_ruleSFFM= ruleSFFM EOF ;
    public final EObject entryRuleSFFM() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSFFM = null;


        try {
            // InternalXSpice.g:10667:45: (iv_ruleSFFM= ruleSFFM EOF )
            // InternalXSpice.g:10668:2: iv_ruleSFFM= ruleSFFM EOF
            {
             newCompositeNode(grammarAccess.getSFFMRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleSFFM=ruleSFFM();

            state._fsp--;

             current =iv_ruleSFFM; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSFFM"


    // $ANTLR start "ruleSFFM"
    // InternalXSpice.g:10674:1: ruleSFFM returns [EObject current=null] : (otherlv_0= 'SFFM' otherlv_1= '(' ( (lv_args_2_0= RULE_NUMBER ) ) ( (lv_args_3_0= RULE_NUMBER ) )* otherlv_4= ')' ) ;
    public final EObject ruleSFFM() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token lv_args_2_0=null;
        Token lv_args_3_0=null;
        Token otherlv_4=null;


        	enterRule();

        try {
            // InternalXSpice.g:10680:2: ( (otherlv_0= 'SFFM' otherlv_1= '(' ( (lv_args_2_0= RULE_NUMBER ) ) ( (lv_args_3_0= RULE_NUMBER ) )* otherlv_4= ')' ) )
            // InternalXSpice.g:10681:2: (otherlv_0= 'SFFM' otherlv_1= '(' ( (lv_args_2_0= RULE_NUMBER ) ) ( (lv_args_3_0= RULE_NUMBER ) )* otherlv_4= ')' )
            {
            // InternalXSpice.g:10681:2: (otherlv_0= 'SFFM' otherlv_1= '(' ( (lv_args_2_0= RULE_NUMBER ) ) ( (lv_args_3_0= RULE_NUMBER ) )* otherlv_4= ')' )
            // InternalXSpice.g:10682:3: otherlv_0= 'SFFM' otherlv_1= '(' ( (lv_args_2_0= RULE_NUMBER ) ) ( (lv_args_3_0= RULE_NUMBER ) )* otherlv_4= ')'
            {
            otherlv_0=(Token)match(input,191,FOLLOW_14); 

            			newLeafNode(otherlv_0, grammarAccess.getSFFMAccess().getSFFMKeyword_0());
            		
            otherlv_1=(Token)match(input,45,FOLLOW_12); 

            			newLeafNode(otherlv_1, grammarAccess.getSFFMAccess().getLeftParenthesisKeyword_1());
            		
            // InternalXSpice.g:10690:3: ( (lv_args_2_0= RULE_NUMBER ) )
            // InternalXSpice.g:10691:4: (lv_args_2_0= RULE_NUMBER )
            {
            // InternalXSpice.g:10691:4: (lv_args_2_0= RULE_NUMBER )
            // InternalXSpice.g:10692:5: lv_args_2_0= RULE_NUMBER
            {
            lv_args_2_0=(Token)match(input,RULE_NUMBER,FOLLOW_59); 

            					newLeafNode(lv_args_2_0, grammarAccess.getSFFMAccess().getArgsNUMBERTerminalRuleCall_2_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getSFFMRule());
            					}
            					addWithLastConsumed(
            						current,
            						"args",
            						lv_args_2_0,
            						"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            				

            }


            }

            // InternalXSpice.g:10708:3: ( (lv_args_3_0= RULE_NUMBER ) )*
            loop69:
            do {
                int alt69=2;
                int LA69_0 = input.LA(1);

                if ( (LA69_0==RULE_NUMBER) ) {
                    alt69=1;
                }


                switch (alt69) {
            	case 1 :
            	    // InternalXSpice.g:10709:4: (lv_args_3_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:10709:4: (lv_args_3_0= RULE_NUMBER )
            	    // InternalXSpice.g:10710:5: lv_args_3_0= RULE_NUMBER
            	    {
            	    lv_args_3_0=(Token)match(input,RULE_NUMBER,FOLLOW_59); 

            	    					newLeafNode(lv_args_3_0, grammarAccess.getSFFMAccess().getArgsNUMBERTerminalRuleCall_3_0());
            	    				

            	    					if (current==null) {
            	    						current = createModelElement(grammarAccess.getSFFMRule());
            	    					}
            	    					addWithLastConsumed(
            	    						current,
            	    						"args",
            	    						lv_args_3_0,
            	    						"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    				

            	    }


            	    }
            	    break;

            	default :
            	    break loop69;
                }
            } while (true);

            otherlv_4=(Token)match(input,52,FOLLOW_2); 

            			newLeafNode(otherlv_4, grammarAccess.getSFFMAccess().getRightParenthesisKeyword_4());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSFFM"


    // $ANTLR start "entryRuleAM"
    // InternalXSpice.g:10734:1: entryRuleAM returns [EObject current=null] : iv_ruleAM= ruleAM EOF ;
    public final EObject entryRuleAM() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAM = null;


        try {
            // InternalXSpice.g:10734:43: (iv_ruleAM= ruleAM EOF )
            // InternalXSpice.g:10735:2: iv_ruleAM= ruleAM EOF
            {
             newCompositeNode(grammarAccess.getAMRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleAM=ruleAM();

            state._fsp--;

             current =iv_ruleAM; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAM"


    // $ANTLR start "ruleAM"
    // InternalXSpice.g:10741:1: ruleAM returns [EObject current=null] : (otherlv_0= 'AM' otherlv_1= '(' ( (lv_args_2_0= RULE_NUMBER ) ) ( (lv_args_3_0= RULE_NUMBER ) )* otherlv_4= ')' ) ;
    public final EObject ruleAM() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token lv_args_2_0=null;
        Token lv_args_3_0=null;
        Token otherlv_4=null;


        	enterRule();

        try {
            // InternalXSpice.g:10747:2: ( (otherlv_0= 'AM' otherlv_1= '(' ( (lv_args_2_0= RULE_NUMBER ) ) ( (lv_args_3_0= RULE_NUMBER ) )* otherlv_4= ')' ) )
            // InternalXSpice.g:10748:2: (otherlv_0= 'AM' otherlv_1= '(' ( (lv_args_2_0= RULE_NUMBER ) ) ( (lv_args_3_0= RULE_NUMBER ) )* otherlv_4= ')' )
            {
            // InternalXSpice.g:10748:2: (otherlv_0= 'AM' otherlv_1= '(' ( (lv_args_2_0= RULE_NUMBER ) ) ( (lv_args_3_0= RULE_NUMBER ) )* otherlv_4= ')' )
            // InternalXSpice.g:10749:3: otherlv_0= 'AM' otherlv_1= '(' ( (lv_args_2_0= RULE_NUMBER ) ) ( (lv_args_3_0= RULE_NUMBER ) )* otherlv_4= ')'
            {
            otherlv_0=(Token)match(input,192,FOLLOW_14); 

            			newLeafNode(otherlv_0, grammarAccess.getAMAccess().getAMKeyword_0());
            		
            otherlv_1=(Token)match(input,45,FOLLOW_12); 

            			newLeafNode(otherlv_1, grammarAccess.getAMAccess().getLeftParenthesisKeyword_1());
            		
            // InternalXSpice.g:10757:3: ( (lv_args_2_0= RULE_NUMBER ) )
            // InternalXSpice.g:10758:4: (lv_args_2_0= RULE_NUMBER )
            {
            // InternalXSpice.g:10758:4: (lv_args_2_0= RULE_NUMBER )
            // InternalXSpice.g:10759:5: lv_args_2_0= RULE_NUMBER
            {
            lv_args_2_0=(Token)match(input,RULE_NUMBER,FOLLOW_59); 

            					newLeafNode(lv_args_2_0, grammarAccess.getAMAccess().getArgsNUMBERTerminalRuleCall_2_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getAMRule());
            					}
            					addWithLastConsumed(
            						current,
            						"args",
            						lv_args_2_0,
            						"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            				

            }


            }

            // InternalXSpice.g:10775:3: ( (lv_args_3_0= RULE_NUMBER ) )*
            loop70:
            do {
                int alt70=2;
                int LA70_0 = input.LA(1);

                if ( (LA70_0==RULE_NUMBER) ) {
                    alt70=1;
                }


                switch (alt70) {
            	case 1 :
            	    // InternalXSpice.g:10776:4: (lv_args_3_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:10776:4: (lv_args_3_0= RULE_NUMBER )
            	    // InternalXSpice.g:10777:5: lv_args_3_0= RULE_NUMBER
            	    {
            	    lv_args_3_0=(Token)match(input,RULE_NUMBER,FOLLOW_59); 

            	    					newLeafNode(lv_args_3_0, grammarAccess.getAMAccess().getArgsNUMBERTerminalRuleCall_3_0());
            	    				

            	    					if (current==null) {
            	    						current = createModelElement(grammarAccess.getAMRule());
            	    					}
            	    					addWithLastConsumed(
            	    						current,
            	    						"args",
            	    						lv_args_3_0,
            	    						"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    				

            	    }


            	    }
            	    break;

            	default :
            	    break loop70;
                }
            } while (true);

            otherlv_4=(Token)match(input,52,FOLLOW_2); 

            			newLeafNode(otherlv_4, grammarAccess.getAMAccess().getRightParenthesisKeyword_4());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAM"


    // $ANTLR start "entryRuleOptions"
    // InternalXSpice.g:10801:1: entryRuleOptions returns [EObject current=null] : iv_ruleOptions= ruleOptions EOF ;
    public final EObject entryRuleOptions() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOptions = null;


        try {
            // InternalXSpice.g:10801:48: (iv_ruleOptions= ruleOptions EOF )
            // InternalXSpice.g:10802:2: iv_ruleOptions= ruleOptions EOF
            {
             newCompositeNode(grammarAccess.getOptionsRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleOptions=ruleOptions();

            state._fsp--;

             current =iv_ruleOptions; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOptions"


    // $ANTLR start "ruleOptions"
    // InternalXSpice.g:10808:1: ruleOptions returns [EObject current=null] : (otherlv_0= '.OPTION' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'ABSTOL' otherlv_3= '=' ( (lv_abstol_4_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'BADMOS3' otherlv_6= '=' ( (lv_badmos3_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'CHGTOL' otherlv_9= '=' ( (lv_chgtol_10_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'DEFAD' otherlv_12= '=' ( (lv_defad_13_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'DEFAS' otherlv_15= '=' ( (lv_defas_16_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'DEFL' otherlv_18= '=' ( (lv_defl_19_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'DEFW' otherlv_21= '=' ( (lv_defaultWidth_22_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'GMIN' otherlv_24= '=' ( (lv_gmin_25_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'ITL1' otherlv_27= '=' ( (lv_itl1_28_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'ITL2' otherlv_30= '=' ( (lv_itl2_31_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= 'ITL3' otherlv_33= '=' ( (lv_itl3_34_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'ITL4' otherlv_36= '=' ( (lv_itl4_37_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'ITL5' otherlv_39= '=' ( (lv_itl5_40_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_41= 'KEEPOPINFO' otherlv_42= '=' ( (lv_keepopinfo_43_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'METHOD' otherlv_45= '=' ( (lv_method_46_0= ruleIntegrationMethod ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'PIVREL' otherlv_48= '=' ( (lv_pivrel_49_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_50= 'RELTOL' otherlv_51= '=' ( (lv_reltol_52_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'TEMP' otherlv_54= '=' ( (lv_temp_55_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_56= 'TNOM' otherlv_57= '=' ( (lv_nominalTemperature_58_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= 'TRTOL' otherlv_60= '=' ( (lv_trtol_61_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_62= 'VNTOL' otherlv_63= '=' ( (lv_vntol_64_0= RULE_NUMBER ) ) ) ) ) ) )+ {...}?) ) ) ) ;
    public final EObject ruleOptions() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token lv_abstol_4_0=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token lv_badmos3_7_0=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token lv_chgtol_10_0=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token lv_defad_13_0=null;
        Token otherlv_14=null;
        Token otherlv_15=null;
        Token lv_defas_16_0=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token lv_defl_19_0=null;
        Token otherlv_20=null;
        Token otherlv_21=null;
        Token lv_defaultWidth_22_0=null;
        Token otherlv_23=null;
        Token otherlv_24=null;
        Token lv_gmin_25_0=null;
        Token otherlv_26=null;
        Token otherlv_27=null;
        Token lv_itl1_28_0=null;
        Token otherlv_29=null;
        Token otherlv_30=null;
        Token lv_itl2_31_0=null;
        Token otherlv_32=null;
        Token otherlv_33=null;
        Token lv_itl3_34_0=null;
        Token otherlv_35=null;
        Token otherlv_36=null;
        Token lv_itl4_37_0=null;
        Token otherlv_38=null;
        Token otherlv_39=null;
        Token lv_itl5_40_0=null;
        Token otherlv_41=null;
        Token otherlv_42=null;
        Token lv_keepopinfo_43_0=null;
        Token otherlv_44=null;
        Token otherlv_45=null;
        Token otherlv_47=null;
        Token otherlv_48=null;
        Token lv_pivrel_49_0=null;
        Token otherlv_50=null;
        Token otherlv_51=null;
        Token lv_reltol_52_0=null;
        Token otherlv_53=null;
        Token otherlv_54=null;
        Token lv_temp_55_0=null;
        Token otherlv_56=null;
        Token otherlv_57=null;
        Token lv_nominalTemperature_58_0=null;
        Token otherlv_59=null;
        Token otherlv_60=null;
        Token lv_trtol_61_0=null;
        Token otherlv_62=null;
        Token otherlv_63=null;
        Token lv_vntol_64_0=null;
        Enumerator lv_method_46_0 = null;



        	enterRule();

        try {
            // InternalXSpice.g:10814:2: ( (otherlv_0= '.OPTION' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'ABSTOL' otherlv_3= '=' ( (lv_abstol_4_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'BADMOS3' otherlv_6= '=' ( (lv_badmos3_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'CHGTOL' otherlv_9= '=' ( (lv_chgtol_10_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'DEFAD' otherlv_12= '=' ( (lv_defad_13_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'DEFAS' otherlv_15= '=' ( (lv_defas_16_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'DEFL' otherlv_18= '=' ( (lv_defl_19_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'DEFW' otherlv_21= '=' ( (lv_defaultWidth_22_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'GMIN' otherlv_24= '=' ( (lv_gmin_25_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'ITL1' otherlv_27= '=' ( (lv_itl1_28_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'ITL2' otherlv_30= '=' ( (lv_itl2_31_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= 'ITL3' otherlv_33= '=' ( (lv_itl3_34_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'ITL4' otherlv_36= '=' ( (lv_itl4_37_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'ITL5' otherlv_39= '=' ( (lv_itl5_40_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_41= 'KEEPOPINFO' otherlv_42= '=' ( (lv_keepopinfo_43_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'METHOD' otherlv_45= '=' ( (lv_method_46_0= ruleIntegrationMethod ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'PIVREL' otherlv_48= '=' ( (lv_pivrel_49_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_50= 'RELTOL' otherlv_51= '=' ( (lv_reltol_52_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'TEMP' otherlv_54= '=' ( (lv_temp_55_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_56= 'TNOM' otherlv_57= '=' ( (lv_nominalTemperature_58_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= 'TRTOL' otherlv_60= '=' ( (lv_trtol_61_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_62= 'VNTOL' otherlv_63= '=' ( (lv_vntol_64_0= RULE_NUMBER ) ) ) ) ) ) )+ {...}?) ) ) ) )
            // InternalXSpice.g:10815:2: (otherlv_0= '.OPTION' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'ABSTOL' otherlv_3= '=' ( (lv_abstol_4_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'BADMOS3' otherlv_6= '=' ( (lv_badmos3_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'CHGTOL' otherlv_9= '=' ( (lv_chgtol_10_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'DEFAD' otherlv_12= '=' ( (lv_defad_13_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'DEFAS' otherlv_15= '=' ( (lv_defas_16_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'DEFL' otherlv_18= '=' ( (lv_defl_19_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'DEFW' otherlv_21= '=' ( (lv_defaultWidth_22_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'GMIN' otherlv_24= '=' ( (lv_gmin_25_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'ITL1' otherlv_27= '=' ( (lv_itl1_28_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'ITL2' otherlv_30= '=' ( (lv_itl2_31_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= 'ITL3' otherlv_33= '=' ( (lv_itl3_34_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'ITL4' otherlv_36= '=' ( (lv_itl4_37_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'ITL5' otherlv_39= '=' ( (lv_itl5_40_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_41= 'KEEPOPINFO' otherlv_42= '=' ( (lv_keepopinfo_43_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'METHOD' otherlv_45= '=' ( (lv_method_46_0= ruleIntegrationMethod ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'PIVREL' otherlv_48= '=' ( (lv_pivrel_49_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_50= 'RELTOL' otherlv_51= '=' ( (lv_reltol_52_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'TEMP' otherlv_54= '=' ( (lv_temp_55_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_56= 'TNOM' otherlv_57= '=' ( (lv_nominalTemperature_58_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= 'TRTOL' otherlv_60= '=' ( (lv_trtol_61_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_62= 'VNTOL' otherlv_63= '=' ( (lv_vntol_64_0= RULE_NUMBER ) ) ) ) ) ) )+ {...}?) ) ) )
            {
            // InternalXSpice.g:10815:2: (otherlv_0= '.OPTION' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'ABSTOL' otherlv_3= '=' ( (lv_abstol_4_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'BADMOS3' otherlv_6= '=' ( (lv_badmos3_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'CHGTOL' otherlv_9= '=' ( (lv_chgtol_10_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'DEFAD' otherlv_12= '=' ( (lv_defad_13_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'DEFAS' otherlv_15= '=' ( (lv_defas_16_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'DEFL' otherlv_18= '=' ( (lv_defl_19_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'DEFW' otherlv_21= '=' ( (lv_defaultWidth_22_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'GMIN' otherlv_24= '=' ( (lv_gmin_25_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'ITL1' otherlv_27= '=' ( (lv_itl1_28_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'ITL2' otherlv_30= '=' ( (lv_itl2_31_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= 'ITL3' otherlv_33= '=' ( (lv_itl3_34_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'ITL4' otherlv_36= '=' ( (lv_itl4_37_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'ITL5' otherlv_39= '=' ( (lv_itl5_40_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_41= 'KEEPOPINFO' otherlv_42= '=' ( (lv_keepopinfo_43_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'METHOD' otherlv_45= '=' ( (lv_method_46_0= ruleIntegrationMethod ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'PIVREL' otherlv_48= '=' ( (lv_pivrel_49_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_50= 'RELTOL' otherlv_51= '=' ( (lv_reltol_52_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'TEMP' otherlv_54= '=' ( (lv_temp_55_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_56= 'TNOM' otherlv_57= '=' ( (lv_nominalTemperature_58_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= 'TRTOL' otherlv_60= '=' ( (lv_trtol_61_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_62= 'VNTOL' otherlv_63= '=' ( (lv_vntol_64_0= RULE_NUMBER ) ) ) ) ) ) )+ {...}?) ) ) )
            // InternalXSpice.g:10816:3: otherlv_0= '.OPTION' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'ABSTOL' otherlv_3= '=' ( (lv_abstol_4_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'BADMOS3' otherlv_6= '=' ( (lv_badmos3_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'CHGTOL' otherlv_9= '=' ( (lv_chgtol_10_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'DEFAD' otherlv_12= '=' ( (lv_defad_13_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'DEFAS' otherlv_15= '=' ( (lv_defas_16_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'DEFL' otherlv_18= '=' ( (lv_defl_19_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'DEFW' otherlv_21= '=' ( (lv_defaultWidth_22_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'GMIN' otherlv_24= '=' ( (lv_gmin_25_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'ITL1' otherlv_27= '=' ( (lv_itl1_28_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'ITL2' otherlv_30= '=' ( (lv_itl2_31_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= 'ITL3' otherlv_33= '=' ( (lv_itl3_34_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'ITL4' otherlv_36= '=' ( (lv_itl4_37_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'ITL5' otherlv_39= '=' ( (lv_itl5_40_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_41= 'KEEPOPINFO' otherlv_42= '=' ( (lv_keepopinfo_43_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'METHOD' otherlv_45= '=' ( (lv_method_46_0= ruleIntegrationMethod ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'PIVREL' otherlv_48= '=' ( (lv_pivrel_49_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_50= 'RELTOL' otherlv_51= '=' ( (lv_reltol_52_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'TEMP' otherlv_54= '=' ( (lv_temp_55_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_56= 'TNOM' otherlv_57= '=' ( (lv_nominalTemperature_58_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= 'TRTOL' otherlv_60= '=' ( (lv_trtol_61_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_62= 'VNTOL' otherlv_63= '=' ( (lv_vntol_64_0= RULE_NUMBER ) ) ) ) ) ) )+ {...}?) ) )
            {
            otherlv_0=(Token)match(input,193,FOLLOW_60); 

            			newLeafNode(otherlv_0, grammarAccess.getOptionsAccess().getOPTIONKeyword_0());
            		
            // InternalXSpice.g:10820:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'ABSTOL' otherlv_3= '=' ( (lv_abstol_4_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'BADMOS3' otherlv_6= '=' ( (lv_badmos3_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'CHGTOL' otherlv_9= '=' ( (lv_chgtol_10_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'DEFAD' otherlv_12= '=' ( (lv_defad_13_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'DEFAS' otherlv_15= '=' ( (lv_defas_16_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'DEFL' otherlv_18= '=' ( (lv_defl_19_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'DEFW' otherlv_21= '=' ( (lv_defaultWidth_22_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'GMIN' otherlv_24= '=' ( (lv_gmin_25_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'ITL1' otherlv_27= '=' ( (lv_itl1_28_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'ITL2' otherlv_30= '=' ( (lv_itl2_31_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= 'ITL3' otherlv_33= '=' ( (lv_itl3_34_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'ITL4' otherlv_36= '=' ( (lv_itl4_37_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'ITL5' otherlv_39= '=' ( (lv_itl5_40_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_41= 'KEEPOPINFO' otherlv_42= '=' ( (lv_keepopinfo_43_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'METHOD' otherlv_45= '=' ( (lv_method_46_0= ruleIntegrationMethod ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'PIVREL' otherlv_48= '=' ( (lv_pivrel_49_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_50= 'RELTOL' otherlv_51= '=' ( (lv_reltol_52_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'TEMP' otherlv_54= '=' ( (lv_temp_55_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_56= 'TNOM' otherlv_57= '=' ( (lv_nominalTemperature_58_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= 'TRTOL' otherlv_60= '=' ( (lv_trtol_61_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_62= 'VNTOL' otherlv_63= '=' ( (lv_vntol_64_0= RULE_NUMBER ) ) ) ) ) ) )+ {...}?) ) )
            // InternalXSpice.g:10821:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'ABSTOL' otherlv_3= '=' ( (lv_abstol_4_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'BADMOS3' otherlv_6= '=' ( (lv_badmos3_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'CHGTOL' otherlv_9= '=' ( (lv_chgtol_10_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'DEFAD' otherlv_12= '=' ( (lv_defad_13_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'DEFAS' otherlv_15= '=' ( (lv_defas_16_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'DEFL' otherlv_18= '=' ( (lv_defl_19_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'DEFW' otherlv_21= '=' ( (lv_defaultWidth_22_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'GMIN' otherlv_24= '=' ( (lv_gmin_25_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'ITL1' otherlv_27= '=' ( (lv_itl1_28_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'ITL2' otherlv_30= '=' ( (lv_itl2_31_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= 'ITL3' otherlv_33= '=' ( (lv_itl3_34_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'ITL4' otherlv_36= '=' ( (lv_itl4_37_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'ITL5' otherlv_39= '=' ( (lv_itl5_40_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_41= 'KEEPOPINFO' otherlv_42= '=' ( (lv_keepopinfo_43_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'METHOD' otherlv_45= '=' ( (lv_method_46_0= ruleIntegrationMethod ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'PIVREL' otherlv_48= '=' ( (lv_pivrel_49_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_50= 'RELTOL' otherlv_51= '=' ( (lv_reltol_52_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'TEMP' otherlv_54= '=' ( (lv_temp_55_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_56= 'TNOM' otherlv_57= '=' ( (lv_nominalTemperature_58_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= 'TRTOL' otherlv_60= '=' ( (lv_trtol_61_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_62= 'VNTOL' otherlv_63= '=' ( (lv_vntol_64_0= RULE_NUMBER ) ) ) ) ) ) )+ {...}?) )
            {
            // InternalXSpice.g:10821:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'ABSTOL' otherlv_3= '=' ( (lv_abstol_4_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'BADMOS3' otherlv_6= '=' ( (lv_badmos3_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'CHGTOL' otherlv_9= '=' ( (lv_chgtol_10_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'DEFAD' otherlv_12= '=' ( (lv_defad_13_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'DEFAS' otherlv_15= '=' ( (lv_defas_16_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'DEFL' otherlv_18= '=' ( (lv_defl_19_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'DEFW' otherlv_21= '=' ( (lv_defaultWidth_22_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'GMIN' otherlv_24= '=' ( (lv_gmin_25_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'ITL1' otherlv_27= '=' ( (lv_itl1_28_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'ITL2' otherlv_30= '=' ( (lv_itl2_31_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= 'ITL3' otherlv_33= '=' ( (lv_itl3_34_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'ITL4' otherlv_36= '=' ( (lv_itl4_37_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'ITL5' otherlv_39= '=' ( (lv_itl5_40_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_41= 'KEEPOPINFO' otherlv_42= '=' ( (lv_keepopinfo_43_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'METHOD' otherlv_45= '=' ( (lv_method_46_0= ruleIntegrationMethod ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'PIVREL' otherlv_48= '=' ( (lv_pivrel_49_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_50= 'RELTOL' otherlv_51= '=' ( (lv_reltol_52_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'TEMP' otherlv_54= '=' ( (lv_temp_55_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_56= 'TNOM' otherlv_57= '=' ( (lv_nominalTemperature_58_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= 'TRTOL' otherlv_60= '=' ( (lv_trtol_61_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_62= 'VNTOL' otherlv_63= '=' ( (lv_vntol_64_0= RULE_NUMBER ) ) ) ) ) ) )+ {...}?) )
            // InternalXSpice.g:10822:5: ( ( ({...}? => ( ({...}? => (otherlv_2= 'ABSTOL' otherlv_3= '=' ( (lv_abstol_4_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'BADMOS3' otherlv_6= '=' ( (lv_badmos3_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'CHGTOL' otherlv_9= '=' ( (lv_chgtol_10_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'DEFAD' otherlv_12= '=' ( (lv_defad_13_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'DEFAS' otherlv_15= '=' ( (lv_defas_16_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'DEFL' otherlv_18= '=' ( (lv_defl_19_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'DEFW' otherlv_21= '=' ( (lv_defaultWidth_22_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'GMIN' otherlv_24= '=' ( (lv_gmin_25_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'ITL1' otherlv_27= '=' ( (lv_itl1_28_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'ITL2' otherlv_30= '=' ( (lv_itl2_31_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= 'ITL3' otherlv_33= '=' ( (lv_itl3_34_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'ITL4' otherlv_36= '=' ( (lv_itl4_37_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'ITL5' otherlv_39= '=' ( (lv_itl5_40_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_41= 'KEEPOPINFO' otherlv_42= '=' ( (lv_keepopinfo_43_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'METHOD' otherlv_45= '=' ( (lv_method_46_0= ruleIntegrationMethod ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'PIVREL' otherlv_48= '=' ( (lv_pivrel_49_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_50= 'RELTOL' otherlv_51= '=' ( (lv_reltol_52_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'TEMP' otherlv_54= '=' ( (lv_temp_55_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_56= 'TNOM' otherlv_57= '=' ( (lv_nominalTemperature_58_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= 'TRTOL' otherlv_60= '=' ( (lv_trtol_61_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_62= 'VNTOL' otherlv_63= '=' ( (lv_vntol_64_0= RULE_NUMBER ) ) ) ) ) ) )+ {...}?)
            {
             
            				  getUnorderedGroupHelper().enter(grammarAccess.getOptionsAccess().getUnorderedGroup_1());
            				
            // InternalXSpice.g:10825:5: ( ( ({...}? => ( ({...}? => (otherlv_2= 'ABSTOL' otherlv_3= '=' ( (lv_abstol_4_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'BADMOS3' otherlv_6= '=' ( (lv_badmos3_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'CHGTOL' otherlv_9= '=' ( (lv_chgtol_10_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'DEFAD' otherlv_12= '=' ( (lv_defad_13_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'DEFAS' otherlv_15= '=' ( (lv_defas_16_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'DEFL' otherlv_18= '=' ( (lv_defl_19_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'DEFW' otherlv_21= '=' ( (lv_defaultWidth_22_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'GMIN' otherlv_24= '=' ( (lv_gmin_25_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'ITL1' otherlv_27= '=' ( (lv_itl1_28_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'ITL2' otherlv_30= '=' ( (lv_itl2_31_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= 'ITL3' otherlv_33= '=' ( (lv_itl3_34_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'ITL4' otherlv_36= '=' ( (lv_itl4_37_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'ITL5' otherlv_39= '=' ( (lv_itl5_40_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_41= 'KEEPOPINFO' otherlv_42= '=' ( (lv_keepopinfo_43_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'METHOD' otherlv_45= '=' ( (lv_method_46_0= ruleIntegrationMethod ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'PIVREL' otherlv_48= '=' ( (lv_pivrel_49_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_50= 'RELTOL' otherlv_51= '=' ( (lv_reltol_52_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'TEMP' otherlv_54= '=' ( (lv_temp_55_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_56= 'TNOM' otherlv_57= '=' ( (lv_nominalTemperature_58_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= 'TRTOL' otherlv_60= '=' ( (lv_trtol_61_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_62= 'VNTOL' otherlv_63= '=' ( (lv_vntol_64_0= RULE_NUMBER ) ) ) ) ) ) )+ {...}?)
            // InternalXSpice.g:10826:6: ( ({...}? => ( ({...}? => (otherlv_2= 'ABSTOL' otherlv_3= '=' ( (lv_abstol_4_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'BADMOS3' otherlv_6= '=' ( (lv_badmos3_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'CHGTOL' otherlv_9= '=' ( (lv_chgtol_10_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'DEFAD' otherlv_12= '=' ( (lv_defad_13_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'DEFAS' otherlv_15= '=' ( (lv_defas_16_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'DEFL' otherlv_18= '=' ( (lv_defl_19_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'DEFW' otherlv_21= '=' ( (lv_defaultWidth_22_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'GMIN' otherlv_24= '=' ( (lv_gmin_25_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'ITL1' otherlv_27= '=' ( (lv_itl1_28_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'ITL2' otherlv_30= '=' ( (lv_itl2_31_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= 'ITL3' otherlv_33= '=' ( (lv_itl3_34_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'ITL4' otherlv_36= '=' ( (lv_itl4_37_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'ITL5' otherlv_39= '=' ( (lv_itl5_40_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_41= 'KEEPOPINFO' otherlv_42= '=' ( (lv_keepopinfo_43_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'METHOD' otherlv_45= '=' ( (lv_method_46_0= ruleIntegrationMethod ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'PIVREL' otherlv_48= '=' ( (lv_pivrel_49_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_50= 'RELTOL' otherlv_51= '=' ( (lv_reltol_52_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'TEMP' otherlv_54= '=' ( (lv_temp_55_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_56= 'TNOM' otherlv_57= '=' ( (lv_nominalTemperature_58_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= 'TRTOL' otherlv_60= '=' ( (lv_trtol_61_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_62= 'VNTOL' otherlv_63= '=' ( (lv_vntol_64_0= RULE_NUMBER ) ) ) ) ) ) )+ {...}?
            {
            // InternalXSpice.g:10826:6: ( ({...}? => ( ({...}? => (otherlv_2= 'ABSTOL' otherlv_3= '=' ( (lv_abstol_4_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'BADMOS3' otherlv_6= '=' ( (lv_badmos3_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'CHGTOL' otherlv_9= '=' ( (lv_chgtol_10_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'DEFAD' otherlv_12= '=' ( (lv_defad_13_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'DEFAS' otherlv_15= '=' ( (lv_defas_16_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'DEFL' otherlv_18= '=' ( (lv_defl_19_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'DEFW' otherlv_21= '=' ( (lv_defaultWidth_22_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'GMIN' otherlv_24= '=' ( (lv_gmin_25_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'ITL1' otherlv_27= '=' ( (lv_itl1_28_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'ITL2' otherlv_30= '=' ( (lv_itl2_31_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= 'ITL3' otherlv_33= '=' ( (lv_itl3_34_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'ITL4' otherlv_36= '=' ( (lv_itl4_37_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'ITL5' otherlv_39= '=' ( (lv_itl5_40_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_41= 'KEEPOPINFO' otherlv_42= '=' ( (lv_keepopinfo_43_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'METHOD' otherlv_45= '=' ( (lv_method_46_0= ruleIntegrationMethod ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'PIVREL' otherlv_48= '=' ( (lv_pivrel_49_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_50= 'RELTOL' otherlv_51= '=' ( (lv_reltol_52_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'TEMP' otherlv_54= '=' ( (lv_temp_55_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_56= 'TNOM' otherlv_57= '=' ( (lv_nominalTemperature_58_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= 'TRTOL' otherlv_60= '=' ( (lv_trtol_61_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_62= 'VNTOL' otherlv_63= '=' ( (lv_vntol_64_0= RULE_NUMBER ) ) ) ) ) ) )+
            int cnt71=0;
            loop71:
            do {
                int alt71=22;
                alt71 = dfa71.predict(input);
                switch (alt71) {
            	case 1 :
            	    // InternalXSpice.g:10827:4: ({...}? => ( ({...}? => (otherlv_2= 'ABSTOL' otherlv_3= '=' ( (lv_abstol_4_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:10827:4: ({...}? => ( ({...}? => (otherlv_2= 'ABSTOL' otherlv_3= '=' ( (lv_abstol_4_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:10828:5: {...}? => ( ({...}? => (otherlv_2= 'ABSTOL' otherlv_3= '=' ( (lv_abstol_4_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 0) ) {
            	        throw new FailedPredicateException(input, "ruleOptions", "getUnorderedGroupHelper().canSelect(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 0)");
            	    }
            	    // InternalXSpice.g:10828:104: ( ({...}? => (otherlv_2= 'ABSTOL' otherlv_3= '=' ( (lv_abstol_4_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:10829:6: ({...}? => (otherlv_2= 'ABSTOL' otherlv_3= '=' ( (lv_abstol_4_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 0);
            	    					
            	    // InternalXSpice.g:10832:9: ({...}? => (otherlv_2= 'ABSTOL' otherlv_3= '=' ( (lv_abstol_4_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:10832:10: {...}? => (otherlv_2= 'ABSTOL' otherlv_3= '=' ( (lv_abstol_4_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleOptions", "true");
            	    }
            	    // InternalXSpice.g:10832:19: (otherlv_2= 'ABSTOL' otherlv_3= '=' ( (lv_abstol_4_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:10832:20: otherlv_2= 'ABSTOL' otherlv_3= '=' ( (lv_abstol_4_0= RULE_NUMBER ) )
            	    {
            	    otherlv_2=(Token)match(input,194,FOLLOW_11); 

            	    									newLeafNode(otherlv_2, grammarAccess.getOptionsAccess().getABSTOLKeyword_1_0_0());
            	    								
            	    otherlv_3=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_3, grammarAccess.getOptionsAccess().getEqualsSignKeyword_1_0_1());
            	    								
            	    // InternalXSpice.g:10840:9: ( (lv_abstol_4_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:10841:10: (lv_abstol_4_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:10841:10: (lv_abstol_4_0= RULE_NUMBER )
            	    // InternalXSpice.g:10842:11: lv_abstol_4_0= RULE_NUMBER
            	    {
            	    lv_abstol_4_0=(Token)match(input,RULE_NUMBER,FOLLOW_61); 

            	    											newLeafNode(lv_abstol_4_0, grammarAccess.getOptionsAccess().getAbstolNUMBERTerminalRuleCall_1_0_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getOptionsRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"abstol",
            	    												lv_abstol_4_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOptionsAccess().getUnorderedGroup_1());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalXSpice.g:10864:4: ({...}? => ( ({...}? => (otherlv_5= 'BADMOS3' otherlv_6= '=' ( (lv_badmos3_7_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:10864:4: ({...}? => ( ({...}? => (otherlv_5= 'BADMOS3' otherlv_6= '=' ( (lv_badmos3_7_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:10865:5: {...}? => ( ({...}? => (otherlv_5= 'BADMOS3' otherlv_6= '=' ( (lv_badmos3_7_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 1) ) {
            	        throw new FailedPredicateException(input, "ruleOptions", "getUnorderedGroupHelper().canSelect(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 1)");
            	    }
            	    // InternalXSpice.g:10865:104: ( ({...}? => (otherlv_5= 'BADMOS3' otherlv_6= '=' ( (lv_badmos3_7_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:10866:6: ({...}? => (otherlv_5= 'BADMOS3' otherlv_6= '=' ( (lv_badmos3_7_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 1);
            	    					
            	    // InternalXSpice.g:10869:9: ({...}? => (otherlv_5= 'BADMOS3' otherlv_6= '=' ( (lv_badmos3_7_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:10869:10: {...}? => (otherlv_5= 'BADMOS3' otherlv_6= '=' ( (lv_badmos3_7_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleOptions", "true");
            	    }
            	    // InternalXSpice.g:10869:19: (otherlv_5= 'BADMOS3' otherlv_6= '=' ( (lv_badmos3_7_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:10869:20: otherlv_5= 'BADMOS3' otherlv_6= '=' ( (lv_badmos3_7_0= RULE_NUMBER ) )
            	    {
            	    otherlv_5=(Token)match(input,195,FOLLOW_11); 

            	    									newLeafNode(otherlv_5, grammarAccess.getOptionsAccess().getBADMOS3Keyword_1_1_0());
            	    								
            	    otherlv_6=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_6, grammarAccess.getOptionsAccess().getEqualsSignKeyword_1_1_1());
            	    								
            	    // InternalXSpice.g:10877:9: ( (lv_badmos3_7_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:10878:10: (lv_badmos3_7_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:10878:10: (lv_badmos3_7_0= RULE_NUMBER )
            	    // InternalXSpice.g:10879:11: lv_badmos3_7_0= RULE_NUMBER
            	    {
            	    lv_badmos3_7_0=(Token)match(input,RULE_NUMBER,FOLLOW_61); 

            	    											newLeafNode(lv_badmos3_7_0, grammarAccess.getOptionsAccess().getBadmos3NUMBERTerminalRuleCall_1_1_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getOptionsRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"badmos3",
            	    												lv_badmos3_7_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOptionsAccess().getUnorderedGroup_1());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalXSpice.g:10901:4: ({...}? => ( ({...}? => (otherlv_8= 'CHGTOL' otherlv_9= '=' ( (lv_chgtol_10_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:10901:4: ({...}? => ( ({...}? => (otherlv_8= 'CHGTOL' otherlv_9= '=' ( (lv_chgtol_10_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:10902:5: {...}? => ( ({...}? => (otherlv_8= 'CHGTOL' otherlv_9= '=' ( (lv_chgtol_10_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 2) ) {
            	        throw new FailedPredicateException(input, "ruleOptions", "getUnorderedGroupHelper().canSelect(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 2)");
            	    }
            	    // InternalXSpice.g:10902:104: ( ({...}? => (otherlv_8= 'CHGTOL' otherlv_9= '=' ( (lv_chgtol_10_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:10903:6: ({...}? => (otherlv_8= 'CHGTOL' otherlv_9= '=' ( (lv_chgtol_10_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 2);
            	    					
            	    // InternalXSpice.g:10906:9: ({...}? => (otherlv_8= 'CHGTOL' otherlv_9= '=' ( (lv_chgtol_10_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:10906:10: {...}? => (otherlv_8= 'CHGTOL' otherlv_9= '=' ( (lv_chgtol_10_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleOptions", "true");
            	    }
            	    // InternalXSpice.g:10906:19: (otherlv_8= 'CHGTOL' otherlv_9= '=' ( (lv_chgtol_10_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:10906:20: otherlv_8= 'CHGTOL' otherlv_9= '=' ( (lv_chgtol_10_0= RULE_NUMBER ) )
            	    {
            	    otherlv_8=(Token)match(input,196,FOLLOW_11); 

            	    									newLeafNode(otherlv_8, grammarAccess.getOptionsAccess().getCHGTOLKeyword_1_2_0());
            	    								
            	    otherlv_9=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_9, grammarAccess.getOptionsAccess().getEqualsSignKeyword_1_2_1());
            	    								
            	    // InternalXSpice.g:10914:9: ( (lv_chgtol_10_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:10915:10: (lv_chgtol_10_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:10915:10: (lv_chgtol_10_0= RULE_NUMBER )
            	    // InternalXSpice.g:10916:11: lv_chgtol_10_0= RULE_NUMBER
            	    {
            	    lv_chgtol_10_0=(Token)match(input,RULE_NUMBER,FOLLOW_61); 

            	    											newLeafNode(lv_chgtol_10_0, grammarAccess.getOptionsAccess().getChgtolNUMBERTerminalRuleCall_1_2_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getOptionsRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"chgtol",
            	    												lv_chgtol_10_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOptionsAccess().getUnorderedGroup_1());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalXSpice.g:10938:4: ({...}? => ( ({...}? => (otherlv_11= 'DEFAD' otherlv_12= '=' ( (lv_defad_13_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:10938:4: ({...}? => ( ({...}? => (otherlv_11= 'DEFAD' otherlv_12= '=' ( (lv_defad_13_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:10939:5: {...}? => ( ({...}? => (otherlv_11= 'DEFAD' otherlv_12= '=' ( (lv_defad_13_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 3) ) {
            	        throw new FailedPredicateException(input, "ruleOptions", "getUnorderedGroupHelper().canSelect(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 3)");
            	    }
            	    // InternalXSpice.g:10939:104: ( ({...}? => (otherlv_11= 'DEFAD' otherlv_12= '=' ( (lv_defad_13_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:10940:6: ({...}? => (otherlv_11= 'DEFAD' otherlv_12= '=' ( (lv_defad_13_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 3);
            	    					
            	    // InternalXSpice.g:10943:9: ({...}? => (otherlv_11= 'DEFAD' otherlv_12= '=' ( (lv_defad_13_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:10943:10: {...}? => (otherlv_11= 'DEFAD' otherlv_12= '=' ( (lv_defad_13_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleOptions", "true");
            	    }
            	    // InternalXSpice.g:10943:19: (otherlv_11= 'DEFAD' otherlv_12= '=' ( (lv_defad_13_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:10943:20: otherlv_11= 'DEFAD' otherlv_12= '=' ( (lv_defad_13_0= RULE_NUMBER ) )
            	    {
            	    otherlv_11=(Token)match(input,197,FOLLOW_11); 

            	    									newLeafNode(otherlv_11, grammarAccess.getOptionsAccess().getDEFADKeyword_1_3_0());
            	    								
            	    otherlv_12=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_12, grammarAccess.getOptionsAccess().getEqualsSignKeyword_1_3_1());
            	    								
            	    // InternalXSpice.g:10951:9: ( (lv_defad_13_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:10952:10: (lv_defad_13_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:10952:10: (lv_defad_13_0= RULE_NUMBER )
            	    // InternalXSpice.g:10953:11: lv_defad_13_0= RULE_NUMBER
            	    {
            	    lv_defad_13_0=(Token)match(input,RULE_NUMBER,FOLLOW_61); 

            	    											newLeafNode(lv_defad_13_0, grammarAccess.getOptionsAccess().getDefadNUMBERTerminalRuleCall_1_3_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getOptionsRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"defad",
            	    												lv_defad_13_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOptionsAccess().getUnorderedGroup_1());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalXSpice.g:10975:4: ({...}? => ( ({...}? => (otherlv_14= 'DEFAS' otherlv_15= '=' ( (lv_defas_16_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:10975:4: ({...}? => ( ({...}? => (otherlv_14= 'DEFAS' otherlv_15= '=' ( (lv_defas_16_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:10976:5: {...}? => ( ({...}? => (otherlv_14= 'DEFAS' otherlv_15= '=' ( (lv_defas_16_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 4) ) {
            	        throw new FailedPredicateException(input, "ruleOptions", "getUnorderedGroupHelper().canSelect(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 4)");
            	    }
            	    // InternalXSpice.g:10976:104: ( ({...}? => (otherlv_14= 'DEFAS' otherlv_15= '=' ( (lv_defas_16_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:10977:6: ({...}? => (otherlv_14= 'DEFAS' otherlv_15= '=' ( (lv_defas_16_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 4);
            	    					
            	    // InternalXSpice.g:10980:9: ({...}? => (otherlv_14= 'DEFAS' otherlv_15= '=' ( (lv_defas_16_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:10980:10: {...}? => (otherlv_14= 'DEFAS' otherlv_15= '=' ( (lv_defas_16_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleOptions", "true");
            	    }
            	    // InternalXSpice.g:10980:19: (otherlv_14= 'DEFAS' otherlv_15= '=' ( (lv_defas_16_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:10980:20: otherlv_14= 'DEFAS' otherlv_15= '=' ( (lv_defas_16_0= RULE_NUMBER ) )
            	    {
            	    otherlv_14=(Token)match(input,198,FOLLOW_11); 

            	    									newLeafNode(otherlv_14, grammarAccess.getOptionsAccess().getDEFASKeyword_1_4_0());
            	    								
            	    otherlv_15=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_15, grammarAccess.getOptionsAccess().getEqualsSignKeyword_1_4_1());
            	    								
            	    // InternalXSpice.g:10988:9: ( (lv_defas_16_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:10989:10: (lv_defas_16_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:10989:10: (lv_defas_16_0= RULE_NUMBER )
            	    // InternalXSpice.g:10990:11: lv_defas_16_0= RULE_NUMBER
            	    {
            	    lv_defas_16_0=(Token)match(input,RULE_NUMBER,FOLLOW_61); 

            	    											newLeafNode(lv_defas_16_0, grammarAccess.getOptionsAccess().getDefasNUMBERTerminalRuleCall_1_4_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getOptionsRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"defas",
            	    												lv_defas_16_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOptionsAccess().getUnorderedGroup_1());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalXSpice.g:11012:4: ({...}? => ( ({...}? => (otherlv_17= 'DEFL' otherlv_18= '=' ( (lv_defl_19_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:11012:4: ({...}? => ( ({...}? => (otherlv_17= 'DEFL' otherlv_18= '=' ( (lv_defl_19_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:11013:5: {...}? => ( ({...}? => (otherlv_17= 'DEFL' otherlv_18= '=' ( (lv_defl_19_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 5) ) {
            	        throw new FailedPredicateException(input, "ruleOptions", "getUnorderedGroupHelper().canSelect(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 5)");
            	    }
            	    // InternalXSpice.g:11013:104: ( ({...}? => (otherlv_17= 'DEFL' otherlv_18= '=' ( (lv_defl_19_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:11014:6: ({...}? => (otherlv_17= 'DEFL' otherlv_18= '=' ( (lv_defl_19_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 5);
            	    					
            	    // InternalXSpice.g:11017:9: ({...}? => (otherlv_17= 'DEFL' otherlv_18= '=' ( (lv_defl_19_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:11017:10: {...}? => (otherlv_17= 'DEFL' otherlv_18= '=' ( (lv_defl_19_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleOptions", "true");
            	    }
            	    // InternalXSpice.g:11017:19: (otherlv_17= 'DEFL' otherlv_18= '=' ( (lv_defl_19_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:11017:20: otherlv_17= 'DEFL' otherlv_18= '=' ( (lv_defl_19_0= RULE_NUMBER ) )
            	    {
            	    otherlv_17=(Token)match(input,199,FOLLOW_11); 

            	    									newLeafNode(otherlv_17, grammarAccess.getOptionsAccess().getDEFLKeyword_1_5_0());
            	    								
            	    otherlv_18=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_18, grammarAccess.getOptionsAccess().getEqualsSignKeyword_1_5_1());
            	    								
            	    // InternalXSpice.g:11025:9: ( (lv_defl_19_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:11026:10: (lv_defl_19_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:11026:10: (lv_defl_19_0= RULE_NUMBER )
            	    // InternalXSpice.g:11027:11: lv_defl_19_0= RULE_NUMBER
            	    {
            	    lv_defl_19_0=(Token)match(input,RULE_NUMBER,FOLLOW_61); 

            	    											newLeafNode(lv_defl_19_0, grammarAccess.getOptionsAccess().getDeflNUMBERTerminalRuleCall_1_5_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getOptionsRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"defl",
            	    												lv_defl_19_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOptionsAccess().getUnorderedGroup_1());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // InternalXSpice.g:11049:4: ({...}? => ( ({...}? => (otherlv_20= 'DEFW' otherlv_21= '=' ( (lv_defaultWidth_22_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:11049:4: ({...}? => ( ({...}? => (otherlv_20= 'DEFW' otherlv_21= '=' ( (lv_defaultWidth_22_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:11050:5: {...}? => ( ({...}? => (otherlv_20= 'DEFW' otherlv_21= '=' ( (lv_defaultWidth_22_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 6) ) {
            	        throw new FailedPredicateException(input, "ruleOptions", "getUnorderedGroupHelper().canSelect(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 6)");
            	    }
            	    // InternalXSpice.g:11050:104: ( ({...}? => (otherlv_20= 'DEFW' otherlv_21= '=' ( (lv_defaultWidth_22_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:11051:6: ({...}? => (otherlv_20= 'DEFW' otherlv_21= '=' ( (lv_defaultWidth_22_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 6);
            	    					
            	    // InternalXSpice.g:11054:9: ({...}? => (otherlv_20= 'DEFW' otherlv_21= '=' ( (lv_defaultWidth_22_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:11054:10: {...}? => (otherlv_20= 'DEFW' otherlv_21= '=' ( (lv_defaultWidth_22_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleOptions", "true");
            	    }
            	    // InternalXSpice.g:11054:19: (otherlv_20= 'DEFW' otherlv_21= '=' ( (lv_defaultWidth_22_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:11054:20: otherlv_20= 'DEFW' otherlv_21= '=' ( (lv_defaultWidth_22_0= RULE_NUMBER ) )
            	    {
            	    otherlv_20=(Token)match(input,47,FOLLOW_11); 

            	    									newLeafNode(otherlv_20, grammarAccess.getOptionsAccess().getDEFWKeyword_1_6_0());
            	    								
            	    otherlv_21=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_21, grammarAccess.getOptionsAccess().getEqualsSignKeyword_1_6_1());
            	    								
            	    // InternalXSpice.g:11062:9: ( (lv_defaultWidth_22_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:11063:10: (lv_defaultWidth_22_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:11063:10: (lv_defaultWidth_22_0= RULE_NUMBER )
            	    // InternalXSpice.g:11064:11: lv_defaultWidth_22_0= RULE_NUMBER
            	    {
            	    lv_defaultWidth_22_0=(Token)match(input,RULE_NUMBER,FOLLOW_61); 

            	    											newLeafNode(lv_defaultWidth_22_0, grammarAccess.getOptionsAccess().getDefaultWidthNUMBERTerminalRuleCall_1_6_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getOptionsRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"defaultWidth",
            	    												lv_defaultWidth_22_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOptionsAccess().getUnorderedGroup_1());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 8 :
            	    // InternalXSpice.g:11086:4: ({...}? => ( ({...}? => (otherlv_23= 'GMIN' otherlv_24= '=' ( (lv_gmin_25_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:11086:4: ({...}? => ( ({...}? => (otherlv_23= 'GMIN' otherlv_24= '=' ( (lv_gmin_25_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:11087:5: {...}? => ( ({...}? => (otherlv_23= 'GMIN' otherlv_24= '=' ( (lv_gmin_25_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 7) ) {
            	        throw new FailedPredicateException(input, "ruleOptions", "getUnorderedGroupHelper().canSelect(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 7)");
            	    }
            	    // InternalXSpice.g:11087:104: ( ({...}? => (otherlv_23= 'GMIN' otherlv_24= '=' ( (lv_gmin_25_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:11088:6: ({...}? => (otherlv_23= 'GMIN' otherlv_24= '=' ( (lv_gmin_25_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 7);
            	    					
            	    // InternalXSpice.g:11091:9: ({...}? => (otherlv_23= 'GMIN' otherlv_24= '=' ( (lv_gmin_25_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:11091:10: {...}? => (otherlv_23= 'GMIN' otherlv_24= '=' ( (lv_gmin_25_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleOptions", "true");
            	    }
            	    // InternalXSpice.g:11091:19: (otherlv_23= 'GMIN' otherlv_24= '=' ( (lv_gmin_25_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:11091:20: otherlv_23= 'GMIN' otherlv_24= '=' ( (lv_gmin_25_0= RULE_NUMBER ) )
            	    {
            	    otherlv_23=(Token)match(input,200,FOLLOW_11); 

            	    									newLeafNode(otherlv_23, grammarAccess.getOptionsAccess().getGMINKeyword_1_7_0());
            	    								
            	    otherlv_24=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_24, grammarAccess.getOptionsAccess().getEqualsSignKeyword_1_7_1());
            	    								
            	    // InternalXSpice.g:11099:9: ( (lv_gmin_25_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:11100:10: (lv_gmin_25_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:11100:10: (lv_gmin_25_0= RULE_NUMBER )
            	    // InternalXSpice.g:11101:11: lv_gmin_25_0= RULE_NUMBER
            	    {
            	    lv_gmin_25_0=(Token)match(input,RULE_NUMBER,FOLLOW_61); 

            	    											newLeafNode(lv_gmin_25_0, grammarAccess.getOptionsAccess().getGminNUMBERTerminalRuleCall_1_7_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getOptionsRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"gmin",
            	    												lv_gmin_25_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOptionsAccess().getUnorderedGroup_1());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 9 :
            	    // InternalXSpice.g:11123:4: ({...}? => ( ({...}? => (otherlv_26= 'ITL1' otherlv_27= '=' ( (lv_itl1_28_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:11123:4: ({...}? => ( ({...}? => (otherlv_26= 'ITL1' otherlv_27= '=' ( (lv_itl1_28_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:11124:5: {...}? => ( ({...}? => (otherlv_26= 'ITL1' otherlv_27= '=' ( (lv_itl1_28_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 8) ) {
            	        throw new FailedPredicateException(input, "ruleOptions", "getUnorderedGroupHelper().canSelect(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 8)");
            	    }
            	    // InternalXSpice.g:11124:104: ( ({...}? => (otherlv_26= 'ITL1' otherlv_27= '=' ( (lv_itl1_28_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:11125:6: ({...}? => (otherlv_26= 'ITL1' otherlv_27= '=' ( (lv_itl1_28_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 8);
            	    					
            	    // InternalXSpice.g:11128:9: ({...}? => (otherlv_26= 'ITL1' otherlv_27= '=' ( (lv_itl1_28_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:11128:10: {...}? => (otherlv_26= 'ITL1' otherlv_27= '=' ( (lv_itl1_28_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleOptions", "true");
            	    }
            	    // InternalXSpice.g:11128:19: (otherlv_26= 'ITL1' otherlv_27= '=' ( (lv_itl1_28_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:11128:20: otherlv_26= 'ITL1' otherlv_27= '=' ( (lv_itl1_28_0= RULE_NUMBER ) )
            	    {
            	    otherlv_26=(Token)match(input,201,FOLLOW_11); 

            	    									newLeafNode(otherlv_26, grammarAccess.getOptionsAccess().getITL1Keyword_1_8_0());
            	    								
            	    otherlv_27=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_27, grammarAccess.getOptionsAccess().getEqualsSignKeyword_1_8_1());
            	    								
            	    // InternalXSpice.g:11136:9: ( (lv_itl1_28_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:11137:10: (lv_itl1_28_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:11137:10: (lv_itl1_28_0= RULE_NUMBER )
            	    // InternalXSpice.g:11138:11: lv_itl1_28_0= RULE_NUMBER
            	    {
            	    lv_itl1_28_0=(Token)match(input,RULE_NUMBER,FOLLOW_61); 

            	    											newLeafNode(lv_itl1_28_0, grammarAccess.getOptionsAccess().getItl1NUMBERTerminalRuleCall_1_8_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getOptionsRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"itl1",
            	    												lv_itl1_28_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOptionsAccess().getUnorderedGroup_1());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 10 :
            	    // InternalXSpice.g:11160:4: ({...}? => ( ({...}? => (otherlv_29= 'ITL2' otherlv_30= '=' ( (lv_itl2_31_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:11160:4: ({...}? => ( ({...}? => (otherlv_29= 'ITL2' otherlv_30= '=' ( (lv_itl2_31_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:11161:5: {...}? => ( ({...}? => (otherlv_29= 'ITL2' otherlv_30= '=' ( (lv_itl2_31_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 9) ) {
            	        throw new FailedPredicateException(input, "ruleOptions", "getUnorderedGroupHelper().canSelect(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 9)");
            	    }
            	    // InternalXSpice.g:11161:104: ( ({...}? => (otherlv_29= 'ITL2' otherlv_30= '=' ( (lv_itl2_31_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:11162:6: ({...}? => (otherlv_29= 'ITL2' otherlv_30= '=' ( (lv_itl2_31_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 9);
            	    					
            	    // InternalXSpice.g:11165:9: ({...}? => (otherlv_29= 'ITL2' otherlv_30= '=' ( (lv_itl2_31_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:11165:10: {...}? => (otherlv_29= 'ITL2' otherlv_30= '=' ( (lv_itl2_31_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleOptions", "true");
            	    }
            	    // InternalXSpice.g:11165:19: (otherlv_29= 'ITL2' otherlv_30= '=' ( (lv_itl2_31_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:11165:20: otherlv_29= 'ITL2' otherlv_30= '=' ( (lv_itl2_31_0= RULE_NUMBER ) )
            	    {
            	    otherlv_29=(Token)match(input,202,FOLLOW_11); 

            	    									newLeafNode(otherlv_29, grammarAccess.getOptionsAccess().getITL2Keyword_1_9_0());
            	    								
            	    otherlv_30=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_30, grammarAccess.getOptionsAccess().getEqualsSignKeyword_1_9_1());
            	    								
            	    // InternalXSpice.g:11173:9: ( (lv_itl2_31_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:11174:10: (lv_itl2_31_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:11174:10: (lv_itl2_31_0= RULE_NUMBER )
            	    // InternalXSpice.g:11175:11: lv_itl2_31_0= RULE_NUMBER
            	    {
            	    lv_itl2_31_0=(Token)match(input,RULE_NUMBER,FOLLOW_61); 

            	    											newLeafNode(lv_itl2_31_0, grammarAccess.getOptionsAccess().getItl2NUMBERTerminalRuleCall_1_9_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getOptionsRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"itl2",
            	    												lv_itl2_31_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOptionsAccess().getUnorderedGroup_1());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 11 :
            	    // InternalXSpice.g:11197:4: ({...}? => ( ({...}? => (otherlv_32= 'ITL3' otherlv_33= '=' ( (lv_itl3_34_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:11197:4: ({...}? => ( ({...}? => (otherlv_32= 'ITL3' otherlv_33= '=' ( (lv_itl3_34_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:11198:5: {...}? => ( ({...}? => (otherlv_32= 'ITL3' otherlv_33= '=' ( (lv_itl3_34_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 10) ) {
            	        throw new FailedPredicateException(input, "ruleOptions", "getUnorderedGroupHelper().canSelect(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 10)");
            	    }
            	    // InternalXSpice.g:11198:105: ( ({...}? => (otherlv_32= 'ITL3' otherlv_33= '=' ( (lv_itl3_34_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:11199:6: ({...}? => (otherlv_32= 'ITL3' otherlv_33= '=' ( (lv_itl3_34_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 10);
            	    					
            	    // InternalXSpice.g:11202:9: ({...}? => (otherlv_32= 'ITL3' otherlv_33= '=' ( (lv_itl3_34_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:11202:10: {...}? => (otherlv_32= 'ITL3' otherlv_33= '=' ( (lv_itl3_34_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleOptions", "true");
            	    }
            	    // InternalXSpice.g:11202:19: (otherlv_32= 'ITL3' otherlv_33= '=' ( (lv_itl3_34_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:11202:20: otherlv_32= 'ITL3' otherlv_33= '=' ( (lv_itl3_34_0= RULE_NUMBER ) )
            	    {
            	    otherlv_32=(Token)match(input,203,FOLLOW_11); 

            	    									newLeafNode(otherlv_32, grammarAccess.getOptionsAccess().getITL3Keyword_1_10_0());
            	    								
            	    otherlv_33=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_33, grammarAccess.getOptionsAccess().getEqualsSignKeyword_1_10_1());
            	    								
            	    // InternalXSpice.g:11210:9: ( (lv_itl3_34_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:11211:10: (lv_itl3_34_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:11211:10: (lv_itl3_34_0= RULE_NUMBER )
            	    // InternalXSpice.g:11212:11: lv_itl3_34_0= RULE_NUMBER
            	    {
            	    lv_itl3_34_0=(Token)match(input,RULE_NUMBER,FOLLOW_61); 

            	    											newLeafNode(lv_itl3_34_0, grammarAccess.getOptionsAccess().getItl3NUMBERTerminalRuleCall_1_10_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getOptionsRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"itl3",
            	    												lv_itl3_34_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOptionsAccess().getUnorderedGroup_1());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 12 :
            	    // InternalXSpice.g:11234:4: ({...}? => ( ({...}? => (otherlv_35= 'ITL4' otherlv_36= '=' ( (lv_itl4_37_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:11234:4: ({...}? => ( ({...}? => (otherlv_35= 'ITL4' otherlv_36= '=' ( (lv_itl4_37_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:11235:5: {...}? => ( ({...}? => (otherlv_35= 'ITL4' otherlv_36= '=' ( (lv_itl4_37_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 11) ) {
            	        throw new FailedPredicateException(input, "ruleOptions", "getUnorderedGroupHelper().canSelect(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 11)");
            	    }
            	    // InternalXSpice.g:11235:105: ( ({...}? => (otherlv_35= 'ITL4' otherlv_36= '=' ( (lv_itl4_37_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:11236:6: ({...}? => (otherlv_35= 'ITL4' otherlv_36= '=' ( (lv_itl4_37_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 11);
            	    					
            	    // InternalXSpice.g:11239:9: ({...}? => (otherlv_35= 'ITL4' otherlv_36= '=' ( (lv_itl4_37_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:11239:10: {...}? => (otherlv_35= 'ITL4' otherlv_36= '=' ( (lv_itl4_37_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleOptions", "true");
            	    }
            	    // InternalXSpice.g:11239:19: (otherlv_35= 'ITL4' otherlv_36= '=' ( (lv_itl4_37_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:11239:20: otherlv_35= 'ITL4' otherlv_36= '=' ( (lv_itl4_37_0= RULE_NUMBER ) )
            	    {
            	    otherlv_35=(Token)match(input,204,FOLLOW_11); 

            	    									newLeafNode(otherlv_35, grammarAccess.getOptionsAccess().getITL4Keyword_1_11_0());
            	    								
            	    otherlv_36=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_36, grammarAccess.getOptionsAccess().getEqualsSignKeyword_1_11_1());
            	    								
            	    // InternalXSpice.g:11247:9: ( (lv_itl4_37_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:11248:10: (lv_itl4_37_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:11248:10: (lv_itl4_37_0= RULE_NUMBER )
            	    // InternalXSpice.g:11249:11: lv_itl4_37_0= RULE_NUMBER
            	    {
            	    lv_itl4_37_0=(Token)match(input,RULE_NUMBER,FOLLOW_61); 

            	    											newLeafNode(lv_itl4_37_0, grammarAccess.getOptionsAccess().getItl4NUMBERTerminalRuleCall_1_11_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getOptionsRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"itl4",
            	    												lv_itl4_37_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOptionsAccess().getUnorderedGroup_1());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 13 :
            	    // InternalXSpice.g:11271:4: ({...}? => ( ({...}? => (otherlv_38= 'ITL5' otherlv_39= '=' ( (lv_itl5_40_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:11271:4: ({...}? => ( ({...}? => (otherlv_38= 'ITL5' otherlv_39= '=' ( (lv_itl5_40_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:11272:5: {...}? => ( ({...}? => (otherlv_38= 'ITL5' otherlv_39= '=' ( (lv_itl5_40_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 12) ) {
            	        throw new FailedPredicateException(input, "ruleOptions", "getUnorderedGroupHelper().canSelect(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 12)");
            	    }
            	    // InternalXSpice.g:11272:105: ( ({...}? => (otherlv_38= 'ITL5' otherlv_39= '=' ( (lv_itl5_40_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:11273:6: ({...}? => (otherlv_38= 'ITL5' otherlv_39= '=' ( (lv_itl5_40_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 12);
            	    					
            	    // InternalXSpice.g:11276:9: ({...}? => (otherlv_38= 'ITL5' otherlv_39= '=' ( (lv_itl5_40_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:11276:10: {...}? => (otherlv_38= 'ITL5' otherlv_39= '=' ( (lv_itl5_40_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleOptions", "true");
            	    }
            	    // InternalXSpice.g:11276:19: (otherlv_38= 'ITL5' otherlv_39= '=' ( (lv_itl5_40_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:11276:20: otherlv_38= 'ITL5' otherlv_39= '=' ( (lv_itl5_40_0= RULE_NUMBER ) )
            	    {
            	    otherlv_38=(Token)match(input,205,FOLLOW_11); 

            	    									newLeafNode(otherlv_38, grammarAccess.getOptionsAccess().getITL5Keyword_1_12_0());
            	    								
            	    otherlv_39=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_39, grammarAccess.getOptionsAccess().getEqualsSignKeyword_1_12_1());
            	    								
            	    // InternalXSpice.g:11284:9: ( (lv_itl5_40_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:11285:10: (lv_itl5_40_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:11285:10: (lv_itl5_40_0= RULE_NUMBER )
            	    // InternalXSpice.g:11286:11: lv_itl5_40_0= RULE_NUMBER
            	    {
            	    lv_itl5_40_0=(Token)match(input,RULE_NUMBER,FOLLOW_61); 

            	    											newLeafNode(lv_itl5_40_0, grammarAccess.getOptionsAccess().getItl5NUMBERTerminalRuleCall_1_12_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getOptionsRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"itl5",
            	    												lv_itl5_40_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOptionsAccess().getUnorderedGroup_1());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 14 :
            	    // InternalXSpice.g:11308:4: ({...}? => ( ({...}? => (otherlv_41= 'KEEPOPINFO' otherlv_42= '=' ( (lv_keepopinfo_43_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:11308:4: ({...}? => ( ({...}? => (otherlv_41= 'KEEPOPINFO' otherlv_42= '=' ( (lv_keepopinfo_43_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:11309:5: {...}? => ( ({...}? => (otherlv_41= 'KEEPOPINFO' otherlv_42= '=' ( (lv_keepopinfo_43_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 13) ) {
            	        throw new FailedPredicateException(input, "ruleOptions", "getUnorderedGroupHelper().canSelect(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 13)");
            	    }
            	    // InternalXSpice.g:11309:105: ( ({...}? => (otherlv_41= 'KEEPOPINFO' otherlv_42= '=' ( (lv_keepopinfo_43_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:11310:6: ({...}? => (otherlv_41= 'KEEPOPINFO' otherlv_42= '=' ( (lv_keepopinfo_43_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 13);
            	    					
            	    // InternalXSpice.g:11313:9: ({...}? => (otherlv_41= 'KEEPOPINFO' otherlv_42= '=' ( (lv_keepopinfo_43_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:11313:10: {...}? => (otherlv_41= 'KEEPOPINFO' otherlv_42= '=' ( (lv_keepopinfo_43_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleOptions", "true");
            	    }
            	    // InternalXSpice.g:11313:19: (otherlv_41= 'KEEPOPINFO' otherlv_42= '=' ( (lv_keepopinfo_43_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:11313:20: otherlv_41= 'KEEPOPINFO' otherlv_42= '=' ( (lv_keepopinfo_43_0= RULE_NUMBER ) )
            	    {
            	    otherlv_41=(Token)match(input,206,FOLLOW_11); 

            	    									newLeafNode(otherlv_41, grammarAccess.getOptionsAccess().getKEEPOPINFOKeyword_1_13_0());
            	    								
            	    otherlv_42=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_42, grammarAccess.getOptionsAccess().getEqualsSignKeyword_1_13_1());
            	    								
            	    // InternalXSpice.g:11321:9: ( (lv_keepopinfo_43_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:11322:10: (lv_keepopinfo_43_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:11322:10: (lv_keepopinfo_43_0= RULE_NUMBER )
            	    // InternalXSpice.g:11323:11: lv_keepopinfo_43_0= RULE_NUMBER
            	    {
            	    lv_keepopinfo_43_0=(Token)match(input,RULE_NUMBER,FOLLOW_61); 

            	    											newLeafNode(lv_keepopinfo_43_0, grammarAccess.getOptionsAccess().getKeepopinfoNUMBERTerminalRuleCall_1_13_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getOptionsRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"keepopinfo",
            	    												lv_keepopinfo_43_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOptionsAccess().getUnorderedGroup_1());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 15 :
            	    // InternalXSpice.g:11345:4: ({...}? => ( ({...}? => (otherlv_44= 'METHOD' otherlv_45= '=' ( (lv_method_46_0= ruleIntegrationMethod ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:11345:4: ({...}? => ( ({...}? => (otherlv_44= 'METHOD' otherlv_45= '=' ( (lv_method_46_0= ruleIntegrationMethod ) ) ) ) ) )
            	    // InternalXSpice.g:11346:5: {...}? => ( ({...}? => (otherlv_44= 'METHOD' otherlv_45= '=' ( (lv_method_46_0= ruleIntegrationMethod ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 14) ) {
            	        throw new FailedPredicateException(input, "ruleOptions", "getUnorderedGroupHelper().canSelect(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 14)");
            	    }
            	    // InternalXSpice.g:11346:105: ( ({...}? => (otherlv_44= 'METHOD' otherlv_45= '=' ( (lv_method_46_0= ruleIntegrationMethod ) ) ) ) )
            	    // InternalXSpice.g:11347:6: ({...}? => (otherlv_44= 'METHOD' otherlv_45= '=' ( (lv_method_46_0= ruleIntegrationMethod ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 14);
            	    					
            	    // InternalXSpice.g:11350:9: ({...}? => (otherlv_44= 'METHOD' otherlv_45= '=' ( (lv_method_46_0= ruleIntegrationMethod ) ) ) )
            	    // InternalXSpice.g:11350:10: {...}? => (otherlv_44= 'METHOD' otherlv_45= '=' ( (lv_method_46_0= ruleIntegrationMethod ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleOptions", "true");
            	    }
            	    // InternalXSpice.g:11350:19: (otherlv_44= 'METHOD' otherlv_45= '=' ( (lv_method_46_0= ruleIntegrationMethod ) ) )
            	    // InternalXSpice.g:11350:20: otherlv_44= 'METHOD' otherlv_45= '=' ( (lv_method_46_0= ruleIntegrationMethod ) )
            	    {
            	    otherlv_44=(Token)match(input,207,FOLLOW_11); 

            	    									newLeafNode(otherlv_44, grammarAccess.getOptionsAccess().getMETHODKeyword_1_14_0());
            	    								
            	    otherlv_45=(Token)match(input,40,FOLLOW_62); 

            	    									newLeafNode(otherlv_45, grammarAccess.getOptionsAccess().getEqualsSignKeyword_1_14_1());
            	    								
            	    // InternalXSpice.g:11358:9: ( (lv_method_46_0= ruleIntegrationMethod ) )
            	    // InternalXSpice.g:11359:10: (lv_method_46_0= ruleIntegrationMethod )
            	    {
            	    // InternalXSpice.g:11359:10: (lv_method_46_0= ruleIntegrationMethod )
            	    // InternalXSpice.g:11360:11: lv_method_46_0= ruleIntegrationMethod
            	    {

            	    											newCompositeNode(grammarAccess.getOptionsAccess().getMethodIntegrationMethodEnumRuleCall_1_14_2_0());
            	    										
            	    pushFollow(FOLLOW_61);
            	    lv_method_46_0=ruleIntegrationMethod();

            	    state._fsp--;


            	    											if (current==null) {
            	    												current = createModelElementForParent(grammarAccess.getOptionsRule());
            	    											}
            	    											set(
            	    												current,
            	    												"method",
            	    												lv_method_46_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.IntegrationMethod");
            	    											afterParserOrEnumRuleCall();
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOptionsAccess().getUnorderedGroup_1());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 16 :
            	    // InternalXSpice.g:11383:4: ({...}? => ( ({...}? => (otherlv_47= 'PIVREL' otherlv_48= '=' ( (lv_pivrel_49_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:11383:4: ({...}? => ( ({...}? => (otherlv_47= 'PIVREL' otherlv_48= '=' ( (lv_pivrel_49_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:11384:5: {...}? => ( ({...}? => (otherlv_47= 'PIVREL' otherlv_48= '=' ( (lv_pivrel_49_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 15) ) {
            	        throw new FailedPredicateException(input, "ruleOptions", "getUnorderedGroupHelper().canSelect(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 15)");
            	    }
            	    // InternalXSpice.g:11384:105: ( ({...}? => (otherlv_47= 'PIVREL' otherlv_48= '=' ( (lv_pivrel_49_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:11385:6: ({...}? => (otherlv_47= 'PIVREL' otherlv_48= '=' ( (lv_pivrel_49_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 15);
            	    					
            	    // InternalXSpice.g:11388:9: ({...}? => (otherlv_47= 'PIVREL' otherlv_48= '=' ( (lv_pivrel_49_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:11388:10: {...}? => (otherlv_47= 'PIVREL' otherlv_48= '=' ( (lv_pivrel_49_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleOptions", "true");
            	    }
            	    // InternalXSpice.g:11388:19: (otherlv_47= 'PIVREL' otherlv_48= '=' ( (lv_pivrel_49_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:11388:20: otherlv_47= 'PIVREL' otherlv_48= '=' ( (lv_pivrel_49_0= RULE_NUMBER ) )
            	    {
            	    otherlv_47=(Token)match(input,208,FOLLOW_11); 

            	    									newLeafNode(otherlv_47, grammarAccess.getOptionsAccess().getPIVRELKeyword_1_15_0());
            	    								
            	    otherlv_48=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_48, grammarAccess.getOptionsAccess().getEqualsSignKeyword_1_15_1());
            	    								
            	    // InternalXSpice.g:11396:9: ( (lv_pivrel_49_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:11397:10: (lv_pivrel_49_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:11397:10: (lv_pivrel_49_0= RULE_NUMBER )
            	    // InternalXSpice.g:11398:11: lv_pivrel_49_0= RULE_NUMBER
            	    {
            	    lv_pivrel_49_0=(Token)match(input,RULE_NUMBER,FOLLOW_61); 

            	    											newLeafNode(lv_pivrel_49_0, grammarAccess.getOptionsAccess().getPivrelNUMBERTerminalRuleCall_1_15_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getOptionsRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"pivrel",
            	    												lv_pivrel_49_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOptionsAccess().getUnorderedGroup_1());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 17 :
            	    // InternalXSpice.g:11420:4: ({...}? => ( ({...}? => (otherlv_50= 'RELTOL' otherlv_51= '=' ( (lv_reltol_52_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:11420:4: ({...}? => ( ({...}? => (otherlv_50= 'RELTOL' otherlv_51= '=' ( (lv_reltol_52_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:11421:5: {...}? => ( ({...}? => (otherlv_50= 'RELTOL' otherlv_51= '=' ( (lv_reltol_52_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 16) ) {
            	        throw new FailedPredicateException(input, "ruleOptions", "getUnorderedGroupHelper().canSelect(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 16)");
            	    }
            	    // InternalXSpice.g:11421:105: ( ({...}? => (otherlv_50= 'RELTOL' otherlv_51= '=' ( (lv_reltol_52_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:11422:6: ({...}? => (otherlv_50= 'RELTOL' otherlv_51= '=' ( (lv_reltol_52_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 16);
            	    					
            	    // InternalXSpice.g:11425:9: ({...}? => (otherlv_50= 'RELTOL' otherlv_51= '=' ( (lv_reltol_52_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:11425:10: {...}? => (otherlv_50= 'RELTOL' otherlv_51= '=' ( (lv_reltol_52_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleOptions", "true");
            	    }
            	    // InternalXSpice.g:11425:19: (otherlv_50= 'RELTOL' otherlv_51= '=' ( (lv_reltol_52_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:11425:20: otherlv_50= 'RELTOL' otherlv_51= '=' ( (lv_reltol_52_0= RULE_NUMBER ) )
            	    {
            	    otherlv_50=(Token)match(input,209,FOLLOW_11); 

            	    									newLeafNode(otherlv_50, grammarAccess.getOptionsAccess().getRELTOLKeyword_1_16_0());
            	    								
            	    otherlv_51=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_51, grammarAccess.getOptionsAccess().getEqualsSignKeyword_1_16_1());
            	    								
            	    // InternalXSpice.g:11433:9: ( (lv_reltol_52_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:11434:10: (lv_reltol_52_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:11434:10: (lv_reltol_52_0= RULE_NUMBER )
            	    // InternalXSpice.g:11435:11: lv_reltol_52_0= RULE_NUMBER
            	    {
            	    lv_reltol_52_0=(Token)match(input,RULE_NUMBER,FOLLOW_61); 

            	    											newLeafNode(lv_reltol_52_0, grammarAccess.getOptionsAccess().getReltolNUMBERTerminalRuleCall_1_16_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getOptionsRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"reltol",
            	    												lv_reltol_52_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOptionsAccess().getUnorderedGroup_1());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 18 :
            	    // InternalXSpice.g:11457:4: ({...}? => ( ({...}? => (otherlv_53= 'TEMP' otherlv_54= '=' ( (lv_temp_55_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:11457:4: ({...}? => ( ({...}? => (otherlv_53= 'TEMP' otherlv_54= '=' ( (lv_temp_55_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:11458:5: {...}? => ( ({...}? => (otherlv_53= 'TEMP' otherlv_54= '=' ( (lv_temp_55_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 17) ) {
            	        throw new FailedPredicateException(input, "ruleOptions", "getUnorderedGroupHelper().canSelect(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 17)");
            	    }
            	    // InternalXSpice.g:11458:105: ( ({...}? => (otherlv_53= 'TEMP' otherlv_54= '=' ( (lv_temp_55_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:11459:6: ({...}? => (otherlv_53= 'TEMP' otherlv_54= '=' ( (lv_temp_55_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 17);
            	    					
            	    // InternalXSpice.g:11462:9: ({...}? => (otherlv_53= 'TEMP' otherlv_54= '=' ( (lv_temp_55_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:11462:10: {...}? => (otherlv_53= 'TEMP' otherlv_54= '=' ( (lv_temp_55_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleOptions", "true");
            	    }
            	    // InternalXSpice.g:11462:19: (otherlv_53= 'TEMP' otherlv_54= '=' ( (lv_temp_55_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:11462:20: otherlv_53= 'TEMP' otherlv_54= '=' ( (lv_temp_55_0= RULE_NUMBER ) )
            	    {
            	    otherlv_53=(Token)match(input,42,FOLLOW_11); 

            	    									newLeafNode(otherlv_53, grammarAccess.getOptionsAccess().getTEMPKeyword_1_17_0());
            	    								
            	    otherlv_54=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_54, grammarAccess.getOptionsAccess().getEqualsSignKeyword_1_17_1());
            	    								
            	    // InternalXSpice.g:11470:9: ( (lv_temp_55_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:11471:10: (lv_temp_55_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:11471:10: (lv_temp_55_0= RULE_NUMBER )
            	    // InternalXSpice.g:11472:11: lv_temp_55_0= RULE_NUMBER
            	    {
            	    lv_temp_55_0=(Token)match(input,RULE_NUMBER,FOLLOW_61); 

            	    											newLeafNode(lv_temp_55_0, grammarAccess.getOptionsAccess().getTempNUMBERTerminalRuleCall_1_17_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getOptionsRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"temp",
            	    												lv_temp_55_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOptionsAccess().getUnorderedGroup_1());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 19 :
            	    // InternalXSpice.g:11494:4: ({...}? => ( ({...}? => (otherlv_56= 'TNOM' otherlv_57= '=' ( (lv_nominalTemperature_58_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:11494:4: ({...}? => ( ({...}? => (otherlv_56= 'TNOM' otherlv_57= '=' ( (lv_nominalTemperature_58_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:11495:5: {...}? => ( ({...}? => (otherlv_56= 'TNOM' otherlv_57= '=' ( (lv_nominalTemperature_58_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 18) ) {
            	        throw new FailedPredicateException(input, "ruleOptions", "getUnorderedGroupHelper().canSelect(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 18)");
            	    }
            	    // InternalXSpice.g:11495:105: ( ({...}? => (otherlv_56= 'TNOM' otherlv_57= '=' ( (lv_nominalTemperature_58_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:11496:6: ({...}? => (otherlv_56= 'TNOM' otherlv_57= '=' ( (lv_nominalTemperature_58_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 18);
            	    					
            	    // InternalXSpice.g:11499:9: ({...}? => (otherlv_56= 'TNOM' otherlv_57= '=' ( (lv_nominalTemperature_58_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:11499:10: {...}? => (otherlv_56= 'TNOM' otherlv_57= '=' ( (lv_nominalTemperature_58_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleOptions", "true");
            	    }
            	    // InternalXSpice.g:11499:19: (otherlv_56= 'TNOM' otherlv_57= '=' ( (lv_nominalTemperature_58_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:11499:20: otherlv_56= 'TNOM' otherlv_57= '=' ( (lv_nominalTemperature_58_0= RULE_NUMBER ) )
            	    {
            	    otherlv_56=(Token)match(input,51,FOLLOW_11); 

            	    									newLeafNode(otherlv_56, grammarAccess.getOptionsAccess().getTNOMKeyword_1_18_0());
            	    								
            	    otherlv_57=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_57, grammarAccess.getOptionsAccess().getEqualsSignKeyword_1_18_1());
            	    								
            	    // InternalXSpice.g:11507:9: ( (lv_nominalTemperature_58_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:11508:10: (lv_nominalTemperature_58_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:11508:10: (lv_nominalTemperature_58_0= RULE_NUMBER )
            	    // InternalXSpice.g:11509:11: lv_nominalTemperature_58_0= RULE_NUMBER
            	    {
            	    lv_nominalTemperature_58_0=(Token)match(input,RULE_NUMBER,FOLLOW_61); 

            	    											newLeafNode(lv_nominalTemperature_58_0, grammarAccess.getOptionsAccess().getNominalTemperatureNUMBERTerminalRuleCall_1_18_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getOptionsRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"nominalTemperature",
            	    												lv_nominalTemperature_58_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOptionsAccess().getUnorderedGroup_1());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 20 :
            	    // InternalXSpice.g:11531:4: ({...}? => ( ({...}? => (otherlv_59= 'TRTOL' otherlv_60= '=' ( (lv_trtol_61_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:11531:4: ({...}? => ( ({...}? => (otherlv_59= 'TRTOL' otherlv_60= '=' ( (lv_trtol_61_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:11532:5: {...}? => ( ({...}? => (otherlv_59= 'TRTOL' otherlv_60= '=' ( (lv_trtol_61_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 19) ) {
            	        throw new FailedPredicateException(input, "ruleOptions", "getUnorderedGroupHelper().canSelect(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 19)");
            	    }
            	    // InternalXSpice.g:11532:105: ( ({...}? => (otherlv_59= 'TRTOL' otherlv_60= '=' ( (lv_trtol_61_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:11533:6: ({...}? => (otherlv_59= 'TRTOL' otherlv_60= '=' ( (lv_trtol_61_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 19);
            	    					
            	    // InternalXSpice.g:11536:9: ({...}? => (otherlv_59= 'TRTOL' otherlv_60= '=' ( (lv_trtol_61_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:11536:10: {...}? => (otherlv_59= 'TRTOL' otherlv_60= '=' ( (lv_trtol_61_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleOptions", "true");
            	    }
            	    // InternalXSpice.g:11536:19: (otherlv_59= 'TRTOL' otherlv_60= '=' ( (lv_trtol_61_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:11536:20: otherlv_59= 'TRTOL' otherlv_60= '=' ( (lv_trtol_61_0= RULE_NUMBER ) )
            	    {
            	    otherlv_59=(Token)match(input,210,FOLLOW_11); 

            	    									newLeafNode(otherlv_59, grammarAccess.getOptionsAccess().getTRTOLKeyword_1_19_0());
            	    								
            	    otherlv_60=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_60, grammarAccess.getOptionsAccess().getEqualsSignKeyword_1_19_1());
            	    								
            	    // InternalXSpice.g:11544:9: ( (lv_trtol_61_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:11545:10: (lv_trtol_61_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:11545:10: (lv_trtol_61_0= RULE_NUMBER )
            	    // InternalXSpice.g:11546:11: lv_trtol_61_0= RULE_NUMBER
            	    {
            	    lv_trtol_61_0=(Token)match(input,RULE_NUMBER,FOLLOW_61); 

            	    											newLeafNode(lv_trtol_61_0, grammarAccess.getOptionsAccess().getTrtolNUMBERTerminalRuleCall_1_19_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getOptionsRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"trtol",
            	    												lv_trtol_61_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOptionsAccess().getUnorderedGroup_1());
            	    					

            	    }


            	    }


            	    }
            	    break;
            	case 21 :
            	    // InternalXSpice.g:11568:4: ({...}? => ( ({...}? => (otherlv_62= 'VNTOL' otherlv_63= '=' ( (lv_vntol_64_0= RULE_NUMBER ) ) ) ) ) )
            	    {
            	    // InternalXSpice.g:11568:4: ({...}? => ( ({...}? => (otherlv_62= 'VNTOL' otherlv_63= '=' ( (lv_vntol_64_0= RULE_NUMBER ) ) ) ) ) )
            	    // InternalXSpice.g:11569:5: {...}? => ( ({...}? => (otherlv_62= 'VNTOL' otherlv_63= '=' ( (lv_vntol_64_0= RULE_NUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 20) ) {
            	        throw new FailedPredicateException(input, "ruleOptions", "getUnorderedGroupHelper().canSelect(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 20)");
            	    }
            	    // InternalXSpice.g:11569:105: ( ({...}? => (otherlv_62= 'VNTOL' otherlv_63= '=' ( (lv_vntol_64_0= RULE_NUMBER ) ) ) ) )
            	    // InternalXSpice.g:11570:6: ({...}? => (otherlv_62= 'VNTOL' otherlv_63= '=' ( (lv_vntol_64_0= RULE_NUMBER ) ) ) )
            	    {

            	    						getUnorderedGroupHelper().select(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 20);
            	    					
            	    // InternalXSpice.g:11573:9: ({...}? => (otherlv_62= 'VNTOL' otherlv_63= '=' ( (lv_vntol_64_0= RULE_NUMBER ) ) ) )
            	    // InternalXSpice.g:11573:10: {...}? => (otherlv_62= 'VNTOL' otherlv_63= '=' ( (lv_vntol_64_0= RULE_NUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleOptions", "true");
            	    }
            	    // InternalXSpice.g:11573:19: (otherlv_62= 'VNTOL' otherlv_63= '=' ( (lv_vntol_64_0= RULE_NUMBER ) ) )
            	    // InternalXSpice.g:11573:20: otherlv_62= 'VNTOL' otherlv_63= '=' ( (lv_vntol_64_0= RULE_NUMBER ) )
            	    {
            	    otherlv_62=(Token)match(input,211,FOLLOW_11); 

            	    									newLeafNode(otherlv_62, grammarAccess.getOptionsAccess().getVNTOLKeyword_1_20_0());
            	    								
            	    otherlv_63=(Token)match(input,40,FOLLOW_12); 

            	    									newLeafNode(otherlv_63, grammarAccess.getOptionsAccess().getEqualsSignKeyword_1_20_1());
            	    								
            	    // InternalXSpice.g:11581:9: ( (lv_vntol_64_0= RULE_NUMBER ) )
            	    // InternalXSpice.g:11582:10: (lv_vntol_64_0= RULE_NUMBER )
            	    {
            	    // InternalXSpice.g:11582:10: (lv_vntol_64_0= RULE_NUMBER )
            	    // InternalXSpice.g:11583:11: lv_vntol_64_0= RULE_NUMBER
            	    {
            	    lv_vntol_64_0=(Token)match(input,RULE_NUMBER,FOLLOW_61); 

            	    											newLeafNode(lv_vntol_64_0, grammarAccess.getOptionsAccess().getVntolNUMBERTerminalRuleCall_1_20_2_0());
            	    										

            	    											if (current==null) {
            	    												current = createModelElement(grammarAccess.getOptionsRule());
            	    											}
            	    											setWithLastConsumed(
            	    												current,
            	    												"vntol",
            	    												lv_vntol_64_0,
            	    												"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            	    										

            	    }


            	    }


            	    }


            	    }

            	     
            	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOptionsAccess().getUnorderedGroup_1());
            	    					

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt71 >= 1 ) break loop71;
                        EarlyExitException eee =
                            new EarlyExitException(71, input);
                        throw eee;
                }
                cnt71++;
            } while (true);

            if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getOptionsAccess().getUnorderedGroup_1()) ) {
                throw new FailedPredicateException(input, "ruleOptions", "getUnorderedGroupHelper().canLeave(grammarAccess.getOptionsAccess().getUnorderedGroup_1())");
            }

            }


            }

             
            				  getUnorderedGroupHelper().leave(grammarAccess.getOptionsAccess().getUnorderedGroup_1());
            				

            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOptions"


    // $ANTLR start "entryRuleNodeSet"
    // InternalXSpice.g:11617:1: entryRuleNodeSet returns [EObject current=null] : iv_ruleNodeSet= ruleNodeSet EOF ;
    public final EObject entryRuleNodeSet() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNodeSet = null;


        try {
            // InternalXSpice.g:11617:48: (iv_ruleNodeSet= ruleNodeSet EOF )
            // InternalXSpice.g:11618:2: iv_ruleNodeSet= ruleNodeSet EOF
            {
             newCompositeNode(grammarAccess.getNodeSetRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleNodeSet=ruleNodeSet();

            state._fsp--;

             current =iv_ruleNodeSet; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNodeSet"


    // $ANTLR start "ruleNodeSet"
    // InternalXSpice.g:11624:1: ruleNodeSet returns [EObject current=null] : (otherlv_0= '.NODESET' ( (lv_entries_1_0= ruleNodeSetEntry ) ) ( (lv_entries_2_0= ruleNodeSetEntry ) )* ) ;
    public final EObject ruleNodeSet() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_entries_1_0 = null;

        EObject lv_entries_2_0 = null;



        	enterRule();

        try {
            // InternalXSpice.g:11630:2: ( (otherlv_0= '.NODESET' ( (lv_entries_1_0= ruleNodeSetEntry ) ) ( (lv_entries_2_0= ruleNodeSetEntry ) )* ) )
            // InternalXSpice.g:11631:2: (otherlv_0= '.NODESET' ( (lv_entries_1_0= ruleNodeSetEntry ) ) ( (lv_entries_2_0= ruleNodeSetEntry ) )* )
            {
            // InternalXSpice.g:11631:2: (otherlv_0= '.NODESET' ( (lv_entries_1_0= ruleNodeSetEntry ) ) ( (lv_entries_2_0= ruleNodeSetEntry ) )* )
            // InternalXSpice.g:11632:3: otherlv_0= '.NODESET' ( (lv_entries_1_0= ruleNodeSetEntry ) ) ( (lv_entries_2_0= ruleNodeSetEntry ) )*
            {
            otherlv_0=(Token)match(input,212,FOLLOW_63); 

            			newLeafNode(otherlv_0, grammarAccess.getNodeSetAccess().getNODESETKeyword_0());
            		
            // InternalXSpice.g:11636:3: ( (lv_entries_1_0= ruleNodeSetEntry ) )
            // InternalXSpice.g:11637:4: (lv_entries_1_0= ruleNodeSetEntry )
            {
            // InternalXSpice.g:11637:4: (lv_entries_1_0= ruleNodeSetEntry )
            // InternalXSpice.g:11638:5: lv_entries_1_0= ruleNodeSetEntry
            {

            					newCompositeNode(grammarAccess.getNodeSetAccess().getEntriesNodeSetEntryParserRuleCall_1_0());
            				
            pushFollow(FOLLOW_64);
            lv_entries_1_0=ruleNodeSetEntry();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getNodeSetRule());
            					}
            					add(
            						current,
            						"entries",
            						lv_entries_1_0,
            						"com.xtext.ravornyo.xspice.XSpice.NodeSetEntry");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            // InternalXSpice.g:11655:3: ( (lv_entries_2_0= ruleNodeSetEntry ) )*
            loop72:
            do {
                int alt72=2;
                int LA72_0 = input.LA(1);

                if ( (LA72_0==175) ) {
                    alt72=1;
                }


                switch (alt72) {
            	case 1 :
            	    // InternalXSpice.g:11656:4: (lv_entries_2_0= ruleNodeSetEntry )
            	    {
            	    // InternalXSpice.g:11656:4: (lv_entries_2_0= ruleNodeSetEntry )
            	    // InternalXSpice.g:11657:5: lv_entries_2_0= ruleNodeSetEntry
            	    {

            	    					newCompositeNode(grammarAccess.getNodeSetAccess().getEntriesNodeSetEntryParserRuleCall_2_0());
            	    				
            	    pushFollow(FOLLOW_64);
            	    lv_entries_2_0=ruleNodeSetEntry();

            	    state._fsp--;


            	    					if (current==null) {
            	    						current = createModelElementForParent(grammarAccess.getNodeSetRule());
            	    					}
            	    					add(
            	    						current,
            	    						"entries",
            	    						lv_entries_2_0,
            	    						"com.xtext.ravornyo.xspice.XSpice.NodeSetEntry");
            	    					afterParserOrEnumRuleCall();
            	    				

            	    }


            	    }
            	    break;

            	default :
            	    break loop72;
                }
            } while (true);


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNodeSet"


    // $ANTLR start "entryRuleInitialCondition"
    // InternalXSpice.g:11678:1: entryRuleInitialCondition returns [EObject current=null] : iv_ruleInitialCondition= ruleInitialCondition EOF ;
    public final EObject entryRuleInitialCondition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInitialCondition = null;


        try {
            // InternalXSpice.g:11678:57: (iv_ruleInitialCondition= ruleInitialCondition EOF )
            // InternalXSpice.g:11679:2: iv_ruleInitialCondition= ruleInitialCondition EOF
            {
             newCompositeNode(grammarAccess.getInitialConditionRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleInitialCondition=ruleInitialCondition();

            state._fsp--;

             current =iv_ruleInitialCondition; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInitialCondition"


    // $ANTLR start "ruleInitialCondition"
    // InternalXSpice.g:11685:1: ruleInitialCondition returns [EObject current=null] : (otherlv_0= '.IC' ( (lv_entries_1_0= ruleNodeSetEntry ) ) ( (lv_entries_2_0= ruleNodeSetEntry ) )* ) ;
    public final EObject ruleInitialCondition() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_entries_1_0 = null;

        EObject lv_entries_2_0 = null;



        	enterRule();

        try {
            // InternalXSpice.g:11691:2: ( (otherlv_0= '.IC' ( (lv_entries_1_0= ruleNodeSetEntry ) ) ( (lv_entries_2_0= ruleNodeSetEntry ) )* ) )
            // InternalXSpice.g:11692:2: (otherlv_0= '.IC' ( (lv_entries_1_0= ruleNodeSetEntry ) ) ( (lv_entries_2_0= ruleNodeSetEntry ) )* )
            {
            // InternalXSpice.g:11692:2: (otherlv_0= '.IC' ( (lv_entries_1_0= ruleNodeSetEntry ) ) ( (lv_entries_2_0= ruleNodeSetEntry ) )* )
            // InternalXSpice.g:11693:3: otherlv_0= '.IC' ( (lv_entries_1_0= ruleNodeSetEntry ) ) ( (lv_entries_2_0= ruleNodeSetEntry ) )*
            {
            otherlv_0=(Token)match(input,213,FOLLOW_63); 

            			newLeafNode(otherlv_0, grammarAccess.getInitialConditionAccess().getICKeyword_0());
            		
            // InternalXSpice.g:11697:3: ( (lv_entries_1_0= ruleNodeSetEntry ) )
            // InternalXSpice.g:11698:4: (lv_entries_1_0= ruleNodeSetEntry )
            {
            // InternalXSpice.g:11698:4: (lv_entries_1_0= ruleNodeSetEntry )
            // InternalXSpice.g:11699:5: lv_entries_1_0= ruleNodeSetEntry
            {

            					newCompositeNode(grammarAccess.getInitialConditionAccess().getEntriesNodeSetEntryParserRuleCall_1_0());
            				
            pushFollow(FOLLOW_64);
            lv_entries_1_0=ruleNodeSetEntry();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getInitialConditionRule());
            					}
            					add(
            						current,
            						"entries",
            						lv_entries_1_0,
            						"com.xtext.ravornyo.xspice.XSpice.NodeSetEntry");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            // InternalXSpice.g:11716:3: ( (lv_entries_2_0= ruleNodeSetEntry ) )*
            loop73:
            do {
                int alt73=2;
                int LA73_0 = input.LA(1);

                if ( (LA73_0==175) ) {
                    alt73=1;
                }


                switch (alt73) {
            	case 1 :
            	    // InternalXSpice.g:11717:4: (lv_entries_2_0= ruleNodeSetEntry )
            	    {
            	    // InternalXSpice.g:11717:4: (lv_entries_2_0= ruleNodeSetEntry )
            	    // InternalXSpice.g:11718:5: lv_entries_2_0= ruleNodeSetEntry
            	    {

            	    					newCompositeNode(grammarAccess.getInitialConditionAccess().getEntriesNodeSetEntryParserRuleCall_2_0());
            	    				
            	    pushFollow(FOLLOW_64);
            	    lv_entries_2_0=ruleNodeSetEntry();

            	    state._fsp--;


            	    					if (current==null) {
            	    						current = createModelElementForParent(grammarAccess.getInitialConditionRule());
            	    					}
            	    					add(
            	    						current,
            	    						"entries",
            	    						lv_entries_2_0,
            	    						"com.xtext.ravornyo.xspice.XSpice.NodeSetEntry");
            	    					afterParserOrEnumRuleCall();
            	    				

            	    }


            	    }
            	    break;

            	default :
            	    break loop73;
                }
            } while (true);


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInitialCondition"


    // $ANTLR start "entryRuleNodeSetEntry"
    // InternalXSpice.g:11739:1: entryRuleNodeSetEntry returns [EObject current=null] : iv_ruleNodeSetEntry= ruleNodeSetEntry EOF ;
    public final EObject entryRuleNodeSetEntry() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNodeSetEntry = null;


        try {
            // InternalXSpice.g:11739:53: (iv_ruleNodeSetEntry= ruleNodeSetEntry EOF )
            // InternalXSpice.g:11740:2: iv_ruleNodeSetEntry= ruleNodeSetEntry EOF
            {
             newCompositeNode(grammarAccess.getNodeSetEntryRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleNodeSetEntry=ruleNodeSetEntry();

            state._fsp--;

             current =iv_ruleNodeSetEntry; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNodeSetEntry"


    // $ANTLR start "ruleNodeSetEntry"
    // InternalXSpice.g:11746:1: ruleNodeSetEntry returns [EObject current=null] : (otherlv_0= 'V' otherlv_1= '(' ( (lv_node_2_0= RULE_NODE ) ) otherlv_3= ')' otherlv_4= '=' ( (lv_value_5_0= RULE_NUMBER ) ) ) ;
    public final EObject ruleNodeSetEntry() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token lv_node_2_0=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token lv_value_5_0=null;


        	enterRule();

        try {
            // InternalXSpice.g:11752:2: ( (otherlv_0= 'V' otherlv_1= '(' ( (lv_node_2_0= RULE_NODE ) ) otherlv_3= ')' otherlv_4= '=' ( (lv_value_5_0= RULE_NUMBER ) ) ) )
            // InternalXSpice.g:11753:2: (otherlv_0= 'V' otherlv_1= '(' ( (lv_node_2_0= RULE_NODE ) ) otherlv_3= ')' otherlv_4= '=' ( (lv_value_5_0= RULE_NUMBER ) ) )
            {
            // InternalXSpice.g:11753:2: (otherlv_0= 'V' otherlv_1= '(' ( (lv_node_2_0= RULE_NODE ) ) otherlv_3= ')' otherlv_4= '=' ( (lv_value_5_0= RULE_NUMBER ) ) )
            // InternalXSpice.g:11754:3: otherlv_0= 'V' otherlv_1= '(' ( (lv_node_2_0= RULE_NODE ) ) otherlv_3= ')' otherlv_4= '=' ( (lv_value_5_0= RULE_NUMBER ) )
            {
            otherlv_0=(Token)match(input,175,FOLLOW_14); 

            			newLeafNode(otherlv_0, grammarAccess.getNodeSetEntryAccess().getVKeyword_0());
            		
            otherlv_1=(Token)match(input,45,FOLLOW_5); 

            			newLeafNode(otherlv_1, grammarAccess.getNodeSetEntryAccess().getLeftParenthesisKeyword_1());
            		
            // InternalXSpice.g:11762:3: ( (lv_node_2_0= RULE_NODE ) )
            // InternalXSpice.g:11763:4: (lv_node_2_0= RULE_NODE )
            {
            // InternalXSpice.g:11763:4: (lv_node_2_0= RULE_NODE )
            // InternalXSpice.g:11764:5: lv_node_2_0= RULE_NODE
            {
            lv_node_2_0=(Token)match(input,RULE_NODE,FOLLOW_58); 

            					newLeafNode(lv_node_2_0, grammarAccess.getNodeSetEntryAccess().getNodeNODETerminalRuleCall_2_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getNodeSetEntryRule());
            					}
            					addWithLastConsumed(
            						current,
            						"node",
            						lv_node_2_0,
            						"com.xtext.ravornyo.xspice.XSpice.NODE");
            				

            }


            }

            otherlv_3=(Token)match(input,52,FOLLOW_11); 

            			newLeafNode(otherlv_3, grammarAccess.getNodeSetEntryAccess().getRightParenthesisKeyword_3());
            		
            otherlv_4=(Token)match(input,40,FOLLOW_12); 

            			newLeafNode(otherlv_4, grammarAccess.getNodeSetEntryAccess().getEqualsSignKeyword_4());
            		
            // InternalXSpice.g:11788:3: ( (lv_value_5_0= RULE_NUMBER ) )
            // InternalXSpice.g:11789:4: (lv_value_5_0= RULE_NUMBER )
            {
            // InternalXSpice.g:11789:4: (lv_value_5_0= RULE_NUMBER )
            // InternalXSpice.g:11790:5: lv_value_5_0= RULE_NUMBER
            {
            lv_value_5_0=(Token)match(input,RULE_NUMBER,FOLLOW_2); 

            					newLeafNode(lv_value_5_0, grammarAccess.getNodeSetEntryAccess().getValueNUMBERTerminalRuleCall_5_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getNodeSetEntryRule());
            					}
            					setWithLastConsumed(
            						current,
            						"value",
            						lv_value_5_0,
            						"com.xtext.ravornyo.xspice.XSpice.NUMBER");
            				

            }


            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNodeSetEntry"


    // $ANTLR start "entryRuleLabel"
    // InternalXSpice.g:11810:1: entryRuleLabel returns [String current=null] : iv_ruleLabel= ruleLabel EOF ;
    public final String entryRuleLabel() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleLabel = null;


        try {
            // InternalXSpice.g:11810:45: (iv_ruleLabel= ruleLabel EOF )
            // InternalXSpice.g:11811:2: iv_ruleLabel= ruleLabel EOF
            {
             newCompositeNode(grammarAccess.getLabelRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleLabel=ruleLabel();

            state._fsp--;

             current =iv_ruleLabel.getText(); 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLabel"


    // $ANTLR start "ruleLabel"
    // InternalXSpice.g:11817:1: ruleLabel returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_NODE_0= RULE_NODE | this_BID_1= RULE_BID | this_CID_2= RULE_CID | this_DID_3= RULE_DID | this_EID_4= RULE_EID | this_FID_5= RULE_FID | this_GID_6= RULE_GID | this_HID_7= RULE_HID | this_IID_8= RULE_IID | this_KID_9= RULE_KID | this_LID_10= RULE_LID | this_MNID_11= RULE_MNID | this_MPID_12= RULE_MPID | this_OID_13= RULE_OID | this_QNID_14= RULE_QNID | this_QPID_15= RULE_QPID | this_RID_16= RULE_RID | this_SID_17= RULE_SID | this_TNID_18= RULE_TNID | this_TPID_19= RULE_TPID | this_VID_20= RULE_VID | this_ID_21= RULE_ID ) ;
    public final AntlrDatatypeRuleToken ruleLabel() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_NODE_0=null;
        Token this_BID_1=null;
        Token this_CID_2=null;
        Token this_DID_3=null;
        Token this_EID_4=null;
        Token this_FID_5=null;
        Token this_GID_6=null;
        Token this_HID_7=null;
        Token this_IID_8=null;
        Token this_KID_9=null;
        Token this_LID_10=null;
        Token this_MNID_11=null;
        Token this_MPID_12=null;
        Token this_OID_13=null;
        Token this_QNID_14=null;
        Token this_QPID_15=null;
        Token this_RID_16=null;
        Token this_SID_17=null;
        Token this_TNID_18=null;
        Token this_TPID_19=null;
        Token this_VID_20=null;
        Token this_ID_21=null;


        	enterRule();

        try {
            // InternalXSpice.g:11823:2: ( (this_NODE_0= RULE_NODE | this_BID_1= RULE_BID | this_CID_2= RULE_CID | this_DID_3= RULE_DID | this_EID_4= RULE_EID | this_FID_5= RULE_FID | this_GID_6= RULE_GID | this_HID_7= RULE_HID | this_IID_8= RULE_IID | this_KID_9= RULE_KID | this_LID_10= RULE_LID | this_MNID_11= RULE_MNID | this_MPID_12= RULE_MPID | this_OID_13= RULE_OID | this_QNID_14= RULE_QNID | this_QPID_15= RULE_QPID | this_RID_16= RULE_RID | this_SID_17= RULE_SID | this_TNID_18= RULE_TNID | this_TPID_19= RULE_TPID | this_VID_20= RULE_VID | this_ID_21= RULE_ID ) )
            // InternalXSpice.g:11824:2: (this_NODE_0= RULE_NODE | this_BID_1= RULE_BID | this_CID_2= RULE_CID | this_DID_3= RULE_DID | this_EID_4= RULE_EID | this_FID_5= RULE_FID | this_GID_6= RULE_GID | this_HID_7= RULE_HID | this_IID_8= RULE_IID | this_KID_9= RULE_KID | this_LID_10= RULE_LID | this_MNID_11= RULE_MNID | this_MPID_12= RULE_MPID | this_OID_13= RULE_OID | this_QNID_14= RULE_QNID | this_QPID_15= RULE_QPID | this_RID_16= RULE_RID | this_SID_17= RULE_SID | this_TNID_18= RULE_TNID | this_TPID_19= RULE_TPID | this_VID_20= RULE_VID | this_ID_21= RULE_ID )
            {
            // InternalXSpice.g:11824:2: (this_NODE_0= RULE_NODE | this_BID_1= RULE_BID | this_CID_2= RULE_CID | this_DID_3= RULE_DID | this_EID_4= RULE_EID | this_FID_5= RULE_FID | this_GID_6= RULE_GID | this_HID_7= RULE_HID | this_IID_8= RULE_IID | this_KID_9= RULE_KID | this_LID_10= RULE_LID | this_MNID_11= RULE_MNID | this_MPID_12= RULE_MPID | this_OID_13= RULE_OID | this_QNID_14= RULE_QNID | this_QPID_15= RULE_QPID | this_RID_16= RULE_RID | this_SID_17= RULE_SID | this_TNID_18= RULE_TNID | this_TPID_19= RULE_TPID | this_VID_20= RULE_VID | this_ID_21= RULE_ID )
            int alt74=22;
            switch ( input.LA(1) ) {
            case RULE_NODE:
                {
                alt74=1;
                }
                break;
            case RULE_BID:
                {
                alt74=2;
                }
                break;
            case RULE_CID:
                {
                alt74=3;
                }
                break;
            case RULE_DID:
                {
                alt74=4;
                }
                break;
            case RULE_EID:
                {
                alt74=5;
                }
                break;
            case RULE_FID:
                {
                alt74=6;
                }
                break;
            case RULE_GID:
                {
                alt74=7;
                }
                break;
            case RULE_HID:
                {
                alt74=8;
                }
                break;
            case RULE_IID:
                {
                alt74=9;
                }
                break;
            case RULE_KID:
                {
                alt74=10;
                }
                break;
            case RULE_LID:
                {
                alt74=11;
                }
                break;
            case RULE_MNID:
                {
                alt74=12;
                }
                break;
            case RULE_MPID:
                {
                alt74=13;
                }
                break;
            case RULE_OID:
                {
                alt74=14;
                }
                break;
            case RULE_QNID:
                {
                alt74=15;
                }
                break;
            case RULE_QPID:
                {
                alt74=16;
                }
                break;
            case RULE_RID:
                {
                alt74=17;
                }
                break;
            case RULE_SID:
                {
                alt74=18;
                }
                break;
            case RULE_TNID:
                {
                alt74=19;
                }
                break;
            case RULE_TPID:
                {
                alt74=20;
                }
                break;
            case RULE_VID:
                {
                alt74=21;
                }
                break;
            case RULE_ID:
                {
                alt74=22;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 74, 0, input);

                throw nvae;
            }

            switch (alt74) {
                case 1 :
                    // InternalXSpice.g:11825:3: this_NODE_0= RULE_NODE
                    {
                    this_NODE_0=(Token)match(input,RULE_NODE,FOLLOW_2); 

                    			current.merge(this_NODE_0);
                    		

                    			newLeafNode(this_NODE_0, grammarAccess.getLabelAccess().getNODETerminalRuleCall_0());
                    		

                    }
                    break;
                case 2 :
                    // InternalXSpice.g:11833:3: this_BID_1= RULE_BID
                    {
                    this_BID_1=(Token)match(input,RULE_BID,FOLLOW_2); 

                    			current.merge(this_BID_1);
                    		

                    			newLeafNode(this_BID_1, grammarAccess.getLabelAccess().getBIDTerminalRuleCall_1());
                    		

                    }
                    break;
                case 3 :
                    // InternalXSpice.g:11841:3: this_CID_2= RULE_CID
                    {
                    this_CID_2=(Token)match(input,RULE_CID,FOLLOW_2); 

                    			current.merge(this_CID_2);
                    		

                    			newLeafNode(this_CID_2, grammarAccess.getLabelAccess().getCIDTerminalRuleCall_2());
                    		

                    }
                    break;
                case 4 :
                    // InternalXSpice.g:11849:3: this_DID_3= RULE_DID
                    {
                    this_DID_3=(Token)match(input,RULE_DID,FOLLOW_2); 

                    			current.merge(this_DID_3);
                    		

                    			newLeafNode(this_DID_3, grammarAccess.getLabelAccess().getDIDTerminalRuleCall_3());
                    		

                    }
                    break;
                case 5 :
                    // InternalXSpice.g:11857:3: this_EID_4= RULE_EID
                    {
                    this_EID_4=(Token)match(input,RULE_EID,FOLLOW_2); 

                    			current.merge(this_EID_4);
                    		

                    			newLeafNode(this_EID_4, grammarAccess.getLabelAccess().getEIDTerminalRuleCall_4());
                    		

                    }
                    break;
                case 6 :
                    // InternalXSpice.g:11865:3: this_FID_5= RULE_FID
                    {
                    this_FID_5=(Token)match(input,RULE_FID,FOLLOW_2); 

                    			current.merge(this_FID_5);
                    		

                    			newLeafNode(this_FID_5, grammarAccess.getLabelAccess().getFIDTerminalRuleCall_5());
                    		

                    }
                    break;
                case 7 :
                    // InternalXSpice.g:11873:3: this_GID_6= RULE_GID
                    {
                    this_GID_6=(Token)match(input,RULE_GID,FOLLOW_2); 

                    			current.merge(this_GID_6);
                    		

                    			newLeafNode(this_GID_6, grammarAccess.getLabelAccess().getGIDTerminalRuleCall_6());
                    		

                    }
                    break;
                case 8 :
                    // InternalXSpice.g:11881:3: this_HID_7= RULE_HID
                    {
                    this_HID_7=(Token)match(input,RULE_HID,FOLLOW_2); 

                    			current.merge(this_HID_7);
                    		

                    			newLeafNode(this_HID_7, grammarAccess.getLabelAccess().getHIDTerminalRuleCall_7());
                    		

                    }
                    break;
                case 9 :
                    // InternalXSpice.g:11889:3: this_IID_8= RULE_IID
                    {
                    this_IID_8=(Token)match(input,RULE_IID,FOLLOW_2); 

                    			current.merge(this_IID_8);
                    		

                    			newLeafNode(this_IID_8, grammarAccess.getLabelAccess().getIIDTerminalRuleCall_8());
                    		

                    }
                    break;
                case 10 :
                    // InternalXSpice.g:11897:3: this_KID_9= RULE_KID
                    {
                    this_KID_9=(Token)match(input,RULE_KID,FOLLOW_2); 

                    			current.merge(this_KID_9);
                    		

                    			newLeafNode(this_KID_9, grammarAccess.getLabelAccess().getKIDTerminalRuleCall_9());
                    		

                    }
                    break;
                case 11 :
                    // InternalXSpice.g:11905:3: this_LID_10= RULE_LID
                    {
                    this_LID_10=(Token)match(input,RULE_LID,FOLLOW_2); 

                    			current.merge(this_LID_10);
                    		

                    			newLeafNode(this_LID_10, grammarAccess.getLabelAccess().getLIDTerminalRuleCall_10());
                    		

                    }
                    break;
                case 12 :
                    // InternalXSpice.g:11913:3: this_MNID_11= RULE_MNID
                    {
                    this_MNID_11=(Token)match(input,RULE_MNID,FOLLOW_2); 

                    			current.merge(this_MNID_11);
                    		

                    			newLeafNode(this_MNID_11, grammarAccess.getLabelAccess().getMNIDTerminalRuleCall_11());
                    		

                    }
                    break;
                case 13 :
                    // InternalXSpice.g:11921:3: this_MPID_12= RULE_MPID
                    {
                    this_MPID_12=(Token)match(input,RULE_MPID,FOLLOW_2); 

                    			current.merge(this_MPID_12);
                    		

                    			newLeafNode(this_MPID_12, grammarAccess.getLabelAccess().getMPIDTerminalRuleCall_12());
                    		

                    }
                    break;
                case 14 :
                    // InternalXSpice.g:11929:3: this_OID_13= RULE_OID
                    {
                    this_OID_13=(Token)match(input,RULE_OID,FOLLOW_2); 

                    			current.merge(this_OID_13);
                    		

                    			newLeafNode(this_OID_13, grammarAccess.getLabelAccess().getOIDTerminalRuleCall_13());
                    		

                    }
                    break;
                case 15 :
                    // InternalXSpice.g:11937:3: this_QNID_14= RULE_QNID
                    {
                    this_QNID_14=(Token)match(input,RULE_QNID,FOLLOW_2); 

                    			current.merge(this_QNID_14);
                    		

                    			newLeafNode(this_QNID_14, grammarAccess.getLabelAccess().getQNIDTerminalRuleCall_14());
                    		

                    }
                    break;
                case 16 :
                    // InternalXSpice.g:11945:3: this_QPID_15= RULE_QPID
                    {
                    this_QPID_15=(Token)match(input,RULE_QPID,FOLLOW_2); 

                    			current.merge(this_QPID_15);
                    		

                    			newLeafNode(this_QPID_15, grammarAccess.getLabelAccess().getQPIDTerminalRuleCall_15());
                    		

                    }
                    break;
                case 17 :
                    // InternalXSpice.g:11953:3: this_RID_16= RULE_RID
                    {
                    this_RID_16=(Token)match(input,RULE_RID,FOLLOW_2); 

                    			current.merge(this_RID_16);
                    		

                    			newLeafNode(this_RID_16, grammarAccess.getLabelAccess().getRIDTerminalRuleCall_16());
                    		

                    }
                    break;
                case 18 :
                    // InternalXSpice.g:11961:3: this_SID_17= RULE_SID
                    {
                    this_SID_17=(Token)match(input,RULE_SID,FOLLOW_2); 

                    			current.merge(this_SID_17);
                    		

                    			newLeafNode(this_SID_17, grammarAccess.getLabelAccess().getSIDTerminalRuleCall_17());
                    		

                    }
                    break;
                case 19 :
                    // InternalXSpice.g:11969:3: this_TNID_18= RULE_TNID
                    {
                    this_TNID_18=(Token)match(input,RULE_TNID,FOLLOW_2); 

                    			current.merge(this_TNID_18);
                    		

                    			newLeafNode(this_TNID_18, grammarAccess.getLabelAccess().getTNIDTerminalRuleCall_18());
                    		

                    }
                    break;
                case 20 :
                    // InternalXSpice.g:11977:3: this_TPID_19= RULE_TPID
                    {
                    this_TPID_19=(Token)match(input,RULE_TPID,FOLLOW_2); 

                    			current.merge(this_TPID_19);
                    		

                    			newLeafNode(this_TPID_19, grammarAccess.getLabelAccess().getTPIDTerminalRuleCall_19());
                    		

                    }
                    break;
                case 21 :
                    // InternalXSpice.g:11985:3: this_VID_20= RULE_VID
                    {
                    this_VID_20=(Token)match(input,RULE_VID,FOLLOW_2); 

                    			current.merge(this_VID_20);
                    		

                    			newLeafNode(this_VID_20, grammarAccess.getLabelAccess().getVIDTerminalRuleCall_20());
                    		

                    }
                    break;
                case 22 :
                    // InternalXSpice.g:11993:3: this_ID_21= RULE_ID
                    {
                    this_ID_21=(Token)match(input,RULE_ID,FOLLOW_2); 

                    			current.merge(this_ID_21);
                    		

                    			newLeafNode(this_ID_21, grammarAccess.getLabelAccess().getIDTerminalRuleCall_21());
                    		

                    }
                    break;

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLabel"


    // $ANTLR start "rulePRTYPE"
    // InternalXSpice.g:12004:1: rulePRTYPE returns [Enumerator current=null] : ( (enumLiteral_0= 'DC' ) | (enumLiteral_1= 'AC' ) | (enumLiteral_2= 'TRAN' ) | (enumLiteral_3= 'NOISE' ) ) ;
    public final Enumerator rulePRTYPE() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;


        	enterRule();

        try {
            // InternalXSpice.g:12010:2: ( ( (enumLiteral_0= 'DC' ) | (enumLiteral_1= 'AC' ) | (enumLiteral_2= 'TRAN' ) | (enumLiteral_3= 'NOISE' ) ) )
            // InternalXSpice.g:12011:2: ( (enumLiteral_0= 'DC' ) | (enumLiteral_1= 'AC' ) | (enumLiteral_2= 'TRAN' ) | (enumLiteral_3= 'NOISE' ) )
            {
            // InternalXSpice.g:12011:2: ( (enumLiteral_0= 'DC' ) | (enumLiteral_1= 'AC' ) | (enumLiteral_2= 'TRAN' ) | (enumLiteral_3= 'NOISE' ) )
            int alt75=4;
            switch ( input.LA(1) ) {
            case 163:
                {
                alt75=1;
                }
                break;
            case 164:
                {
                alt75=2;
                }
                break;
            case 214:
                {
                alt75=3;
                }
                break;
            case 215:
                {
                alt75=4;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 75, 0, input);

                throw nvae;
            }

            switch (alt75) {
                case 1 :
                    // InternalXSpice.g:12012:3: (enumLiteral_0= 'DC' )
                    {
                    // InternalXSpice.g:12012:3: (enumLiteral_0= 'DC' )
                    // InternalXSpice.g:12013:4: enumLiteral_0= 'DC'
                    {
                    enumLiteral_0=(Token)match(input,163,FOLLOW_2); 

                    				current = grammarAccess.getPRTYPEAccess().getDCEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                    				newLeafNode(enumLiteral_0, grammarAccess.getPRTYPEAccess().getDCEnumLiteralDeclaration_0());
                    			

                    }


                    }
                    break;
                case 2 :
                    // InternalXSpice.g:12020:3: (enumLiteral_1= 'AC' )
                    {
                    // InternalXSpice.g:12020:3: (enumLiteral_1= 'AC' )
                    // InternalXSpice.g:12021:4: enumLiteral_1= 'AC'
                    {
                    enumLiteral_1=(Token)match(input,164,FOLLOW_2); 

                    				current = grammarAccess.getPRTYPEAccess().getACEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                    				newLeafNode(enumLiteral_1, grammarAccess.getPRTYPEAccess().getACEnumLiteralDeclaration_1());
                    			

                    }


                    }
                    break;
                case 3 :
                    // InternalXSpice.g:12028:3: (enumLiteral_2= 'TRAN' )
                    {
                    // InternalXSpice.g:12028:3: (enumLiteral_2= 'TRAN' )
                    // InternalXSpice.g:12029:4: enumLiteral_2= 'TRAN'
                    {
                    enumLiteral_2=(Token)match(input,214,FOLLOW_2); 

                    				current = grammarAccess.getPRTYPEAccess().getTRANEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                    				newLeafNode(enumLiteral_2, grammarAccess.getPRTYPEAccess().getTRANEnumLiteralDeclaration_2());
                    			

                    }


                    }
                    break;
                case 4 :
                    // InternalXSpice.g:12036:3: (enumLiteral_3= 'NOISE' )
                    {
                    // InternalXSpice.g:12036:3: (enumLiteral_3= 'NOISE' )
                    // InternalXSpice.g:12037:4: enumLiteral_3= 'NOISE'
                    {
                    enumLiteral_3=(Token)match(input,215,FOLLOW_2); 

                    				current = grammarAccess.getPRTYPEAccess().getNOISEEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                    				newLeafNode(enumLiteral_3, grammarAccess.getPRTYPEAccess().getNOISEEnumLiteralDeclaration_3());
                    			

                    }


                    }
                    break;

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePRTYPE"


    // $ANTLR start "ruleIntegrationMethod"
    // InternalXSpice.g:12047:1: ruleIntegrationMethod returns [Enumerator current=null] : ( (enumLiteral_0= 'Gear' ) | (enumLiteral_1= 'Trapezoidal' ) | (enumLiteral_2= 'Euler' ) ) ;
    public final Enumerator ruleIntegrationMethod() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;


        	enterRule();

        try {
            // InternalXSpice.g:12053:2: ( ( (enumLiteral_0= 'Gear' ) | (enumLiteral_1= 'Trapezoidal' ) | (enumLiteral_2= 'Euler' ) ) )
            // InternalXSpice.g:12054:2: ( (enumLiteral_0= 'Gear' ) | (enumLiteral_1= 'Trapezoidal' ) | (enumLiteral_2= 'Euler' ) )
            {
            // InternalXSpice.g:12054:2: ( (enumLiteral_0= 'Gear' ) | (enumLiteral_1= 'Trapezoidal' ) | (enumLiteral_2= 'Euler' ) )
            int alt76=3;
            switch ( input.LA(1) ) {
            case 216:
                {
                alt76=1;
                }
                break;
            case 217:
                {
                alt76=2;
                }
                break;
            case 218:
                {
                alt76=3;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 76, 0, input);

                throw nvae;
            }

            switch (alt76) {
                case 1 :
                    // InternalXSpice.g:12055:3: (enumLiteral_0= 'Gear' )
                    {
                    // InternalXSpice.g:12055:3: (enumLiteral_0= 'Gear' )
                    // InternalXSpice.g:12056:4: enumLiteral_0= 'Gear'
                    {
                    enumLiteral_0=(Token)match(input,216,FOLLOW_2); 

                    				current = grammarAccess.getIntegrationMethodAccess().getGEAREnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                    				newLeafNode(enumLiteral_0, grammarAccess.getIntegrationMethodAccess().getGEAREnumLiteralDeclaration_0());
                    			

                    }


                    }
                    break;
                case 2 :
                    // InternalXSpice.g:12063:3: (enumLiteral_1= 'Trapezoidal' )
                    {
                    // InternalXSpice.g:12063:3: (enumLiteral_1= 'Trapezoidal' )
                    // InternalXSpice.g:12064:4: enumLiteral_1= 'Trapezoidal'
                    {
                    enumLiteral_1=(Token)match(input,217,FOLLOW_2); 

                    				current = grammarAccess.getIntegrationMethodAccess().getTRAPEZOIDALEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                    				newLeafNode(enumLiteral_1, grammarAccess.getIntegrationMethodAccess().getTRAPEZOIDALEnumLiteralDeclaration_1());
                    			

                    }


                    }
                    break;
                case 3 :
                    // InternalXSpice.g:12071:3: (enumLiteral_2= 'Euler' )
                    {
                    // InternalXSpice.g:12071:3: (enumLiteral_2= 'Euler' )
                    // InternalXSpice.g:12072:4: enumLiteral_2= 'Euler'
                    {
                    enumLiteral_2=(Token)match(input,218,FOLLOW_2); 

                    				current = grammarAccess.getIntegrationMethodAccess().getEULEREnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                    				newLeafNode(enumLiteral_2, grammarAccess.getIntegrationMethodAccess().getEULEREnumLiteralDeclaration_2());
                    			

                    }


                    }
                    break;

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIntegrationMethod"

    // Delegated rules


    protected DFA3 dfa3 = new DFA3(this);
    protected DFA7 dfa7 = new DFA7(this);
    protected DFA9 dfa9 = new DFA9(this);
    protected DFA14 dfa14 = new DFA14(this);
    protected DFA24 dfa24 = new DFA24(this);
    protected DFA26 dfa26 = new DFA26(this);
    protected DFA31 dfa31 = new DFA31(this);
    protected DFA33 dfa33 = new DFA33(this);
    protected DFA36 dfa36 = new DFA36(this);
    protected DFA41 dfa41 = new DFA41(this);
    protected DFA54 dfa54 = new DFA54(this);
    protected DFA71 dfa71 = new DFA71(this);
    static final String dfa_1s = "\43\uffff";
    static final String dfa_2s = "\1\6\2\uffff\1\5\1\uffff\26\54\10\uffff";
    static final String dfa_3s = "\1\53\2\uffff\1\37\1\uffff\26\u009e\10\uffff";
    static final String dfa_4s = "\1\uffff\1\1\1\2\1\uffff\1\5\26\uffff\1\11\1\12\1\4\1\13\1\6\1\10\1\7\1\3";
    static final String dfa_5s = "\43\uffff}>";
    static final String[] dfa_6s = {
            "\1\2\1\1\1\uffff\2\1\1\4\6\1\1\uffff\11\1\17\uffff\1\3",
            "",
            "",
            "\1\5\1\uffff\1\25\1\uffff\1\7\1\17\1\16\1\26\1\uffff\1\15\1\10\1\20\1\21\1\uffff\1\23\1\24\1\27\1\30\1\31\1\11\1\13\1\12\1\14\1\uffff\1\6\1\22\1\32",
            "",
            "\1\42\11\uffff\1\35\4\uffff\1\37\4\uffff\1\41\3\uffff\1\40\25\uffff\2\33\35\uffff\2\34\42\uffff\2\36",
            "\1\42\11\uffff\1\35\4\uffff\1\37\4\uffff\1\41\3\uffff\1\40\25\uffff\2\33\35\uffff\2\34\42\uffff\2\36",
            "\1\42\11\uffff\1\35\4\uffff\1\37\4\uffff\1\41\3\uffff\1\40\25\uffff\2\33\35\uffff\2\34\42\uffff\2\36",
            "\1\42\11\uffff\1\35\4\uffff\1\37\4\uffff\1\41\3\uffff\1\40\25\uffff\2\33\35\uffff\2\34\42\uffff\2\36",
            "\1\42\11\uffff\1\35\4\uffff\1\37\4\uffff\1\41\3\uffff\1\40\25\uffff\2\33\35\uffff\2\34\42\uffff\2\36",
            "\1\42\11\uffff\1\35\4\uffff\1\37\4\uffff\1\41\3\uffff\1\40\25\uffff\2\33\35\uffff\2\34\42\uffff\2\36",
            "\1\42\11\uffff\1\35\4\uffff\1\37\4\uffff\1\41\3\uffff\1\40\25\uffff\2\33\35\uffff\2\34\42\uffff\2\36",
            "\1\42\11\uffff\1\35\4\uffff\1\37\4\uffff\1\41\3\uffff\1\40\25\uffff\2\33\35\uffff\2\34\42\uffff\2\36",
            "\1\42\11\uffff\1\35\4\uffff\1\37\4\uffff\1\41\3\uffff\1\40\25\uffff\2\33\35\uffff\2\34\42\uffff\2\36",
            "\1\42\11\uffff\1\35\4\uffff\1\37\4\uffff\1\41\3\uffff\1\40\25\uffff\2\33\35\uffff\2\34\42\uffff\2\36",
            "\1\42\11\uffff\1\35\4\uffff\1\37\4\uffff\1\41\3\uffff\1\40\25\uffff\2\33\35\uffff\2\34\42\uffff\2\36",
            "\1\42\11\uffff\1\35\4\uffff\1\37\4\uffff\1\41\3\uffff\1\40\25\uffff\2\33\35\uffff\2\34\42\uffff\2\36",
            "\1\42\11\uffff\1\35\4\uffff\1\37\4\uffff\1\41\3\uffff\1\40\25\uffff\2\33\35\uffff\2\34\42\uffff\2\36",
            "\1\42\11\uffff\1\35\4\uffff\1\37\4\uffff\1\41\3\uffff\1\40\25\uffff\2\33\35\uffff\2\34\42\uffff\2\36",
            "\1\42\11\uffff\1\35\4\uffff\1\37\4\uffff\1\41\3\uffff\1\40\25\uffff\2\33\35\uffff\2\34\42\uffff\2\36",
            "\1\42\11\uffff\1\35\4\uffff\1\37\4\uffff\1\41\3\uffff\1\40\25\uffff\2\33\35\uffff\2\34\42\uffff\2\36",
            "\1\42\11\uffff\1\35\4\uffff\1\37\4\uffff\1\41\3\uffff\1\40\25\uffff\2\33\35\uffff\2\34\42\uffff\2\36",
            "\1\42\11\uffff\1\35\4\uffff\1\37\4\uffff\1\41\3\uffff\1\40\25\uffff\2\33\35\uffff\2\34\42\uffff\2\36",
            "\1\42\11\uffff\1\35\4\uffff\1\37\4\uffff\1\41\3\uffff\1\40\25\uffff\2\33\35\uffff\2\34\42\uffff\2\36",
            "\1\42\11\uffff\1\35\4\uffff\1\37\4\uffff\1\41\3\uffff\1\40\25\uffff\2\33\35\uffff\2\34\42\uffff\2\36",
            "\1\42\11\uffff\1\35\4\uffff\1\37\4\uffff\1\41\3\uffff\1\40\25\uffff\2\33\35\uffff\2\34\42\uffff\2\36",
            "\1\42\11\uffff\1\35\4\uffff\1\37\4\uffff\1\41\3\uffff\1\40\25\uffff\2\33\35\uffff\2\34\42\uffff\2\36",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final char[] dfa_2 = DFA.unpackEncodedStringToUnsignedChars(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final short[] dfa_4 = DFA.unpackEncodedString(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[][] dfa_6 = unpackEncodedStringArray(dfa_6s);

    class DFA3 extends DFA {

        public DFA3(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 3;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "257:2: (this_Component_0= ruleComponent | this_SubCircuit_1= ruleSubCircuit | this_ResistorModel_2= ruleResistorModel | this_CapacitorModel_3= ruleCapacitorModel | this_MutualInductance_4= ruleMutualInductance | this_VoltageSwitchModel_5= ruleVoltageSwitchModel | this_CurrentSwitchModel_6= ruleCurrentSwitchModel | this_DiodeModel_7= ruleDiodeModel | this_MOSFETModel_8= ruleMOSFETModel | this_BJTModel_9= ruleBJTModel | this_JFETModel_10= ruleJFETModel )";
        }
    }
    static final String dfa_7s = "\27\uffff";
    static final String dfa_8s = "\1\uffff\1\2\1\uffff\22\25\2\uffff";
    static final String dfa_9s = "\1\5\1\4\1\uffff\22\4\1\uffff\1\5";
    static final String dfa_10s = "\1\37\1\u00d5\1\uffff\22\u00d5\1\uffff\1\12";
    static final String dfa_11s = "\2\uffff\1\2\22\uffff\1\1\1\uffff";
    static final String dfa_12s = "\27\uffff}>";
    static final String[] dfa_13s = {
            "\1\1\1\uffff\1\2\1\uffff\4\2\1\uffff\4\2\1\uffff\11\2\1\uffff\3\2",
            "\1\2\1\25\1\2\1\3\1\uffff\1\4\1\5\1\24\1\6\1\2\1\17\1\7\1\10\1\11\1\uffff\1\12\1\13\1\14\1\15\1\16\1\20\1\21\1\22\1\23\1\2\3\25\5\uffff\2\2\4\uffff\1\2\174\uffff\4\2\1\uffff\2\2\22\uffff\1\2\22\uffff\2\2",
            "",
            "\1\25\1\2\2\25\1\uffff\11\25\1\uffff\12\25\10\uffff\2\25\4\uffff\1\25\174\uffff\4\25\1\uffff\2\25\22\uffff\1\25\22\uffff\2\25",
            "\1\25\1\2\2\25\1\uffff\11\25\1\uffff\12\25\10\uffff\2\25\4\uffff\1\25\174\uffff\4\25\1\uffff\2\25\22\uffff\1\25\22\uffff\2\25",
            "\1\25\1\2\2\25\1\uffff\11\25\1\uffff\12\25\10\uffff\2\25\4\uffff\1\25\174\uffff\4\25\1\uffff\2\25\22\uffff\1\25\22\uffff\2\25",
            "\1\25\1\2\2\25\1\uffff\11\25\1\uffff\12\25\10\uffff\2\25\4\uffff\1\25\174\uffff\4\25\1\uffff\2\25\22\uffff\1\25\22\uffff\2\25",
            "\1\25\1\2\2\25\1\uffff\11\25\1\uffff\12\25\10\uffff\2\25\4\uffff\1\25\174\uffff\4\25\1\uffff\2\25\22\uffff\1\25\22\uffff\2\25",
            "\1\25\1\2\2\25\1\uffff\11\25\1\uffff\12\25\10\uffff\2\25\4\uffff\1\25\174\uffff\4\25\1\uffff\2\25\22\uffff\1\25\22\uffff\2\25",
            "\1\25\1\2\2\25\1\uffff\11\25\1\uffff\12\25\10\uffff\2\25\4\uffff\1\25\174\uffff\4\25\1\uffff\2\25\22\uffff\1\25\22\uffff\2\25",
            "\1\25\1\2\2\25\1\uffff\11\25\1\uffff\12\25\10\uffff\2\25\4\uffff\1\25\174\uffff\4\25\1\uffff\2\25\22\uffff\1\25\22\uffff\2\25",
            "\1\25\1\2\2\25\1\uffff\11\25\1\uffff\12\25\10\uffff\2\25\4\uffff\1\25\174\uffff\4\25\1\uffff\2\25\22\uffff\1\25\22\uffff\2\25",
            "\1\25\1\2\2\25\1\uffff\11\25\1\uffff\12\25\10\uffff\2\25\4\uffff\1\25\174\uffff\4\25\1\uffff\2\25\22\uffff\1\25\22\uffff\2\25",
            "\1\25\1\2\2\25\1\uffff\11\25\1\uffff\12\25\10\uffff\2\25\4\uffff\1\25\174\uffff\4\25\1\uffff\2\25\22\uffff\1\25\22\uffff\2\25",
            "\1\25\1\2\2\25\1\uffff\11\25\1\uffff\12\25\10\uffff\2\25\4\uffff\1\25\174\uffff\4\25\1\uffff\2\25\22\uffff\1\25\22\uffff\2\25",
            "\1\25\1\2\2\25\1\uffff\11\25\1\uffff\12\25\10\uffff\2\25\4\uffff\1\25\174\uffff\4\25\1\uffff\2\25\22\uffff\1\25\22\uffff\2\25",
            "\1\25\1\2\2\25\1\uffff\11\25\1\uffff\12\25\10\uffff\2\25\4\uffff\1\25\174\uffff\4\25\1\uffff\2\25\22\uffff\1\25\22\uffff\2\25",
            "\1\25\1\2\2\25\1\uffff\11\25\1\uffff\12\25\10\uffff\2\25\4\uffff\1\25\174\uffff\4\25\1\uffff\2\25\22\uffff\1\25\22\uffff\2\25",
            "\1\25\1\2\2\25\1\uffff\11\25\1\uffff\12\25\10\uffff\2\25\4\uffff\1\25\174\uffff\4\25\1\uffff\2\25\22\uffff\1\25\22\uffff\2\25",
            "\1\25\1\2\2\25\1\uffff\11\25\1\uffff\12\25\10\uffff\2\25\4\uffff\1\25\174\uffff\4\25\1\uffff\2\25\22\uffff\1\25\22\uffff\2\25",
            "\1\25\1\uffff\2\25\1\uffff\1\25\1\26\7\25\1\uffff\12\25\10\uffff\2\25\4\uffff\1\25\174\uffff\4\25\1\uffff\2\25\22\uffff\1\25\22\uffff\2\25",
            "",
            "\1\25\4\uffff\1\2"
    };

    static final short[] dfa_7 = DFA.unpackEncodedString(dfa_7s);
    static final short[] dfa_8 = DFA.unpackEncodedString(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final char[] dfa_10 = DFA.unpackEncodedStringToUnsignedChars(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final short[][] dfa_13 = unpackEncodedStringArray(dfa_13s);

    class DFA7 extends DFA {

        public DFA7(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 7;
            this.eot = dfa_7;
            this.eof = dfa_8;
            this.min = dfa_9;
            this.max = dfa_10;
            this.accept = dfa_11;
            this.special = dfa_12;
            this.transition = dfa_13;
        }
        public String getDescription() {
            return "()* loopback of 692:3: ( (lv_nodes_2_0= RULE_NODE ) )*";
        }
    }
    static final String dfa_14s = "\26\uffff";
    static final String dfa_15s = "\1\24\1\uffff\22\1\2\uffff";
    static final String dfa_16s = "\1\4\1\uffff\22\4\1\uffff\1\5";
    static final String dfa_17s = "\1\u00d5\1\uffff\22\u00d5\1\uffff\1\12";
    static final String dfa_18s = "\1\uffff\1\1\22\uffff\1\2\1\uffff";
    static final String dfa_19s = "\26\uffff}>";
    static final String[] dfa_20s = {
            "\1\24\1\1\1\24\1\17\1\uffff\1\2\1\12\1\11\1\20\1\24\1\10\1\3\1\13\1\14\1\uffff\1\15\1\16\1\21\1\22\1\23\1\4\1\6\1\5\1\7\1\24\3\1\5\uffff\3\24\1\uffff\3\24\174\uffff\4\24\1\uffff\2\24\22\uffff\1\24\22\uffff\2\24",
            "",
            "\1\1\1\24\2\1\1\uffff\11\1\1\uffff\12\1\10\uffff\3\1\1\uffff\3\1\174\uffff\4\1\1\uffff\2\1\22\uffff\1\1\22\uffff\2\1",
            "\1\1\1\24\2\1\1\uffff\11\1\1\uffff\12\1\10\uffff\3\1\1\uffff\3\1\174\uffff\4\1\1\uffff\2\1\22\uffff\1\1\22\uffff\2\1",
            "\1\1\1\24\2\1\1\uffff\11\1\1\uffff\12\1\10\uffff\3\1\1\uffff\3\1\174\uffff\4\1\1\uffff\2\1\22\uffff\1\1\22\uffff\2\1",
            "\1\1\1\24\2\1\1\uffff\11\1\1\uffff\12\1\10\uffff\3\1\1\uffff\3\1\174\uffff\4\1\1\uffff\2\1\22\uffff\1\1\22\uffff\2\1",
            "\1\1\1\24\2\1\1\uffff\11\1\1\uffff\12\1\10\uffff\3\1\1\uffff\3\1\174\uffff\4\1\1\uffff\2\1\22\uffff\1\1\22\uffff\2\1",
            "\1\1\1\24\2\1\1\uffff\11\1\1\uffff\12\1\10\uffff\3\1\1\uffff\3\1\174\uffff\4\1\1\uffff\2\1\22\uffff\1\1\22\uffff\2\1",
            "\1\1\1\24\2\1\1\uffff\11\1\1\uffff\12\1\10\uffff\3\1\1\uffff\3\1\174\uffff\4\1\1\uffff\2\1\22\uffff\1\1\22\uffff\2\1",
            "\1\1\1\uffff\2\1\1\uffff\1\1\1\25\7\1\1\uffff\12\1\10\uffff\3\1\1\uffff\3\1\174\uffff\4\1\1\uffff\2\1\22\uffff\1\1\22\uffff\2\1",
            "\1\1\1\24\2\1\1\uffff\11\1\1\uffff\12\1\10\uffff\3\1\1\uffff\3\1\174\uffff\4\1\1\uffff\2\1\22\uffff\1\1\22\uffff\2\1",
            "\1\1\1\24\2\1\1\uffff\11\1\1\uffff\12\1\10\uffff\3\1\1\uffff\3\1\174\uffff\4\1\1\uffff\2\1\22\uffff\1\1\22\uffff\2\1",
            "\1\1\1\24\2\1\1\uffff\11\1\1\uffff\12\1\10\uffff\3\1\1\uffff\3\1\174\uffff\4\1\1\uffff\2\1\22\uffff\1\1\22\uffff\2\1",
            "\1\1\1\24\2\1\1\uffff\11\1\1\uffff\12\1\10\uffff\3\1\1\uffff\3\1\174\uffff\4\1\1\uffff\2\1\22\uffff\1\1\22\uffff\2\1",
            "\1\1\1\24\2\1\1\uffff\11\1\1\uffff\12\1\10\uffff\3\1\1\uffff\3\1\174\uffff\4\1\1\uffff\2\1\22\uffff\1\1\22\uffff\2\1",
            "\1\1\1\24\2\1\1\uffff\11\1\1\uffff\12\1\10\uffff\3\1\1\uffff\3\1\174\uffff\4\1\1\uffff\2\1\22\uffff\1\1\22\uffff\2\1",
            "\1\1\1\24\2\1\1\uffff\11\1\1\uffff\12\1\10\uffff\3\1\1\uffff\3\1\174\uffff\4\1\1\uffff\2\1\22\uffff\1\1\22\uffff\2\1",
            "\1\1\1\24\2\1\1\uffff\11\1\1\uffff\12\1\10\uffff\3\1\1\uffff\3\1\174\uffff\4\1\1\uffff\2\1\22\uffff\1\1\22\uffff\2\1",
            "\1\1\1\24\2\1\1\uffff\11\1\1\uffff\12\1\10\uffff\3\1\1\uffff\3\1\174\uffff\4\1\1\uffff\2\1\22\uffff\1\1\22\uffff\2\1",
            "\1\1\1\24\2\1\1\uffff\11\1\1\uffff\12\1\10\uffff\3\1\1\uffff\3\1\174\uffff\4\1\1\uffff\2\1\22\uffff\1\1\22\uffff\2\1",
            "",
            "\1\1\4\uffff\1\24"
    };

    static final short[] dfa_14 = DFA.unpackEncodedString(dfa_14s);
    static final short[] dfa_15 = DFA.unpackEncodedString(dfa_15s);
    static final char[] dfa_16 = DFA.unpackEncodedStringToUnsignedChars(dfa_16s);
    static final char[] dfa_17 = DFA.unpackEncodedStringToUnsignedChars(dfa_17s);
    static final short[] dfa_18 = DFA.unpackEncodedString(dfa_18s);
    static final short[] dfa_19 = DFA.unpackEncodedString(dfa_19s);
    static final short[][] dfa_20 = unpackEncodedStringArray(dfa_20s);

    class DFA9 extends DFA {

        public DFA9(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 9;
            this.eot = dfa_14;
            this.eof = dfa_15;
            this.min = dfa_16;
            this.max = dfa_17;
            this.accept = dfa_18;
            this.special = dfa_19;
            this.transition = dfa_20;
        }
        public String getDescription() {
            return "817:3: ( (lv_model_4_0= ruleLabel ) )?";
        }
    }
    static final String[] dfa_21s = {
            "\1\24\1\1\1\24\1\17\1\uffff\1\2\1\12\1\11\1\20\1\24\1\10\1\3\1\13\1\14\1\uffff\1\15\1\16\1\21\1\22\1\23\1\4\1\6\1\5\1\7\1\24\3\1\5\uffff\3\24\1\uffff\1\24\1\uffff\1\24\11\uffff\1\24\162\uffff\4\24\1\uffff\2\24\22\uffff\1\24\22\uffff\2\24",
            "",
            "\1\1\1\24\2\1\1\uffff\11\1\1\uffff\12\1\10\uffff\3\1\1\uffff\1\1\1\uffff\1\1\11\uffff\1\1\162\uffff\4\1\1\uffff\2\1\22\uffff\1\1\22\uffff\2\1",
            "\1\1\1\24\2\1\1\uffff\11\1\1\uffff\12\1\10\uffff\3\1\1\uffff\1\1\1\uffff\1\1\11\uffff\1\1\162\uffff\4\1\1\uffff\2\1\22\uffff\1\1\22\uffff\2\1",
            "\1\1\1\24\2\1\1\uffff\11\1\1\uffff\12\1\10\uffff\3\1\1\uffff\1\1\1\uffff\1\1\11\uffff\1\1\162\uffff\4\1\1\uffff\2\1\22\uffff\1\1\22\uffff\2\1",
            "\1\1\1\24\2\1\1\uffff\11\1\1\uffff\12\1\10\uffff\3\1\1\uffff\1\1\1\uffff\1\1\11\uffff\1\1\162\uffff\4\1\1\uffff\2\1\22\uffff\1\1\22\uffff\2\1",
            "\1\1\1\24\2\1\1\uffff\11\1\1\uffff\12\1\10\uffff\3\1\1\uffff\1\1\1\uffff\1\1\11\uffff\1\1\162\uffff\4\1\1\uffff\2\1\22\uffff\1\1\22\uffff\2\1",
            "\1\1\1\24\2\1\1\uffff\11\1\1\uffff\12\1\10\uffff\3\1\1\uffff\1\1\1\uffff\1\1\11\uffff\1\1\162\uffff\4\1\1\uffff\2\1\22\uffff\1\1\22\uffff\2\1",
            "\1\1\1\24\2\1\1\uffff\11\1\1\uffff\12\1\10\uffff\3\1\1\uffff\1\1\1\uffff\1\1\11\uffff\1\1\162\uffff\4\1\1\uffff\2\1\22\uffff\1\1\22\uffff\2\1",
            "\1\1\1\uffff\2\1\1\uffff\1\1\1\25\7\1\1\uffff\12\1\10\uffff\3\1\1\uffff\1\1\1\uffff\1\1\11\uffff\1\1\162\uffff\4\1\1\uffff\2\1\22\uffff\1\1\22\uffff\2\1",
            "\1\1\1\24\2\1\1\uffff\11\1\1\uffff\12\1\10\uffff\3\1\1\uffff\1\1\1\uffff\1\1\11\uffff\1\1\162\uffff\4\1\1\uffff\2\1\22\uffff\1\1\22\uffff\2\1",
            "\1\1\1\24\2\1\1\uffff\11\1\1\uffff\12\1\10\uffff\3\1\1\uffff\1\1\1\uffff\1\1\11\uffff\1\1\162\uffff\4\1\1\uffff\2\1\22\uffff\1\1\22\uffff\2\1",
            "\1\1\1\24\2\1\1\uffff\11\1\1\uffff\12\1\10\uffff\3\1\1\uffff\1\1\1\uffff\1\1\11\uffff\1\1\162\uffff\4\1\1\uffff\2\1\22\uffff\1\1\22\uffff\2\1",
            "\1\1\1\24\2\1\1\uffff\11\1\1\uffff\12\1\10\uffff\3\1\1\uffff\1\1\1\uffff\1\1\11\uffff\1\1\162\uffff\4\1\1\uffff\2\1\22\uffff\1\1\22\uffff\2\1",
            "\1\1\1\24\2\1\1\uffff\11\1\1\uffff\12\1\10\uffff\3\1\1\uffff\1\1\1\uffff\1\1\11\uffff\1\1\162\uffff\4\1\1\uffff\2\1\22\uffff\1\1\22\uffff\2\1",
            "\1\1\1\24\2\1\1\uffff\11\1\1\uffff\12\1\10\uffff\3\1\1\uffff\1\1\1\uffff\1\1\11\uffff\1\1\162\uffff\4\1\1\uffff\2\1\22\uffff\1\1\22\uffff\2\1",
            "\1\1\1\24\2\1\1\uffff\11\1\1\uffff\12\1\10\uffff\3\1\1\uffff\1\1\1\uffff\1\1\11\uffff\1\1\162\uffff\4\1\1\uffff\2\1\22\uffff\1\1\22\uffff\2\1",
            "\1\1\1\24\2\1\1\uffff\11\1\1\uffff\12\1\10\uffff\3\1\1\uffff\1\1\1\uffff\1\1\11\uffff\1\1\162\uffff\4\1\1\uffff\2\1\22\uffff\1\1\22\uffff\2\1",
            "\1\1\1\24\2\1\1\uffff\11\1\1\uffff\12\1\10\uffff\3\1\1\uffff\1\1\1\uffff\1\1\11\uffff\1\1\162\uffff\4\1\1\uffff\2\1\22\uffff\1\1\22\uffff\2\1",
            "\1\1\1\24\2\1\1\uffff\11\1\1\uffff\12\1\10\uffff\3\1\1\uffff\1\1\1\uffff\1\1\11\uffff\1\1\162\uffff\4\1\1\uffff\2\1\22\uffff\1\1\22\uffff\2\1",
            "",
            "\1\1\4\uffff\1\24"
    };
    static final short[][] dfa_21 = unpackEncodedStringArray(dfa_21s);

    class DFA14 extends DFA {

        public DFA14(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 14;
            this.eot = dfa_14;
            this.eof = dfa_15;
            this.min = dfa_16;
            this.max = dfa_17;
            this.accept = dfa_18;
            this.special = dfa_19;
            this.transition = dfa_21;
        }
        public String getDescription() {
            return "1344:3: ( (lv_model_4_0= ruleLabel ) )?";
        }
    }
    static final String dfa_22s = "\21\uffff";
    static final String dfa_23s = "\1\63\20\uffff";
    static final String dfa_24s = "\1\122\20\uffff";
    static final String dfa_25s = "\1\uffff\1\20\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17";
    static final String dfa_26s = "\1\0\20\uffff}>";
    static final String[] dfa_27s = {
            "\1\20\1\1\20\uffff\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_22 = DFA.unpackEncodedString(dfa_22s);
    static final char[] dfa_23 = DFA.unpackEncodedStringToUnsignedChars(dfa_23s);
    static final char[] dfa_24 = DFA.unpackEncodedStringToUnsignedChars(dfa_24s);
    static final short[] dfa_25 = DFA.unpackEncodedString(dfa_25s);
    static final short[] dfa_26 = DFA.unpackEncodedString(dfa_26s);
    static final short[][] dfa_27 = unpackEncodedStringArray(dfa_27s);

    class DFA24 extends DFA {

        public DFA24(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 24;
            this.eot = dfa_22;
            this.eof = dfa_22;
            this.min = dfa_23;
            this.max = dfa_24;
            this.accept = dfa_25;
            this.special = dfa_26;
            this.transition = dfa_27;
        }
        public String getDescription() {
            return "()* loopback of 3027:6: ( ({...}? => ( ({...}? => (otherlv_5= 'IS' otherlv_6= '=' ( (lv_saturationCurrent_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'RS' otherlv_9= '=' ( (lv_resistance_10_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'N' otherlv_12= '=' ( (lv_emissionCoefficient_13_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'TT' otherlv_15= '=' ( (lv_transitTime_16_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'CJO' otherlv_18= '=' ( (lv_junctionCap_19_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'VJ' otherlv_21= '=' ( (lv_junctionPotential_22_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'M' otherlv_24= '=' ( (lv_gradingCoefficient_25_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'EG' otherlv_27= '=' ( (lv_activationEnergy_28_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'XTI' otherlv_30= '=' ( (lv_saturationCurrentExp_31_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= 'KF' otherlv_33= '=' ( (lv_flickerNoiseCoefficient_34_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'AF' otherlv_36= '=' ( (lv_flickerNoiseExponent_37_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'FC' otherlv_39= '=' ( (lv_depletionCapCoefficient_40_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_41= 'BV' otherlv_42= '=' ( (lv_breakdownVoltage_43_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'IBV' otherlv_45= '=' ( (lv_breakdownCurrent_46_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'TNOM' otherlv_48= '=' ( (lv_nominalTemperature_49_0= RULE_NUMBER ) ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA24_0 = input.LA(1);

                         
                        int index24_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA24_0==52) ) {s = 1;}

                        else if ( LA24_0 == 69 && getUnorderedGroupHelper().canSelect(grammarAccess.getDiodeModelAccess().getUnorderedGroup_4(), 0) ) {s = 2;}

                        else if ( LA24_0 == 70 && getUnorderedGroupHelper().canSelect(grammarAccess.getDiodeModelAccess().getUnorderedGroup_4(), 1) ) {s = 3;}

                        else if ( LA24_0 == 71 && getUnorderedGroupHelper().canSelect(grammarAccess.getDiodeModelAccess().getUnorderedGroup_4(), 2) ) {s = 4;}

                        else if ( LA24_0 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getDiodeModelAccess().getUnorderedGroup_4(), 3) ) {s = 5;}

                        else if ( LA24_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getDiodeModelAccess().getUnorderedGroup_4(), 4) ) {s = 6;}

                        else if ( LA24_0 == 74 && getUnorderedGroupHelper().canSelect(grammarAccess.getDiodeModelAccess().getUnorderedGroup_4(), 5) ) {s = 7;}

                        else if ( LA24_0 == 75 && getUnorderedGroupHelper().canSelect(grammarAccess.getDiodeModelAccess().getUnorderedGroup_4(), 6) ) {s = 8;}

                        else if ( LA24_0 == 76 && getUnorderedGroupHelper().canSelect(grammarAccess.getDiodeModelAccess().getUnorderedGroup_4(), 7) ) {s = 9;}

                        else if ( LA24_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getDiodeModelAccess().getUnorderedGroup_4(), 8) ) {s = 10;}

                        else if ( LA24_0 == 78 && getUnorderedGroupHelper().canSelect(grammarAccess.getDiodeModelAccess().getUnorderedGroup_4(), 9) ) {s = 11;}

                        else if ( LA24_0 == 79 && getUnorderedGroupHelper().canSelect(grammarAccess.getDiodeModelAccess().getUnorderedGroup_4(), 10) ) {s = 12;}

                        else if ( LA24_0 == 80 && getUnorderedGroupHelper().canSelect(grammarAccess.getDiodeModelAccess().getUnorderedGroup_4(), 11) ) {s = 13;}

                        else if ( LA24_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getDiodeModelAccess().getUnorderedGroup_4(), 12) ) {s = 14;}

                        else if ( LA24_0 == 82 && getUnorderedGroupHelper().canSelect(grammarAccess.getDiodeModelAccess().getUnorderedGroup_4(), 13) ) {s = 15;}

                        else if ( LA24_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getDiodeModelAccess().getUnorderedGroup_4(), 14) ) {s = 16;}

                         
                        input.seek(index24_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 24, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_28s = "\15\uffff";
    static final String dfa_29s = "\1\1\14\uffff";
    static final String dfa_30s = "\1\4\14\uffff";
    static final String dfa_31s = "\1\u00d5\14\uffff";
    static final String dfa_32s = "\1\uffff\1\14\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13";
    static final String dfa_33s = "\1\0\14\uffff}>";
    static final String[] dfa_34s = {
            "\1\1\1\uffff\2\1\1\uffff\11\1\1\uffff\12\1\10\uffff\2\1\1\2\1\uffff\1\3\1\14\1\1\11\uffff\1\13\4\uffff\1\12\30\uffff\1\4\1\5\1\6\1\7\1\10\1\11\117\uffff\4\1\1\uffff\2\1\22\uffff\1\1\22\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_28 = DFA.unpackEncodedString(dfa_28s);
    static final short[] dfa_29 = DFA.unpackEncodedString(dfa_29s);
    static final char[] dfa_30 = DFA.unpackEncodedStringToUnsignedChars(dfa_30s);
    static final char[] dfa_31 = DFA.unpackEncodedStringToUnsignedChars(dfa_31s);
    static final short[] dfa_32 = DFA.unpackEncodedString(dfa_32s);
    static final short[] dfa_33 = DFA.unpackEncodedString(dfa_33s);
    static final short[][] dfa_34 = unpackEncodedStringArray(dfa_34s);

    class DFA26 extends DFA {

        public DFA26(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 26;
            this.eot = dfa_28;
            this.eof = dfa_29;
            this.min = dfa_30;
            this.max = dfa_31;
            this.accept = dfa_32;
            this.special = dfa_33;
            this.transition = dfa_34;
        }
        public String getDescription() {
            return "()* loopback of 3745:6: ( ({...}? => ( ({...}? => (otherlv_7= 'L' otherlv_8= '=' ( (lv_length_9_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'W' otherlv_11= '=' ( (lv_width_12_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'AD' otherlv_14= '=' ( (lv_drainArea_15_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'AS' otherlv_17= '=' ( (lv_sourceArea_18_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'PD' otherlv_20= '=' ( (lv_drainPerimeter_21_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'PS' otherlv_23= '=' ( (lv_sourcePerimeter_24_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'NRD' otherlv_26= '=' ( (lv_drainSquares_27_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'NRS' otherlv_29= '=' ( (lv_sourceSquares_30_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_off_31_0= 'OFF' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= 'IC' otherlv_33= '=' ( (lv_ic_34_0= RULE_NUMBER ) ) otherlv_35= ',' ( (lv_ic_36_0= RULE_NUMBER ) ) otherlv_37= ',' ( (lv_ic_38_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'TEMP' otherlv_40= '=' ( (lv_temp_41_0= RULE_NUMBER ) ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA26_0 = input.LA(1);

                         
                        int index26_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA26_0==EOF||LA26_0==RULE_SL_COMMENT||(LA26_0>=RULE_XID && LA26_0<=RULE_RID)||(LA26_0>=RULE_CID && LA26_0<=RULE_MPID)||(LA26_0>=RULE_QNID && LA26_0<=RULE_OP)||(LA26_0>=37 && LA26_0<=38)||LA26_0==43||(LA26_0>=168 && LA26_0<=171)||(LA26_0>=173 && LA26_0<=174)||LA26_0==193||(LA26_0>=212 && LA26_0<=213)) ) {s = 1;}

                        else if ( LA26_0 == 39 && getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETAccess().getUnorderedGroup_6(), 0) ) {s = 2;}

                        else if ( LA26_0 == 41 && getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETAccess().getUnorderedGroup_6(), 1) ) {s = 3;}

                        else if ( LA26_0 == 83 && getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETAccess().getUnorderedGroup_6(), 2) ) {s = 4;}

                        else if ( LA26_0 == 84 && getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETAccess().getUnorderedGroup_6(), 3) ) {s = 5;}

                        else if ( LA26_0 == 85 && getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETAccess().getUnorderedGroup_6(), 4) ) {s = 6;}

                        else if ( LA26_0 == 86 && getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETAccess().getUnorderedGroup_6(), 5) ) {s = 7;}

                        else if ( LA26_0 == 87 && getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETAccess().getUnorderedGroup_6(), 6) ) {s = 8;}

                        else if ( LA26_0 == 88 && getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETAccess().getUnorderedGroup_6(), 7) ) {s = 9;}

                        else if ( LA26_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETAccess().getUnorderedGroup_6(), 8) ) {s = 10;}

                        else if ( LA26_0 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETAccess().getUnorderedGroup_6(), 9) ) {s = 11;}

                        else if ( LA26_0 == 42 && getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETAccess().getUnorderedGroup_6(), 10) ) {s = 12;}

                         
                        input.seek(index26_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 26, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_35s = "\1\56\42\uffff";
    static final String dfa_36s = "\1\170\42\uffff";
    static final String dfa_37s = "\1\uffff\1\42\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41";
    static final String dfa_38s = "\1\0\42\uffff}>";
    static final String[] dfa_39s = {
            "\1\21\4\uffff\1\42\1\1\2\uffff\1\22\1\24\14\uffff\1\14\1\11\7\uffff\1\37\1\40\1\41\13\uffff\1\2\2\3\1\4\1\5\1\6\1\7\1\10\1\12\1\13\1\15\1\16\1\17\1\20\1\23\1\25\1\26\1\27\1\30\1\31\1\32\1\33\3\uffff\1\34\1\35\2\36",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_35 = DFA.unpackEncodedStringToUnsignedChars(dfa_35s);
    static final char[] dfa_36 = DFA.unpackEncodedStringToUnsignedChars(dfa_36s);
    static final short[] dfa_37 = DFA.unpackEncodedString(dfa_37s);
    static final short[] dfa_38 = DFA.unpackEncodedString(dfa_38s);
    static final short[][] dfa_39 = unpackEncodedStringArray(dfa_39s);

    class DFA31 extends DFA {

        public DFA31(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 31;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_35;
            this.max = dfa_36;
            this.accept = dfa_37;
            this.special = dfa_38;
            this.transition = dfa_39;
        }
        public String getDescription() {
            return "()* loopback of 4253:6: ( ({...}? => ( ({...}? => (otherlv_6= 'LEVEL' otherlv_7= '=' ( (lv_level_8_0= RULE_DIGIT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'VTO' | (otherlv_10= 'VT0' otherlv_11= '=' ( (lv_vt0_12_0= RULE_NUMBER ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'KP' otherlv_14= '=' ( (lv_transconductance_15_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'GAMMA' otherlv_17= '=' ( (lv_gamma_18_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'PHI' otherlv_20= '=' ( (lv_phi_21_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'LAMBDA' otherlv_23= '=' ( (lv_lambda_24_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'RD' otherlv_26= '=' ( (lv_drainResistance_27_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'RS' otherlv_29= '=' ( (lv_sourceResistance_30_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'CBD' otherlv_32= '=' ( (lv_capBd_33_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_34= 'CBS' otherlv_35= '=' ( (lv_capBs_36_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'IS' otherlv_38= '=' ( (lv_junctionSatCur_39_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'PB' otherlv_41= '=' ( (lv_bulkJunctionPotential_42_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'CGSO' otherlv_44= '=' ( (lv_gateSourceOverlapCapFactor_45_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_46= 'CGDO' otherlv_47= '=' ( (lv_gateDrainOverlapCapFactor_48_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'CGBO' otherlv_50= '=' ( (lv_gateBulkOverlapCapFactor_51_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_52= 'RSH' otherlv_53= '=' ( (lv_sheetResistance_54_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_55= 'CJ' otherlv_56= '=' ( (lv_bulkCapFactor_57_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_58= 'MJ' otherlv_59= '=' ( (lv_bulkJunctionBotGradingCoefficient_60_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_61= 'CJSW' otherlv_62= '=' ( (lv_sidewallCapFactor_63_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_64= 'MJSW' otherlv_65= '=' ( (lv_bulkJunctionSideGradingCoefficient_66_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_67= 'JS' otherlv_68= '=' ( (lv_junctionSatCurDensity_69_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= 'TOX' otherlv_71= '=' ( (lv_oxideThickness_72_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_73= 'NSUB' otherlv_74= '=' ( (lv_substrateDoping_75_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_76= 'NSS' otherlv_77= '=' ( (lv_surfaceStateDensity_78_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'NFS' otherlv_80= '=' ( (lv_nfs_81_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_82= 'TPG' otherlv_83= '=' ( ( (lv_gateType_84_1= '1' | lv_gateType_84_2= '0' | lv_gateType_84_3= '-1' ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_85= 'XJ' otherlv_86= '=' ( (lv_xj_87_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'LD' otherlv_89= '=' ( (lv_lateralDiffusion_90_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_91= 'UO' | (otherlv_92= 'U0' otherlv_93= '=' ( (lv_surfaceMobility_94_0= RULE_NUMBER ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_95= 'KF' otherlv_96= '=' ( (lv_flickerNoiseCoefficient_97_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_98= 'AF' otherlv_99= '=' ( (lv_flickerNoiseExponent_100_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_101= 'FC' otherlv_102= '=' ( (lv_forwardCapDepletionCoefficient_103_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_104= 'TNOM' otherlv_105= '=' ( (lv_nominalTemperature_106_0= RULE_NUMBER ) ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA31_0 = input.LA(1);

                         
                        int index31_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA31_0==52) ) {s = 1;}

                        else if ( LA31_0 == 92 && getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 0) ) {s = 2;}

                        else if ( LA31_0 >= 93 && LA31_0 <= 94 && getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 1) ) {s = 3;}

                        else if ( LA31_0 == 95 && getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 2) ) {s = 4;}

                        else if ( LA31_0 == 96 && getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 3) ) {s = 5;}

                        else if ( LA31_0 == 97 && getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 4) ) {s = 6;}

                        else if ( LA31_0 == 98 && getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 5) ) {s = 7;}

                        else if ( LA31_0 == 99 && getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 6) ) {s = 8;}

                        else if ( LA31_0 == 70 && getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 7) ) {s = 9;}

                        else if ( LA31_0 == 100 && getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 8) ) {s = 10;}

                        else if ( LA31_0 == 101 && getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 9) ) {s = 11;}

                        else if ( LA31_0 == 69 && getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 10) ) {s = 12;}

                        else if ( LA31_0 == 102 && getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 11) ) {s = 13;}

                        else if ( LA31_0 == 103 && getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 12) ) {s = 14;}

                        else if ( LA31_0 == 104 && getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 13) ) {s = 15;}

                        else if ( LA31_0 == 105 && getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 14) ) {s = 16;}

                        else if ( LA31_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 15) ) {s = 17;}

                        else if ( LA31_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 16) ) {s = 18;}

                        else if ( LA31_0 == 106 && getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 17) ) {s = 19;}

                        else if ( LA31_0 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 18) ) {s = 20;}

                        else if ( LA31_0 == 107 && getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 19) ) {s = 21;}

                        else if ( LA31_0 == 108 && getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 20) ) {s = 22;}

                        else if ( LA31_0 == 109 && getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 21) ) {s = 23;}

                        else if ( LA31_0 == 110 && getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 22) ) {s = 24;}

                        else if ( LA31_0 == 111 && getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 23) ) {s = 25;}

                        else if ( LA31_0 == 112 && getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 24) ) {s = 26;}

                        else if ( LA31_0 == 113 && getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 25) ) {s = 27;}

                        else if ( LA31_0 == 117 && getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 26) ) {s = 28;}

                        else if ( LA31_0 == 118 && getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 27) ) {s = 29;}

                        else if ( LA31_0 >= 119 && LA31_0 <= 120 && getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 28) ) {s = 30;}

                        else if ( LA31_0 == 78 && getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 29) ) {s = 31;}

                        else if ( LA31_0 == 79 && getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 30) ) {s = 32;}

                        else if ( LA31_0 == 80 && getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 31) ) {s = 33;}

                        else if ( LA31_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getMOSFETModelAccess().getUnorderedGroup_4(), 32) ) {s = 34;}

                         
                        input.seek(index31_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 31, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_40s = {
            "\1\1\1\uffff\1\2\1\uffff\4\2\1\uffff\4\2\1\uffff\11\2\1\uffff\3\2",
            "\1\2\1\25\1\2\1\3\1\uffff\1\4\1\5\1\24\1\6\1\2\1\17\1\7\1\10\1\11\1\uffff\1\12\1\13\1\14\1\15\1\16\1\20\1\21\1\22\1\23\1\2\3\25\5\uffff\2\2\3\uffff\2\2\11\uffff\1\2\4\uffff\1\2\10\uffff\1\2\144\uffff\4\2\1\uffff\2\2\22\uffff\1\2\22\uffff\2\2",
            "",
            "\1\25\1\2\2\25\1\uffff\11\25\1\uffff\12\25\10\uffff\2\25\3\uffff\2\25\11\uffff\1\25\4\uffff\1\25\10\uffff\1\25\144\uffff\4\25\1\uffff\2\25\22\uffff\1\25\22\uffff\2\25",
            "\1\25\1\2\2\25\1\uffff\11\25\1\uffff\12\25\10\uffff\2\25\3\uffff\2\25\11\uffff\1\25\4\uffff\1\25\10\uffff\1\25\144\uffff\4\25\1\uffff\2\25\22\uffff\1\25\22\uffff\2\25",
            "\1\25\1\2\2\25\1\uffff\11\25\1\uffff\12\25\10\uffff\2\25\3\uffff\2\25\11\uffff\1\25\4\uffff\1\25\10\uffff\1\25\144\uffff\4\25\1\uffff\2\25\22\uffff\1\25\22\uffff\2\25",
            "\1\25\1\2\2\25\1\uffff\11\25\1\uffff\12\25\10\uffff\2\25\3\uffff\2\25\11\uffff\1\25\4\uffff\1\25\10\uffff\1\25\144\uffff\4\25\1\uffff\2\25\22\uffff\1\25\22\uffff\2\25",
            "\1\25\1\2\2\25\1\uffff\11\25\1\uffff\12\25\10\uffff\2\25\3\uffff\2\25\11\uffff\1\25\4\uffff\1\25\10\uffff\1\25\144\uffff\4\25\1\uffff\2\25\22\uffff\1\25\22\uffff\2\25",
            "\1\25\1\2\2\25\1\uffff\11\25\1\uffff\12\25\10\uffff\2\25\3\uffff\2\25\11\uffff\1\25\4\uffff\1\25\10\uffff\1\25\144\uffff\4\25\1\uffff\2\25\22\uffff\1\25\22\uffff\2\25",
            "\1\25\1\2\2\25\1\uffff\11\25\1\uffff\12\25\10\uffff\2\25\3\uffff\2\25\11\uffff\1\25\4\uffff\1\25\10\uffff\1\25\144\uffff\4\25\1\uffff\2\25\22\uffff\1\25\22\uffff\2\25",
            "\1\25\1\2\2\25\1\uffff\11\25\1\uffff\12\25\10\uffff\2\25\3\uffff\2\25\11\uffff\1\25\4\uffff\1\25\10\uffff\1\25\144\uffff\4\25\1\uffff\2\25\22\uffff\1\25\22\uffff\2\25",
            "\1\25\1\2\2\25\1\uffff\11\25\1\uffff\12\25\10\uffff\2\25\3\uffff\2\25\11\uffff\1\25\4\uffff\1\25\10\uffff\1\25\144\uffff\4\25\1\uffff\2\25\22\uffff\1\25\22\uffff\2\25",
            "\1\25\1\2\2\25\1\uffff\11\25\1\uffff\12\25\10\uffff\2\25\3\uffff\2\25\11\uffff\1\25\4\uffff\1\25\10\uffff\1\25\144\uffff\4\25\1\uffff\2\25\22\uffff\1\25\22\uffff\2\25",
            "\1\25\1\2\2\25\1\uffff\11\25\1\uffff\12\25\10\uffff\2\25\3\uffff\2\25\11\uffff\1\25\4\uffff\1\25\10\uffff\1\25\144\uffff\4\25\1\uffff\2\25\22\uffff\1\25\22\uffff\2\25",
            "\1\25\1\2\2\25\1\uffff\11\25\1\uffff\12\25\10\uffff\2\25\3\uffff\2\25\11\uffff\1\25\4\uffff\1\25\10\uffff\1\25\144\uffff\4\25\1\uffff\2\25\22\uffff\1\25\22\uffff\2\25",
            "\1\25\1\2\2\25\1\uffff\11\25\1\uffff\12\25\10\uffff\2\25\3\uffff\2\25\11\uffff\1\25\4\uffff\1\25\10\uffff\1\25\144\uffff\4\25\1\uffff\2\25\22\uffff\1\25\22\uffff\2\25",
            "\1\25\1\2\2\25\1\uffff\11\25\1\uffff\12\25\10\uffff\2\25\3\uffff\2\25\11\uffff\1\25\4\uffff\1\25\10\uffff\1\25\144\uffff\4\25\1\uffff\2\25\22\uffff\1\25\22\uffff\2\25",
            "\1\25\1\2\2\25\1\uffff\11\25\1\uffff\12\25\10\uffff\2\25\3\uffff\2\25\11\uffff\1\25\4\uffff\1\25\10\uffff\1\25\144\uffff\4\25\1\uffff\2\25\22\uffff\1\25\22\uffff\2\25",
            "\1\25\1\2\2\25\1\uffff\11\25\1\uffff\12\25\10\uffff\2\25\3\uffff\2\25\11\uffff\1\25\4\uffff\1\25\10\uffff\1\25\144\uffff\4\25\1\uffff\2\25\22\uffff\1\25\22\uffff\2\25",
            "\1\25\1\2\2\25\1\uffff\11\25\1\uffff\12\25\10\uffff\2\25\3\uffff\2\25\11\uffff\1\25\4\uffff\1\25\10\uffff\1\25\144\uffff\4\25\1\uffff\2\25\22\uffff\1\25\22\uffff\2\25",
            "\1\25\1\uffff\2\25\1\uffff\1\25\1\26\7\25\1\uffff\12\25\10\uffff\2\25\3\uffff\2\25\11\uffff\1\25\4\uffff\1\25\10\uffff\1\25\144\uffff\4\25\1\uffff\2\25\22\uffff\1\25\22\uffff\2\25",
            "",
            "\1\25\4\uffff\1\2"
    };
    static final short[][] dfa_40 = unpackEncodedStringArray(dfa_40s);

    class DFA33 extends DFA {

        public DFA33(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 33;
            this.eot = dfa_7;
            this.eof = dfa_8;
            this.min = dfa_9;
            this.max = dfa_10;
            this.accept = dfa_11;
            this.special = dfa_12;
            this.transition = dfa_40;
        }
        public String getDescription() {
            return "5628:3: ( (lv_nodes_4_0= RULE_NODE ) )?";
        }
    }
    static final String dfa_41s = "\53\uffff";
    static final String dfa_42s = "\1\63\52\uffff";
    static final String dfa_43s = "\1\u009c\52\uffff";
    static final String dfa_44s = "\1\uffff\1\52\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46\1\47\1\50\1\51";
    static final String dfa_45s = "\1\0\52\uffff}>";
    static final String[] dfa_46s = {
            "\1\52\1\1\20\uffff\1\2\6\uffff\1\45\1\46\1\47\1\50\1\51\52\uffff\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_41 = DFA.unpackEncodedString(dfa_41s);
    static final char[] dfa_42 = DFA.unpackEncodedStringToUnsignedChars(dfa_42s);
    static final char[] dfa_43 = DFA.unpackEncodedStringToUnsignedChars(dfa_43s);
    static final short[] dfa_44 = DFA.unpackEncodedString(dfa_44s);
    static final short[] dfa_45 = DFA.unpackEncodedString(dfa_45s);
    static final short[][] dfa_46 = unpackEncodedStringArray(dfa_46s);

    class DFA36 extends DFA {

        public DFA36(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 36;
            this.eot = dfa_41;
            this.eof = dfa_41;
            this.min = dfa_42;
            this.max = dfa_43;
            this.accept = dfa_44;
            this.special = dfa_45;
            this.transition = dfa_46;
        }
        public String getDescription() {
            return "()* loopback of 5898:6: ( ({...}? => ( ({...}? => (otherlv_6= 'IS' otherlv_7= '=' ( (lv_saturationCurrent_8_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'BF' otherlv_10= '=' ( (lv_betaF_11_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'NF' otherlv_13= '=' ( (lv_emissionCoefficientForward_14_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'VAF' otherlv_16= '=' ( (lv_earlyVoltageForward_17_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'IKF' otherlv_19= '=' ( (lv_rollOffForward_20_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'ISE' otherlv_22= '=' ( (lv_leakBeCurrent_23_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= 'NE' otherlv_25= '=' ( (lv_leakBeEmissionCoefficient_26_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'BR' otherlv_28= '=' ( (lv_betaR_29_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_30= 'NR' otherlv_31= '=' ( (lv_emissionCoefficientReverse_32_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_33= 'VAR' otherlv_34= '=' ( (lv_earlyVoltageReverse_35_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'IKR' otherlv_37= '=' ( (lv_rollOffReverse_38_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'ISC' otherlv_40= '=' ( (lv_leakBcCurrent_41_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'NC' otherlv_43= '=' ( (lv_leakBcEmissionCoefficient_44_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'RB' otherlv_46= '=' ( (lv_baseResist_47_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= 'IRB' otherlv_49= '=' ( (lv_baseCurrentHalfResist_50_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_51= 'RBM' otherlv_52= '=' ( (lv_minimumBaseResistance_53_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_54= 'RE' otherlv_55= '=' ( (lv_emitterResistance_56_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_57= 'RC' otherlv_58= '=' ( (lv_collectorResistance_59_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_60= 'CJE' otherlv_61= '=' ( (lv_depletionCapBe_62_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_63= 'VJE' otherlv_64= '=' ( (lv_potentialBe_65_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'MJE' otherlv_67= '=' ( (lv_junctionExpBe_68_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_69= 'TF' otherlv_70= '=' ( (lv_transitTimeForward_71_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_72= 'XTF' otherlv_73= '=' ( (lv_transitTimeBiasCoefficientForward_74_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= 'VTF' otherlv_76= '=' ( (lv_transitTimeForwardVoltageBc_77_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_78= 'ITF' otherlv_79= '=' ( (lv_transitTimeHighCurrentForward_80_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_81= 'PTF' otherlv_82= '=' ( (lv_excessPhase_83_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_84= 'CJC' otherlv_85= '=' ( (lv_depletionCapBc_86_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_87= 'VJC' otherlv_88= '=' ( (lv_potentialBc_89_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_90= 'MJC' otherlv_91= '=' ( (lv_junctionExpBc_92_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_93= 'XCJC' otherlv_94= '=' ( (lv_baseFractionBcCap_95_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'TR' otherlv_97= '=' ( (lv_transitTimeReverse_98_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'CJS' otherlv_100= '=' ( (lv_capCs_101_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= 'VJS' otherlv_103= '=' ( (lv_potentialSubstrate_104_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_105= 'MJS' otherlv_106= '=' ( (lv_exponentialSubstrate_107_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_108= 'XTB' otherlv_109= '=' ( (lv_betaExponent_110_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_111= 'EG' otherlv_112= '=' ( (lv_energyGap_113_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_114= 'XTI' otherlv_115= '=' ( (lv_tempExpIs_116_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_117= 'KF' otherlv_118= '=' ( (lv_flickerNoiseCoefficient_119_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_120= 'AF' otherlv_121= '=' ( (lv_flickerNoiseExponent_122_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_123= 'FC' otherlv_124= '=' ( (lv_depletionCapCoefficient_125_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_126= 'TNOM' otherlv_127= '=' ( (lv_nominalTemperature_128_0= RULE_NUMBER ) ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA36_0 = input.LA(1);

                         
                        int index36_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA36_0==52) ) {s = 1;}

                        else if ( LA36_0 == 69 && getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 0) ) {s = 2;}

                        else if ( LA36_0 == 123 && getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 1) ) {s = 3;}

                        else if ( LA36_0 == 124 && getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 2) ) {s = 4;}

                        else if ( LA36_0 == 125 && getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 3) ) {s = 5;}

                        else if ( LA36_0 == 126 && getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 4) ) {s = 6;}

                        else if ( LA36_0 == 127 && getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 5) ) {s = 7;}

                        else if ( LA36_0 == 128 && getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 6) ) {s = 8;}

                        else if ( LA36_0 == 129 && getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 7) ) {s = 9;}

                        else if ( LA36_0 == 130 && getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 8) ) {s = 10;}

                        else if ( LA36_0 == 131 && getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 9) ) {s = 11;}

                        else if ( LA36_0 == 132 && getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 10) ) {s = 12;}

                        else if ( LA36_0 == 133 && getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 11) ) {s = 13;}

                        else if ( LA36_0 == 134 && getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 12) ) {s = 14;}

                        else if ( LA36_0 == 135 && getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 13) ) {s = 15;}

                        else if ( LA36_0 == 136 && getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 14) ) {s = 16;}

                        else if ( LA36_0 == 137 && getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 15) ) {s = 17;}

                        else if ( LA36_0 == 138 && getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 16) ) {s = 18;}

                        else if ( LA36_0 == 139 && getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 17) ) {s = 19;}

                        else if ( LA36_0 == 140 && getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 18) ) {s = 20;}

                        else if ( LA36_0 == 141 && getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 19) ) {s = 21;}

                        else if ( LA36_0 == 142 && getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 20) ) {s = 22;}

                        else if ( LA36_0 == 143 && getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 21) ) {s = 23;}

                        else if ( LA36_0 == 144 && getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 22) ) {s = 24;}

                        else if ( LA36_0 == 145 && getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 23) ) {s = 25;}

                        else if ( LA36_0 == 146 && getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 24) ) {s = 26;}

                        else if ( LA36_0 == 147 && getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 25) ) {s = 27;}

                        else if ( LA36_0 == 148 && getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 26) ) {s = 28;}

                        else if ( LA36_0 == 149 && getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 27) ) {s = 29;}

                        else if ( LA36_0 == 150 && getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 28) ) {s = 30;}

                        else if ( LA36_0 == 151 && getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 29) ) {s = 31;}

                        else if ( LA36_0 == 152 && getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 30) ) {s = 32;}

                        else if ( LA36_0 == 153 && getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 31) ) {s = 33;}

                        else if ( LA36_0 == 154 && getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 32) ) {s = 34;}

                        else if ( LA36_0 == 155 && getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 33) ) {s = 35;}

                        else if ( LA36_0 == 156 && getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 34) ) {s = 36;}

                        else if ( LA36_0 == 76 && getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 35) ) {s = 37;}

                        else if ( LA36_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 36) ) {s = 38;}

                        else if ( LA36_0 == 78 && getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 37) ) {s = 39;}

                        else if ( LA36_0 == 79 && getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 38) ) {s = 40;}

                        else if ( LA36_0 == 80 && getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 39) ) {s = 41;}

                        else if ( LA36_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getBJTModelAccess().getUnorderedGroup_4(), 40) ) {s = 42;}

                         
                        input.seek(index36_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 36, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_47s = "\20\uffff";
    static final String dfa_48s = "\1\1\17\uffff";
    static final String dfa_49s = "\1\4\17\uffff";
    static final String dfa_50s = "\1\u00d5\17\uffff";
    static final String dfa_51s = "\1\uffff\1\17\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16";
    static final String dfa_52s = "\1\0\17\uffff}>";
    static final String[] dfa_53s = {
            "\1\1\1\uffff\2\1\1\uffff\11\1\1\uffff\12\1\10\uffff\2\1\4\uffff\1\1\7\uffff\1\17\21\uffff\1\12\1\6\7\uffff\1\14\1\15\1\16\14\uffff\2\2\3\uffff\1\4\1\5\2\uffff\1\11\70\uffff\1\3\1\7\1\10\1\13\5\uffff\4\1\1\uffff\2\1\22\uffff\1\1\22\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_47 = DFA.unpackEncodedString(dfa_47s);
    static final short[] dfa_48 = DFA.unpackEncodedString(dfa_48s);
    static final char[] dfa_49 = DFA.unpackEncodedStringToUnsignedChars(dfa_49s);
    static final char[] dfa_50 = DFA.unpackEncodedStringToUnsignedChars(dfa_50s);
    static final short[] dfa_51 = DFA.unpackEncodedString(dfa_51s);
    static final short[] dfa_52 = DFA.unpackEncodedString(dfa_52s);
    static final short[][] dfa_53 = unpackEncodedStringArray(dfa_53s);

    class DFA41 extends DFA {

        public DFA41(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 41;
            this.eot = dfa_47;
            this.eof = dfa_48;
            this.min = dfa_49;
            this.max = dfa_50;
            this.accept = dfa_51;
            this.special = dfa_52;
            this.transition = dfa_53;
        }
        public String getDescription() {
            return "()* loopback of 7787:6: ( ({...}? => ( ({...}? => (otherlv_6= 'VTO' | (otherlv_7= 'VT0' otherlv_8= '=' ( (lv_threshold_9_0= RULE_NUMBER ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'BETA' otherlv_11= '=' ( (lv_beta_12_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'LAMBDA' otherlv_14= '=' ( (lv_lambda_15_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'RD' otherlv_17= '=' ( (lv_drainResistance_18_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'RS' otherlv_20= '=' ( (lv_sourceResistance_21_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'CGS' otherlv_23= '=' ( (lv_capGs_24_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'CGD' otherlv_26= '=' ( (lv_capGd_27_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'PB' otherlv_29= '=' ( (lv_gatePotential_30_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'IS' otherlv_32= '=' ( (lv_gateSaturationCurrent_33_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_34= 'B' otherlv_35= '=' ( (lv_b_36_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'KF' otherlv_38= '=' ( (lv_flickerNoiseCoefficient_39_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'AF' otherlv_41= '=' ( (lv_flickerNoiseExponent_42_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'FC' otherlv_44= '=' ( (lv_depletionCapCoefficient_45_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_46= 'TNOM' otherlv_47= '=' ( (lv_nominalTemperature_48_0= RULE_NUMBER ) ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA41_0 = input.LA(1);

                         
                        int index41_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA41_0==EOF||LA41_0==RULE_SL_COMMENT||(LA41_0>=RULE_XID && LA41_0<=RULE_RID)||(LA41_0>=RULE_CID && LA41_0<=RULE_MPID)||(LA41_0>=RULE_QNID && LA41_0<=RULE_OP)||(LA41_0>=37 && LA41_0<=38)||LA41_0==43||(LA41_0>=168 && LA41_0<=171)||(LA41_0>=173 && LA41_0<=174)||LA41_0==193||(LA41_0>=212 && LA41_0<=213)) ) {s = 1;}

                        else if ( LA41_0 >= 93 && LA41_0 <= 94 && getUnorderedGroupHelper().canSelect(grammarAccess.getJFETModelAccess().getUnorderedGroup_4(), 0) ) {s = 2;}

                        else if ( LA41_0 == 159 && getUnorderedGroupHelper().canSelect(grammarAccess.getJFETModelAccess().getUnorderedGroup_4(), 1) ) {s = 3;}

                        else if ( LA41_0 == 98 && getUnorderedGroupHelper().canSelect(grammarAccess.getJFETModelAccess().getUnorderedGroup_4(), 2) ) {s = 4;}

                        else if ( LA41_0 == 99 && getUnorderedGroupHelper().canSelect(grammarAccess.getJFETModelAccess().getUnorderedGroup_4(), 3) ) {s = 5;}

                        else if ( LA41_0 == 70 && getUnorderedGroupHelper().canSelect(grammarAccess.getJFETModelAccess().getUnorderedGroup_4(), 4) ) {s = 6;}

                        else if ( LA41_0 == 160 && getUnorderedGroupHelper().canSelect(grammarAccess.getJFETModelAccess().getUnorderedGroup_4(), 5) ) {s = 7;}

                        else if ( LA41_0 == 161 && getUnorderedGroupHelper().canSelect(grammarAccess.getJFETModelAccess().getUnorderedGroup_4(), 6) ) {s = 8;}

                        else if ( LA41_0 == 102 && getUnorderedGroupHelper().canSelect(grammarAccess.getJFETModelAccess().getUnorderedGroup_4(), 7) ) {s = 9;}

                        else if ( LA41_0 == 69 && getUnorderedGroupHelper().canSelect(grammarAccess.getJFETModelAccess().getUnorderedGroup_4(), 8) ) {s = 10;}

                        else if ( LA41_0 == 162 && getUnorderedGroupHelper().canSelect(grammarAccess.getJFETModelAccess().getUnorderedGroup_4(), 9) ) {s = 11;}

                        else if ( LA41_0 == 78 && getUnorderedGroupHelper().canSelect(grammarAccess.getJFETModelAccess().getUnorderedGroup_4(), 10) ) {s = 12;}

                        else if ( LA41_0 == 79 && getUnorderedGroupHelper().canSelect(grammarAccess.getJFETModelAccess().getUnorderedGroup_4(), 11) ) {s = 13;}

                        else if ( LA41_0 == 80 && getUnorderedGroupHelper().canSelect(grammarAccess.getJFETModelAccess().getUnorderedGroup_4(), 12) ) {s = 14;}

                        else if ( LA41_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getJFETModelAccess().getUnorderedGroup_4(), 13) ) {s = 15;}

                         
                        input.seek(index41_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 41, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_54s = "\25\uffff";
    static final String dfa_55s = "\1\1\24\uffff";
    static final String dfa_56s = "\1\4\1\uffff\21\5\1\12\1\uffff";
    static final String dfa_57s = "\1\u00d5\1\uffff\22\u00a7\1\uffff";
    static final String dfa_58s = "\1\uffff\1\2\22\uffff\1\1";
    static final String dfa_59s = "\25\uffff}>";
    static final String[] dfa_60s = {
            "\1\1\1\24\1\1\1\2\1\uffff\1\3\1\4\1\23\1\5\1\1\1\16\1\6\1\7\1\10\1\uffff\1\11\1\12\1\13\1\14\1\15\1\17\1\20\1\21\1\22\1\1\3\24\5\uffff\2\1\4\uffff\1\1\174\uffff\4\1\1\uffff\2\1\22\uffff\1\1\22\uffff\2\1",
            "",
            "\1\1\u009f\uffff\3\24",
            "\1\1\u009f\uffff\3\24",
            "\1\1\u009f\uffff\3\24",
            "\1\1\u009f\uffff\3\24",
            "\1\1\u009f\uffff\3\24",
            "\1\1\u009f\uffff\3\24",
            "\1\1\u009f\uffff\3\24",
            "\1\1\u009f\uffff\3\24",
            "\1\1\u009f\uffff\3\24",
            "\1\1\u009f\uffff\3\24",
            "\1\1\u009f\uffff\3\24",
            "\1\1\u009f\uffff\3\24",
            "\1\1\u009f\uffff\3\24",
            "\1\1\u009f\uffff\3\24",
            "\1\1\u009f\uffff\3\24",
            "\1\1\u009f\uffff\3\24",
            "\1\1\u009f\uffff\3\24",
            "\1\1\u009a\uffff\3\24",
            ""
    };

    static final short[] dfa_54 = DFA.unpackEncodedString(dfa_54s);
    static final short[] dfa_55 = DFA.unpackEncodedString(dfa_55s);
    static final char[] dfa_56 = DFA.unpackEncodedStringToUnsignedChars(dfa_56s);
    static final char[] dfa_57 = DFA.unpackEncodedStringToUnsignedChars(dfa_57s);
    static final short[] dfa_58 = DFA.unpackEncodedString(dfa_58s);
    static final short[] dfa_59 = DFA.unpackEncodedString(dfa_59s);
    static final short[][] dfa_60 = unpackEncodedStringArray(dfa_60s);

    class DFA54 extends DFA {

        public DFA54(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 54;
            this.eot = dfa_54;
            this.eof = dfa_55;
            this.min = dfa_56;
            this.max = dfa_57;
            this.accept = dfa_58;
            this.special = dfa_59;
            this.transition = dfa_60;
        }
        public String getDescription() {
            return "()* loopback of 9597:3: ( (lv_sweeps_2_0= ruleParameterSweep ) )*";
        }
    }
    static final String dfa_61s = "\1\1\26\uffff";
    static final String dfa_62s = "\1\4\26\uffff";
    static final String dfa_63s = "\1\u00d5\26\uffff";
    static final String dfa_64s = "\1\uffff\1\26\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25";
    static final String dfa_65s = "\1\0\26\uffff}>";
    static final String[] dfa_66s = {
            "\1\1\1\uffff\2\1\1\uffff\11\1\1\uffff\12\1\10\uffff\2\1\3\uffff\1\23\1\1\3\uffff\1\10\3\uffff\1\24\164\uffff\4\1\1\uffff\2\1\22\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\25\1\26\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_61 = DFA.unpackEncodedString(dfa_61s);
    static final char[] dfa_62 = DFA.unpackEncodedStringToUnsignedChars(dfa_62s);
    static final char[] dfa_63 = DFA.unpackEncodedStringToUnsignedChars(dfa_63s);
    static final short[] dfa_64 = DFA.unpackEncodedString(dfa_64s);
    static final short[] dfa_65 = DFA.unpackEncodedString(dfa_65s);
    static final short[][] dfa_66 = unpackEncodedStringArray(dfa_66s);

    class DFA71 extends DFA {

        public DFA71(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 71;
            this.eot = dfa_7;
            this.eof = dfa_61;
            this.min = dfa_62;
            this.max = dfa_63;
            this.accept = dfa_64;
            this.special = dfa_65;
            this.transition = dfa_66;
        }
        public String getDescription() {
            return "()+ loopback of 10826:6: ( ({...}? => ( ({...}? => (otherlv_2= 'ABSTOL' otherlv_3= '=' ( (lv_abstol_4_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'BADMOS3' otherlv_6= '=' ( (lv_badmos3_7_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'CHGTOL' otherlv_9= '=' ( (lv_chgtol_10_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'DEFAD' otherlv_12= '=' ( (lv_defad_13_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'DEFAS' otherlv_15= '=' ( (lv_defas_16_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'DEFL' otherlv_18= '=' ( (lv_defl_19_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'DEFW' otherlv_21= '=' ( (lv_defaultWidth_22_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'GMIN' otherlv_24= '=' ( (lv_gmin_25_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'ITL1' otherlv_27= '=' ( (lv_itl1_28_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'ITL2' otherlv_30= '=' ( (lv_itl2_31_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= 'ITL3' otherlv_33= '=' ( (lv_itl3_34_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'ITL4' otherlv_36= '=' ( (lv_itl4_37_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= 'ITL5' otherlv_39= '=' ( (lv_itl5_40_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_41= 'KEEPOPINFO' otherlv_42= '=' ( (lv_keepopinfo_43_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'METHOD' otherlv_45= '=' ( (lv_method_46_0= ruleIntegrationMethod ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'PIVREL' otherlv_48= '=' ( (lv_pivrel_49_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_50= 'RELTOL' otherlv_51= '=' ( (lv_reltol_52_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'TEMP' otherlv_54= '=' ( (lv_temp_55_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_56= 'TNOM' otherlv_57= '=' ( (lv_nominalTemperature_58_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= 'TRTOL' otherlv_60= '=' ( (lv_trtol_61_0= RULE_NUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_62= 'VNTOL' otherlv_63= '=' ( (lv_vntol_64_0= RULE_NUMBER ) ) ) ) ) ) )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA71_0 = input.LA(1);

                         
                        int index71_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA71_0==EOF||LA71_0==RULE_SL_COMMENT||(LA71_0>=RULE_XID && LA71_0<=RULE_RID)||(LA71_0>=RULE_CID && LA71_0<=RULE_MPID)||(LA71_0>=RULE_QNID && LA71_0<=RULE_OP)||(LA71_0>=37 && LA71_0<=38)||LA71_0==43||(LA71_0>=168 && LA71_0<=171)||(LA71_0>=173 && LA71_0<=174)||LA71_0==193||(LA71_0>=212 && LA71_0<=213)) ) {s = 1;}

                        else if ( LA71_0 == 194 && getUnorderedGroupHelper().canSelect(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 0) ) {s = 2;}

                        else if ( LA71_0 == 195 && getUnorderedGroupHelper().canSelect(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 1) ) {s = 3;}

                        else if ( LA71_0 == 196 && getUnorderedGroupHelper().canSelect(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 2) ) {s = 4;}

                        else if ( LA71_0 == 197 && getUnorderedGroupHelper().canSelect(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 3) ) {s = 5;}

                        else if ( LA71_0 == 198 && getUnorderedGroupHelper().canSelect(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 4) ) {s = 6;}

                        else if ( LA71_0 == 199 && getUnorderedGroupHelper().canSelect(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 5) ) {s = 7;}

                        else if ( LA71_0 == 47 && getUnorderedGroupHelper().canSelect(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 6) ) {s = 8;}

                        else if ( LA71_0 == 200 && getUnorderedGroupHelper().canSelect(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 7) ) {s = 9;}

                        else if ( LA71_0 == 201 && getUnorderedGroupHelper().canSelect(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 8) ) {s = 10;}

                        else if ( LA71_0 == 202 && getUnorderedGroupHelper().canSelect(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 9) ) {s = 11;}

                        else if ( LA71_0 == 203 && getUnorderedGroupHelper().canSelect(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 10) ) {s = 12;}

                        else if ( LA71_0 == 204 && getUnorderedGroupHelper().canSelect(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 11) ) {s = 13;}

                        else if ( LA71_0 == 205 && getUnorderedGroupHelper().canSelect(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 12) ) {s = 14;}

                        else if ( LA71_0 == 206 && getUnorderedGroupHelper().canSelect(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 13) ) {s = 15;}

                        else if ( LA71_0 == 207 && getUnorderedGroupHelper().canSelect(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 14) ) {s = 16;}

                        else if ( LA71_0 == 208 && getUnorderedGroupHelper().canSelect(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 15) ) {s = 17;}

                        else if ( LA71_0 == 209 && getUnorderedGroupHelper().canSelect(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 16) ) {s = 18;}

                        else if ( LA71_0 == 42 && getUnorderedGroupHelper().canSelect(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 17) ) {s = 19;}

                        else if ( LA71_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 18) ) {s = 20;}

                        else if ( LA71_0 == 210 && getUnorderedGroupHelper().canSelect(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 19) ) {s = 21;}

                        else if ( LA71_0 == 211 && getUnorderedGroupHelper().canSelect(grammarAccess.getOptionsAccess().getUnorderedGroup_1(), 20) ) {s = 22;}

                         
                        input.seek(index71_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 71, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x000008601FFBFED2L,0x0000000000000000L,0x00006F0000000000L,0x0000000000300002L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x00000000EFFBDEA0L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x000008600FFBFEF0L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x000008600FFBFED0L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x00000680EFFBDFA2L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x00000680EFFBDEA2L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000068000000002L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000000000000100L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000200000000000L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x000FC00000000000L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x001FC00000000000L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x00200280EFFBDFA2L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x00200280EFFBDEA2L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0020028000000002L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x018F800000000000L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x019F800000000000L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0020000000000002L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000000000000400L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0600000000000002L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0800000000000000L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0xF000000000000000L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0xF010000000000000L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0xC000000000000000L,0x0000000000000006L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0xC010000000000000L,0x0000000000000006L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0420040000000002L,0x0000000000000008L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0018000000000000L,0x000000000007FFE0L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0420068000000002L,0x0000000001F80000L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000000000000000L,0x000000000C000000L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0198400000000000L,0x01E3FFFFF001C060L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000000000000000L,0x001C000000000000L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000000000000000L,0x0600000000000000L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0018000000000000L,0xF80000000001F020L,0x000000001FFFFFFFL});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000060000000L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0008000000000002L,0x0000004C6001C060L,0x0000000780000000L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000000000000102L,0x0000000000000000L,0xF800001800000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0xF800001000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000000000000102L,0x0000000000000000L,0xF800000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0xF800000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x000000E000000000L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x00000000EFFBDEA2L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x07FF800000000000L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0000000000000102L,0x0000000000000000L,0x0000100000000000L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000001800000000L,0x0000000000C00000L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x07FF800000000000L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0010000000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0010000000000000L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0010000000000100L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0008840000000000L,0x0000000000000000L,0x0000000000000000L,0x00000000000FFFFCL});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0008840000000002L,0x0000000000000000L,0x0000000000000000L,0x00000000000FFFFCL});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000007000000L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000800000000000L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000800000000000L});

}
